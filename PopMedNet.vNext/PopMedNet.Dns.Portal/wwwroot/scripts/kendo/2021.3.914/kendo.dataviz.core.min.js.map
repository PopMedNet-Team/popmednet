{"version":3,"sources":["kendo.dataviz.core.js"],"names":["f","define","$","normalizeText","text","String","replace","REPLACE_REGEX","SPACE","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","styleKey","cacheKey","cachedResult","baselineMarker","textStr","box","_baselineMarker","cloneNode","textContent","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","isArray","Array","addClass","element","classes","idx","className","classArray","indexOf","removeClass","SPACE_REGEX","alignPathToPixel","path","offset","stroke","drawing","defined","segments","anchor","round","translate","clockwise","angle1","angle2","x","y","isNumber","isNaN","isString","STRING","convertableToNumber","isFinite","isObject","styleValue","isSizeField","field","SIZE_STYLES_REGEX","test","elementStyles","styles","result","field$1","stylesArray","getComputedStyle","parseFloat","getSpacing","defaultSpacing","spacing","top","right","bottom","left","TOP","RIGHT","BOTTOM","LEFT","getTemplate","template","TemplateService","compile","isFunction","content","grep","array","callback","hasClasses","classNames","names","split","inArray","interpolateValue","start","end","progress","COORD_PRECISION","mousewheelDelta","e","delta","wheelDelta","Math","ceil","floor","detail","setDefaultOptions","type","proto","prototype","sparseArrayLimits","arr","min","MAX_VALUE","max","MIN_VALUE","undefined","find","predicate","item","parseMatrix","matrixString","members","match","matrixRegexp","Matrix","unit","Function","bind","apply","concat","transformMatrix","transform","elementScale","matrix","parent","parentMatrix","parentElement","multiplyCopy","b","c","autoTextColor","color","isDark","Color","WHITE","BLACK","autoMajorUnit","scale","relativeValue","scaleMultiplier","diff","DEFAULT_PRECISION","abs","pow","log","rotatePoint","cx","cy","angle","theta","rad","Point","cos","sin","numericComparer","a","boxDiff","r","s","d","g","h","boxes","x1","y1","x2","y2","Box","innerRadialStops","currentStop","stops","usedSpace","innerRadius","radius","currentStops","rectToBox","rect","origin","bottomRight","createAxisTick","tickOptions","tickX","tickY","position","tick","Path","vertical","moveTo","lineTo","createAxisGridLine","gridLine","lineStart","lineEnd","line","dashType","absoluteDateDiff","getTime","offsetDiff","getTimezoneOffset","TIME_PER_MINUTE","addTicks","date","ticks","Date","toDate","startOfWeek","weekStartDay","daysToSubtract","day","getDay","TIME_PER_DAY","adjustDST","hours","getHours","setHours","addHours","tzDiff","roundedDate","setMinutes","TIME_PER_HOUR","addDuration","dateValue","YEARS","getFullYear","MONTHS","getMonth","WEEKS","DAYS","getDate","HOURS","MINUTES","getSeconds","setSeconds","SECONDS","TIME_PER_SECOND","MILLISECONDS","getMilliseconds","setMilliseconds","floorDate","ceilDate","dateComparer","dateDiff","toTime","dateEquals","timeIndex","baseUnit","TIME_PER_UNIT","dateIndex","baseUnitStep","index","startDate","duration","lteDateIndex","sortedDates","currentDate","low","high","parseDate","intlService","parseDates","dates","firstDay","categoryRange","categories","range","_range","autoBaseUnit","startUnit","startStep","unitSteps","step","nextStep","categoryLimits","span","autoBaseUnitSteps","maxDateGroups","autoUnit","FIT","autoUnitIx","BASE_UNITS","units","totalUnits","slice","shift","last","defaultBaseUnit","lastCategory","categoryIx","category","count","minDiff","TIME_PER_YEAR","TIME_PER_MONTH","TIME_PER_WEEK","initUnit","toLowerCase","useDefault","AUTO","autoAxisMin","narrow","axisMin","minValue","ZERO_THRESHOLD","autoAxisMax","axisMax","maxValue","limitCoordinate","COORDINATE_LIMIT","autoAxisOptions","seriesMin","seriesMax","narrowRange","autoMin","autoMax","majorUnit","autoOptions","roundToMajorUnit","remainderClose","totalAxisOptions","clearNullValues","fields","axisOptions","userOptions","userSetMin","userSetMax","userSetLimits","minorUnit","divisor","ratio","remainder","threshold","timeUnits","applyDefaults","baseUnitTime","userMajorUnit","actualUnits","unitsToAdd","head","tail","initRange","axisCrossingValue","throwNegativeValuesError","autoAxisMin$1","base","autoAxisMax$1","logMaxRemainder","Error","angularDistance","numberSign","Group","geometry","Rect","Circle","geometryTransform","Segment","dataviz","__common_getter_js","ARC","AXIS_LABEL_CLICK","CENTER","CIRCLE","CROSS","DATE","DEFAULT_FONT","DEFAULT_HEIGHT","DEFAULT_WIDTH","END","FORMAT_REGEX","HEIGHT","HIGHLIGHT_ZINDEX","INSIDE","NONE","NOTE_CLICK","NOTE_HOVER","NOTE_LEAVE","OBJECT","OUTSIDE","ROUNDED_RECT","START","TRIANGLE","VALUE","WIDTH","X","Y","DEFAULT_SERIES_OPACITY","constants","defaultImplementation","IntlService","FORMAT_REPLACE_REGEX","FormatService","ChartService","current$1","DomEventsBuilder","current$2","services","HashMap","TRIGGER","InstanceObserver","ref","append","bindEvents","deg","elementOffset","elementSize","eventElement","eventCoordinates","limitValue","unbindEvents","valueOrDefault","FontLoader","Ring","Sector","DIRECTION_ANGLE","ShapeBuilder","ChartElement","BoxElement","ShapeElement","LINEAR","RADIAL","GRADIENTS","RootElement","FloatElement","DrawingText","Text","ROWS_SPLIT_REGEX","TextBox","Title","AxisLabel","DEFAULT_ICON_SIZE","DEFAULT_LABEL_COLOR","Note","Axis","TIME_PER_MILLISECOND","MIN_CATEGORY_POINTS_RANGE","CategoryAxis","DateLabelFormats","EmptyDateRange","DateRange","DateCategoryAxis","MIN_VALUE_RANGE","NumericAxis","DateValueAxis","DEFAULT_MAJOR_UNIT","LogarithmicAxis","GridLinesMixin","RadarCategoryAxis","PolarAxis","RadarNumericAxisMixin","RadarNumericAxis","RadarLogarithmicAxis","WEIGHT","EXTREMUM_ALLOWED_DEVIATION","CurveProcessor","getter","Number","format","toString","register","userImplementation","Object","defineProperties","implementation","_intlService","auto","formatString","intl","values","len","arguments","localeAuto","locale","placeholderFormat","parseInt","substring","fn","set","chart","context","sender","rtl","notify","name","args","trigger","isPannable","axis","pannable","lock","create","events","_key","observer","handlers","handlerMap","isDefaultPrevented","callObserver","fnName","requiresHandlers","this$1","fetchFonts","fonts","state","depth","MAX_DEPTH","keys","forEach","loadFonts","promises","font","load","logToConsole","Promise","all","then","preloadFonts","clone","equals","point","rotate","center","degrees","cosT","sinT","multiply","distanceTo","dx","dy","sqrt","onCircle","radians","move","wrap","targetBox","wrapPoint","arrayPoint","snapTo","alignTo","targetCenter","shrink","dw","dh","expand","pad","padding","unpad","containsPoint","points","getHash","overlaps","rotation","r1","r2","r3","r4","toRect","hasSize","align","alignment","c1","c2","sizeFunc","startAngle","middle","setRadius","newRadius","radianAngle","ax","ay","adjacentBox","distance","sector","midAndle","midPoint","hw","hh","sa","ca","p","endAngle","vector","startPoint","startVector","endPoint","endVector","dist","getBBox","angles","allAngles","startAngleIndex","endAngleIndex","call","createRing","arc","innerEnd","Arc","radiusX","radiusY","fromArc","close","pointAt","children","initUserOptions","reflow","currentChild","destroy","animation","getRoot","getSender","service","getService","chartService","translateChildren","childrenCount","arguments$1","renderVisual","visible","createVisual","addVisual","renderChildren","createAnimation","renderComplete","visual","chartElement","appendVisual","zIndex","Animation","childVisual","noclip","clipRoot","stackRoot","stackVisual","isStackRoot","pos","sibling","here","visuals","insert","traverse","child","closest","matched","hasHighlight","highlight","createHighlight","toggleHighlight","show","opacity","highlightOptions","customVisual","_highlight","fill","highlightVisualArgs","series","dataItem","percentage","runningTotal","total","createGradientOverlay","gradientOptions","overlay","createGradient","closed","elements","supportsPointInactiveOpacity","margin","shrinkToFit","hasSetSize","borderWidth","border","reflowPaddingBox","vAlign","paddingBox","contentBox","hasBox","background","fromRect","visualStyle","cursor","pointData","getElement","borderRadius","halfWidth","halfHeight","fromPoints","MultiPath","setCornerRadius","visualOptions","glass","sharpBevel","roundedBevel","roundedGlass","supportVML","sharpGlass","bubbleShadow","rootOptions","gradients","currentBox","createBackground","drawingGradient","hashCode","gradient","LinearGradient","RadialGradient","cleanGradients","_observers","_initDirection","groupAxis","elementAxis","groupSizeField","elementSizeField","groupSpacing","elementSpacing","vSpacing","reflowChildren","groupStart","groupIdx","group","groupElements","elementStart","groupElementsCount","elementSize$$1","groupElementStart","elementBox","ref$1","groupOptions","groups","groupsSize","maxGroupElementsSize","groupsCount","groupsStart","alignStart","groupSize","maxSize","groupElementsSize","topLeft","data","_initContainer","_autoReflow","rowIdx","rows","floatElement","textOptions","container","trim","visualBox","visualFn","_boxReflow","visualContext","clippedBBox","normalBox","rotatedBox","rotationTransform","getDefaultVisual","boxCenter","buildTitle","defaultOptions","title","titleOptions","culture","click","widget","alignRotation","bbox","rotationMatrix","rotationOrigin","alignAxis","distanceAxis","axisAnchor","topRight","bottomLeft","distanceLeft","distanceRight","alignEnd","alignCenter","transformCopy","render","hide","label","icon","childAlias","noteTemplate","aliasFor","wrapperBox","linePoints","createLine","defaultVisual","eventArgs","preventDefault","over","out","labels","majorTickSize","minorTickSize","minorTicks","minorTickType","majorTicks","majorTickType","initFields","_deferLabels","createLabels","createTitle","createNotes","labelsRange","skip","labelsCount","normalizeLabelRotation","labelOptions","labelContext","clearLabels","autoRotateLabels","createAxisLabel","clearTitle","clear","lineBox","mirror","axisX","axisY","lineWidth","visualSize","note","notes","items","parseNoteValue","reverse","createPlotBands","gridLinesVisual","gridLines","_gridLines","createTicks","lineGroup","tickPositions","skipUnit","tickLineOptions","getMajorTickPositions","getMinorTickPositions","_alignLines","_lineGroup","getActualTickSize","tickSize","_backgroundPath","altAxis","slotX","slotY","bandRect","plotBands","plotArea","_plotbandGroup","pane","axes","getSlot","from","to","createPlotBandLabel","textbox","labelTemplate","createGridLines","axisLineVisible","linePos","lineOptions","minorGridLines","majorGridLines","labelSize","sizeFn","titleSize","space","rootBox","boxSize","maxLabelSize","arrangeTitle","arrangeLabels","arrangeNotes","getLabelsTickPositions","labelTickIndex","tickIx","firstTickPosition","nextTickPosition","positionStart","positionEnd","labelsBetweenTicks","positionLabel","labelOffset","labelBox","labelX","labelY","autoRotateLabelAngle","slotWidth","limit","labelAngle","idx$1","slot","shouldRenderNote","noteSlot","secondAxis","axisLabelText","templateContext","tmpl","defaultText","lastLabel","maxLabelOffset","startTick","endTick","offsetField","startPosition","endPosition","maxStartOffset","maxEndOffset","limitRange","rangeSize","valueRange","justified","prepareUserOptions","years","months","weeks","days","minutes","seconds","milliseconds","_ticks","categoriesHash","copy","srcCategories","definedMin","definedMax","rangeIndices","totalRange","totalRangeIndices","roundedRange","_seriesMax","scaleOptions","hideOutOfRangeLabels","valueAxis","firstLabel","getTicks","labelTicks","tickIndices","stepSize","indices","getTickPositions","positions","hasMinor","cache","_hash","filterOutOfRangePositions","inRange","startIndex","endIndex","p1","p2","slotBox","singleSlot","limitSlot","limittedSlot","categoryIndex","pointCategoryIndex","startValue","getCategory","totalIndex","categoryAt","categoriesCount","translateRange","zoomRange","rate","totalMin","totalMax","scaleRange","dataItems","hideOutOfRangeNotes","pan","pointsRange","diffStart","diffEnd","rangeMin","rangeMax","_categoriesMap","currentRangeIndices","totalCount","mapCategories","map$$1","displayIndices","displayRange","valueIndex","valuesCount","dateAt","roundToBaseUnit","lowerEnd","expandEnd","next","roundToTotalStep","justifyEnd","valueStart","displayStart","valueEnd","displayEnd","minIdx","maxIdx","_indices","last$$1","_values","upper","roundedStep","dataRange","maxDivisions","divisionOptions","dataRangeOptions","_parsed","panning","userSetBaseUnit","userSetBaseUnitStep","divisionRange","rangeLabels","splice","rounds","totalLimits","panRange","isEmpty","datesRange","indicesRange","fit","maxDiff","rangeDiff","baseUnitIndex","autoBaseUnitStep","stepIndex","createRangeLabels","arrangeRangeLabels","position$1","autoRotateRangeLabels","hideOverlappingLabels","clip","rangeLabel","firstRangeLabel","lastRangeLabel","i$1","overlaps$1","unitFormat","dateFormats","createLabel","startText","endText","rotateLabel","dateRange","totalOptions","totalMajorUnit","getDivisions","stepValue","lineSize","divisions","dir","startEdge","skipStep","getValue","valueOffset","endValue","isValidRange","newRange","axisCrossingValues","timeRange","exact","limittedRange","logMin","logMax","floorMax","traverseMajorTicksPositions","tickPosition","traverseMinorTicksPositions","power","_lineOptions","minorOptions","ref$2","_minorIntervalOptions","minorStep","acceptOptionsRange","acceptNewRange","nextValue","difference","majorAngles","minorAngles","skipMajor","majorGridLineAngles","renderMajorGridLines","minorGridLineAngles","renderMinorGridLines","renderGridLines","radiusCallback","circle","gridLineAngles","skipAngles","divs","intervals","altAxisVisible","alpha","intervalAngle","reflowLabels","skipOption","stepOption","divCount","divAngle","majorIntervals","minorIntervals","interval","minorAngle","minorRadius","band","ring","plotBandSlot","slotStart","toValue","slots","totalDivs","slotAngle","fromValue","instanceOptions","tmp","atan2","PI","bandStyle","shape","polarAxis","plotBandPoints","innerPoints","outerPoints","innerCircle","outerCircle","radarMajorGridLinePositions","radarMinorGridLinePositions","tickRadius","angleIx","midAngle","gamma","beta","axisType","minorSkipStep","process","dataPoints","p0","tangent","initialControlPoint","lastControlPoint","controlPoints","tangent$1","cp0","controlPoints$1","cp1","controlPoints$2","tangent$2","removeDuplicates","pop","controlOut","firstControlPoint","secondControlPoint","invertAxis","lineFunction","calculateFunction","isLine","monotonic","sign","oldXField","xField","yField","restrict","switchOrientation","isMonotonicByField","restrictControlPoint","cp","p3","t1","t2","xValue","yValue","controlPoint","Gradients","draw","SASS_THEMES","ExportMixin","skipLegacy","exportVisual","exportSVG","exportImage","exportPDF","svg","imageDataURL","Surface","exportGroup","surface","image","support","canvas","css","display","appendTo","_rootElement","toDataURL","remove","calendars","standard","Point2D","Box2D","mwDelta","originalEvent"],"mappings":"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","file":"kendo.dataviz.core.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var REPLACE_REGEX = /\\r?\\n|\\r|\\t/g;\n        var SPACE = ' ';\n        function normalizeText(text) {\n            return String(text).replace(REPLACE_REGEX, SPACE);\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: pre!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, options) {\n                if (options === void 0) {\n                    options = {};\n                }\n                if (typeof text === 'undefined' || text === null) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = options.box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n                measureBox.textContent = textStr;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (textStr.length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey,\n            normalizeText: normalizeText\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/kendo-core', [\n        'kendo.core',\n        'kendo.drawing'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var drawing = kendo.drawing;\n        var util = drawing.util;\n        var Path = drawing.Path;\n        var Group = drawing.Group;\n        var Class = kendo.Class;\n        var geometry = kendo.geometry;\n        var Rect = geometry.Rect;\n        var Circle = geometry.Circle;\n        var geometryTransform = geometry.transform;\n        var Segment = geometry.Segment;\n        var dataviz = kendo.dataviz;\n        var deepExtend = kendo.deepExtend;\n        var isFunction = kendo.isFunction;\n        var __common_getter_js = kendo.getter;\n        var ARC = 'arc';\n        var AXIS_LABEL_CLICK = 'axisLabelClick';\n        var BLACK = '#000';\n        var BOTTOM = 'bottom';\n        var CENTER = 'center';\n        var CIRCLE = 'circle';\n        var COORD_PRECISION = 3;\n        var CROSS = 'cross';\n        var DATE = 'date';\n        var DEFAULT_FONT = '12px sans-serif';\n        var DEFAULT_HEIGHT = 400;\n        var DEFAULT_PRECISION = 10;\n        var DEFAULT_WIDTH = 600;\n        var END = 'end';\n        var FORMAT_REGEX = /\\{\\d+:?/;\n        var HEIGHT = 'height';\n        var HIGHLIGHT_ZINDEX = 100;\n        var INSIDE = 'inside';\n        var LEFT = 'left';\n        var MAX_VALUE = Number.MAX_VALUE;\n        var MIN_VALUE = -Number.MAX_VALUE;\n        var NONE = 'none';\n        var NOTE_CLICK = 'noteClick';\n        var NOTE_HOVER = 'noteHover';\n        var NOTE_LEAVE = 'noteLeave';\n        var OBJECT = 'object';\n        var OUTSIDE = 'outside';\n        var RIGHT = 'right';\n        var ROUNDED_RECT = 'roundedRect';\n        var START = 'start';\n        var STRING = 'string';\n        var TOP = 'top';\n        var TRIANGLE = 'triangle';\n        var VALUE = 'value';\n        var WHITE = '#fff';\n        var WIDTH = 'width';\n        var X = 'x';\n        var Y = 'y';\n        var DEFAULT_SERIES_OPACITY = 1;\n        var constants = {\n            ARC: ARC,\n            AXIS_LABEL_CLICK: AXIS_LABEL_CLICK,\n            BLACK: BLACK,\n            BOTTOM: BOTTOM,\n            CENTER: CENTER,\n            CIRCLE: CIRCLE,\n            COORD_PRECISION: COORD_PRECISION,\n            CROSS: CROSS,\n            DATE: DATE,\n            DEFAULT_FONT: DEFAULT_FONT,\n            DEFAULT_HEIGHT: DEFAULT_HEIGHT,\n            DEFAULT_PRECISION: DEFAULT_PRECISION,\n            DEFAULT_WIDTH: DEFAULT_WIDTH,\n            END: END,\n            FORMAT_REGEX: FORMAT_REGEX,\n            HEIGHT: HEIGHT,\n            HIGHLIGHT_ZINDEX: HIGHLIGHT_ZINDEX,\n            INSIDE: INSIDE,\n            LEFT: LEFT,\n            MAX_VALUE: MAX_VALUE,\n            MIN_VALUE: MIN_VALUE,\n            NONE: NONE,\n            NOTE_CLICK: NOTE_CLICK,\n            NOTE_HOVER: NOTE_HOVER,\n            NOTE_LEAVE: NOTE_LEAVE,\n            OBJECT: OBJECT,\n            OUTSIDE: OUTSIDE,\n            RIGHT: RIGHT,\n            ROUNDED_RECT: ROUNDED_RECT,\n            START: START,\n            STRING: STRING,\n            TOP: TOP,\n            TRIANGLE: TRIANGLE,\n            VALUE: VALUE,\n            WHITE: WHITE,\n            WIDTH: WIDTH,\n            X: X,\n            Y: Y,\n            DEFAULT_SERIES_OPACITY: DEFAULT_SERIES_OPACITY\n        };\n        function isArray(value) {\n            return Array.isArray(value);\n        }\n        function addClass(element, classes) {\n            var classArray = isArray(classes) ? classes : [classes];\n            for (var idx = 0; idx < classArray.length; idx++) {\n                var className = classArray[idx];\n                if (element.className.indexOf(className) === -1) {\n                    element.className += ' ' + className;\n                }\n            }\n        }\n        var SPACE_REGEX = /\\s+/g;\n        function removeClass(element, className) {\n            if (element && element.className) {\n                element.className = element.className.replace(className, '').replace(SPACE_REGEX, ' ');\n            }\n        }\n        function alignPathToPixel(path) {\n            var offset = 0.5;\n            if (path.options.stroke && kendo.drawing.util.defined(path.options.stroke.width)) {\n                if (path.options.stroke.width % 2 === 0) {\n                    offset = 0;\n                }\n            }\n            for (var i = 0; i < path.segments.length; i++) {\n                path.segments[i].anchor().round(0).translate(offset, offset);\n            }\n            return path;\n        }\n        function clockwise(angle1, angle2) {\n            return -angle1.x * angle2.y + angle1.y * angle2.x < 0;\n        }\n        function isNumber(value) {\n            return typeof value === 'number' && !isNaN(value);\n        }\n        function isString(value) {\n            return typeof value === STRING;\n        }\n        function convertableToNumber(value) {\n            return isNumber(value) || isString(value) && isFinite(value);\n        }\n        function isObject(value) {\n            return typeof value === 'object';\n        }\n        function styleValue(value) {\n            if (isNumber(value)) {\n                return value + 'px';\n            }\n            return value;\n        }\n        var SIZE_STYLES_REGEX = /width|height|top|left|bottom|right/i;\n        function isSizeField(field) {\n            return SIZE_STYLES_REGEX.test(field);\n        }\n        function elementStyles(element, styles) {\n            var stylesArray = isString(styles) ? [styles] : styles;\n            if (isArray(stylesArray)) {\n                var result = {};\n                var style = window.getComputedStyle(element);\n                for (var idx = 0; idx < stylesArray.length; idx++) {\n                    var field = stylesArray[idx];\n                    result[field] = isSizeField(field) ? parseFloat(style[field]) : style[field];\n                }\n                return result;\n            } else if (isObject(styles)) {\n                for (var field$1 in styles) {\n                    element.style[field$1] = styleValue(styles[field$1]);\n                }\n            }\n        }\n        function getSpacing(value, defaultSpacing) {\n            if (defaultSpacing === void 0) {\n                defaultSpacing = 0;\n            }\n            var spacing = {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            };\n            if (typeof value === 'number') {\n                spacing[TOP] = spacing[RIGHT] = spacing[BOTTOM] = spacing[LEFT] = value;\n            } else {\n                spacing[TOP] = value[TOP] || defaultSpacing;\n                spacing[RIGHT] = value[RIGHT] || defaultSpacing;\n                spacing[BOTTOM] = value[BOTTOM] || defaultSpacing;\n                spacing[LEFT] = value[LEFT] || defaultSpacing;\n            }\n            return spacing;\n        }\n        var defaultImplementation = {\n            format: function (format, value) {\n                return value;\n            },\n            toString: function (value) {\n                return value;\n            },\n            parseDate: function (value) {\n                return new Date(value);\n            },\n            firstDay: function () {\n                return 0;\n            }\n        };\n        var current = defaultImplementation;\n        var IntlService = Class.extend({});\n        IntlService.register = function (userImplementation) {\n            current = userImplementation;\n        };\n        if (Object.defineProperties) {\n            Object.defineProperties(IntlService, {\n                implementation: {\n                    get: function () {\n                        return current;\n                    }\n                }\n            });\n        }\n        var FORMAT_REPLACE_REGEX = /\\{(\\d+)(:[^\\}]+)?\\}/g;\n        var FormatService = Class.extend({\n            init: function (intlService) {\n                this._intlService = intlService;\n            },\n            auto: function (formatString) {\n                var values = [], len = arguments.length - 1;\n                while (len-- > 0)\n                    values[len] = arguments[len + 1];\n                var intl = this.intl;\n                if (isString(formatString) && formatString.match(FORMAT_REGEX)) {\n                    return intl.format.apply(intl, [formatString].concat(values));\n                }\n                return intl.toString(values[0], formatString);\n            },\n            localeAuto: function (formatString, values, locale) {\n                var intl = this.intl;\n                var result;\n                if (isString(formatString) && formatString.match(FORMAT_REGEX)) {\n                    result = formatString.replace(FORMAT_REPLACE_REGEX, function (match, index, placeholderFormat) {\n                        var value = values[parseInt(index, 10)];\n                        return intl.toString(value, placeholderFormat ? placeholderFormat.substring(1) : '', locale);\n                    });\n                } else {\n                    result = intl.toString(values[0], formatString, locale);\n                }\n                return result;\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(FormatService.fn, {\n                intl: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    },\n                    set: function (value) {\n                        this._intlService = value;\n                    }\n                }\n            });\n        }\n        var ChartService = Class.extend({\n            init: function (chart, context) {\n                if (context === void 0) {\n                    context = {};\n                }\n                this._intlService = context.intlService;\n                this.sender = context.sender || chart;\n                this.format = new FormatService(context.intlService);\n                this.chart = chart;\n                this.rtl = Boolean(context.rtl);\n            },\n            notify: function (name, args) {\n                if (this.chart) {\n                    this.chart.trigger(name, args);\n                }\n            },\n            isPannable: function (axis) {\n                var pannable = ((this.chart || {}).options || {}).pannable;\n                return pannable && pannable.lock !== axis;\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(ChartService.fn, {\n                intl: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    },\n                    set: function (value) {\n                        this._intlService = value;\n                        this.format.intl = value;\n                    }\n                }\n            });\n        }\n        var current$1;\n        var DomEventsBuilder = Class.extend({});\n        DomEventsBuilder.register = function (userImplementation) {\n            current$1 = userImplementation;\n        };\n        DomEventsBuilder.create = function (element, events) {\n            if (current$1) {\n                return current$1.create(element, events);\n            }\n        };\n        var current$2 = {\n            compile: function (template) {\n                return template;\n            }\n        };\n        var TemplateService = Class.extend({});\n        TemplateService.register = function (userImplementation) {\n            current$2 = userImplementation;\n        };\n        TemplateService.compile = function (template) {\n            return current$2.compile(template);\n        };\n        var services = {\n            ChartService: ChartService,\n            DomEventsBuilder: DomEventsBuilder,\n            FormatService: FormatService,\n            IntlService: IntlService,\n            TemplateService: TemplateService\n        };\n        function getTemplate(options) {\n            if (options === void 0) {\n                options = {};\n            }\n            var template;\n            if (options.template) {\n                options.template = template = TemplateService.compile(options.template);\n            } else if (isFunction(options.content)) {\n                template = options.content;\n            }\n            return template;\n        }\n        function grep(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                if (callback(array[idx])) {\n                    result.push(array[idx]);\n                }\n            }\n            return result;\n        }\n        function hasClasses(element, classNames) {\n            if (element.className) {\n                var names = classNames.split(' ');\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (element.className.indexOf(names[idx]) !== -1) {\n                        return true;\n                    }\n                }\n            }\n        }\n        var HashMap = function HashMap() {\n            this._map = {};\n        };\n        HashMap.prototype.get = function get(name) {\n            return this._map[this._key(name)];\n        };\n        HashMap.prototype.set = function set(name, value) {\n            this._map[this._key(name)] = value;\n        };\n        HashMap.prototype._key = function _key(name) {\n            return name instanceof Date ? name.getTime() : name;\n        };\n        function inArray(value, array) {\n            if (array) {\n                return array.indexOf(value) !== -1;\n            }\n        }\n        function interpolateValue(start, end, progress) {\n            return kendo.drawing.util.round(start + (end - start) * progress, COORD_PRECISION);\n        }\n        var TRIGGER = 'trigger';\n        var InstanceObserver = Class.extend({\n            init: function (observer, handlers) {\n                this.observer = observer;\n                this.handlerMap = deepExtend({}, this.handlerMap, handlers);\n            },\n            trigger: function (name, args) {\n                var ref = this;\n                var observer = ref.observer;\n                var handlerMap = ref.handlerMap;\n                var isDefaultPrevented;\n                if (handlerMap[name]) {\n                    isDefaultPrevented = this.callObserver(handlerMap[name], args);\n                } else if (observer[TRIGGER]) {\n                    isDefaultPrevented = this.callObserver(TRIGGER, name, args);\n                }\n                return isDefaultPrevented;\n            },\n            callObserver: function (fnName) {\n                var args = [], len = arguments.length - 1;\n                while (len-- > 0)\n                    args[len] = arguments[len + 1];\n                return this.observer[fnName].apply(this.observer, args);\n            },\n            requiresHandlers: function (names) {\n                var this$1 = this;\n                if (this.observer.requiresHandlers) {\n                    return this.observer.requiresHandlers(names);\n                }\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (this$1.handlerMap[names[idx]]) {\n                        return true;\n                    }\n                }\n            }\n        });\n        function map(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                var value = callback(array[idx]);\n                if (kendo.drawing.util.defined(value)) {\n                    result.push(value);\n                }\n            }\n            return result;\n        }\n        function mousewheelDelta(e) {\n            var delta = 0;\n            if (e.wheelDelta) {\n                delta = -e.wheelDelta / 120;\n                delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n            }\n            if (e.detail) {\n                delta = kendo.drawing.util.round(e.detail / 3);\n            }\n            return delta;\n        }\n        var ref = kendo.drawing.util;\n        var append = ref.append;\n        var bindEvents = ref.bindEvents;\n        var defined = ref.defined;\n        var deg = ref.deg;\n        var elementOffset = ref.elementOffset;\n        var elementSize = ref.elementSize;\n        var eventElement = ref.eventElement;\n        var eventCoordinates = ref.eventCoordinates;\n        var last = ref.last;\n        var limitValue = ref.limitValue;\n        var objectKey = ref.objectKey;\n        var rad = ref.rad;\n        var round = ref.round;\n        var unbindEvents = ref.unbindEvents;\n        var valueOrDefault = ref.valueOrDefault;\n        var FontLoader = Class.extend({});\n        FontLoader.fetchFonts = function (options, fonts, state) {\n            if (state === void 0) {\n                state = { depth: 0 };\n            }\n            var MAX_DEPTH = 5;\n            if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n                return;\n            }\n            Object.keys(options).forEach(function (key) {\n                var value = options[key];\n                if (key === 'dataSource' || key[0] === '$' || !value) {\n                    return;\n                }\n                if (key === 'font') {\n                    fonts.push(value);\n                } else if (typeof value === 'object') {\n                    state.depth++;\n                    FontLoader.fetchFonts(value, fonts, state);\n                    state.depth--;\n                }\n            });\n        };\n        FontLoader.loadFonts = function (fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        };\n        FontLoader.preloadFonts = function (options, callback) {\n            var fonts = [];\n            FontLoader.fetchFonts(options, fonts);\n            FontLoader.loadFonts(fonts, callback);\n        };\n        function setDefaultOptions(type, options) {\n            var proto = type.prototype;\n            if (proto.options) {\n                proto.options = deepExtend({}, proto.options, options);\n            } else {\n                proto.options = options;\n            }\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_VALUE;\n            var max = MIN_VALUE;\n            for (var idx = 0, length = arr.length; idx < length; idx++) {\n                var value = arr[idx];\n                if (value !== null && isFinite(value)) {\n                    min = Math.min(min, value);\n                    max = Math.max(max, value);\n                }\n            }\n            return {\n                min: min === MAX_VALUE ? undefined : min,\n                max: max === MIN_VALUE ? undefined : max\n            };\n        }\n        function find(array, predicate) {\n            for (var i = 0; i < array.length; i++) {\n                var item = array[i];\n                if (predicate(item, i, array)) {\n                    return item;\n                }\n            }\n        }\n        var Matrix = geometry.Matrix;\n        var matrixRegexp = /matrix\\((.*)\\)/;\n        function parseMatrix(matrixString) {\n            var match = matrixString.match(matrixRegexp);\n            if (match === null || match.length !== 2) {\n                return Matrix.unit();\n            }\n            var members = match[1].split(',').map(function (x) {\n                return parseFloat(x);\n            });\n            return new (Function.prototype.bind.apply(Matrix, [null].concat(members)))();\n        }\n        function transformMatrix(element) {\n            var transform = getComputedStyle(element).transform;\n            if (transform === 'none') {\n                return Matrix.unit();\n            }\n            return parseMatrix(transform);\n        }\n        function elementScale(element) {\n            if (!element) {\n                return Matrix.unit();\n            }\n            var matrix = transformMatrix(element);\n            var parent = element.parentElement;\n            while (parent) {\n                var parentMatrix = transformMatrix(parent);\n                matrix = matrix.multiplyCopy(parentMatrix);\n                parent = parent.parentElement;\n            }\n            matrix.b = matrix.c = matrix.e = matrix.f = 0;\n            return matrix;\n        }\n        function autoTextColor(color) {\n            var isDark = new kendo.Color(color).isDark();\n            if (isDark) {\n                return WHITE;\n            }\n            return BLACK;\n        }\n        function autoMajorUnit(min, max) {\n            var diff = round(max - min, DEFAULT_PRECISION - 1);\n            if (diff === 0) {\n                if (max === 0) {\n                    return 0.1;\n                }\n                diff = Math.abs(max);\n            }\n            var scale = Math.pow(10, Math.floor(Math.log(diff) / Math.log(10)));\n            var relativeValue = round(diff / scale, DEFAULT_PRECISION);\n            var scaleMultiplier = 1;\n            if (relativeValue < 1.904762) {\n                scaleMultiplier = 0.2;\n            } else if (relativeValue < 4.761904) {\n                scaleMultiplier = 0.5;\n            } else if (relativeValue < 9.523809) {\n                scaleMultiplier = 1;\n            } else {\n                scaleMultiplier = 2;\n            }\n            return round(scale * scaleMultiplier, DEFAULT_PRECISION);\n        }\n        var Point = Class.extend({\n            init: function (x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n            },\n            clone: function () {\n                return new Point(this.x, this.y);\n            },\n            equals: function (point) {\n                return point && this.x === point.x && this.y === point.y;\n            },\n            rotate: function (center, degrees) {\n                var theta = rad(degrees);\n                var cosT = Math.cos(theta);\n                var sinT = Math.sin(theta);\n                var cx = center.x;\n                var cy = center.y;\n                var ref = this;\n                var x = ref.x;\n                var y = ref.y;\n                this.x = round(cx + (x - cx) * cosT + (y - cy) * sinT, COORD_PRECISION);\n                this.y = round(cy + (y - cy) * cosT - (x - cx) * sinT, COORD_PRECISION);\n                return this;\n            },\n            multiply: function (a) {\n                this.x *= a;\n                this.y *= a;\n                return this;\n            },\n            distanceTo: function (point) {\n                var dx = this.x - point.x;\n                var dy = this.y - point.y;\n                return Math.sqrt(dx * dx + dy * dy);\n            }\n        });\n        Point.onCircle = function (center, angle, radius) {\n            var radians = rad(angle);\n            return new Point(center.x - radius * Math.cos(radians), center.y - radius * Math.sin(radians));\n        };\n        var Box = Class.extend({\n            init: function (x1, y1, x2, y2) {\n                this.x1 = x1 || 0;\n                this.y1 = y1 || 0;\n                this.x2 = x2 || 0;\n                this.y2 = y2 || 0;\n            },\n            equals: function (box) {\n                return this.x1 === box.x1 && this.x2 === box.x2 && this.y1 === box.y1 && this.y2 === box.y2;\n            },\n            width: function () {\n                return this.x2 - this.x1;\n            },\n            height: function () {\n                return this.y2 - this.y1;\n            },\n            translate: function (dx, dy) {\n                this.x1 += dx;\n                this.x2 += dx;\n                this.y1 += dy;\n                this.y2 += dy;\n                return this;\n            },\n            move: function (x, y) {\n                var height = this.height();\n                var width = this.width();\n                if (defined(x)) {\n                    this.x1 = x;\n                    this.x2 = this.x1 + width;\n                }\n                if (defined(y)) {\n                    this.y1 = y;\n                    this.y2 = this.y1 + height;\n                }\n                return this;\n            },\n            wrap: function (targetBox) {\n                this.x1 = Math.min(this.x1, targetBox.x1);\n                this.y1 = Math.min(this.y1, targetBox.y1);\n                this.x2 = Math.max(this.x2, targetBox.x2);\n                this.y2 = Math.max(this.y2, targetBox.y2);\n                return this;\n            },\n            wrapPoint: function (point) {\n                var arrayPoint = isArray(point);\n                var x = arrayPoint ? point[0] : point.x;\n                var y = arrayPoint ? point[1] : point.y;\n                this.wrap(new Box(x, y, x, y));\n                return this;\n            },\n            snapTo: function (targetBox, axis) {\n                if (axis === X || !axis) {\n                    this.x1 = targetBox.x1;\n                    this.x2 = targetBox.x2;\n                }\n                if (axis === Y || !axis) {\n                    this.y1 = targetBox.y1;\n                    this.y2 = targetBox.y2;\n                }\n                return this;\n            },\n            alignTo: function (targetBox, anchor) {\n                var height = this.height();\n                var width = this.width();\n                var axis = anchor === TOP || anchor === BOTTOM ? Y : X;\n                var offset = axis === Y ? height : width;\n                if (anchor === CENTER) {\n                    var targetCenter = targetBox.center();\n                    var center = this.center();\n                    this.x1 += targetCenter.x - center.x;\n                    this.y1 += targetCenter.y - center.y;\n                } else if (anchor === TOP || anchor === LEFT) {\n                    this[axis + 1] = targetBox[axis + 1] - offset;\n                } else {\n                    this[axis + 1] = targetBox[axis + 2];\n                }\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            shrink: function (dw, dh) {\n                this.x2 -= dw;\n                this.y2 -= dh;\n                return this;\n            },\n            expand: function (dw, dh) {\n                this.shrink(-dw, -dh);\n                return this;\n            },\n            pad: function (padding) {\n                var spacing = getSpacing(padding);\n                this.x1 -= spacing.left;\n                this.x2 += spacing.right;\n                this.y1 -= spacing.top;\n                this.y2 += spacing.bottom;\n                return this;\n            },\n            unpad: function (padding) {\n                var spacing = getSpacing(padding);\n                spacing.left = -spacing.left;\n                spacing.top = -spacing.top;\n                spacing.right = -spacing.right;\n                spacing.bottom = -spacing.bottom;\n                return this.pad(spacing);\n            },\n            clone: function () {\n                return new Box(this.x1, this.y1, this.x2, this.y2);\n            },\n            center: function () {\n                return new Point(this.x1 + this.width() / 2, this.y1 + this.height() / 2);\n            },\n            containsPoint: function (point) {\n                return point.x >= this.x1 && point.x <= this.x2 && point.y >= this.y1 && point.y <= this.y2;\n            },\n            points: function () {\n                return [\n                    new Point(this.x1, this.y1),\n                    new Point(this.x2, this.y1),\n                    new Point(this.x2, this.y2),\n                    new Point(this.x1, this.y2)\n                ];\n            },\n            getHash: function () {\n                return [\n                    this.x1,\n                    this.y1,\n                    this.x2,\n                    this.y2\n                ].join(',');\n            },\n            overlaps: function (box) {\n                return !(box.y2 < this.y1 || this.y2 < box.y1 || box.x2 < this.x1 || this.x2 < box.x1);\n            },\n            rotate: function (rotation) {\n                var width = this.width();\n                var height = this.height();\n                var ref = this.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var r1 = rotatePoint(0, 0, cx, cy, rotation);\n                var r2 = rotatePoint(width, 0, cx, cy, rotation);\n                var r3 = rotatePoint(width, height, cx, cy, rotation);\n                var r4 = rotatePoint(0, height, cx, cy, rotation);\n                width = Math.max(r1.x, r2.x, r3.x, r4.x) - Math.min(r1.x, r2.x, r3.x, r4.x);\n                height = Math.max(r1.y, r2.y, r3.y, r4.y) - Math.min(r1.y, r2.y, r3.y, r4.y);\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            toRect: function () {\n                return new Rect([\n                    this.x1,\n                    this.y1\n                ], [\n                    this.width(),\n                    this.height()\n                ]);\n            },\n            hasSize: function () {\n                return this.width() !== 0 && this.height() !== 0;\n            },\n            align: function (targetBox, axis, alignment) {\n                var c1 = axis + 1;\n                var c2 = axis + 2;\n                var sizeFunc = axis === X ? WIDTH : HEIGHT;\n                var size = this[sizeFunc]();\n                if (inArray(alignment, [\n                        LEFT,\n                        TOP\n                    ])) {\n                    this[c1] = targetBox[c1];\n                    this[c2] = this[c1] + size;\n                } else if (inArray(alignment, [\n                        RIGHT,\n                        BOTTOM\n                    ])) {\n                    this[c2] = targetBox[c2];\n                    this[c1] = this[c2] - size;\n                } else if (alignment === CENTER) {\n                    this[c1] = targetBox[c1] + (targetBox[sizeFunc]() - size) / 2;\n                    this[c2] = this[c1] + size;\n                }\n            }\n        });\n        function rotatePoint(x, y, cx, cy, angle) {\n            var theta = rad(angle);\n            return new Point(cx + (x - cx) * Math.cos(theta) + (y - cy) * Math.sin(theta), cy - (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta));\n        }\n        var Ring = Class.extend({\n            init: function (center, innerRadius, radius, startAngle, angle) {\n                this.center = center;\n                this.innerRadius = innerRadius;\n                this.radius = radius;\n                this.startAngle = startAngle;\n                this.angle = angle;\n            },\n            clone: function () {\n                return new Ring(this.center, this.innerRadius, this.radius, this.startAngle, this.angle);\n            },\n            middle: function () {\n                return this.startAngle + this.angle / 2;\n            },\n            setRadius: function (newRadius, innerRadius) {\n                if (innerRadius) {\n                    this.innerRadius = newRadius;\n                } else {\n                    this.radius = newRadius;\n                }\n                return this;\n            },\n            point: function (angle, innerRadius) {\n                var radianAngle = rad(angle);\n                var ax = Math.cos(radianAngle);\n                var ay = Math.sin(radianAngle);\n                var radius = innerRadius ? this.innerRadius : this.radius;\n                var x = round(this.center.x - ax * radius, COORD_PRECISION);\n                var y = round(this.center.y - ay * radius, COORD_PRECISION);\n                return new Point(x, y);\n            },\n            adjacentBox: function (distance, width, height) {\n                var sector = this.clone().expand(distance);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                var hw = width / 2;\n                var hh = height / 2;\n                var sa = Math.sin(rad(midAndle));\n                var ca = Math.cos(rad(midAndle));\n                var x = midPoint.x - hw;\n                var y = midPoint.y - hh;\n                if (Math.abs(sa) < 0.9) {\n                    x += hw * -ca / Math.abs(ca);\n                }\n                if (Math.abs(ca) < 0.9) {\n                    y += hh * -sa / Math.abs(sa);\n                }\n                return new Box(x, y, x + width, y + height);\n            },\n            containsPoint: function (p) {\n                var center = this.center;\n                var innerRadius = this.innerRadius;\n                var radius = this.radius;\n                var startAngle = this.startAngle;\n                var endAngle = this.startAngle + this.angle;\n                var dx = p.x - center.x;\n                var dy = p.y - center.y;\n                var vector = new Point(dx, dy);\n                var startPoint = this.point(startAngle);\n                var startVector = new Point(startPoint.x - center.x, startPoint.y - center.y);\n                var endPoint = this.point(endAngle);\n                var endVector = new Point(endPoint.x - center.x, endPoint.y - center.y);\n                var dist = round(dx * dx + dy * dy, COORD_PRECISION);\n                return (startVector.equals(vector) || clockwise(startVector, vector)) && !clockwise(endVector, vector) && dist >= innerRadius * innerRadius && dist <= radius * radius;\n            },\n            getBBox: function () {\n                var this$1 = this;\n                var box = new Box(MAX_VALUE, MAX_VALUE, MIN_VALUE, MIN_VALUE);\n                var startAngle = round(this.startAngle % 360);\n                var endAngle = round((startAngle + this.angle) % 360);\n                var innerRadius = this.innerRadius;\n                var allAngles = [\n                    0,\n                    90,\n                    180,\n                    270,\n                    startAngle,\n                    endAngle\n                ].sort(numericComparer);\n                var startAngleIndex = allAngles.indexOf(startAngle);\n                var endAngleIndex = allAngles.indexOf(endAngle);\n                var angles;\n                if (startAngle === endAngle) {\n                    angles = allAngles;\n                } else {\n                    if (startAngleIndex < endAngleIndex) {\n                        angles = allAngles.slice(startAngleIndex, endAngleIndex + 1);\n                    } else {\n                        angles = [].concat(allAngles.slice(0, endAngleIndex + 1), allAngles.slice(startAngleIndex, allAngles.length));\n                    }\n                }\n                for (var i = 0; i < angles.length; i++) {\n                    var point = this$1.point(angles[i]);\n                    box.wrapPoint(point);\n                    box.wrapPoint(point, innerRadius);\n                }\n                if (!innerRadius) {\n                    box.wrapPoint(this.center);\n                }\n                return box;\n            },\n            expand: function (value) {\n                this.radius += value;\n                return this;\n            }\n        });\n        function numericComparer(a, b) {\n            return a - b;\n        }\n        var Sector = Ring.extend({\n            init: function (center, radius, startAngle, angle) {\n                Ring.fn.init.call(this, center, 0, radius, startAngle, angle);\n            },\n            expand: function (value) {\n                return Ring.fn.expand.call(this, value);\n            },\n            clone: function () {\n                return new Sector(this.center, this.radius, this.startAngle, this.angle);\n            },\n            setRadius: function (newRadius) {\n                this.radius = newRadius;\n                return this;\n            }\n        });\n        var DIRECTION_ANGLE = 0.001;\n        var ShapeBuilder = Class.extend({\n            createRing: function (sector, options) {\n                var startAngle = sector.startAngle + 180;\n                var endAngle = sector.angle + startAngle;\n                if (sector.angle > 0 && startAngle === endAngle) {\n                    endAngle += DIRECTION_ANGLE;\n                }\n                var center = new geometry.Point(sector.center.x, sector.center.y);\n                var radius = Math.max(sector.radius, 0);\n                var innerRadius = Math.max(sector.innerRadius, 0);\n                var arc = new geometry.Arc(center, {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: radius,\n                    radiusY: radius\n                });\n                var path = Path.fromArc(arc, options).close();\n                if (innerRadius) {\n                    arc.radiusX = arc.radiusY = innerRadius;\n                    var innerEnd = arc.pointAt(endAngle);\n                    path.lineTo(innerEnd.x, innerEnd.y);\n                    path.arc(endAngle, startAngle, innerRadius, innerRadius, true);\n                } else {\n                    path.lineTo(center.x, center.y);\n                }\n                return path;\n            }\n        });\n        ShapeBuilder.current = new ShapeBuilder();\n        var ChartElement = Class.extend({\n            init: function (options) {\n                this.children = [];\n                this.options = deepExtend({}, this.options, this.initUserOptions(options));\n            },\n            initUserOptions: function (options) {\n                return options;\n            },\n            reflow: function (targetBox) {\n                var children = this.children;\n                var box;\n                for (var i = 0; i < children.length; i++) {\n                    var currentChild = children[i];\n                    currentChild.reflow(targetBox);\n                    box = box ? box.wrap(currentChild.box) : currentChild.box.clone();\n                }\n                this.box = box || targetBox;\n            },\n            destroy: function () {\n                var children = this.children;\n                if (this.animation) {\n                    this.animation.destroy();\n                }\n                for (var i = 0; i < children.length; i++) {\n                    children[i].destroy();\n                }\n            },\n            getRoot: function () {\n                var parent = this.parent;\n                return parent ? parent.getRoot() : null;\n            },\n            getSender: function () {\n                var service = this.getService();\n                if (service) {\n                    return service.sender;\n                }\n            },\n            getService: function () {\n                var element = this;\n                while (element) {\n                    if (element.chartService) {\n                        return element.chartService;\n                    }\n                    element = element.parent;\n                }\n            },\n            translateChildren: function (dx, dy) {\n                var children = this.children;\n                var childrenCount = children.length;\n                for (var i = 0; i < childrenCount; i++) {\n                    children[i].box.translate(dx, dy);\n                }\n            },\n            append: function () {\n                var arguments$1 = arguments;\n                var this$1 = this;\n                for (var i = 0; i < arguments.length; i++) {\n                    var item = arguments$1[i];\n                    this$1.children.push(item);\n                    item.parent = this$1;\n                }\n            },\n            renderVisual: function () {\n                if (this.options.visible === false) {\n                    return;\n                }\n                this.createVisual();\n                this.addVisual();\n                this.renderChildren();\n                this.createAnimation();\n                this.renderComplete();\n            },\n            addVisual: function () {\n                if (this.visual) {\n                    this.visual.chartElement = this;\n                    if (this.parent) {\n                        this.parent.appendVisual(this.visual);\n                    }\n                }\n            },\n            renderChildren: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    children[i].renderVisual();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group({\n                    zIndex: this.options.zIndex,\n                    visible: valueOrDefault(this.options.visible, true)\n                });\n            },\n            createAnimation: function () {\n                if (this.visual && this.options.animation) {\n                    this.animation = drawing.Animation.create(this.visual, this.options.animation);\n                }\n            },\n            appendVisual: function (childVisual) {\n                if (!childVisual.chartElement) {\n                    childVisual.chartElement = this;\n                }\n                if (childVisual.options.noclip) {\n                    this.clipRoot().visual.append(childVisual);\n                } else if (defined(childVisual.options.zIndex)) {\n                    this.stackRoot().stackVisual(childVisual);\n                } else if (this.isStackRoot) {\n                    this.stackVisual(childVisual);\n                } else if (this.visual) {\n                    this.visual.append(childVisual);\n                } else {\n                    this.parent.appendVisual(childVisual);\n                }\n            },\n            clipRoot: function () {\n                if (this.parent) {\n                    return this.parent.clipRoot();\n                }\n                return this;\n            },\n            stackRoot: function () {\n                if (this.parent) {\n                    return this.parent.stackRoot();\n                }\n                return this;\n            },\n            stackVisual: function (childVisual) {\n                var zIndex = childVisual.options.zIndex || 0;\n                var visuals = this.visual.children;\n                var length = visuals.length;\n                var pos;\n                for (pos = 0; pos < length; pos++) {\n                    var sibling = visuals[pos];\n                    var here = valueOrDefault(sibling.options.zIndex, 0);\n                    if (here > zIndex) {\n                        break;\n                    }\n                }\n                this.visual.insert(pos, childVisual);\n            },\n            traverse: function (callback) {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    var child = children[i];\n                    callback(child);\n                    if (child.traverse) {\n                        child.traverse(callback);\n                    }\n                }\n            },\n            closest: function (match) {\n                var element = this;\n                var matched = false;\n                while (element && !matched) {\n                    matched = match(element);\n                    if (!matched) {\n                        element = element.parent;\n                    }\n                }\n                if (matched) {\n                    return element;\n                }\n            },\n            renderComplete: function () {\n            },\n            hasHighlight: function () {\n                var options = (this.options || {}).highlight;\n                return !(!this.createHighlight || options && options.visible === false);\n            },\n            toggleHighlight: function (show, opacity) {\n                var this$1 = this;\n                var options = (this.options || {}).highlight || {};\n                var customVisual = options.visual;\n                var highlight = this._highlight;\n                if (!highlight) {\n                    var highlightOptions = {\n                        fill: {\n                            color: WHITE,\n                            opacity: opacity || 0.2\n                        },\n                        stroke: {\n                            color: WHITE,\n                            width: 1,\n                            opacity: opacity || 0.2\n                        }\n                    };\n                    if (customVisual) {\n                        highlight = this._highlight = customVisual($.extend(this.highlightVisualArgs(), {\n                            createVisual: function () {\n                                return this$1.createHighlight(highlightOptions);\n                            },\n                            sender: this.getSender(),\n                            series: this.series,\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            runningTotal: this.runningTotal,\n                            total: this.total\n                        }));\n                        if (!highlight) {\n                            return;\n                        }\n                    } else {\n                        highlight = this._highlight = this.createHighlight(highlightOptions);\n                    }\n                    if (!defined(highlight.options.zIndex)) {\n                        highlight.options.zIndex = valueOrDefault(options.zIndex, this.options.zIndex);\n                    }\n                    this.appendVisual(highlight);\n                }\n                highlight.visible(show);\n            },\n            createGradientOverlay: function (element, options, gradientOptions) {\n                var overlay = new Path($.extend({\n                    stroke: { color: 'none' },\n                    fill: this.createGradient(gradientOptions),\n                    closed: element.options.closed\n                }, options));\n                overlay.segments.elements(element.segments.elements());\n                return overlay;\n            },\n            createGradient: function (options) {\n                if (this.parent) {\n                    return this.parent.createGradient(options);\n                }\n            },\n            supportsPointInactiveOpacity: function () {\n                return true;\n            }\n        });\n        ChartElement.prototype.options = {};\n        var BoxElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.options.margin = getSpacing(this.options.margin);\n                this.options.padding = getSpacing(this.options.padding);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var shrinkToFit = options.shrinkToFit;\n                var hasSetSize = width && height;\n                var margin = options.margin;\n                var padding = options.padding;\n                var borderWidth = options.border.width;\n                var box;\n                var reflowPaddingBox = function () {\n                    this$1.align(targetBox, X, options.align);\n                    this$1.align(targetBox, Y, options.vAlign);\n                    this$1.paddingBox = box.clone().unpad(margin).unpad(borderWidth);\n                };\n                var contentBox = targetBox.clone();\n                if (hasSetSize) {\n                    contentBox.x2 = contentBox.x1 + width;\n                    contentBox.y2 = contentBox.y1 + height;\n                }\n                if (shrinkToFit) {\n                    contentBox.unpad(margin).unpad(borderWidth).unpad(padding);\n                }\n                ChartElement.fn.reflow.call(this, contentBox);\n                if (hasSetSize) {\n                    box = this.box = new Box(0, 0, width, height);\n                } else {\n                    box = this.box;\n                }\n                if (shrinkToFit && hasSetSize) {\n                    reflowPaddingBox();\n                    contentBox = this.contentBox = this.paddingBox.clone().unpad(padding);\n                } else {\n                    contentBox = this.contentBox = box.clone();\n                    box.pad(padding).pad(borderWidth).pad(margin);\n                    reflowPaddingBox();\n                }\n                this.translateChildren(box.x1 - contentBox.x1 + margin.left + borderWidth + padding.left, box.y1 - contentBox.y1 + margin.top + borderWidth + padding.top);\n                var children = this.children;\n                for (var i = 0; i < children.length; i++) {\n                    var item = children[i];\n                    item.reflow(item.box);\n                }\n            },\n            align: function (targetBox, axis, alignment) {\n                this.box.align(targetBox, axis, alignment);\n            },\n            hasBox: function () {\n                var options = this.options;\n                return options.border.width || options.background;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                if (options.visible && this.hasBox()) {\n                    this.visual.append(Path.fromRect(this.paddingBox.toRect(), this.visualStyle()));\n                }\n            },\n            visualStyle: function () {\n                var options = this.options;\n                var border = options.border || {};\n                return {\n                    stroke: {\n                        width: border.width,\n                        color: border.color,\n                        opacity: valueOrDefault(border.opacity, options.opacity),\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    cursor: options.cursor\n                };\n            }\n        });\n        setDefaultOptions(BoxElement, {\n            align: LEFT,\n            vAlign: TOP,\n            margin: {},\n            padding: {},\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            background: '',\n            shrinkToFit: false,\n            width: 0,\n            height: 0,\n            visible: true\n        });\n        var ShapeElement = BoxElement.extend({\n            init: function (options, pointData) {\n                BoxElement.fn.init.call(this, options);\n                this.pointData = pointData;\n            },\n            getElement: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.paddingBox;\n                var type = options.type;\n                var rotation = options.rotation;\n                var center = box.center();\n                var halfWidth = box.width() / 2;\n                var halfHeight = box.height() / 2;\n                if (!options.visible || !this.hasBox()) {\n                    return null;\n                }\n                var style = this.visualStyle();\n                var element;\n                if (type === CIRCLE) {\n                    element = new drawing.Circle(new Circle([\n                        round(box.x1 + halfWidth, COORD_PRECISION),\n                        round(box.y1 + halfHeight, COORD_PRECISION)\n                    ], Math.min(halfWidth, halfHeight)), style);\n                } else if (type === TRIANGLE) {\n                    element = Path.fromPoints([\n                        [\n                            box.x1 + halfWidth,\n                            box.y1\n                        ],\n                        [\n                            box.x1,\n                            box.y2\n                        ],\n                        [\n                            box.x2,\n                            box.y2\n                        ]\n                    ], style).close();\n                } else if (type === CROSS) {\n                    element = new drawing.MultiPath(style);\n                    element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n                    element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n                } else {\n                    var rect = box.toRect();\n                    if (type === ROUNDED_RECT) {\n                        var borderRadius = valueOrDefault(options.borderRadius, rect.width() / 5);\n                        rect.setCornerRadius(borderRadius);\n                    }\n                    element = Path.fromRect(rect, style);\n                }\n                if (rotation) {\n                    element.transform(geometryTransform().rotate(-rotation, [\n                        center.x,\n                        center.y\n                    ]));\n                }\n                element.options.zIndex = options.zIndex;\n                return element;\n            },\n            createElement: function () {\n                var this$1 = this;\n                var customVisual = this.options.visual;\n                var pointData = this.pointData || {};\n                var visual;\n                if (customVisual) {\n                    visual = customVisual({\n                        value: pointData.value,\n                        dataItem: pointData.dataItem,\n                        sender: this.getSender(),\n                        series: pointData.series,\n                        category: pointData.category,\n                        rect: this.paddingBox.toRect(),\n                        options: this.visualOptions(),\n                        createVisual: function () {\n                            return this$1.getElement();\n                        }\n                    });\n                } else {\n                    visual = this.getElement();\n                }\n                return visual;\n            },\n            visualOptions: function () {\n                var options = this.options;\n                return {\n                    background: options.background,\n                    border: options.border,\n                    margin: options.margin,\n                    padding: options.padding,\n                    type: options.type,\n                    size: options.width,\n                    visible: options.visible\n                };\n            },\n            createVisual: function () {\n                this.visual = this.createElement();\n            }\n        });\n        setDefaultOptions(ShapeElement, {\n            type: CIRCLE,\n            align: CENTER,\n            vAlign: CENTER\n        });\n        var LINEAR = 'linear';\n        var RADIAL = 'radial';\n        var GRADIENTS = {\n            glass: {\n                type: LINEAR,\n                rotation: 0,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.25,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 1,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.55\n                    },\n                    {\n                        offset: 0.65,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0.25\n                    }\n                ]\n            },\n            roundedBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0.33,\n                        color: WHITE,\n                        opacity: 0.06\n                    },\n                    {\n                        offset: 0.83,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            roundedGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.5,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.15,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.17,\n                        color: WHITE,\n                        opacity: 0.35\n                    },\n                    {\n                        offset: 0.85,\n                        color: WHITE,\n                        opacity: 0.05\n                    },\n                    {\n                        offset: 0.87,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            bubbleShadow: {\n                type: RADIAL,\n                center: [\n                    0.5,\n                    0.5\n                ],\n                radius: 0.5\n            }\n        };\n        function boxDiff(r, s) {\n            if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\n                return s;\n            }\n            var a = Math.min(r.x1, s.x1);\n            var b = Math.max(r.x1, s.x1);\n            var c = Math.min(r.x2, s.x2);\n            var d = Math.max(r.x2, s.x2);\n            var e = Math.min(r.y1, s.y1);\n            var f = Math.max(r.y1, s.y1);\n            var g = Math.min(r.y2, s.y2);\n            var h = Math.max(r.y2, s.y2);\n            var boxes = [];\n            boxes[0] = new Box(b, e, c, f);\n            boxes[1] = new Box(a, f, b, g);\n            boxes[2] = new Box(c, f, d, g);\n            boxes[3] = new Box(b, g, c, h);\n            if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) {\n                boxes[4] = new Box(a, e, b, f);\n                boxes[5] = new Box(c, g, d, h);\n            } else {\n                boxes[4] = new Box(c, e, d, f);\n                boxes[5] = new Box(a, g, b, h);\n            }\n            return grep(boxes, function (box) {\n                return box.height() > 0 && box.width() > 0;\n            })[0];\n        }\n        var RootElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                var rootOptions = this.options;\n                rootOptions.width = parseInt(rootOptions.width, 10);\n                rootOptions.height = parseInt(rootOptions.height, 10);\n                this.gradients = {};\n            },\n            reflow: function () {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var currentBox = new Box(0, 0, options.width, options.height);\n                this.box = currentBox.unpad(options.margin);\n                for (var i = 0; i < children.length; i++) {\n                    children[i].reflow(currentBox);\n                    currentBox = boxDiff(currentBox, children[i].box) || new Box();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group();\n                this.createBackground();\n            },\n            createBackground: function () {\n                var options = this.options;\n                var border = options.border || {};\n                var box = this.box.clone().pad(options.margin).unpad(border.width);\n                var background = Path.fromRect(box.toRect(), {\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    zIndex: -10\n                });\n                this.visual.append(background);\n            },\n            getRoot: function () {\n                return this;\n            },\n            createGradient: function (options) {\n                var gradients = this.gradients;\n                var hashCode = objectKey(options);\n                var gradient = GRADIENTS[options.gradient];\n                var drawingGradient;\n                if (gradients[hashCode]) {\n                    drawingGradient = gradients[hashCode];\n                } else {\n                    var gradientOptions = $.extend({}, gradient, options);\n                    if (gradient.type === 'linear') {\n                        drawingGradient = new drawing.LinearGradient(gradientOptions);\n                    } else {\n                        if (options.innerRadius) {\n                            gradientOptions.stops = innerRadialStops(gradientOptions);\n                        }\n                        drawingGradient = new drawing.RadialGradient(gradientOptions);\n                        drawingGradient.supportVML = gradient.supportVML !== false;\n                    }\n                    gradients[hashCode] = drawingGradient;\n                }\n                return drawingGradient;\n            },\n            cleanGradients: function () {\n                var gradients = this.gradients;\n                for (var hashCode in gradients) {\n                    gradients[hashCode]._observers = [];\n                }\n            },\n            size: function () {\n                var options = this.options;\n                return new Box(0, 0, options.width, options.height);\n            }\n        });\n        setDefaultOptions(RootElement, {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT,\n            background: WHITE,\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            margin: getSpacing(5),\n            zIndex: -2\n        });\n        function innerRadialStops(options) {\n            var stops = options.stops;\n            var usedSpace = options.innerRadius / options.radius * 100;\n            var length = stops.length;\n            var currentStops = [];\n            for (var i = 0; i < length; i++) {\n                var currentStop = $.extend({}, stops[i]);\n                currentStop.offset = (currentStop.offset * (100 - usedSpace) + usedSpace) / 100;\n                currentStops.push(currentStop);\n            }\n            return currentStops;\n        }\n        var FloatElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this._initDirection();\n            },\n            _initDirection: function () {\n                var options = this.options;\n                if (options.vertical) {\n                    this.groupAxis = X;\n                    this.elementAxis = Y;\n                    this.groupSizeField = WIDTH;\n                    this.elementSizeField = HEIGHT;\n                    this.groupSpacing = options.spacing;\n                    this.elementSpacing = options.vSpacing;\n                } else {\n                    this.groupAxis = Y;\n                    this.elementAxis = X;\n                    this.groupSizeField = HEIGHT;\n                    this.elementSizeField = WIDTH;\n                    this.groupSpacing = options.vSpacing;\n                    this.elementSpacing = options.spacing;\n                }\n            },\n            reflow: function (targetBox) {\n                this.box = targetBox.clone();\n                this.reflowChildren();\n            },\n            reflowChildren: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var elementAxis = ref.elementAxis;\n                var groupAxis = ref.groupAxis;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var ref$1 = this.groupOptions();\n                var groups = ref$1.groups;\n                var groupsSize = ref$1.groupsSize;\n                var maxGroupElementsSize = ref$1.maxGroupElementsSize;\n                var groupsCount = groups.length;\n                var groupsStart = box[groupAxis + 1] + this.alignStart(groupsSize, box[groupSizeField]());\n                if (groupsCount) {\n                    var groupStart = groupsStart;\n                    for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                        var group = groups[groupIdx];\n                        var groupElements = group.groupElements;\n                        var elementStart = box[elementAxis + 1];\n                        var groupElementsCount = groupElements.length;\n                        for (var idx = 0; idx < groupElementsCount; idx++) {\n                            var element = groupElements[idx];\n                            var elementSize$$1 = this$1.elementSize(element);\n                            var groupElementStart = groupStart + this$1.alignStart(elementSize$$1[groupSizeField], group.groupSize);\n                            var elementBox = new Box();\n                            elementBox[groupAxis + 1] = groupElementStart;\n                            elementBox[groupAxis + 2] = groupElementStart + elementSize$$1[groupSizeField];\n                            elementBox[elementAxis + 1] = elementStart;\n                            elementBox[elementAxis + 2] = elementStart + elementSize$$1[elementSizeField];\n                            element.reflow(elementBox);\n                            elementStart += elementSize$$1[elementSizeField] + this$1.elementSpacing;\n                        }\n                        groupStart += group.groupSize + this$1.groupSpacing;\n                    }\n                    box[groupAxis + 1] = groupsStart;\n                    box[groupAxis + 2] = groupsStart + groupsSize;\n                    box[elementAxis + 2] = box[elementAxis + 1] + maxGroupElementsSize;\n                }\n            },\n            alignStart: function (size, maxSize) {\n                var start = 0;\n                var align = this.options.align;\n                if (align === RIGHT || align === BOTTOM) {\n                    start = maxSize - size;\n                } else if (align === CENTER) {\n                    start = (maxSize - size) / 2;\n                }\n                return start;\n            },\n            groupOptions: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var children = ref.children;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var elementSpacing = ref.elementSpacing;\n                var groupSpacing = ref.groupSpacing;\n                var maxSize = round(box[elementSizeField]());\n                var childrenCount = children.length;\n                var groups = [];\n                var groupSize = 0;\n                var groupElementsSize = 0;\n                var groupsSize = 0;\n                var maxGroupElementsSize = 0;\n                var groupElements = [];\n                for (var idx = 0; idx < childrenCount; idx++) {\n                    var element = children[idx];\n                    if (!element.box) {\n                        element.reflow(box);\n                    }\n                    var elementSize$$1 = this$1.elementSize(element);\n                    if (this$1.options.wrap && round(groupElementsSize + elementSpacing + elementSize$$1[elementSizeField]) > maxSize) {\n                        groups.push({\n                            groupElements: groupElements,\n                            groupSize: groupSize,\n                            groupElementsSize: groupElementsSize\n                        });\n                        maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                        groupsSize += groupSpacing + groupSize;\n                        groupSize = 0;\n                        groupElementsSize = 0;\n                        groupElements = [];\n                    }\n                    groupSize = Math.max(groupSize, elementSize$$1[groupSizeField]);\n                    if (groupElementsSize > 0) {\n                        groupElementsSize += elementSpacing;\n                    }\n                    groupElementsSize += elementSize$$1[elementSizeField];\n                    groupElements.push(element);\n                }\n                groups.push({\n                    groupElements: groupElements,\n                    groupSize: groupSize,\n                    groupElementsSize: groupElementsSize\n                });\n                maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                groupsSize += groupSize;\n                return {\n                    groups: groups,\n                    groupsSize: groupsSize,\n                    maxGroupElementsSize: maxGroupElementsSize\n                };\n            },\n            elementSize: function (element) {\n                return {\n                    width: element.box.width(),\n                    height: element.box.height()\n                };\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(FloatElement, {\n            vertical: true,\n            wrap: true,\n            vSpacing: 0,\n            spacing: 0\n        });\n        var DrawingText = drawing.Text;\n        var Text = ChartElement.extend({\n            init: function (content, options) {\n                ChartElement.fn.init.call(this, options);\n                this.content = content;\n                this.reflow(new Box());\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var size = options.size = util.measureText(this.content, { font: options.font });\n                this.baseline = size.baseline;\n                this.box = new Box(targetBox.x1, targetBox.y1, targetBox.x1 + size.width, targetBox.y1 + size.height);\n            },\n            createVisual: function () {\n                var ref = this.options;\n                var font = ref.font;\n                var color = ref.color;\n                var opacity = ref.opacity;\n                var cursor = ref.cursor;\n                this.visual = new DrawingText(this.content, this.box.toRect().topLeft(), {\n                    font: font,\n                    fill: {\n                        color: color,\n                        opacity: opacity\n                    },\n                    cursor: cursor\n                });\n            }\n        });\n        setDefaultOptions(Text, {\n            font: DEFAULT_FONT,\n            color: BLACK\n        });\n        function rectToBox(rect) {\n            var origin = rect.origin;\n            var bottomRight = rect.bottomRight();\n            return new Box(origin.x, origin.y, bottomRight.x, bottomRight.y);\n        }\n        var ROWS_SPLIT_REGEX = /\\n/m;\n        var TextBox = BoxElement.extend({\n            init: function (content, options, data) {\n                BoxElement.fn.init.call(this, options);\n                this.content = content;\n                this.data = data;\n                this._initContainer();\n                if (this.options._autoReflow !== false) {\n                    this.reflow(new Box());\n                }\n            },\n            _initContainer: function () {\n                var options = this.options;\n                var rows = String(this.content).split(ROWS_SPLIT_REGEX);\n                var floatElement = new FloatElement({\n                    vertical: true,\n                    align: options.align,\n                    wrap: false\n                });\n                var textOptions = deepExtend({}, options, {\n                    opacity: 1,\n                    animation: null\n                });\n                this.container = floatElement;\n                this.append(floatElement);\n                for (var rowIdx = 0; rowIdx < rows.length; rowIdx++) {\n                    var text = new Text(rows[rowIdx].trim(), textOptions);\n                    floatElement.append(text);\n                }\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var visualFn = options.visual;\n                this.container.options.align = options.align;\n                if (visualFn && !this._boxReflow) {\n                    var visualBox = targetBox;\n                    if (!visualBox.hasSize()) {\n                        this._boxReflow = true;\n                        this.reflow(visualBox);\n                        this._boxReflow = false;\n                        visualBox = this.box;\n                    }\n                    var visual = this.visual = visualFn(this.visualContext(visualBox));\n                    if (visual) {\n                        visualBox = rectToBox(visual.clippedBBox() || new Rect());\n                        visual.options.zIndex = options.zIndex;\n                    }\n                    this.box = this.contentBox = this.paddingBox = visualBox;\n                } else {\n                    BoxElement.fn.reflow.call(this, targetBox);\n                    if (options.rotation) {\n                        var margin = getSpacing(options.margin);\n                        var box = this.box.unpad(margin);\n                        this.targetBox = targetBox;\n                        this.normalBox = box.clone();\n                        box = this.rotate();\n                        box.translate(margin.left - margin.right, margin.top - margin.bottom);\n                        this.rotatedBox = box.clone();\n                        box.pad(margin);\n                    }\n                }\n            },\n            createVisual: function () {\n                var options = this.options;\n                this.visual = new Group({\n                    transform: this.rotationTransform(),\n                    zIndex: options.zIndex,\n                    noclip: options.noclip\n                });\n                if (this.hasBox()) {\n                    var box = Path.fromRect(this.paddingBox.toRect(), this.visualStyle());\n                    this.visual.append(box);\n                }\n            },\n            renderVisual: function () {\n                if (!this.options.visible) {\n                    return;\n                }\n                if (this.options.visual) {\n                    var visual = this.visual;\n                    if (visual && !defined(visual.options.noclip)) {\n                        visual.options.noclip = this.options.noclip;\n                    }\n                    this.addVisual();\n                    this.createAnimation();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            visualContext: function (targetBox) {\n                var this$1 = this;\n                var context = {\n                    text: this.content,\n                    rect: targetBox.toRect(),\n                    sender: this.getSender(),\n                    options: this.options,\n                    createVisual: function () {\n                        this$1._boxReflow = true;\n                        this$1.reflow(targetBox);\n                        this$1._boxReflow = false;\n                        return this$1.getDefaultVisual();\n                    }\n                };\n                if (this.data) {\n                    $.extend(context, this.data);\n                }\n                return context;\n            },\n            getDefaultVisual: function () {\n                this.createVisual();\n                this.renderChildren();\n                var visual = this.visual;\n                delete this.visual;\n                return visual;\n            },\n            rotate: function () {\n                var options = this.options;\n                this.box.rotate(options.rotation);\n                this.align(this.targetBox, X, options.align);\n                this.align(this.targetBox, Y, options.vAlign);\n                return this.box;\n            },\n            rotationTransform: function () {\n                var rotation = this.options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                var ref = this.normalBox.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var boxCenter = this.rotatedBox.center();\n                return geometryTransform().translate(boxCenter.x - cx, boxCenter.y - cy).rotate(rotation, [\n                    cx,\n                    cy\n                ]);\n            }\n        });\n        var Title = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.append(new TextBox(this.options.text, $.extend({}, this.options, { vAlign: this.options.position })));\n            },\n            reflow: function (targetBox) {\n                ChartElement.fn.reflow.call(this, targetBox);\n                this.box.snapTo(targetBox, X);\n            }\n        });\n        Title.buildTitle = function (options, parent, defaultOptions) {\n            var titleOptions = options;\n            if (typeof options === 'string') {\n                titleOptions = { text: options };\n            }\n            titleOptions = $.extend({ visible: true }, defaultOptions, titleOptions);\n            var title;\n            if (titleOptions && titleOptions.visible && titleOptions.text) {\n                title = new Title(titleOptions);\n                parent.append(title);\n            }\n            return title;\n        };\n        setDefaultOptions(Title, {\n            color: BLACK,\n            position: TOP,\n            align: CENTER,\n            margin: getSpacing(5),\n            padding: getSpacing(5)\n        });\n        var AxisLabel = TextBox.extend({\n            init: function (value, text, index, dataItem, options) {\n                TextBox.fn.init.call(this, text, options);\n                this.text = text;\n                this.value = value;\n                this.index = index;\n                this.dataItem = dataItem;\n                this.reflow(new Box());\n            },\n            visualContext: function (targetBox) {\n                var context = TextBox.fn.visualContext.call(this, targetBox);\n                context.value = this.value;\n                context.dataItem = this.dataItem;\n                context.format = this.options.format;\n                context.culture = this.options.culture;\n                return context;\n            },\n            click: function (widget, e) {\n                widget.trigger(AXIS_LABEL_CLICK, {\n                    element: eventElement(e),\n                    value: this.value,\n                    text: this.text,\n                    index: this.index,\n                    dataItem: this.dataItem,\n                    axis: this.parent.options\n                });\n            },\n            rotate: function () {\n                if (this.options.alignRotation !== CENTER) {\n                    var box = this.normalBox.toRect();\n                    var transform = this.rotationTransform();\n                    this.box = rectToBox(box.bbox(transform.matrix()));\n                } else {\n                    TextBox.fn.rotate.call(this);\n                }\n                return this.box;\n            },\n            rotationTransform: function () {\n                var options = this.options;\n                var rotation = options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                if (options.alignRotation === CENTER) {\n                    return TextBox.fn.rotationTransform.call(this);\n                }\n                var rotationMatrix = geometryTransform().rotate(rotation).matrix();\n                var box = this.normalBox.toRect();\n                var rect = this.targetBox.toRect();\n                var rotationOrigin = options.rotationOrigin || TOP;\n                var alignAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? X : Y;\n                var distanceAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? Y : X;\n                var axisAnchor = rotationOrigin === TOP || rotationOrigin === LEFT ? rect.origin : rect.bottomRight();\n                var topLeft = box.topLeft().transformCopy(rotationMatrix);\n                var topRight = box.topRight().transformCopy(rotationMatrix);\n                var bottomRight = box.bottomRight().transformCopy(rotationMatrix);\n                var bottomLeft = box.bottomLeft().transformCopy(rotationMatrix);\n                var rotatedBox = Rect.fromPoints(topLeft, topRight, bottomRight, bottomLeft);\n                var translate = {};\n                translate[distanceAxis] = rect.origin[distanceAxis] - rotatedBox.origin[distanceAxis];\n                var distanceLeft = Math.abs(topLeft[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var distanceRight = Math.abs(topRight[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var alignStart, alignEnd;\n                if (round(distanceLeft, DEFAULT_PRECISION) === round(distanceRight, DEFAULT_PRECISION)) {\n                    alignStart = topLeft;\n                    alignEnd = topRight;\n                } else if (distanceRight < distanceLeft) {\n                    alignStart = topRight;\n                    alignEnd = bottomRight;\n                } else {\n                    alignStart = topLeft;\n                    alignEnd = bottomLeft;\n                }\n                var alignCenter = alignStart[alignAxis] + (alignEnd[alignAxis] - alignStart[alignAxis]) / 2;\n                translate[alignAxis] = rect.center()[alignAxis] - alignCenter;\n                return geometryTransform().translate(translate.x, translate.y).rotate(rotation);\n            }\n        });\n        setDefaultOptions(AxisLabel, { _autoReflow: false });\n        var DEFAULT_ICON_SIZE = 7;\n        var DEFAULT_LABEL_COLOR = '#fff';\n        var Note = BoxElement.extend({\n            init: function (fields, options, chartService) {\n                BoxElement.fn.init.call(this, options);\n                this.fields = fields;\n                this.chartService = chartService;\n                this.render();\n            },\n            hide: function () {\n                this.options.visible = false;\n            },\n            show: function () {\n                this.options.visible = true;\n            },\n            render: function () {\n                var this$1 = this;\n                var options = this.options;\n                if (options.visible) {\n                    var label = options.label;\n                    var icon = options.icon;\n                    var box = new Box();\n                    var childAlias = function () {\n                        return this$1;\n                    };\n                    var size = icon.size;\n                    var text = this.fields.text;\n                    var width, height;\n                    if (defined(label) && label.visible) {\n                        var noteTemplate = getTemplate(label);\n                        if (noteTemplate) {\n                            text = noteTemplate(this.fields);\n                        } else if (label.format) {\n                            text = this.chartService.format.auto(label.format, text);\n                        }\n                        if (!label.color) {\n                            label.color = label.position === INSIDE ? DEFAULT_LABEL_COLOR : icon.background;\n                        }\n                        this.label = new TextBox(text, deepExtend({}, label));\n                        this.label.aliasFor = childAlias;\n                        if (label.position === INSIDE && !defined(size)) {\n                            if (icon.type === CIRCLE) {\n                                size = Math.max(this.label.box.width(), this.label.box.height());\n                            } else {\n                                width = this.label.box.width();\n                                height = this.label.box.height();\n                            }\n                            box.wrap(this.label.box);\n                        }\n                    }\n                    icon.width = width || size || DEFAULT_ICON_SIZE;\n                    icon.height = height || size || DEFAULT_ICON_SIZE;\n                    var marker = new ShapeElement(deepExtend({}, icon));\n                    marker.aliasFor = childAlias;\n                    this.marker = marker;\n                    this.append(marker);\n                    if (this.label) {\n                        this.append(this.label);\n                    }\n                    marker.reflow(new Box());\n                    this.wrapperBox = box.wrap(marker.box);\n                }\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var marker = ref.marker;\n                var wrapperBox = ref.wrapperBox;\n                var center = targetBox.center();\n                var length = options.line.length;\n                var position = options.position;\n                if (options.visible) {\n                    var lineStart, box, contentBox;\n                    if (inArray(position, [\n                            LEFT,\n                            RIGHT\n                        ])) {\n                        if (position === LEFT) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(-length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x1,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x2,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x2,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x1,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    } else {\n                        if (position === BOTTOM) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y2\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y1\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, -length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y1\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y2\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    }\n                    if (marker) {\n                        marker.reflow(contentBox);\n                    }\n                    if (label) {\n                        label.reflow(contentBox);\n                        if (marker) {\n                            if (options.label.position === OUTSIDE) {\n                                label.box.alignTo(marker.box, position);\n                            }\n                            label.reflow(label.box);\n                        }\n                    }\n                    this.contentBox = contentBox;\n                    this.targetBox = targetBox;\n                    this.box = box || contentBox;\n                }\n            },\n            createVisual: function () {\n                BoxElement.fn.createVisual.call(this);\n                this.visual.options.noclip = this.options.noclip;\n                if (this.options.visible) {\n                    this.createLine();\n                }\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (options.visible && customVisual) {\n                    this.visual = customVisual($.extend(this.fields, {\n                        sender: this.getSender(),\n                        rect: this.targetBox.toRect(),\n                        options: {\n                            background: options.background,\n                            border: options.background,\n                            icon: options.icon,\n                            label: options.label,\n                            line: options.line,\n                            position: options.position,\n                            visible: options.visible\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    }));\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            createLine: function () {\n                var options = this.options.line;\n                if (this.linePoints) {\n                    var path = Path.fromPoints(this.linePoints, {\n                        stroke: {\n                            color: options.color,\n                            width: options.width,\n                            dashType: options.dashType\n                        }\n                    });\n                    alignPathToPixel(path);\n                    this.visual.append(path);\n                }\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_CLICK, args)) {\n                    e.preventDefault();\n                }\n            },\n            over: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_HOVER, args)) {\n                    e.preventDefault();\n                }\n            },\n            out: function (widget, e) {\n                var args = this.eventArgs(e);\n                widget.trigger(NOTE_LEAVE, args);\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return $.extend(this.fields, {\n                    element: eventElement(e),\n                    text: defined(options.label) ? options.label.text : '',\n                    visual: this.visual\n                });\n            }\n        });\n        setDefaultOptions(Note, {\n            icon: {\n                visible: true,\n                type: CIRCLE\n            },\n            label: {\n                position: INSIDE,\n                visible: true,\n                align: CENTER,\n                vAlign: CENTER\n            },\n            line: { visible: true },\n            visible: true,\n            position: TOP,\n            zIndex: 2\n        });\n        function createAxisTick(options, tickOptions) {\n            var tickX = options.tickX;\n            var tickY = options.tickY;\n            var position = options.position;\n            var tick = new Path({\n                stroke: {\n                    width: tickOptions.width,\n                    color: tickOptions.color\n                }\n            });\n            if (options.vertical) {\n                tick.moveTo(tickX, position).lineTo(tickX + tickOptions.size, position);\n            } else {\n                tick.moveTo(position, tickY).lineTo(position, tickY + tickOptions.size);\n            }\n            alignPathToPixel(tick);\n            return tick;\n        }\n        function createAxisGridLine(options, gridLine) {\n            var lineStart = options.lineStart;\n            var lineEnd = options.lineEnd;\n            var position = options.position;\n            var line = new Path({\n                stroke: {\n                    width: gridLine.width,\n                    color: gridLine.color,\n                    dashType: gridLine.dashType\n                }\n            });\n            if (options.vertical) {\n                line.moveTo(lineStart, position).lineTo(lineEnd, position);\n            } else {\n                line.moveTo(position, lineStart).lineTo(position, lineEnd);\n            }\n            alignPathToPixel(line);\n            return line;\n        }\n        var Axis = ChartElement.extend({\n            init: function (options, chartService) {\n                if (chartService === void 0) {\n                    chartService = new ChartService();\n                }\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!this.options.visible) {\n                    this.options = deepExtend({}, this.options, {\n                        labels: { visible: false },\n                        line: { visible: false },\n                        margin: 0,\n                        majorTickSize: 0,\n                        minorTickSize: 0\n                    });\n                }\n                this.options.minorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.minorTickType !== NONE\n                }, this.options.minorTicks, {\n                    size: this.options.minorTickSize,\n                    align: this.options.minorTickType\n                });\n                this.options.majorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.majorTickType !== NONE\n                }, this.options.majorTicks, {\n                    size: this.options.majorTickSize,\n                    align: this.options.majorTickType\n                });\n                this.initFields();\n                if (!this.options._deferLabels) {\n                    this.createLabels();\n                }\n                this.createTitle();\n                this.createNotes();\n            },\n            initFields: function () {\n            },\n            labelsRange: function () {\n                return {\n                    min: this.options.labels.skip,\n                    max: this.labelsCount()\n                };\n            },\n            normalizeLabelRotation: function (labelOptions) {\n                var rotation = labelOptions.rotation;\n                if (isObject(rotation)) {\n                    labelOptions.alignRotation = rotation.align;\n                    labelOptions.rotation = rotation.angle;\n                }\n            },\n            createLabels: function () {\n                var this$1 = this;\n                var options = this.options;\n                var align = options.vertical ? RIGHT : CENTER;\n                var labelOptions = deepExtend({}, options.labels, {\n                    align: align,\n                    zIndex: options.zIndex\n                });\n                var step = Math.max(1, labelOptions.step);\n                this.clearLabels();\n                if (labelOptions.visible) {\n                    this.normalizeLabelRotation(labelOptions);\n                    if (labelOptions.rotation === 'auto') {\n                        labelOptions.rotation = 0;\n                        options.autoRotateLabels = true;\n                    }\n                    var range = this.labelsRange();\n                    for (var idx = range.min; idx < range.max; idx += step) {\n                        var labelContext = {\n                            index: idx,\n                            count: range.max\n                        };\n                        var label = this$1.createAxisLabel(idx, labelOptions, labelContext);\n                        if (label) {\n                            this$1.append(label);\n                            this$1.labels.push(label);\n                        }\n                    }\n                }\n            },\n            clearLabels: function () {\n                this.children = grep(this.children, function (child) {\n                    return !(child instanceof AxisLabel);\n                });\n                this.labels = [];\n            },\n            clearTitle: function () {\n                var this$1 = this;\n                if (this.title) {\n                    this.children = grep(this.children, function (child) {\n                        return child !== this$1.title;\n                    });\n                    this.title = undefined;\n                }\n            },\n            clear: function () {\n                this.clearLabels();\n                this.clearTitle();\n            },\n            lineBox: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var axisX = mirror ? box.x1 : box.x2;\n                var axisY = mirror ? box.y2 : box.y1;\n                var lineWidth = options.line.width || 0;\n                return vertical ? new Box(axisX, box.y1, axisX, box.y2 - lineWidth) : new Box(box.x1, axisY, box.x2 - lineWidth, axisY);\n            },\n            createTitle: function () {\n                var options = this.options;\n                var titleOptions = deepExtend({\n                    rotation: options.vertical ? -90 : 0,\n                    text: '',\n                    zIndex: 1,\n                    visualSize: true\n                }, options.title);\n                if (titleOptions.visible && titleOptions.text) {\n                    var title = new TextBox(titleOptions.text, titleOptions);\n                    this.append(title);\n                    this.title = title;\n                }\n            },\n            createNotes: function () {\n                var this$1 = this;\n                var options = this.options;\n                var notes = options.notes;\n                var items = notes.data || [];\n                this.notes = [];\n                for (var i = 0; i < items.length; i++) {\n                    var item = deepExtend({}, notes, items[i]);\n                    item.value = this$1.parseNoteValue(item.value);\n                    var note = new Note({\n                        value: item.value,\n                        text: item.label.text,\n                        dataItem: item\n                    }, item, this$1.chartService);\n                    if (note.options.visible) {\n                        if (defined(note.options.position)) {\n                            if (options.vertical && !inArray(note.options.position, [\n                                    LEFT,\n                                    RIGHT\n                                ])) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else if (!options.vertical && !inArray(note.options.position, [\n                                    TOP,\n                                    BOTTOM\n                                ])) {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        } else {\n                            if (options.vertical) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        }\n                        this$1.append(note);\n                        this$1.notes.push(note);\n                    }\n                }\n            },\n            parseNoteValue: function (value) {\n                return value;\n            },\n            renderVisual: function () {\n                ChartElement.fn.renderVisual.call(this);\n                this.createPlotBands();\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this.createBackground();\n                this.createLine();\n            },\n            gridLinesVisual: function () {\n                var gridLines = this._gridLines;\n                if (!gridLines) {\n                    gridLines = this._gridLines = new Group({ zIndex: -2 });\n                    this.appendVisual(this._gridLines);\n                }\n                return gridLines;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var mirror = options.labels.mirror;\n                var majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n                var tickLineOptions = { vertical: options.vertical };\n                function render(tickPositions, tickOptions, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, tickOptions.step);\n                    if (tickOptions.visible) {\n                        for (var i = tickOptions.skip; i < count; i += step) {\n                            if (defined(skipUnit) && i % skipUnit === 0) {\n                                continue;\n                            }\n                            tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                            tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                            tickLineOptions.position = tickPositions[i];\n                            lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), options.majorTicks);\n                render(this.getMinorTickPositions(), options.minorTicks, majorUnit / options.minorUnit);\n            },\n            createLine: function () {\n                var options = this.options;\n                var line = options.line;\n                var lineBox = this.lineBox();\n                if (line.width > 0 && line.visible) {\n                    var path = new Path({\n                        stroke: {\n                            width: line.width,\n                            color: line.color,\n                            dashType: line.dashType\n                        }\n                    });\n                    path.moveTo(lineBox.x1, lineBox.y1).lineTo(lineBox.x2, lineBox.y2);\n                    if (options._alignLines) {\n                        alignPathToPixel(path);\n                    }\n                    var group = this._lineGroup = new Group();\n                    group.append(path);\n                    this.visual.append(group);\n                    this.createTicks(group);\n                }\n            },\n            getActualTickSize: function () {\n                var options = this.options;\n                var tickSize = 0;\n                if (options.majorTicks.visible && options.minorTicks.visible) {\n                    tickSize = Math.max(options.majorTicks.size, options.minorTicks.size);\n                } else if (options.majorTicks.visible) {\n                    tickSize = options.majorTicks.size;\n                } else if (options.minorTicks.visible) {\n                    tickSize = options.minorTicks.size;\n                }\n                return tickSize;\n            },\n            createBackground: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var background = options.background;\n                if (background) {\n                    this._backgroundPath = Path.fromRect(box.toRect(), {\n                        fill: { color: background },\n                        stroke: null\n                    });\n                    this.visual.append(this._backgroundPath);\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var options = this.options;\n                var plotBands = options.plotBands || [];\n                var vertical = options.vertical;\n                var plotArea = this.plotArea;\n                if (plotBands.length === 0) {\n                    return;\n                }\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                var altAxis = grep(this.pane.axes, function (axis) {\n                    return axis.options.vertical !== this$1.options.vertical;\n                })[0];\n                for (var idx = 0; idx < plotBands.length; idx++) {\n                    var item = plotBands[idx];\n                    var slotX = void 0, slotY = void 0;\n                    var labelOptions = item.label;\n                    var label = void 0;\n                    if (vertical) {\n                        slotX = (altAxis || plotArea.axisX).lineBox();\n                        slotY = this$1.getSlot(item.from, item.to, true);\n                    } else {\n                        slotX = this$1.getSlot(item.from, item.to, true);\n                        slotY = (altAxis || plotArea.axisY).lineBox();\n                    }\n                    if (labelOptions) {\n                        labelOptions.vAlign = labelOptions.position || LEFT;\n                        label = this$1.createPlotBandLabel(labelOptions, item, new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2));\n                    }\n                    if (slotX.width() !== 0 && slotY.height() !== 0) {\n                        var bandRect = new Rect([\n                            slotX.x1,\n                            slotY.y1\n                        ], [\n                            slotX.width(),\n                            slotY.height()\n                        ]);\n                        var path = Path.fromRect(bandRect, {\n                            fill: {\n                                color: item.color,\n                                opacity: item.opacity\n                            },\n                            stroke: null\n                        });\n                        group.append(path);\n                        if (label) {\n                            group.append(label);\n                        }\n                    }\n                }\n                this.appendVisual(group);\n            },\n            createPlotBandLabel: function (label, item, box) {\n                if (label.visible === false) {\n                    return null;\n                }\n                var text = label.text;\n                var textbox;\n                if (defined(label) && label.visible) {\n                    var labelTemplate = getTemplate(label);\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: text,\n                            item: item\n                        });\n                    } else if (label.format) {\n                        text = this.chartService.format.auto(label.format, text);\n                    }\n                    if (!label.color) {\n                        label.color = this.options.labels.color;\n                    }\n                }\n                textbox = new TextBox(text, label);\n                textbox.reflow(box);\n                textbox.renderVisual();\n                return textbox.visual;\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var minorUnit = options.minorUnit;\n                var vertical = options.vertical;\n                var axisLineVisible = altAxis.options.line.visible;\n                var majorUnit = majorGridLines.visible ? options.majorUnit : 0;\n                var lineBox = altAxis.lineBox();\n                var linePos = lineBox[vertical ? 'y1' : 'x1'];\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPositions, gridLine, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, gridLine.step);\n                    if (gridLine.visible) {\n                        for (var i = gridLine.skip; i < count; i += step) {\n                            var pos = round(tickPositions[i]);\n                            if (!inArray(pos, majorTicks)) {\n                                if (i % skipUnit !== 0 && (!axisLineVisible || linePos !== pos)) {\n                                    lineOptions.position = pos;\n                                    container.append(createAxisGridLine(lineOptions, gridLine));\n                                    majorTicks.push(pos);\n                                }\n                            }\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), majorGridLines);\n                render(this.getMinorTickPositions(), minorGridLines, majorUnit / minorUnit);\n                return container.children;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var title = ref.title;\n                var vertical = options.vertical;\n                var count = labels.length;\n                var sizeFn = vertical ? WIDTH : HEIGHT;\n                var titleSize = title ? title.box[sizeFn]() : 0;\n                var space = this.getActualTickSize() + options.margin + titleSize;\n                var rootBox = (this.getRoot() || {}).box || box;\n                var boxSize = rootBox[sizeFn]();\n                var maxLabelSize = 0;\n                for (var i = 0; i < count; i++) {\n                    var labelSize = labels[i].box[sizeFn]();\n                    if (labelSize + space <= boxSize) {\n                        maxLabelSize = Math.max(maxLabelSize, labelSize);\n                    }\n                }\n                if (vertical) {\n                    this.box = new Box(box.x1, box.y1, box.x1 + maxLabelSize + space, box.y2);\n                } else {\n                    this.box = new Box(box.x1, box.y1, box.x2, box.y1 + maxLabelSize + space);\n                }\n                this.arrangeTitle();\n                this.arrangeLabels();\n                this.arrangeNotes();\n            },\n            getLabelsTickPositions: function () {\n                return this.getMajorTickPositions();\n            },\n            labelTickIndex: function (label) {\n                return label.index;\n            },\n            arrangeLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var labelsBetweenTicks = this.labelsBetweenTicks();\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var tickPositions = this.getLabelsTickPositions();\n                for (var idx = 0; idx < labels.length; idx++) {\n                    var label = labels[idx];\n                    var tickIx = this$1.labelTickIndex(label);\n                    var labelSize = vertical ? label.box.height() : label.box.width();\n                    var firstTickPosition = tickPositions[tickIx];\n                    var nextTickPosition = tickPositions[tickIx + 1];\n                    var positionStart = void 0, positionEnd = void 0;\n                    if (vertical) {\n                        if (labelsBetweenTicks) {\n                            var middle = firstTickPosition + (nextTickPosition - firstTickPosition) / 2;\n                            positionStart = middle - labelSize / 2;\n                        } else {\n                            positionStart = firstTickPosition - labelSize / 2;\n                        }\n                        positionEnd = positionStart;\n                    } else {\n                        if (labelsBetweenTicks) {\n                            positionStart = firstTickPosition;\n                            positionEnd = nextTickPosition;\n                        } else {\n                            positionStart = firstTickPosition - labelSize / 2;\n                            positionEnd = positionStart + labelSize;\n                        }\n                    }\n                    this$1.positionLabel(label, mirror, positionStart, positionEnd);\n                }\n            },\n            positionLabel: function (label, mirror, positionStart, positionEnd) {\n                if (positionEnd === void 0) {\n                    positionEnd = positionStart;\n                }\n                var options = this.options;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var labelOffset = this.getActualTickSize() + options.margin;\n                var labelBox;\n                if (vertical) {\n                    var labelX = lineBox.x2;\n                    if (mirror) {\n                        labelX += labelOffset;\n                        label.options.rotationOrigin = LEFT;\n                    } else {\n                        labelX -= labelOffset + label.box.width();\n                        label.options.rotationOrigin = RIGHT;\n                    }\n                    labelBox = label.box.move(labelX, positionStart);\n                } else {\n                    var labelY = lineBox.y1;\n                    if (mirror) {\n                        labelY -= labelOffset + label.box.height();\n                        label.options.rotationOrigin = BOTTOM;\n                    } else {\n                        labelY += labelOffset;\n                        label.options.rotationOrigin = TOP;\n                    }\n                    labelBox = new Box(positionStart, labelY, positionEnd, labelY + label.box.height());\n                }\n                label.reflow(labelBox);\n            },\n            autoRotateLabelAngle: function (labelBox, slotWidth) {\n                if (labelBox.width() < slotWidth) {\n                    return 0;\n                }\n                if (labelBox.height() > slotWidth) {\n                    return -90;\n                }\n                return -45;\n            },\n            autoRotateLabels: function () {\n                var this$1 = this;\n                if (!this.options.autoRotateLabels || this.options.vertical) {\n                    return false;\n                }\n                var tickPositions = this.getMajorTickPositions();\n                var labels = this.labels;\n                var limit = Math.min(labels.length, tickPositions.length - 1);\n                var angle = 0;\n                for (var idx = 0; idx < limit; idx++) {\n                    var width = Math.abs(tickPositions[idx + 1] - tickPositions[idx]);\n                    var labelBox = labels[idx].box;\n                    var labelAngle = this$1.autoRotateLabelAngle(labelBox, width);\n                    if (labelAngle !== 0) {\n                        angle = labelAngle;\n                    }\n                    if (angle === -90) {\n                        break;\n                    }\n                }\n                if (angle !== 0) {\n                    for (var idx$1 = 0; idx$1 < labels.length; idx$1++) {\n                        labels[idx$1].options.rotation = angle;\n                        labels[idx$1].reflow(new Box());\n                    }\n                    return true;\n                }\n            },\n            arrangeTitle: function () {\n                var ref = this;\n                var options = ref.options;\n                var title = ref.title;\n                var mirror = options.labels.mirror;\n                var vertical = options.vertical;\n                if (title) {\n                    if (vertical) {\n                        title.options.align = mirror ? RIGHT : LEFT;\n                        title.options.vAlign = title.options.position;\n                    } else {\n                        title.options.align = title.options.position;\n                        title.options.vAlign = mirror ? TOP : BOTTOM;\n                    }\n                    title.reflow(this.box);\n                }\n            },\n            arrangeNotes: function () {\n                var this$1 = this;\n                for (var idx = 0; idx < this.notes.length; idx++) {\n                    var item = this$1.notes[idx];\n                    var value = item.options.value;\n                    var slot = void 0;\n                    if (defined(value)) {\n                        if (this$1.shouldRenderNote(value)) {\n                            item.show();\n                        } else {\n                            item.hide();\n                        }\n                        slot = this$1.noteSlot(value);\n                    } else {\n                        item.hide();\n                    }\n                    item.reflow(slot || this$1.lineBox());\n                }\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            alignTo: function (secondAxis) {\n                var lineBox = secondAxis.lineBox();\n                var vertical = this.options.vertical;\n                var pos = vertical ? Y : X;\n                this.box.snapTo(lineBox, pos);\n                if (vertical) {\n                    this.box.shrink(0, this.lineBox().height() - lineBox.height());\n                } else {\n                    this.box.shrink(this.lineBox().width() - lineBox.width(), 0);\n                }\n                this.box[pos + 1] -= this.lineBox()[pos + 1] - lineBox[pos + 1];\n                this.box[pos + 2] -= this.lineBox()[pos + 2] - lineBox[pos + 2];\n            },\n            axisLabelText: function (value, options, context) {\n                var this$1 = this;\n                var text;\n                var tmpl = getTemplate(options);\n                var defaultText = function () {\n                    if (!options.format) {\n                        return value;\n                    }\n                    return this$1.chartService.format.localeAuto(options.format, [value], options.culture);\n                };\n                if (tmpl) {\n                    var templateContext = $.extend({}, context, {\n                        get text() {\n                            return defaultText();\n                        },\n                        value: value,\n                        format: options.format,\n                        culture: options.culture\n                    });\n                    text = tmpl(templateContext);\n                } else {\n                    text = defaultText();\n                }\n                return text;\n            },\n            slot: function (from, to, limit) {\n                var slot = this.getSlot(from, to, limit);\n                if (slot) {\n                    return slot.toRect();\n                }\n            },\n            contentBox: function () {\n                var box = this.box.clone();\n                var labels = this.labels;\n                if (labels.length) {\n                    var axis = this.options.vertical ? Y : X;\n                    if (this.chartService.isPannable(axis)) {\n                        var offset = this.maxLabelOffset();\n                        box[axis + 1] -= offset.start;\n                        box[axis + 2] += offset.end;\n                    } else {\n                        if (labels[0].options.visible) {\n                            box.wrap(labels[0].box);\n                        }\n                        var lastLabel = labels[labels.length - 1];\n                        if (lastLabel.options.visible) {\n                            box.wrap(lastLabel.box);\n                        }\n                    }\n                }\n                return box;\n            },\n            maxLabelOffset: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var labelsBetweenTicks = this.labelsBetweenTicks();\n                var tickPositions = this.getLabelsTickPositions();\n                var offsetField = vertical ? Y : X;\n                var labels = this.labels;\n                var startPosition = reverse ? 1 : 0;\n                var endPosition = reverse ? 0 : 1;\n                var maxStartOffset = 0;\n                var maxEndOffset = 0;\n                for (var idx = 0; idx < labels.length; idx++) {\n                    var label = labels[idx];\n                    var tickIx = this$1.labelTickIndex(label);\n                    var startTick = void 0, endTick = void 0;\n                    if (labelsBetweenTicks) {\n                        startTick = tickPositions[tickIx + startPosition];\n                        endTick = tickPositions[tickIx + endPosition];\n                    } else {\n                        startTick = endTick = tickPositions[tickIx];\n                    }\n                    maxStartOffset = Math.max(maxStartOffset, startTick - label.box[offsetField + 1]);\n                    maxEndOffset = Math.max(maxEndOffset, label.box[offsetField + 2] - endTick);\n                }\n                return {\n                    start: maxStartOffset,\n                    end: maxEndOffset\n                };\n            },\n            limitRange: function (from, to, min, max, offset) {\n                var options = this.options;\n                if (from < min && offset < 0 && (!defined(options.min) || options.min <= min) || max < to && offset > 0 && (!defined(options.max) || max <= options.max)) {\n                    return null;\n                }\n                if (to < min && offset > 0 || max < from && offset < 0) {\n                    return {\n                        min: from,\n                        max: to\n                    };\n                }\n                var rangeSize = to - from;\n                var minValue = from;\n                var maxValue = to;\n                if (from < min && offset < 0) {\n                    minValue = limitValue(from, min, max);\n                    maxValue = limitValue(from + rangeSize, min + rangeSize, max);\n                } else if (to > max && offset > 0) {\n                    maxValue = limitValue(to, min, max);\n                    minValue = limitValue(to - rangeSize, min, max - rangeSize);\n                }\n                return {\n                    min: minValue,\n                    max: maxValue\n                };\n            },\n            valueRange: function () {\n                return {\n                    min: this.seriesMin,\n                    max: this.seriesMax\n                };\n            },\n            labelsBetweenTicks: function () {\n                return !this.options.justified;\n            },\n            prepareUserOptions: function () {\n            }\n        });\n        setDefaultOptions(Axis, {\n            labels: {\n                visible: true,\n                rotation: 0,\n                mirror: false,\n                step: 1,\n                skip: 0\n            },\n            line: {\n                width: 1,\n                color: BLACK,\n                visible: true\n            },\n            title: {\n                visible: true,\n                position: CENTER\n            },\n            majorTicks: {\n                align: OUTSIDE,\n                size: 4,\n                skip: 0,\n                step: 1\n            },\n            minorTicks: {\n                align: OUTSIDE,\n                size: 3,\n                skip: 0,\n                step: 1\n            },\n            axisCrossingValue: 0,\n            majorTickType: OUTSIDE,\n            minorTickType: NONE,\n            majorGridLines: {\n                skip: 0,\n                step: 1\n            },\n            minorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK,\n                skip: 0,\n                step: 1\n            },\n            margin: 5,\n            visible: true,\n            reverse: false,\n            justified: true,\n            notes: { label: { text: '' } },\n            _alignLines: true,\n            _deferLabels: false\n        });\n        var MILLISECONDS = 'milliseconds';\n        var SECONDS = 'seconds';\n        var MINUTES = 'minutes';\n        var HOURS = 'hours';\n        var DAYS = 'days';\n        var WEEKS = 'weeks';\n        var MONTHS = 'months';\n        var YEARS = 'years';\n        var TIME_PER_MILLISECOND = 1;\n        var TIME_PER_SECOND = 1000;\n        var TIME_PER_MINUTE = 60 * TIME_PER_SECOND;\n        var TIME_PER_HOUR = 60 * TIME_PER_MINUTE;\n        var TIME_PER_DAY = 24 * TIME_PER_HOUR;\n        var TIME_PER_WEEK = 7 * TIME_PER_DAY;\n        var TIME_PER_MONTH = 31 * TIME_PER_DAY;\n        var TIME_PER_YEAR = 365 * TIME_PER_DAY;\n        var TIME_PER_UNIT = {\n            'years': TIME_PER_YEAR,\n            'months': TIME_PER_MONTH,\n            'weeks': TIME_PER_WEEK,\n            'days': TIME_PER_DAY,\n            'hours': TIME_PER_HOUR,\n            'minutes': TIME_PER_MINUTE,\n            'seconds': TIME_PER_SECOND,\n            'milliseconds': TIME_PER_MILLISECOND\n        };\n        function absoluteDateDiff(a, b) {\n            var diff = a.getTime() - b;\n            var offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n            return diff - offsetDiff * TIME_PER_MINUTE;\n        }\n        function addTicks(date, ticks) {\n            return new Date(date.getTime() + ticks);\n        }\n        function toDate(value) {\n            var result;\n            if (value instanceof Date) {\n                result = value;\n            } else if (value) {\n                result = new Date(value);\n            }\n            return result;\n        }\n        function startOfWeek(date, weekStartDay) {\n            if (weekStartDay === void 0) {\n                weekStartDay = 0;\n            }\n            var daysToSubtract = 0;\n            var day = date.getDay();\n            if (!isNaN(day)) {\n                while (day !== weekStartDay) {\n                    if (day === 0) {\n                        day = 6;\n                    } else {\n                        day--;\n                    }\n                    daysToSubtract++;\n                }\n            }\n            return addTicks(date, -daysToSubtract * TIME_PER_DAY);\n        }\n        function adjustDST(date, hours) {\n            if (hours === 0 && date.getHours() === 23) {\n                date.setHours(date.getHours() + 2);\n                return true;\n            }\n            return false;\n        }\n        function addHours(date, hours) {\n            var roundedDate = new Date(date);\n            roundedDate.setMinutes(0, 0, 0);\n            var tzDiff = (date.getTimezoneOffset() - roundedDate.getTimezoneOffset()) * TIME_PER_MINUTE;\n            return addTicks(roundedDate, tzDiff + hours * TIME_PER_HOUR);\n        }\n        function addDuration(dateValue, value, unit, weekStartDay) {\n            var result = dateValue;\n            if (dateValue) {\n                var date = toDate(dateValue);\n                var hours = date.getHours();\n                if (unit === YEARS) {\n                    result = new Date(date.getFullYear() + value, 0, 1);\n                    adjustDST(result, 0);\n                } else if (unit === MONTHS) {\n                    result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n                    adjustDST(result, hours);\n                } else if (unit === WEEKS) {\n                    result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n                    adjustDST(result, hours);\n                } else if (unit === DAYS) {\n                    result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n                    adjustDST(result, hours);\n                } else if (unit === HOURS) {\n                    result = addHours(date, value);\n                } else if (unit === MINUTES) {\n                    result = addTicks(date, value * TIME_PER_MINUTE);\n                    if (result.getSeconds() > 0) {\n                        result.setSeconds(0);\n                    }\n                } else if (unit === SECONDS) {\n                    result = addTicks(date, value * TIME_PER_SECOND);\n                } else if (unit === MILLISECONDS) {\n                    result = addTicks(date, value);\n                }\n                if (unit !== MILLISECONDS && result.getMilliseconds() > 0) {\n                    result.setMilliseconds(0);\n                }\n            }\n            return result;\n        }\n        function floorDate(date, unit, weekStartDay) {\n            return addDuration(toDate(date), 0, unit, weekStartDay);\n        }\n        function ceilDate(dateValue, unit, weekStartDay) {\n            var date = toDate(dateValue);\n            if (date && floorDate(date, unit, weekStartDay).getTime() === date.getTime()) {\n                return date;\n            }\n            return addDuration(date, 1, unit, weekStartDay);\n        }\n        function dateComparer(a, b) {\n            if (a && b) {\n                return a.getTime() - b.getTime();\n            }\n            return -1;\n        }\n        function dateDiff(a, b) {\n            return a.getTime() - b;\n        }\n        function toTime(value) {\n            if (isArray(value)) {\n                var result = [];\n                for (var idx = 0; idx < value.length; idx++) {\n                    result.push(toTime(value[idx]));\n                }\n                return result;\n            } else if (value) {\n                return toDate(value).getTime();\n            }\n        }\n        function dateEquals(a, b) {\n            if (a && b) {\n                return toTime(a) === toTime(b);\n            }\n            return a === b;\n        }\n        function timeIndex(date, start, baseUnit) {\n            return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n        }\n        function dateIndex(value, start, baseUnit, baseUnitStep) {\n            var date = toDate(value);\n            var startDate = toDate(start);\n            var index;\n            if (baseUnit === MONTHS) {\n                index = date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12 + timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n            } else if (baseUnit === YEARS) {\n                index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n            } else if (baseUnit === DAYS || baseUnit === WEEKS) {\n                index = timeIndex(date, startDate, baseUnit);\n            } else {\n                index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n            }\n            return index / baseUnitStep;\n        }\n        function duration(a, b, unit) {\n            var diff;\n            if (unit === YEARS) {\n                diff = b.getFullYear() - a.getFullYear();\n            } else if (unit === MONTHS) {\n                diff = duration(a, b, YEARS) * 12 + b.getMonth() - a.getMonth();\n            } else if (unit === DAYS) {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_DAY);\n            } else {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_UNIT[unit]);\n            }\n            return diff;\n        }\n        function lteDateIndex(date, sortedDates) {\n            var low = 0;\n            var high = sortedDates.length - 1;\n            var index;\n            while (low <= high) {\n                index = Math.floor((low + high) / 2);\n                var currentDate = sortedDates[index];\n                if (currentDate < date) {\n                    low = index + 1;\n                    continue;\n                }\n                if (currentDate > date) {\n                    high = index - 1;\n                    continue;\n                }\n                while (dateEquals(sortedDates[index - 1], date)) {\n                    index--;\n                }\n                return index;\n            }\n            if (sortedDates[index] <= date) {\n                return index;\n            }\n            return index - 1;\n        }\n        function parseDate(intlService, date) {\n            var result;\n            if (isString(date)) {\n                result = intlService.parseDate(date) || toDate(date);\n            } else {\n                result = toDate(date);\n            }\n            return result;\n        }\n        function parseDates(intlService, dates) {\n            if (isArray(dates)) {\n                var result = [];\n                for (var idx = 0; idx < dates.length; idx++) {\n                    result.push(parseDate(intlService, dates[idx]));\n                }\n                return result;\n            }\n            return parseDate(intlService, dates);\n        }\n        function firstDay(options, intlService) {\n            if (isNumber(options.weekStartDay)) {\n                return options.weekStartDay;\n            }\n            if (intlService && intlService.firstDay) {\n                return intlService.firstDay();\n            }\n            return 0;\n        }\n        var MIN_CATEGORY_POINTS_RANGE = 0.01;\n        function indexOf(value, arr) {\n            if (value instanceof Date) {\n                var length = arr.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (dateEquals(arr[idx], value)) {\n                        return idx;\n                    }\n                }\n                return -1;\n            }\n            return arr.indexOf(value);\n        }\n        var CategoryAxis = Axis.extend({\n            initFields: function () {\n                this._ticks = {};\n            },\n            categoriesHash: function () {\n                return '';\n            },\n            clone: function () {\n                var copy = new CategoryAxis($.extend({}, this.options, { categories: this.options.srcCategories }), this.chartService);\n                copy.createLabels();\n                return copy;\n            },\n            initUserOptions: function (options) {\n                var categories = options.categories || [];\n                var definedMin = defined(options.min);\n                var definedMax = defined(options.max);\n                options.srcCategories = options.categories = categories;\n                if ((definedMin || definedMax) && categories.length) {\n                    var min = definedMin ? Math.floor(options.min) : 0;\n                    var max;\n                    if (definedMax) {\n                        max = options.justified ? Math.floor(options.max) + 1 : Math.ceil(options.max);\n                    } else {\n                        max = categories.length;\n                    }\n                    options.categories = options.categories.slice(min, max);\n                }\n                return options;\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var length = options.categories.length || 1;\n                var min = isNumber(options.min) ? options.min % 1 : 0;\n                var max;\n                if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n                    max = length - (1 - options.max % 1);\n                } else {\n                    max = length - (options.justified ? 1 : 0);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            totalRangeIndices: function (limit) {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.max;\n                } else if (isNumber(options.min)) {\n                    max = min + options.categories.length;\n                } else {\n                    max = this.totalRange().max || 1;\n                }\n                if (limit) {\n                    var totalRange = this.totalRange();\n                    min = limitValue(min, 0, totalRange.max);\n                    max = limitValue(max, 0, totalRange.max);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function () {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max = isNumber(options.max) ? options.max : this.totalRange().max;\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            roundedRange: function () {\n                return this.range();\n            },\n            totalRange: function () {\n                var options = this.options;\n                return {\n                    min: 0,\n                    max: Math.max(this._seriesMax || 0, options.srcCategories.length) - (options.justified ? 1 : 0)\n                };\n            },\n            scaleOptions: function () {\n                var ref = this.rangeIndices();\n                var min = ref.min;\n                var max = ref.max;\n                var lineBox = this.lineBox();\n                var size = this.options.vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (max - min || 1);\n                return {\n                    scale: scale * (this.options.reverse ? -1 : 1),\n                    box: lineBox,\n                    min: min,\n                    max: max\n                };\n            },\n            arrangeLabels: function () {\n                Axis.fn.arrangeLabels.call(this);\n                this.hideOutOfRangeLabels();\n            },\n            hideOutOfRangeLabels: function () {\n                var ref = this;\n                var box = ref.box;\n                var labels = ref.labels;\n                if (labels.length > 0) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    var firstLabel = labels[0];\n                    var lastLabel = last(labels);\n                    if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                        firstLabel.options.visible = false;\n                    }\n                    if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                        lastLabel.options.visible = false;\n                    }\n                }\n            },\n            getMajorTickPositions: function () {\n                return this.getTicks().majorTicks;\n            },\n            getMinorTickPositions: function () {\n                return this.getTicks().minorTicks;\n            },\n            getLabelsTickPositions: function () {\n                return this.getTicks().labelTicks;\n            },\n            tickIndices: function (stepSize) {\n                var ref = this.rangeIndices();\n                var min = ref.min;\n                var max = ref.max;\n                var limit = Math.ceil(max);\n                var current = Math.floor(min);\n                var indices = [];\n                while (current <= limit) {\n                    indices.push(current);\n                    current += stepSize;\n                }\n                return indices;\n            },\n            getTickPositions: function (stepSize) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var ref$1 = this.scaleOptions();\n                var scale = ref$1.scale;\n                var box = ref$1.box;\n                var min = ref$1.min;\n                var pos = box[(vertical ? Y : X) + (reverse ? 2 : 1)];\n                var indices = this.tickIndices(stepSize);\n                var positions = [];\n                for (var idx = 0; idx < indices.length; idx++) {\n                    positions.push(pos + round(scale * (indices[idx] - min), COORD_PRECISION));\n                }\n                return positions;\n            },\n            getTicks: function () {\n                var options = this.options;\n                var cache = this._ticks;\n                var range = this.rangeIndices();\n                var lineBox = this.lineBox();\n                var hash = lineBox.getHash() + range.min + ',' + range.max + options.reverse + options.justified;\n                if (cache._hash !== hash) {\n                    var hasMinor = options.minorTicks.visible || options.minorGridLines.visible;\n                    cache._hash = hash;\n                    cache.labelTicks = this.getTickPositions(1);\n                    cache.majorTicks = this.filterOutOfRangePositions(cache.labelTicks, lineBox);\n                    cache.minorTicks = hasMinor ? this.filterOutOfRangePositions(this.getTickPositions(0.5), lineBox) : [];\n                }\n                return cache;\n            },\n            filterOutOfRangePositions: function (positions, lineBox) {\n                if (!positions.length) {\n                    return positions;\n                }\n                var axis = this.options.vertical ? Y : X;\n                var inRange = function (position) {\n                    return lineBox[axis + 1] <= position && position <= lineBox[axis + 2];\n                };\n                var end = positions.length - 1;\n                var startIndex = 0;\n                while (!inRange(positions[startIndex]) && startIndex <= end) {\n                    startIndex++;\n                }\n                var endIndex = end;\n                while (!inRange(positions[endIndex]) && endIndex >= 0) {\n                    endIndex--;\n                }\n                return positions.slice(startIndex, endIndex + 1);\n            },\n            getSlot: function (from, to, limit) {\n                var options = this.options;\n                var reverse = options.reverse;\n                var justified = options.justified;\n                var vertical = options.vertical;\n                var ref = this.scaleOptions();\n                var scale = ref.scale;\n                var box = ref.box;\n                var min = ref.min;\n                var valueAxis = vertical ? Y : X;\n                var lineStart = box[valueAxis + (reverse ? 2 : 1)];\n                var slotBox = box.clone();\n                var singleSlot = !defined(to);\n                var start = valueOrDefault(from, 0);\n                var end = valueOrDefault(to, start);\n                end = Math.max(end - 1, start);\n                end = Math.max(start, end);\n                var p1 = lineStart + (start - min) * scale;\n                var p2 = lineStart + (end + 1 - min) * scale;\n                if (singleSlot && justified) {\n                    p2 = p1;\n                }\n                if (limit) {\n                    p1 = limitValue(p1, box[valueAxis + 1], box[valueAxis + 2]);\n                    p2 = limitValue(p2, box[valueAxis + 1], box[valueAxis + 2]);\n                }\n                slotBox[valueAxis + 1] = reverse ? p2 : p1;\n                slotBox[valueAxis + 2] = reverse ? p1 : p2;\n                return slotBox;\n            },\n            limitSlot: function (slot) {\n                var vertical = this.options.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var limittedSlot = slot.clone();\n                limittedSlot[valueAxis + 1] = limitValue(slot[valueAxis + 1], lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                limittedSlot[valueAxis + 2] = limitValue(slot[valueAxis + 2], lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                return limittedSlot;\n            },\n            slot: function (from, to, limit) {\n                var min = Math.floor(this.options.min || 0);\n                var start = from;\n                var end = to;\n                if (typeof start === 'string') {\n                    start = this.categoryIndex(start);\n                } else if (isNumber(start)) {\n                    start -= min;\n                }\n                if (typeof end === 'string') {\n                    end = this.categoryIndex(end);\n                } else if (isNumber(end)) {\n                    end -= min;\n                }\n                return Axis.fn.slot.call(this, start, end, limit);\n            },\n            pointCategoryIndex: function (point) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var justified = ref.justified;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var ref$1 = this.scaleOptions();\n                var scale = ref$1.scale;\n                var box = ref$1.box;\n                var min = ref$1.min;\n                var max = ref$1.max;\n                var startValue = reverse ? max : min;\n                var lineStart = box[valueAxis + 1];\n                var lineEnd = box[valueAxis + 2];\n                var pos = point[valueAxis];\n                if (pos < lineStart || pos > lineEnd) {\n                    return null;\n                }\n                var value = startValue + (pos - lineStart) / scale;\n                var diff = value % 1;\n                if (justified) {\n                    value = Math.round(value);\n                } else if (diff === 0 && value > 0) {\n                    value--;\n                }\n                return Math.floor(value);\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.options.categories[index];\n            },\n            categoryIndex: function (value) {\n                return this.totalIndex(value) - Math.floor(this.options.min || 0);\n            },\n            categoryAt: function (index, total) {\n                var options = this.options;\n                return (total ? options.srcCategories : options.categories)[index];\n            },\n            categoriesCount: function () {\n                return (this.options.categories || []).length;\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = options.categories.length;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                return {\n                    min: offset,\n                    max: range + offset\n                };\n            },\n            zoomRange: function (rate) {\n                var rangeIndices = this.totalRangeIndices();\n                var ref = this.totalRange();\n                var totalMin = ref.min;\n                var totalMax = ref.max;\n                var min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n                var max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n                if (max - min > 0) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            scaleRange: function (scale) {\n                var range = this.options.categories.length;\n                var delta = scale * range;\n                return {\n                    min: -delta,\n                    max: range + delta\n                };\n            },\n            labelsCount: function () {\n                var labelsRange = this.labelsRange();\n                return labelsRange.max - labelsRange.min;\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var justified = options.justified;\n                var labelOptions = options.labels;\n                var ref = this.totalRangeIndices(true);\n                var min = ref.min;\n                var max = ref.max;\n                var start = Math.floor(min);\n                if (!justified) {\n                    min = Math.floor(min);\n                    max = Math.ceil(max);\n                } else {\n                    min = Math.ceil(min);\n                    max = Math.floor(max);\n                }\n                var skip;\n                if (min > labelOptions.skip) {\n                    skip = labelOptions.skip + labelOptions.step * Math.ceil((min - labelOptions.skip) / labelOptions.step);\n                } else {\n                    skip = labelOptions.skip;\n                }\n                return {\n                    min: skip - start,\n                    max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n                };\n            },\n            createAxisLabel: function (index, labelOptions, labelContext) {\n                var options = this.options;\n                var dataItem = options.dataItems ? options.dataItems[index] : null;\n                var category = valueOrDefault(options.categories[index], '');\n                labelContext.dataItem = dataItem;\n                var text = this.axisLabelText(category, labelOptions, labelContext);\n                return new AxisLabel(category, text, index, dataItem, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.totalRangeIndices();\n                return Math.floor(range.min) <= value && value <= Math.ceil(range.max);\n            },\n            noteSlot: function (value) {\n                var options = this.options;\n                var index = value - Math.floor(options.min || 0);\n                return this.getSlot(index);\n            },\n            arrangeNotes: function () {\n                Axis.fn.arrangeNotes.call(this);\n                this.hideOutOfRangeNotes();\n            },\n            hideOutOfRangeNotes: function () {\n                var ref = this;\n                var notes = ref.notes;\n                var box = ref.box;\n                if (notes && notes.length) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    for (var idx = 0; idx < notes.length; idx++) {\n                        var note = notes[idx];\n                        if (note.box && (end < note.box[valueAxis + 1] || note.box[valueAxis + 2] < start)) {\n                            note.hide();\n                        }\n                    }\n                }\n            },\n            pan: function (delta) {\n                var range = this.totalRangeIndices(true);\n                var ref = this.scaleOptions();\n                var scale = ref.scale;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var totalRange = this.totalRange();\n                var min = range.min + offset;\n                var max = range.max + offset;\n                return this.limitRange(min, max, 0, totalRange.max, offset);\n            },\n            pointsRange: function (start, end) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var range = this.totalRangeIndices(true);\n                var ref$1 = this.scaleOptions();\n                var scale = ref$1.scale;\n                var box = ref$1.box;\n                var lineStart = box[valueAxis + (reverse ? 2 : 1)];\n                var diffStart = start[valueAxis] - lineStart;\n                var diffEnd = end[valueAxis] - lineStart;\n                var min = range.min + diffStart / scale;\n                var max = range.min + diffEnd / scale;\n                var rangeMin = Math.min(min, max);\n                var rangeMax = Math.max(min, max);\n                if (rangeMax - rangeMin >= MIN_CATEGORY_POINTS_RANGE) {\n                    return {\n                        min: rangeMin,\n                        max: rangeMax\n                    };\n                }\n            },\n            valueRange: function () {\n                return this.range();\n            },\n            totalIndex: function (value) {\n                var options = this.options;\n                var index = this._categoriesMap ? this._categoriesMap.get(value) : indexOf(value, options.srcCategories);\n                return index;\n            },\n            currentRangeIndices: function () {\n                var options = this.options;\n                var min = 0;\n                if (isNumber(options.min)) {\n                    min = Math.floor(options.min);\n                }\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.justified ? Math.floor(options.max) : Math.ceil(options.max) - 1;\n                } else {\n                    max = this.totalCount() - 1;\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            mapCategories: function () {\n                if (!this._categoriesMap) {\n                    var map$$1 = this._categoriesMap = new HashMap();\n                    var srcCategories = this.options.srcCategories;\n                    for (var idx = 0; idx < srcCategories.length; idx++) {\n                        map$$1.set(srcCategories[idx], idx);\n                    }\n                }\n            },\n            totalCount: function () {\n                return Math.max(this.options.srcCategories.length, this._seriesMax || 0);\n            }\n        });\n        setDefaultOptions(CategoryAxis, {\n            type: 'category',\n            vertical: false,\n            majorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK\n            },\n            labels: { zIndex: 1 },\n            justified: false,\n            _deferLabels: true\n        });\n        var COORDINATE_LIMIT = 300000;\n        var DateLabelFormats = {\n            milliseconds: 'HH:mm:ss.fff',\n            seconds: 'HH:mm:ss',\n            minutes: 'HH:mm',\n            hours: 'HH:mm',\n            days: 'M/d',\n            weeks: 'M/d',\n            months: 'MMM \\'yy',\n            years: 'yyyy'\n        };\n        var ZERO_THRESHOLD = 0.2;\n        var AUTO = 'auto';\n        var BASE_UNITS = [\n            MILLISECONDS,\n            SECONDS,\n            MINUTES,\n            HOURS,\n            DAYS,\n            WEEKS,\n            MONTHS,\n            YEARS\n        ];\n        var FIT = 'fit';\n        function categoryRange(categories) {\n            var range = categories._range;\n            if (!range) {\n                range = categories._range = sparseArrayLimits(categories);\n                range.min = toDate(range.min);\n                range.max = toDate(range.max);\n            }\n            return range;\n        }\n        var EmptyDateRange = Class.extend({\n            init: function (options) {\n                this.options = options;\n            },\n            displayIndices: function () {\n                return {\n                    min: 0,\n                    max: 1\n                };\n            },\n            displayRange: function () {\n                return {};\n            },\n            total: function () {\n                return {};\n            },\n            valueRange: function () {\n                return {};\n            },\n            valueIndex: function () {\n                return -1;\n            },\n            values: function () {\n                return [];\n            },\n            totalIndex: function () {\n                return -1;\n            },\n            valuesCount: function () {\n                return 0;\n            },\n            totalCount: function () {\n                return 0;\n            },\n            dateAt: function () {\n                return null;\n            }\n        });\n        var DateRange = Class.extend({\n            init: function (start, end, options) {\n                this.options = options;\n                options.baseUnitStep = options.baseUnitStep || 1;\n                var roundToBaseUnit = options.roundToBaseUnit;\n                var justified = options.justified;\n                this.start = addDuration(start, 0, options.baseUnit, options.weekStartDay);\n                var lowerEnd = this.roundToTotalStep(end);\n                var expandEnd = !justified && dateEquals(end, lowerEnd) && !options.justifyEnd;\n                this.end = this.roundToTotalStep(end, !justified, expandEnd ? 1 : 0);\n                var min = options.min || start;\n                this.valueStart = this.roundToTotalStep(min);\n                this.displayStart = roundToBaseUnit ? this.valueStart : min;\n                var max = options.max;\n                if (!max) {\n                    this.valueEnd = lowerEnd;\n                    this.displayEnd = roundToBaseUnit || expandEnd ? this.end : end;\n                } else {\n                    var next = !justified && dateEquals(max, this.roundToTotalStep(max)) ? -1 : 0;\n                    this.valueEnd = this.roundToTotalStep(max, false, next);\n                    this.displayEnd = roundToBaseUnit ? this.roundToTotalStep(max, !justified) : options.max;\n                }\n                if (this.valueEnd < this.valueStart) {\n                    this.valueEnd = this.valueStart;\n                }\n                if (this.displayEnd <= this.displayStart) {\n                    this.displayEnd = this.roundToTotalStep(this.displayStart, false, 1);\n                }\n            },\n            displayRange: function () {\n                return {\n                    min: this.displayStart,\n                    max: this.displayEnd\n                };\n            },\n            displayIndices: function () {\n                if (!this._indices) {\n                    var options = this.options;\n                    var baseUnit = options.baseUnit;\n                    var baseUnitStep = options.baseUnitStep;\n                    var minIdx = dateIndex(this.displayStart, this.valueStart, baseUnit, baseUnitStep);\n                    var maxIdx = dateIndex(this.displayEnd, this.valueStart, baseUnit, baseUnitStep);\n                    this._indices = {\n                        min: minIdx,\n                        max: maxIdx\n                    };\n                }\n                return this._indices;\n            },\n            total: function () {\n                return {\n                    min: this.start,\n                    max: this.end\n                };\n            },\n            totalCount: function () {\n                var last$$1 = this.totalIndex(this.end);\n                return last$$1 + (this.options.justified ? 1 : 0);\n            },\n            valueRange: function () {\n                return {\n                    min: this.valueStart,\n                    max: this.valueEnd\n                };\n            },\n            valueIndex: function (value) {\n                var options = this.options;\n                return Math.floor(dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep));\n            },\n            totalIndex: function (value) {\n                var options = this.options;\n                return Math.floor(dateIndex(value, this.start, options.baseUnit, options.baseUnitStep));\n            },\n            dateIndex: function (value) {\n                var options = this.options;\n                return dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep);\n            },\n            valuesCount: function () {\n                var maxIdx = this.valueIndex(this.valueEnd);\n                return maxIdx + 1;\n            },\n            values: function () {\n                var values = this._values;\n                if (!values) {\n                    var options = this.options;\n                    var range = this.valueRange();\n                    this._values = values = [];\n                    for (var date = range.min; date <= range.max;) {\n                        values.push(date);\n                        date = addDuration(date, options.baseUnitStep, options.baseUnit, options.weekStartDay);\n                    }\n                }\n                return values;\n            },\n            dateAt: function (index, total) {\n                var options = this.options;\n                return addDuration(total ? this.start : this.valueStart, options.baseUnitStep * index, options.baseUnit, options.weekStartDay);\n            },\n            roundToTotalStep: function (value, upper, next) {\n                var ref = this.options;\n                var baseUnit = ref.baseUnit;\n                var baseUnitStep = ref.baseUnitStep;\n                var weekStartDay = ref.weekStartDay;\n                var start = this.start;\n                var step = dateIndex(value, start, baseUnit, baseUnitStep);\n                var roundedStep = upper ? Math.ceil(step) : Math.floor(step);\n                if (next) {\n                    roundedStep += next;\n                }\n                return addDuration(start, roundedStep * baseUnitStep, baseUnit, weekStartDay);\n            }\n        });\n        function autoBaseUnit(options, startUnit, startStep) {\n            var categoryLimits = categoryRange(options.categories);\n            var span = (options.max || categoryLimits.max) - (options.min || categoryLimits.min);\n            var autoBaseUnitSteps = options.autoBaseUnitSteps;\n            var maxDateGroups = options.maxDateGroups;\n            var autoUnit = options.baseUnit === FIT;\n            var autoUnitIx = startUnit ? BASE_UNITS.indexOf(startUnit) : 0;\n            var baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit;\n            var units = span / TIME_PER_UNIT[baseUnit];\n            var totalUnits = units;\n            var unitSteps, step, nextStep;\n            while (!step || units >= maxDateGroups) {\n                unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n                do {\n                    nextStep = unitSteps.shift();\n                } while (nextStep && startUnit === baseUnit && nextStep < startStep);\n                if (nextStep) {\n                    step = nextStep;\n                    units = totalUnits / step;\n                } else if (baseUnit === last(BASE_UNITS)) {\n                    step = Math.ceil(totalUnits / maxDateGroups);\n                    break;\n                } else if (autoUnit) {\n                    baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n                    totalUnits = span / TIME_PER_UNIT[baseUnit];\n                    unitSteps = null;\n                } else {\n                    if (units > maxDateGroups) {\n                        step = Math.ceil(totalUnits / maxDateGroups);\n                    }\n                    break;\n                }\n            }\n            options.baseUnitStep = step;\n            options.baseUnit = baseUnit;\n        }\n        function defaultBaseUnit(options) {\n            var categories = options.categories;\n            var count = defined(categories) ? categories.length : 0;\n            var minDiff = MAX_VALUE;\n            var lastCategory, unit;\n            for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                var category = categories[categoryIx];\n                if (category && lastCategory) {\n                    var diff = absoluteDateDiff(category, lastCategory);\n                    if (diff > 0) {\n                        minDiff = Math.min(minDiff, diff);\n                        if (minDiff >= TIME_PER_YEAR) {\n                            unit = YEARS;\n                        } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                            unit = MONTHS;\n                        } else if (minDiff >= TIME_PER_WEEK) {\n                            unit = WEEKS;\n                        } else if (minDiff >= TIME_PER_DAY) {\n                            unit = DAYS;\n                        } else if (minDiff >= TIME_PER_HOUR) {\n                            unit = HOURS;\n                        } else if (minDiff >= TIME_PER_MINUTE) {\n                            unit = MINUTES;\n                        } else {\n                            unit = SECONDS;\n                        }\n                    }\n                }\n                lastCategory = category;\n            }\n            options.baseUnit = unit || DAYS;\n        }\n        function initUnit(options) {\n            var baseUnit = (options.baseUnit || '').toLowerCase();\n            var useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n            if (useDefault) {\n                defaultBaseUnit(options);\n            }\n            if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n                autoBaseUnit(options);\n            }\n            return options;\n        }\n        var DateCategoryAxis = CategoryAxis.extend({\n            clone: function () {\n                var copy = new DateCategoryAxis($.extend({}, this.options), this.chartService);\n                copy.createLabels();\n                return copy;\n            },\n            categoriesHash: function () {\n                var start = this.dataRange.total().min;\n                return this.options.baseUnit + this.options.baseUnitStep + start;\n            },\n            initUserOptions: function (options) {\n                return options;\n            },\n            initFields: function () {\n                CategoryAxis.fn.initFields.call(this);\n                var chartService = this.chartService;\n                var intlService = chartService.intl;\n                var options = this.options;\n                var categories = options.categories || [];\n                if (!categories._parsed) {\n                    categories = parseDates(intlService, categories);\n                    categories._parsed = true;\n                }\n                options = deepExtend({ roundToBaseUnit: true }, options, {\n                    categories: categories,\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max),\n                    weekStartDay: firstDay(options, intlService)\n                });\n                if (chartService.panning && chartService.isPannable(options.vertical ? Y : X)) {\n                    options.roundToBaseUnit = false;\n                }\n                options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n                options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n                this.options = options;\n                options.srcCategories = categories;\n                if (categories.length > 0) {\n                    var range = categoryRange(categories);\n                    var maxDivisions = options.maxDivisions;\n                    this.dataRange = new DateRange(range.min, range.max, initUnit(options));\n                    if (maxDivisions) {\n                        var dataRange = this.dataRange.displayRange();\n                        var divisionOptions = $.extend({}, options, {\n                            justified: true,\n                            roundToBaseUnit: false,\n                            baseUnit: 'fit',\n                            min: dataRange.min,\n                            max: dataRange.max,\n                            maxDateGroups: maxDivisions\n                        });\n                        var dataRangeOptions = this.dataRange.options;\n                        autoBaseUnit(divisionOptions, dataRangeOptions.baseUnit, dataRangeOptions.baseUnitStep);\n                        this.divisionRange = new DateRange(range.min, range.max, divisionOptions);\n                    } else {\n                        this.divisionRange = this.dataRange;\n                    }\n                } else {\n                    options.baseUnit = options.baseUnit || DAYS;\n                    this.dataRange = this.divisionRange = new EmptyDateRange(options);\n                }\n                this.rangeLabels = [];\n            },\n            tickIndices: function (stepSize) {\n                var ref = this;\n                var dataRange = ref.dataRange;\n                var divisionRange = ref.divisionRange;\n                var valuesCount = divisionRange.valuesCount();\n                if (!this.options.maxDivisions || !valuesCount) {\n                    return CategoryAxis.fn.tickIndices.call(this, stepSize);\n                }\n                var indices = [];\n                var values = divisionRange.values();\n                var offset = 0;\n                if (!this.options.justified) {\n                    values = values.concat(divisionRange.dateAt(valuesCount));\n                    offset = 0.5;\n                }\n                for (var idx = 0; idx < values.length; idx++) {\n                    indices.push(dataRange.dateIndex(values[idx]) + offset);\n                    if (stepSize !== 1 && idx >= 1) {\n                        var last$$1 = indices.length - 1;\n                        indices.splice(idx, 0, indices[last$$1 - 1] + (indices[last$$1] - indices[last$$1 - 1]) * stepSize);\n                    }\n                }\n                return indices;\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                var categories = this.options.categories || [];\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n            },\n            parseNoteValue: function (value) {\n                return parseDate(this.chartService.intl, value);\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / (range.max - range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if (range.min && range.max) {\n                    var from = addTicks(options.min || range.min, offset);\n                    var to = addTicks(options.max || range.max, offset);\n                    range = {\n                        min: addDuration(from, 0, baseUnit, weekStartDay),\n                        max: addDuration(to, 0, baseUnit, weekStartDay)\n                    };\n                }\n                return range;\n            },\n            scaleRange: function (delta) {\n                var rounds = Math.abs(delta);\n                var result = this.range();\n                var from = result.min;\n                var to = result.max;\n                if (from && to) {\n                    while (rounds--) {\n                        var range = dateDiff(from, to);\n                        var step = Math.round(range * 0.1);\n                        if (delta < 0) {\n                            from = addTicks(from, step);\n                            to = addTicks(to, -step);\n                        } else {\n                            from = addTicks(from, -step);\n                            to = addTicks(to, step);\n                        }\n                    }\n                    result = {\n                        min: from,\n                        max: to\n                    };\n                }\n                return result;\n            },\n            labelsRange: function () {\n                return {\n                    min: this.options.labels.skip,\n                    max: this.divisionRange.valuesCount()\n                };\n            },\n            pan: function (delta) {\n                if (this.isEmpty()) {\n                    return null;\n                }\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var ref = this.dataRange.displayRange();\n                var min = ref.min;\n                var max = ref.max;\n                var totalLimits = this.dataRange.total();\n                var scale = size / (max - min);\n                var offset = round(delta / scale, DEFAULT_PRECISION) * (options.reverse ? -1 : 1);\n                var from = addTicks(min, offset);\n                var to = addTicks(max, offset);\n                var panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n                if (panRange) {\n                    panRange.min = toDate(panRange.min);\n                    panRange.max = toDate(panRange.max);\n                    panRange.baseUnit = options.baseUnit;\n                    panRange.baseUnitStep = options.baseUnitStep || 1;\n                    panRange.userSetBaseUnit = options.userSetBaseUnit;\n                    panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n                    return panRange;\n                }\n            },\n            pointsRange: function (start, end) {\n                if (this.isEmpty()) {\n                    return null;\n                }\n                var pointsRange = CategoryAxis.fn.pointsRange.call(this, start, end);\n                var datesRange = this.dataRange.displayRange();\n                var indicesRange = this.dataRange.displayIndices();\n                var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n                var options = this.options;\n                var min = addTicks(datesRange.min, pointsRange.min * scale);\n                var max = addTicks(datesRange.min, pointsRange.max * scale);\n                return {\n                    min: min,\n                    max: max,\n                    baseUnit: options.userSetBaseUnit || options.baseUnit,\n                    baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n                };\n            },\n            zoomRange: function (delta) {\n                if (this.isEmpty()) {\n                    return null;\n                }\n                var options = this.options;\n                var fit = options.userSetBaseUnit === FIT;\n                var totalLimits = this.dataRange.total();\n                var ref = this.dataRange.displayRange();\n                var rangeMin = ref.min;\n                var rangeMax = ref.max;\n                var ref$1 = this.dataRange.options;\n                var weekStartDay = ref$1.weekStartDay;\n                var baseUnit = ref$1.baseUnit;\n                var baseUnitStep = ref$1.baseUnitStep;\n                var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n                var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n                if (fit) {\n                    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n                    var maxDateGroups = options.maxDateGroups;\n                    var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n                    var rangeDiff = dateDiff(rangeMax, rangeMin);\n                    var diff = dateDiff(max, min);\n                    var baseUnitIndex = BASE_UNITS.indexOf(baseUnit);\n                    var autoBaseUnitStep, ticks;\n                    if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n                        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                        min = addTicks(rangeMin, ticks);\n                        max = addTicks(rangeMax, -ticks);\n                    } else if (diff > maxDiff && baseUnit !== YEARS) {\n                        var stepIndex = 0;\n                        do {\n                            baseUnitIndex++;\n                            baseUnit = BASE_UNITS[baseUnitIndex];\n                            stepIndex = 0;\n                            ticks = 2 * TIME_PER_UNIT[baseUnit];\n                            do {\n                                autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                                stepIndex++;\n                            } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n                        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                        if (ticks > 0) {\n                            min = addTicks(rangeMin, -ticks);\n                            max = addTicks(rangeMax, ticks);\n                            min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                            max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                        }\n                    }\n                }\n                if (min < totalLimits.min) {\n                    min = totalLimits.min;\n                }\n                if (max > totalLimits.max) {\n                    max = totalLimits.max;\n                }\n                if (min && max && dateDiff(max, min) > 0) {\n                    return {\n                        min: min,\n                        max: max,\n                        baseUnit: options.userSetBaseUnit || options.baseUnit,\n                        baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n                    };\n                }\n            },\n            range: function () {\n                return this.dataRange.displayRange();\n            },\n            createLabels: function () {\n                CategoryAxis.fn.createLabels.call(this);\n                this.createRangeLabels();\n            },\n            clearLabels: function () {\n                CategoryAxis.fn.clearLabels.call(this);\n                this.rangeLabels = [];\n            },\n            arrangeLabels: function () {\n                this.arrangeRangeLabels();\n                CategoryAxis.fn.arrangeLabels.call(this);\n            },\n            arrangeRangeLabels: function () {\n                var ref = this;\n                var options = ref.options;\n                var rangeLabels = ref.rangeLabels;\n                if (rangeLabels.length === 0) {\n                    return;\n                }\n                var lineBox = this.lineBox();\n                var vertical = options.vertical;\n                var mirror = options.rangeLabels.mirror || options.labels.mirror;\n                var firstLabel = rangeLabels[0];\n                if (firstLabel) {\n                    var position = vertical ? lineBox.y1 - firstLabel.box.height() / 2 : lineBox.x1;\n                    this.positionLabel(firstLabel, mirror, position);\n                }\n                var lastLabel = rangeLabels[1];\n                if (lastLabel) {\n                    var position$1 = vertical ? lineBox.y2 - lastLabel.box.height() / 2 : lineBox.x2;\n                    this.positionLabel(lastLabel, mirror, position$1);\n                }\n            },\n            autoRotateLabels: function () {\n                CategoryAxis.fn.autoRotateLabels.call(this);\n                this.autoRotateRangeLabels();\n            },\n            hideOutOfRangeLabels: function () {\n                CategoryAxis.fn.hideOutOfRangeLabels.call(this);\n                this.hideOverlappingLabels();\n            },\n            hideOverlappingLabels: function () {\n                var ref = this;\n                var rangeLabels = ref.rangeLabels;\n                var labels = ref.labels;\n                if (rangeLabels.length === 0) {\n                    return;\n                }\n                function clip(rangeLabel, label) {\n                    if (!label.options.visible || label.box.overlaps(rangeLabel.box)) {\n                        label.options.visible = false;\n                        return true;\n                    }\n                    return false;\n                }\n                var firstRangeLabel = rangeLabels[0];\n                if (firstRangeLabel && firstRangeLabel.options.visible) {\n                    for (var i = 0; i < labels.length; i++) {\n                        var overlaps = clip(firstRangeLabel, labels[i]);\n                        if (!overlaps) {\n                            break;\n                        }\n                    }\n                }\n                var lastRangeLabel = rangeLabels[1];\n                if (lastRangeLabel && lastRangeLabel.options.visible) {\n                    for (var i$1 = labels.length - 1; i$1 > 0; --i$1) {\n                        var overlaps$1 = clip(lastRangeLabel, labels[i$1]);\n                        if (!overlaps$1) {\n                            break;\n                        }\n                    }\n                }\n            },\n            contentBox: function () {\n                var box = CategoryAxis.fn.contentBox.call(this);\n                var rangeLabels = this.rangeLabels;\n                for (var i = 0; i < rangeLabels.length; i++) {\n                    var label = rangeLabels[i];\n                    if (label.options.visible) {\n                        box.wrap(label.box);\n                    }\n                }\n                return box;\n            },\n            createAxisLabel: function (index, labelOptions, labelContext) {\n                if (labelContext === void 0) {\n                    labelContext = {};\n                }\n                var options = this.options;\n                var dataItem = options.dataItems && !options.maxDivisions ? options.dataItems[index] : null;\n                var date = this.divisionRange.dateAt(index);\n                var unitFormat = labelOptions.dateFormats[this.divisionRange.options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                labelContext.dataItem = dataItem;\n                var text = this.axisLabelText(date, labelOptions, labelContext);\n                if (text) {\n                    return new AxisLabel(date, text, index, dataItem, labelOptions);\n                }\n            },\n            createRangeLabels: function () {\n                var this$1 = this;\n                var ref = this.divisionRange;\n                var displayStart = ref.displayStart;\n                var displayEnd = ref.displayEnd;\n                var options = this.options;\n                var labelOptions = $.extend({}, options.labels, options.rangeLabels, {\n                    align: CENTER,\n                    zIndex: options.zIndex\n                });\n                if (labelOptions.visible !== true) {\n                    return;\n                }\n                this.normalizeLabelRotation(labelOptions);\n                labelOptions.alignRotation = CENTER;\n                if (labelOptions.rotation === 'auto') {\n                    labelOptions.rotation = 0;\n                    options.autoRotateRangeLabels = true;\n                }\n                var unitFormat = labelOptions.dateFormats[this.divisionRange.options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var createLabel = function (index, date, text) {\n                    if (text) {\n                        var label = new AxisLabel(date, text, index, null, labelOptions);\n                        this$1.append(label);\n                        this$1.rangeLabels.push(label);\n                    }\n                };\n                var startText = this.axisLabelText(displayStart, labelOptions, {\n                    index: 0,\n                    count: 2\n                });\n                createLabel(0, displayStart, startText);\n                var endText = this.axisLabelText(displayEnd, labelOptions, {\n                    index: 1,\n                    count: 2\n                });\n                createLabel(1, displayEnd, endText);\n            },\n            autoRotateRangeLabels: function () {\n                var this$1 = this;\n                var labels = this.rangeLabels;\n                if (!this.options.autoRotateRangeLabels || this.options.vertical || labels.length !== 2) {\n                    return;\n                }\n                var rotateLabel = function (label, tickPositions, index) {\n                    var width = Math.abs(tickPositions[index + 1] - tickPositions[index]) * 2;\n                    var angle = this$1.autoRotateLabelAngle(label.box, width);\n                    if (angle !== 0) {\n                        label.options.rotation = angle;\n                        label.reflow(new Box());\n                    }\n                };\n                var tickPositions = this.getMajorTickPositions();\n                rotateLabel(labels[0], tickPositions, 0);\n                rotateLabel(labels[1], tickPositions, tickPositions.length - 2);\n            },\n            categoryIndex: function (value) {\n                return this.dataRange.valueIndex(value);\n            },\n            slot: function (from, to, limit) {\n                var dateRange = this.dataRange;\n                var start = from;\n                var end = to;\n                if (start instanceof Date) {\n                    start = dateRange.dateIndex(start);\n                }\n                if (end instanceof Date) {\n                    end = dateRange.dateIndex(end);\n                }\n                var slot = this.getSlot(start, end, limit);\n                if (slot) {\n                    return slot.toRect();\n                }\n            },\n            getSlot: function (a, b, limit) {\n                var start = a;\n                var end = b;\n                if (typeof start === OBJECT) {\n                    start = this.categoryIndex(start);\n                }\n                if (typeof end === OBJECT) {\n                    end = this.categoryIndex(end);\n                }\n                return CategoryAxis.fn.getSlot.call(this, start, end, limit);\n            },\n            valueRange: function () {\n                var options = this.options;\n                var range = categoryRange(options.srcCategories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            },\n            categoryAt: function (index, total) {\n                return this.dataRange.dateAt(index, total);\n            },\n            categoriesCount: function () {\n                return this.dataRange.valuesCount();\n            },\n            rangeIndices: function () {\n                return this.dataRange.displayIndices();\n            },\n            labelsBetweenTicks: function () {\n                return !this.divisionRange.options.justified;\n            },\n            prepareUserOptions: function () {\n                if (this.isEmpty()) {\n                    return;\n                }\n                this.options.categories = this.dataRange.values();\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.dataRange.dateAt(index);\n            },\n            totalIndex: function (value) {\n                return this.dataRange.totalIndex(value);\n            },\n            currentRangeIndices: function () {\n                var range = this.dataRange.valueRange();\n                return {\n                    min: this.dataRange.totalIndex(range.min),\n                    max: this.dataRange.totalIndex(range.max)\n                };\n            },\n            totalRange: function () {\n                return this.dataRange.total();\n            },\n            totalCount: function () {\n                return this.dataRange.totalCount();\n            },\n            isEmpty: function () {\n                return !this.options.srcCategories.length;\n            },\n            roundedRange: function () {\n                if (this.options.roundToBaseUnit !== false || this.isEmpty()) {\n                    return this.range();\n                }\n                var options = this.options;\n                var datesRange = categoryRange(options.srcCategories);\n                var dateRange = new DateRange(datesRange.min, datesRange.max, $.extend({}, options, {\n                    justified: false,\n                    roundToBaseUnit: true,\n                    justifyEnd: options.justified\n                }));\n                return dateRange.displayRange();\n            }\n        });\n        setDefaultOptions(DateCategoryAxis, {\n            type: DATE,\n            labels: { dateFormats: DateLabelFormats },\n            rangeLabels: { visible: false },\n            autoBaseUnitSteps: {\n                milliseconds: [\n                    1,\n                    10,\n                    100\n                ],\n                seconds: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                minutes: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                hours: [\n                    1,\n                    2,\n                    3\n                ],\n                days: [\n                    1,\n                    2,\n                    3\n                ],\n                weeks: [\n                    1,\n                    2\n                ],\n                months: [\n                    1,\n                    2,\n                    3,\n                    6\n                ],\n                years: [\n                    1,\n                    2,\n                    3,\n                    5,\n                    10,\n                    25,\n                    50\n                ]\n            },\n            maxDateGroups: 10\n        });\n        function autoAxisMin(min, max, narrow) {\n            if (!min && !max) {\n                return 0;\n            }\n            var axisMin;\n            if (min >= 0 && max >= 0) {\n                var minValue = min === max ? 0 : min;\n                var diff = (max - minValue) / max;\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMin = Math.max(0, minValue - (max - minValue) / 2);\n            } else {\n                axisMin = min;\n            }\n            return axisMin;\n        }\n        function autoAxisMax(min, max, narrow) {\n            if (!min && !max) {\n                return 1;\n            }\n            var axisMax;\n            if (min <= 0 && max <= 0) {\n                var maxValue = min === max ? 0 : max;\n                var diff = Math.abs((maxValue - min) / maxValue);\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMax = Math.min(0, maxValue - (min - maxValue) / 2);\n            } else {\n                axisMax = max;\n            }\n            return axisMax;\n        }\n        function floor(value, step) {\n            return round(Math.floor(value / step) * step, DEFAULT_PRECISION);\n        }\n        function ceil(value, step) {\n            return round(Math.ceil(value / step) * step, DEFAULT_PRECISION);\n        }\n        function limitCoordinate(value) {\n            return Math.max(Math.min(value, COORDINATE_LIMIT), -COORDINATE_LIMIT);\n        }\n        var MIN_VALUE_RANGE = Math.pow(10, -DEFAULT_PRECISION + 1);\n        var NumericAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                Axis.fn.init.call(this, $.extend({}, options, {\n                    seriesMin: seriesMin,\n                    seriesMax: seriesMax\n                }), chartService);\n            },\n            initUserOptions: function (options) {\n                var autoOptions = autoAxisOptions(options.seriesMin, options.seriesMax, options);\n                this.totalOptions = totalAxisOptions(autoOptions, options);\n                return axisOptions(autoOptions, options);\n            },\n            initFields: function () {\n                this.totalMin = this.totalOptions.min;\n                this.totalMax = this.totalOptions.max;\n                this.totalMajorUnit = this.totalOptions.majorUnit;\n                this.seriesMin = this.options.seriesMin;\n                this.seriesMax = this.options.seriesMax;\n            },\n            clone: function () {\n                return new NumericAxis(this.seriesMin, this.seriesMax, $.extend({}, this.options), this.chartService);\n            },\n            startValue: function () {\n                return 0;\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                if (stepValue === 0) {\n                    return 1;\n                }\n                var options = this.options;\n                var range = options.max - options.min;\n                return Math.floor(round(range / stepValue, COORD_PRECISION)) + 1;\n            },\n            getTickPositions: function (unit, skipUnit) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var lineBox = this.lineBox();\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var range = options.max - options.min;\n                var scale = lineSize / range;\n                var step = unit * scale;\n                var divisions = this.getDivisions(unit);\n                var dir = (vertical ? -1 : 1) * (reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var positions = [];\n                var pos = lineBox[(vertical ? Y : X) + startEdge];\n                var skipStep = 0;\n                if (skipUnit) {\n                    skipStep = skipUnit / unit;\n                }\n                for (var idx = 0; idx < divisions; idx++) {\n                    if (idx % skipStep !== 0) {\n                        positions.push(round(pos, COORD_PRECISION));\n                    }\n                    pos = pos + step * dir;\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                if (limit === void 0) {\n                    limit = false;\n                }\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (options.max - options.min));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 0;\n                }\n                if (!defined(end)) {\n                    end = start || 0;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                var p1, p2;\n                if (vertical) {\n                    p1 = options.max - Math.max(start, end);\n                    p2 = options.max - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - options.min;\n                    p2 = Math.max(start, end) - options.min;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = Number(options.max);\n                var min = Number(options.min);\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var offset = dir * (point[valueAxis] - lineStart);\n                var step = (max - min) / lineSize;\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = vertical ? max - valueOffset : min + valueOffset;\n                return round(value, DEFAULT_PRECISION);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = options.max;\n                var min = options.min;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = max - min;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: min + offset,\n                    max: max + offset,\n                    offset: offset\n                };\n            },\n            scaleRange: function (delta) {\n                var options = this.options;\n                var offset = -delta * options.majorUnit;\n                return {\n                    min: options.min - offset,\n                    max: options.max + offset\n                };\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions, labelContext) {\n                var options = this.options;\n                var value = round(options.min + index * options.majorUnit, DEFAULT_PRECISION);\n                var text = this.axisLabelText(value, labelOptions, labelContext);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, range.offset);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            isValidRange: function (min, max) {\n                return max - min > MIN_VALUE_RANGE;\n            }\n        });\n        function autoAxisOptions(seriesMin, seriesMax, options) {\n            var narrowRange = options.narrowRange;\n            var autoMin = autoAxisMin(seriesMin, seriesMax, narrowRange);\n            var autoMax = autoAxisMax(seriesMin, seriesMax, narrowRange);\n            var majorUnit = autoMajorUnit(autoMin, autoMax);\n            var autoOptions = { majorUnit: majorUnit };\n            if (options.roundToMajorUnit !== false) {\n                if (autoMin < 0 && remainderClose(autoMin, majorUnit, 1 / 3)) {\n                    autoMin -= majorUnit;\n                }\n                if (autoMax > 0 && remainderClose(autoMax, majorUnit, 1 / 3)) {\n                    autoMax += majorUnit;\n                }\n            }\n            autoOptions.min = floor(autoMin, majorUnit);\n            autoOptions.max = ceil(autoMax, majorUnit);\n            return autoOptions;\n        }\n        function totalAxisOptions(autoOptions, options) {\n            return {\n                min: defined(options.min) ? Math.min(autoOptions.min, options.min) : autoOptions.min,\n                max: defined(options.max) ? Math.max(autoOptions.max, options.max) : autoOptions.max,\n                majorUnit: autoOptions.majorUnit\n            };\n        }\n        function clearNullValues(options, fields) {\n            for (var idx = 0; idx < fields.length; idx++) {\n                var field = fields[idx];\n                if (options[field] === null) {\n                    options[field] = undefined;\n                }\n            }\n        }\n        function axisOptions(autoOptions, userOptions) {\n            var options = userOptions;\n            var userSetMin, userSetMax;\n            if (userOptions) {\n                clearNullValues(userOptions, [\n                    'min',\n                    'max'\n                ]);\n                userSetMin = defined(userOptions.min);\n                userSetMax = defined(userOptions.max);\n                var userSetLimits = userSetMin || userSetMax;\n                if (userSetLimits) {\n                    if (userOptions.min === userOptions.max) {\n                        if (userOptions.min > 0) {\n                            userOptions.min = 0;\n                        } else {\n                            userOptions.max = 1;\n                        }\n                    }\n                }\n                if (userOptions.majorUnit) {\n                    autoOptions.min = floor(autoOptions.min, userOptions.majorUnit);\n                    autoOptions.max = ceil(autoOptions.max, userOptions.majorUnit);\n                } else if (userSetLimits) {\n                    options = deepExtend(autoOptions, userOptions);\n                    autoOptions.majorUnit = autoMajorUnit(options.min, options.max);\n                }\n            }\n            autoOptions.minorUnit = (options.majorUnit || autoOptions.majorUnit) / 5;\n            var result = deepExtend(autoOptions, options);\n            if (result.min >= result.max) {\n                if (userSetMin && !userSetMax) {\n                    result.max = result.min + result.majorUnit;\n                } else if (!userSetMin && userSetMax) {\n                    result.min = result.max - result.majorUnit;\n                }\n            }\n            return result;\n        }\n        function remainderClose(value, divisor, ratio) {\n            var remainder = round(Math.abs(value % divisor), DEFAULT_PRECISION);\n            var threshold = divisor * (1 - ratio);\n            return remainder === 0 || remainder > threshold;\n        }\n        setDefaultOptions(NumericAxis, {\n            type: 'numeric',\n            min: 0,\n            max: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { format: '#.####################' },\n            zIndex: 1\n        });\n        var DateValueAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, axisOptions, chartService) {\n                var min = toDate(seriesMin);\n                var max = toDate(seriesMax);\n                var intlService = chartService.intl;\n                var options = axisOptions || {};\n                options = deepExtend(options || {}, {\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max),\n                    axisCrossingValue: parseDates(intlService, options.axisCrossingValues || options.axisCrossingValue),\n                    weekStartDay: firstDay(options, intlService)\n                });\n                options = applyDefaults(min, max, options);\n                Axis.fn.init.call(this, options, chartService);\n                this.intlService = intlService;\n                this.seriesMin = min;\n                this.seriesMax = max;\n                var weekStartDay = options.weekStartDay || 0;\n                this.totalMin = toTime(floorDate(toTime(min) - 1, options.baseUnit, weekStartDay));\n                this.totalMax = toTime(ceilDate(toTime(max) + 1, options.baseUnit, weekStartDay));\n            },\n            clone: function () {\n                return new DateValueAxis(this.seriesMin, this.seriesMax, $.extend({}, this.options), this.chartService);\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                var options = this.options;\n                return Math.floor(duration(options.min, options.max, options.baseUnit) / stepValue + 1);\n            },\n            getTickPositions: function (step) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var dir = (vertical ? -1 : 1) * (options.reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var start = lineBox[(vertical ? Y : X) + startEdge];\n                var divisions = this.getDivisions(step);\n                var timeRange = dateDiff(options.max, options.min);\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var scale = lineSize / timeRange;\n                var weekStartDay = options.weekStartDay || 0;\n                var positions = [start];\n                for (var i = 1; i < divisions; i++) {\n                    var date = addDuration(options.min, i * step, options.baseUnit, weekStartDay);\n                    var pos = start + dateDiff(date, options.min) * scale * dir;\n                    positions.push(round(pos, COORD_PRECISION));\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                return NumericAxis.prototype.getSlot.call(this, parseDate(this.intlService, a), parseDate(this.intlService, b), limit);\n            },\n            getValue: function (point) {\n                var value = NumericAxis.prototype.getValue.call(this, point);\n                return value !== null ? toDate(value) : null;\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions, labelContext) {\n                var options = this.options;\n                var offset = index * options.majorUnit;\n                var weekStartDay = options.weekStartDay || 0;\n                var date = options.min;\n                if (offset > 0) {\n                    date = addDuration(date, offset, options.baseUnit, weekStartDay);\n                }\n                var unitFormat = labelOptions.dateFormats[options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var text = this.axisLabelText(date, labelOptions, labelContext);\n                return new AxisLabel(date, text, index, null, labelOptions);\n            },\n            translateRange: function (delta, exact) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay || 0;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / dateDiff(range.max, range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION) * (options.reverse ? -1 : 1);\n                var from = addTicks(options.min, offset);\n                var to = addTicks(options.max, offset);\n                if (!exact) {\n                    from = addDuration(from, 0, baseUnit, weekStartDay);\n                    to = addDuration(to, 0, baseUnit, weekStartDay);\n                }\n                return {\n                    min: from,\n                    max: to,\n                    offset: offset\n                };\n            },\n            scaleRange: function (delta) {\n                var ref = this.options;\n                var from = ref.min;\n                var to = ref.max;\n                var rounds = Math.abs(delta);\n                while (rounds--) {\n                    var range = dateDiff(from, to);\n                    var step = Math.round(range * 0.1);\n                    if (delta < 0) {\n                        from = addTicks(from, step);\n                        to = addTicks(to, -step);\n                    } else {\n                        from = addTicks(from, -step);\n                        to = addTicks(to, step);\n                    }\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta, true);\n                var limittedRange = this.limitRange(toTime(range.min), toTime(range.max), this.totalMin, this.totalMax, range.offset);\n                if (limittedRange) {\n                    return {\n                        min: toDate(limittedRange.min),\n                        max: toDate(limittedRange.max)\n                    };\n                }\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: toDate(min),\n                    max: toDate(max)\n                };\n            },\n            zoomRange: function (delta) {\n                var range = this.scaleRange(delta);\n                var min = toDate(limitValue(toTime(range.min), this.totalMin, this.totalMax));\n                var max = toDate(limitValue(toTime(range.max), this.totalMin, this.totalMax));\n                return {\n                    min: min,\n                    max: max\n                };\n            }\n        });\n        function timeUnits(delta) {\n            var unit = HOURS;\n            if (delta >= TIME_PER_YEAR) {\n                unit = YEARS;\n            } else if (delta >= TIME_PER_MONTH) {\n                unit = MONTHS;\n            } else if (delta >= TIME_PER_WEEK) {\n                unit = WEEKS;\n            } else if (delta >= TIME_PER_DAY) {\n                unit = DAYS;\n            }\n            return unit;\n        }\n        function applyDefaults(seriesMin, seriesMax, options) {\n            var min = options.min || seriesMin;\n            var max = options.max || seriesMax;\n            var baseUnit = options.baseUnit || (max && min ? timeUnits(absoluteDateDiff(max, min)) : HOURS);\n            var baseUnitTime = TIME_PER_UNIT[baseUnit];\n            var weekStartDay = options.weekStartDay || 0;\n            var autoMin = floorDate(toTime(min) - 1, baseUnit, weekStartDay) || toDate(max);\n            var autoMax = ceilDate(toTime(max) + 1, baseUnit, weekStartDay);\n            var userMajorUnit = options.majorUnit ? options.majorUnit : undefined;\n            var majorUnit = userMajorUnit || ceil(autoMajorUnit(autoMin.getTime(), autoMax.getTime()), baseUnitTime) / baseUnitTime;\n            var actualUnits = duration(autoMin, autoMax, baseUnit);\n            var totalUnits = ceil(actualUnits, majorUnit);\n            var unitsToAdd = totalUnits - actualUnits;\n            var head = Math.floor(unitsToAdd / 2);\n            var tail = unitsToAdd - head;\n            if (!options.baseUnit) {\n                delete options.baseUnit;\n            }\n            options.baseUnit = options.baseUnit || baseUnit;\n            options.min = options.min || addDuration(autoMin, -head, baseUnit, weekStartDay);\n            options.max = options.max || addDuration(autoMax, tail, baseUnit, weekStartDay);\n            options.minorUnit = options.minorUnit || majorUnit / 5;\n            options.majorUnit = majorUnit;\n            return options;\n        }\n        setDefaultOptions(DateValueAxis, {\n            type: DATE,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { dateFormats: DateLabelFormats }\n        });\n        var DEFAULT_MAJOR_UNIT = 10;\n        var LogarithmicAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                var axisOptions = deepExtend({\n                    majorUnit: DEFAULT_MAJOR_UNIT,\n                    min: seriesMin,\n                    max: seriesMax\n                }, options);\n                var base = axisOptions.majorUnit;\n                var autoMax = autoAxisMax$1(seriesMax, base);\n                var autoMin = autoAxisMin$1(seriesMin, seriesMax, axisOptions);\n                var range = initRange(autoMin, autoMax, axisOptions, options);\n                axisOptions.max = range.max;\n                axisOptions.min = range.min;\n                axisOptions.minorUnit = options.minorUnit || round(base - 1, DEFAULT_PRECISION);\n                Axis.fn.init.call(this, axisOptions, chartService);\n                this.totalMin = defined(options.min) ? Math.min(autoMin, options.min) : autoMin;\n                this.totalMax = defined(options.max) ? Math.max(autoMax, options.max) : autoMax;\n                this.logMin = round(log(range.min, base), DEFAULT_PRECISION);\n                this.logMax = round(log(range.max, base), DEFAULT_PRECISION);\n                this.seriesMin = seriesMin;\n                this.seriesMax = seriesMax;\n                this.createLabels();\n            },\n            clone: function () {\n                return new LogarithmicAxis(this.seriesMin, this.seriesMax, $.extend({}, this.options), this.chartService);\n            },\n            startValue: function () {\n                return this.options.min;\n            },\n            getSlot: function (a, b, limit) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (logMax - logMin));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 1;\n                }\n                if (!defined(end)) {\n                    end = start || 1;\n                }\n                if (start <= 0 || end <= 0) {\n                    return null;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                start = log(start, base);\n                end = log(end, base);\n                var p1, p2;\n                if (vertical) {\n                    p1 = logMax - Math.max(start, end);\n                    p2 = logMax - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - logMin;\n                    p2 = Math.max(start, end) - logMin;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = (logMax - logMin) / lineSize;\n                var valueAxis = vertical ? Y : X;\n                var lineStart = lineBox[valueAxis + startEdge];\n                var offset = dir * (point[valueAxis] - lineStart);\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = logMin + valueOffset;\n                return round(Math.pow(base, value), DEFAULT_PRECISION);\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            scaleRange: function (delta) {\n                var base = this.options.majorUnit;\n                var offset = -delta;\n                return {\n                    min: Math.pow(base, this.logMin - offset),\n                    max: Math.pow(base, this.logMax + offset)\n                };\n            },\n            translateRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (logMax - logMin);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: Math.pow(base, logMin + offset),\n                    max: Math.pow(base, logMax + offset),\n                    offset: offset\n                };\n            },\n            labelsCount: function () {\n                var floorMax = Math.floor(this.logMax);\n                var count = Math.floor(floorMax - this.logMin) + 1;\n                return count;\n            },\n            getMajorTickPositions: function () {\n                var ticks = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    ticks.push(position);\n                }, {\n                    step: 1,\n                    skip: 0\n                });\n                return ticks;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var majorTicks = options.majorTicks;\n                var minorTicks = options.minorTicks;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var lineBox = this.lineBox();\n                var ticks = [];\n                var tickLineOptions = { vertical: vertical };\n                function render(tickPosition, tickOptions) {\n                    tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                    tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                    tickLineOptions.position = tickPosition;\n                    lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                }\n                if (majorTicks.visible) {\n                    this.traverseMajorTicksPositions(render, majorTicks);\n                }\n                if (minorTicks.visible) {\n                    this.traverseMinorTicksPositions(render, minorTicks);\n                }\n                return ticks;\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var vertical = options.vertical;\n                var lineBox = altAxis.lineBox();\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPosition, gridLine) {\n                    if (!inArray(tickPosition, majorTicks)) {\n                        lineOptions.position = tickPosition;\n                        container.append(createAxisGridLine(lineOptions, gridLine));\n                        majorTicks.push(tickPosition);\n                    }\n                }\n                if (majorGridLines.visible) {\n                    this.traverseMajorTicksPositions(render, majorGridLines);\n                }\n                if (minorGridLines.visible) {\n                    this.traverseMinorTicksPositions(render, minorGridLines);\n                }\n                return container.children;\n            },\n            traverseMajorTicksPositions: function (callback, tickOptions) {\n                var ref = this._lineOptions();\n                var lineStart = ref.lineStart;\n                var step = ref.step;\n                var ref$1 = this;\n                var logMin = ref$1.logMin;\n                var logMax = ref$1.logMax;\n                for (var power = Math.ceil(logMin) + tickOptions.skip; power <= logMax; power += tickOptions.step) {\n                    var position = round(lineStart + step * (power - logMin), DEFAULT_PRECISION);\n                    callback(position, tickOptions);\n                }\n            },\n            traverseMinorTicksPositions: function (callback, tickOptions) {\n                var this$1 = this;\n                var ref = this.options;\n                var min = ref.min;\n                var max = ref.max;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var ref$1 = this._lineOptions();\n                var lineStart = ref$1.lineStart;\n                var step = ref$1.step;\n                var ref$2 = this;\n                var logMin = ref$2.logMin;\n                var logMax = ref$2.logMax;\n                var start = Math.floor(logMin);\n                for (var power = start; power < logMax; power++) {\n                    var minorOptions = this$1._minorIntervalOptions(power);\n                    for (var idx = tickOptions.skip; idx < minorUnit; idx += tickOptions.step) {\n                        var value = minorOptions.value + idx * minorOptions.minorStep;\n                        if (value > max) {\n                            break;\n                        }\n                        if (value >= min) {\n                            var position = round(lineStart + step * (log(value, base) - logMin), DEFAULT_PRECISION);\n                            callback(position, tickOptions);\n                        }\n                    }\n                }\n            },\n            createAxisLabel: function (index, labelOptions, labelContext) {\n                var power = Math.ceil(this.logMin + index);\n                var value = Math.pow(this.options.majorUnit, power);\n                var text = this.axisLabelText(value, labelOptions, labelContext);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, range.offset);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                var base = options.majorUnit;\n                var acceptOptionsRange = max > min && options.min && options.max && round(log(options.max, base) - log(options.min, base), DEFAULT_PRECISION) < 1;\n                var acceptNewRange = !(options.min === totalMin && options.max === totalMax) && round(log(max, base) - log(min, base), DEFAULT_PRECISION) >= 1;\n                if (acceptOptionsRange || acceptNewRange) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            _minorIntervalOptions: function (power) {\n                var ref = this.options;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var value = Math.pow(base, power);\n                var nextValue = Math.pow(base, power + 1);\n                var difference = nextValue - value;\n                var minorStep = difference / minorUnit;\n                return {\n                    value: value,\n                    minorStep: minorStep\n                };\n            },\n            _lineOptions: function () {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = dir * (lineSize / (this.logMax - this.logMin));\n                var lineStart = lineBox[valueAxis + startEdge];\n                return {\n                    step: step,\n                    lineStart: lineStart,\n                    lineBox: lineBox\n                };\n            }\n        });\n        function initRange(autoMin, autoMax, axisOptions, options) {\n            var min = axisOptions.min;\n            var max = axisOptions.max;\n            if (defined(axisOptions.axisCrossingValue) && axisOptions.axisCrossingValue <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.max)) {\n                max = autoMax;\n            } else if (options.max <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.min)) {\n                min = autoMin;\n            } else if (options.min <= 0) {\n                throwNegativeValuesError();\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function autoAxisMin$1(min, max, options) {\n            var base = options.majorUnit;\n            var autoMin = min;\n            if (min <= 0) {\n                autoMin = max <= 1 ? Math.pow(base, -2) : 1;\n            } else if (!options.narrowRange) {\n                autoMin = Math.pow(base, Math.floor(log(min, base)));\n            }\n            return autoMin;\n        }\n        function autoAxisMax$1(max, base) {\n            var logMaxRemainder = round(log(max, base), DEFAULT_PRECISION) % 1;\n            var autoMax;\n            if (max <= 0) {\n                autoMax = base;\n            } else if (logMaxRemainder !== 0 && (logMaxRemainder < 0.3 || logMaxRemainder > 0.9)) {\n                autoMax = Math.pow(base, log(max, base) + 0.2);\n            } else {\n                autoMax = Math.pow(base, Math.ceil(log(max, base)));\n            }\n            return autoMax;\n        }\n        function throwNegativeValuesError() {\n            throw new Error('Non positive values cannot be used for a logarithmic axis');\n        }\n        function log(y, x) {\n            return Math.log(y) / Math.log(x);\n        }\n        setDefaultOptions(LogarithmicAxis, {\n            type: 'log',\n            majorUnit: DEFAULT_MAJOR_UNIT,\n            minorUnit: 1,\n            axisCrossingValue: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            zIndex: 1,\n            _deferLabels: true\n        });\n        var GridLinesMixin = {\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var radius = Math.abs(this.box.center().y - altAxis.lineBox().y1);\n                var gridLines = [];\n                var skipMajor = false;\n                var majorAngles, minorAngles;\n                if (options.majorGridLines.visible) {\n                    majorAngles = this.majorGridLineAngles(altAxis);\n                    skipMajor = true;\n                    gridLines = this.renderMajorGridLines(majorAngles, radius, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    minorAngles = this.minorGridLineAngles(altAxis, skipMajor);\n                    append(gridLines, this.renderMinorGridLines(minorAngles, radius, options.minorGridLines, altAxis, skipMajor));\n                }\n                return gridLines;\n            },\n            renderMajorGridLines: function (angles, radius, options) {\n                return this.renderGridLines(angles, radius, options);\n            },\n            renderMinorGridLines: function (angles, radius, options, altAxis, skipMajor) {\n                var radiusCallback = this.radiusCallback && this.radiusCallback(radius, altAxis, skipMajor);\n                return this.renderGridLines(angles, radius, options, radiusCallback);\n            },\n            renderGridLines: function (angles, radius, options, radiusCallback) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var center = this.box.center();\n                var circle = new Circle([\n                    center.x,\n                    center.y\n                ], radius);\n                var container = this.gridLinesVisual();\n                for (var i = 0; i < angles.length; i++) {\n                    var line = new Path(style);\n                    if (radiusCallback) {\n                        circle.radius = radiusCallback(angles[i]);\n                    }\n                    line.moveTo(circle.center).lineTo(circle.pointAt(angles[i] + 180));\n                    container.append(line);\n                }\n                return container.children;\n            },\n            gridLineAngles: function (altAxis, size, skip, step, skipAngles) {\n                var this$1 = this;\n                var divs = this.intervals(size, skip, step, skipAngles);\n                var options = altAxis.options;\n                var altAxisVisible = options.visible && (options.line || {}).visible !== false;\n                return map(divs, function (d) {\n                    var alpha = this$1.intervalAngle(d);\n                    if (!altAxisVisible || alpha !== 90) {\n                        return alpha;\n                    }\n                });\n            }\n        };\n        var RadarCategoryAxis = CategoryAxis.extend({\n            range: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var labels = ref.labels;\n                var labelOptions = ref.options.labels;\n                var skip = labelOptions.skip || 0;\n                var step = labelOptions.step || 1;\n                var measureBox = new Box();\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(skip + i * step).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            intervals: function (size, skipOption, stepOption, skipAngles) {\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var options = this.options;\n                var categories = options.categories.length;\n                var divCount = categories / size || 1;\n                var divAngle = 360 / divCount;\n                var skip = skipOption || 0;\n                var step = stepOption || 1;\n                var divs = [];\n                var angle = 0;\n                for (var i = skip; i < divCount; i += step) {\n                    if (options.reverse) {\n                        angle = 360 - i * divAngle;\n                    } else {\n                        angle = i * divAngle;\n                    }\n                    angle = round(angle, COORD_PRECISION) % 360;\n                    if (!(skipAngles && inArray(angle, skipAngles))) {\n                        divs.push(angle);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(1);\n            },\n            minorIntervals: function () {\n                return this.intervals(0.5);\n            },\n            intervalAngle: function (interval) {\n                return (360 + interval + this.options.startAngle) % 360;\n            },\n            majorAngles: function () {\n                var this$1 = this;\n                return map(this.majorIntervals(), function (interval) {\n                    return this$1.intervalAngle(interval);\n                });\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, 1, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var ref = this.options;\n                var minorGridLines = ref.minorGridLines;\n                var majorGridLines = ref.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(1, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, 0.5, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            radiusCallback: function (radius, altAxis, skipMajor) {\n                if (altAxis.options.type !== ARC) {\n                    var minorAngle = rad(360 / (this.options.categories.length * 2));\n                    var minorRadius = Math.cos(minorAngle) * radius;\n                    var majorAngles = this.majorAngles();\n                    var radiusCallback = function (angle) {\n                        if (!skipMajor && inArray(angle, majorAngles)) {\n                            return radius;\n                        }\n                        return minorRadius;\n                    };\n                    return radiusCallback;\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var plotBands = this.options.plotBands || [];\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var slot = this$1.plotBandSlot(band);\n                    var singleSlot = this$1.getSlot(band.from);\n                    var head = band.from - Math.floor(band.from);\n                    slot.startAngle += head * singleSlot.angle;\n                    var tail = Math.ceil(band.to) - band.to;\n                    slot.angle -= (tail + head) * singleSlot.angle;\n                    var ring = ShapeBuilder.current.createRing(slot, {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    });\n                    group.append(ring);\n                }\n                this.appendVisual(group);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to - 1);\n            },\n            getSlot: function (from, to) {\n                var options = this.options;\n                var justified = options.justified;\n                var box = this.box;\n                var divs = this.majorAngles();\n                var totalDivs = divs.length;\n                var slotAngle = 360 / totalDivs;\n                var fromValue = from;\n                if (options.reverse && !justified) {\n                    fromValue = (fromValue + 1) % totalDivs;\n                }\n                fromValue = limitValue(Math.floor(fromValue), 0, totalDivs - 1);\n                var slotStart = divs[fromValue];\n                if (justified) {\n                    slotStart = slotStart - slotAngle / 2;\n                    if (slotStart < 0) {\n                        slotStart += 360;\n                    }\n                }\n                var toValue = limitValue(Math.ceil(to || fromValue), fromValue, totalDivs - 1);\n                var slots = toValue - fromValue + 1;\n                var angle = slotAngle * slots;\n                return new Ring(box.center(), 0, box.height() / 2, slotStart, angle);\n            },\n            slot: function (from, to) {\n                var slot = this.getSlot(from, to);\n                var startAngle = slot.startAngle + 180;\n                var endAngle = startAngle + slot.angle;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            pointCategoryIndex: function (point) {\n                var this$1 = this;\n                var length = this.options.categories.length;\n                var index = null;\n                for (var i = 0; i < length; i++) {\n                    var slot = this$1.getSlot(i);\n                    if (slot.containsPoint(point)) {\n                        index = i;\n                        break;\n                    }\n                }\n                return index;\n            }\n        });\n        setDefaultOptions(RadarCategoryAxis, {\n            startAngle: 90,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: { visible: true },\n            justified: true\n        });\n        deepExtend(RadarCategoryAxis.prototype, GridLinesMixin);\n        var PolarAxis = Axis.extend({\n            init: function (options, chartService) {\n                Axis.fn.init.call(this, options, chartService);\n                var instanceOptions = this.options;\n                instanceOptions.minorUnit = instanceOptions.minorUnit || instanceOptions.majorUnit / 2;\n            },\n            getDivisions: function (stepValue) {\n                return NumericAxis.prototype.getDivisions.call(this, stepValue) - 1;\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var labelOptions = ref.options.labels;\n                var skip = labelOptions.skip || 0;\n                var step = labelOptions.step || 1;\n                var measureBox = new Box();\n                var divs = this.intervals(options.majorUnit, skip, step);\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(divs[i]).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            intervals: function (size, skipOption, stepOption, skipAngles) {\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var min = this.options.min;\n                var divisions = this.getDivisions(size);\n                var divs = [];\n                var skip = skipOption || 0;\n                var step = stepOption || 1;\n                for (var i = skip; i < divisions; i += step) {\n                    var current = (360 + min + i * size) % 360;\n                    if (!(skipAngles && inArray(current, skipAngles))) {\n                        divs.push(current);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(this.options.majorUnit);\n            },\n            minorIntervals: function () {\n                return this.intervals(this.options.minorUnit);\n            },\n            intervalAngle: function (i) {\n                return (540 - i - this.options.startAngle) % 360;\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, this.options.majorUnit, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(options.majorUnit, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, options.minorUnit, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to);\n            },\n            getSlot: function (a, b) {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var startAngle = options.startAngle;\n                var start = limitValue(a, options.min, options.max);\n                var end = limitValue(b || start, start, options.max);\n                if (options.reverse) {\n                    start *= -1;\n                    end *= -1;\n                }\n                start = (540 - start - startAngle) % 360;\n                end = (540 - end - startAngle) % 360;\n                if (end < start) {\n                    var tmp = start;\n                    start = end;\n                    end = tmp;\n                }\n                return new Ring(box.center(), 0, box.height() / 2, start, end - start);\n            },\n            slot: function (from, to) {\n                if (to === void 0) {\n                    to = from;\n                }\n                var options = this.options;\n                var start = 360 - options.startAngle;\n                var slot = this.getSlot(from, to);\n                var min = Math.min(from, to);\n                var max = Math.max(from, to);\n                var startAngle, endAngle;\n                if (options.reverse) {\n                    startAngle = min;\n                    endAngle = max;\n                } else {\n                    startAngle = 360 - max;\n                    endAngle = 360 - min;\n                }\n                startAngle = (startAngle + start) % 360;\n                endAngle = (endAngle + start) % 360;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var center = this.box.center();\n                var dx = point.x - center.x;\n                var dy = point.y - center.y;\n                var theta = Math.round(deg(Math.atan2(dy, dx)));\n                var start = options.startAngle;\n                if (!options.reverse) {\n                    theta *= -1;\n                    start *= -1;\n                }\n                return (theta + start + 360) % 360;\n            },\n            valueRange: function () {\n                return {\n                    min: 0,\n                    max: Math.PI * 2\n                };\n            }\n        });\n        setDefaultOptions(PolarAxis, {\n            type: 'polar',\n            startAngle: 0,\n            reverse: false,\n            majorUnit: 60,\n            min: 0,\n            max: 360,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: {\n                color: BLACK,\n                visible: true,\n                width: 1\n            },\n            minorGridLines: { color: '#aaa' }\n        });\n        deepExtend(PolarAxis.prototype, GridLinesMixin, {\n            createPlotBands: RadarCategoryAxis.prototype.createPlotBands,\n            majorAngles: RadarCategoryAxis.prototype.majorAngles,\n            range: NumericAxis.prototype.range,\n            labelsCount: NumericAxis.prototype.labelsCount,\n            createAxisLabel: NumericAxis.prototype.createAxisLabel\n        });\n        var RadarNumericAxisMixin = {\n            options: { majorGridLines: { visible: true } },\n            createPlotBands: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var type = ref.majorGridLines.type;\n                var plotBands = ref.plotBands;\n                if (plotBands === void 0) {\n                    plotBands = [];\n                }\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var bandStyle = {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    };\n                    var slot = this$1.getSlot(band.from, band.to, true);\n                    var ring = new Ring(center, center.y - slot.y2, center.y - slot.y1, 0, 360);\n                    var shape = void 0;\n                    if (type === ARC) {\n                        shape = ShapeBuilder.current.createRing(ring, bandStyle);\n                    } else {\n                        shape = Path.fromPoints(this$1.plotBandPoints(ring, majorAngles), bandStyle).close();\n                    }\n                    group.append(shape);\n                }\n                this.appendVisual(group);\n            },\n            plotBandPoints: function (ring, angles) {\n                var innerPoints = [];\n                var outerPoints = [];\n                var center = [\n                    ring.center.x,\n                    ring.center.y\n                ];\n                var innerCircle = new Circle(center, ring.innerRadius);\n                var outerCircle = new Circle(center, ring.radius);\n                for (var i = 0; i < angles.length; i++) {\n                    innerPoints.push(innerCircle.pointAt(angles[i] + 180));\n                    outerPoints.push(outerCircle.pointAt(angles[i] + 180));\n                }\n                innerPoints.reverse();\n                innerPoints.push(innerPoints[0]);\n                outerPoints.push(outerPoints[0]);\n                return outerPoints.concat(innerPoints);\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var majorTicks = this.radarMajorGridLinePositions();\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var gridLines = [];\n                if (options.majorGridLines.visible) {\n                    gridLines = this.renderGridLines(center, majorTicks, majorAngles, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    var minorTicks = this.radarMinorGridLinePositions();\n                    append(gridLines, this.renderGridLines(center, minorTicks, majorAngles, options.minorGridLines));\n                }\n                return gridLines;\n            },\n            renderGridLines: function (center, ticks, angles, options) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var skip = options.skip;\n                if (skip === void 0) {\n                    skip = 0;\n                }\n                var step = options.step;\n                if (step === void 0) {\n                    step = 0;\n                }\n                var container = this.gridLinesVisual();\n                for (var tickIx = skip; tickIx < ticks.length; tickIx += step) {\n                    var tickRadius = center.y - ticks[tickIx];\n                    if (tickRadius > 0) {\n                        var circle = new Circle([\n                            center.x,\n                            center.y\n                        ], tickRadius);\n                        if (options.type === ARC) {\n                            container.append(new drawing.Circle(circle, style));\n                        } else {\n                            var line = new Path(style);\n                            for (var angleIx = 0; angleIx < angles.length; angleIx++) {\n                                line.lineTo(circle.pointAt(angles[angleIx] + 180));\n                            }\n                            line.close();\n                            container.append(line);\n                        }\n                    }\n                }\n                return container.children;\n            },\n            getValue: function (point) {\n                var lineBox = this.lineBox();\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var radius = point.distanceTo(center);\n                var distance = radius;\n                if (this.options.majorGridLines.type !== ARC && majorAngles.length > 1) {\n                    var dx = point.x - center.x;\n                    var dy = point.y - center.y;\n                    var theta = (deg(Math.atan2(dy, dx)) + 540) % 360;\n                    majorAngles.sort(function (a, b) {\n                        return angularDistance(a, theta) - angularDistance(b, theta);\n                    });\n                    var midAngle = angularDistance(majorAngles[0], majorAngles[1]) / 2;\n                    var alpha = angularDistance(theta, majorAngles[0]);\n                    var gamma = 90 - midAngle;\n                    var beta = 180 - alpha - gamma;\n                    distance = radius * (Math.sin(rad(beta)) / Math.sin(rad(gamma)));\n                }\n                return this.axisType().prototype.getValue.call(this, new Point(lineBox.x1, lineBox.y2 - distance));\n            }\n        };\n        function angularDistance(a, b) {\n            return 180 - Math.abs(Math.abs(a - b) - 180);\n        }\n        var RadarNumericAxis = NumericAxis.extend({\n            radarMajorGridLinePositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            radarMinorGridLinePositions: function () {\n                var options = this.options;\n                var minorSkipStep = 0;\n                if (options.majorGridLines.visible) {\n                    minorSkipStep = options.majorUnit;\n                }\n                return this.getTickPositions(options.minorUnit, minorSkipStep);\n            },\n            axisType: function () {\n                return NumericAxis;\n            }\n        });\n        deepExtend(RadarNumericAxis.prototype, RadarNumericAxisMixin);\n        var RadarLogarithmicAxis = LogarithmicAxis.extend({\n            radarMajorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.majorGridLines);\n                return positions;\n            },\n            radarMinorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMinorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.minorGridLines);\n                return positions;\n            },\n            axisType: function () {\n                return LogarithmicAxis;\n            }\n        });\n        deepExtend(RadarLogarithmicAxis.prototype, RadarNumericAxisMixin);\n        var WEIGHT = 0.333;\n        var EXTREMUM_ALLOWED_DEVIATION = 0.01;\n        var CurveProcessor = Class.extend({\n            init: function (closed) {\n                this.closed = closed;\n            },\n            process: function (dataPoints) {\n                var this$1 = this;\n                var points = dataPoints.slice(0);\n                var segments = [];\n                var closed = this.closed;\n                var length = points.length;\n                if (length > 2) {\n                    this.removeDuplicates(0, points);\n                    length = points.length;\n                }\n                if (length < 2 || length === 2 && points[0].equals(points[1])) {\n                    return segments;\n                }\n                var p0 = points[0];\n                var p1 = points[1];\n                var p2 = points[2];\n                segments.push(new Segment(p0));\n                while (p0.equals(points[length - 1])) {\n                    closed = true;\n                    points.pop();\n                    length--;\n                }\n                if (length === 2) {\n                    var tangent = this.tangent(p0, p1, X, Y);\n                    last(segments).controlOut(this.firstControlPoint(tangent, p0, p1, X, Y));\n                    segments.push(new Segment(p1, this.secondControlPoint(tangent, p0, p1, X, Y)));\n                    return segments;\n                }\n                var initialControlPoint, lastControlPoint;\n                if (closed) {\n                    p0 = points[length - 1];\n                    p1 = points[0];\n                    p2 = points[1];\n                    var controlPoints = this.controlPoints(p0, p1, p2);\n                    initialControlPoint = controlPoints[1];\n                    lastControlPoint = controlPoints[0];\n                } else {\n                    var tangent$1 = this.tangent(p0, p1, X, Y);\n                    initialControlPoint = this.firstControlPoint(tangent$1, p0, p1, X, Y);\n                }\n                var cp0 = initialControlPoint;\n                for (var idx = 0; idx <= length - 3; idx++) {\n                    this$1.removeDuplicates(idx, points);\n                    length = points.length;\n                    if (idx + 3 <= length) {\n                        p0 = points[idx];\n                        p1 = points[idx + 1];\n                        p2 = points[idx + 2];\n                        var controlPoints$1 = this$1.controlPoints(p0, p1, p2);\n                        last(segments).controlOut(cp0);\n                        cp0 = controlPoints$1[1];\n                        var cp1 = controlPoints$1[0];\n                        segments.push(new Segment(p1, cp1));\n                    }\n                }\n                if (closed) {\n                    p0 = points[length - 2];\n                    p1 = points[length - 1];\n                    p2 = points[0];\n                    var controlPoints$2 = this.controlPoints(p0, p1, p2);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p1, controlPoints$2[0]));\n                    last(segments).controlOut(controlPoints$2[1]);\n                    segments.push(new Segment(p2, lastControlPoint));\n                } else {\n                    var tangent$2 = this.tangent(p1, p2, X, Y);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p2, this.secondControlPoint(tangent$2, p1, p2, X, Y)));\n                }\n                return segments;\n            },\n            removeDuplicates: function (idx, points) {\n                while (points[idx + 1] && (points[idx].equals(points[idx + 1]) || points[idx + 1].equals(points[idx + 2]))) {\n                    points.splice(idx + 1, 1);\n                }\n            },\n            invertAxis: function (p0, p1, p2) {\n                var invertAxis = false;\n                if (p0.x === p1.x) {\n                    invertAxis = true;\n                } else if (p1.x === p2.x) {\n                    if (p1.y < p2.y && p0.y <= p1.y || p2.y < p1.y && p1.y <= p0.y) {\n                        invertAxis = true;\n                    }\n                } else {\n                    var fn = this.lineFunction(p0, p1);\n                    var y2 = this.calculateFunction(fn, p2.x);\n                    if (!(p0.y <= p1.y && p2.y <= y2) && !(p1.y <= p0.y && p2.y >= y2)) {\n                        invertAxis = true;\n                    }\n                }\n                return invertAxis;\n            },\n            isLine: function (p0, p1, p2) {\n                var fn = this.lineFunction(p0, p1);\n                var y2 = this.calculateFunction(fn, p2.x);\n                return p0.x === p1.x && p1.x === p2.x || round(y2, 1) === round(p2.y, 1);\n            },\n            lineFunction: function (p1, p2) {\n                var a = (p2.y - p1.y) / (p2.x - p1.x);\n                var b = p1.y - a * p1.x;\n                return [\n                    b,\n                    a\n                ];\n            },\n            controlPoints: function (p0, p1, p2) {\n                var xField = X;\n                var yField = Y;\n                var restrict = false;\n                var switchOrientation = false;\n                var tangent;\n                if (this.isLine(p0, p1, p2)) {\n                    tangent = this.tangent(p0, p1, X, Y);\n                } else {\n                    var monotonic = {\n                        x: this.isMonotonicByField(p0, p1, p2, X),\n                        y: this.isMonotonicByField(p0, p1, p2, Y)\n                    };\n                    if (monotonic.x && monotonic.y) {\n                        tangent = this.tangent(p0, p2, X, Y);\n                        restrict = true;\n                    } else {\n                        if (this.invertAxis(p0, p1, p2)) {\n                            xField = Y;\n                            yField = X;\n                        }\n                        if (monotonic[xField]) {\n                            tangent = 0;\n                        } else {\n                            var sign;\n                            if (p2[yField] < p0[yField] && p0[yField] <= p1[yField] || p0[yField] < p2[yField] && p1[yField] <= p0[yField]) {\n                                sign = numberSign((p2[yField] - p0[yField]) * (p1[xField] - p0[xField]));\n                            } else {\n                                sign = -numberSign((p2[xField] - p0[xField]) * (p1[yField] - p0[yField]));\n                            }\n                            tangent = EXTREMUM_ALLOWED_DEVIATION * sign;\n                            switchOrientation = true;\n                        }\n                    }\n                }\n                var secondControlPoint = this.secondControlPoint(tangent, p0, p1, xField, yField);\n                if (switchOrientation) {\n                    var oldXField = xField;\n                    xField = yField;\n                    yField = oldXField;\n                }\n                var firstControlPoint = this.firstControlPoint(tangent, p1, p2, xField, yField);\n                if (restrict) {\n                    this.restrictControlPoint(p0, p1, secondControlPoint, tangent);\n                    this.restrictControlPoint(p1, p2, firstControlPoint, tangent);\n                }\n                return [\n                    secondControlPoint,\n                    firstControlPoint\n                ];\n            },\n            restrictControlPoint: function (p1, p2, cp, tangent) {\n                if (p1.y < p2.y) {\n                    if (p2.y < cp.y) {\n                        cp.x = p1.x + (p2.y - p1.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (cp.y < p1.y) {\n                        cp.x = p2.x - (p2.y - p1.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                } else {\n                    if (cp.y < p2.y) {\n                        cp.x = p1.x - (p1.y - p2.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (p1.y < cp.y) {\n                        cp.x = p2.x + (p1.y - p2.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                }\n            },\n            tangent: function (p0, p1, xField, yField) {\n                var x = p1[xField] - p0[xField];\n                var y = p1[yField] - p0[yField];\n                var tangent;\n                if (x === 0) {\n                    tangent = 0;\n                } else {\n                    tangent = y / x;\n                }\n                return tangent;\n            },\n            isMonotonicByField: function (p0, p1, p2, field) {\n                return p2[field] > p1[field] && p1[field] > p0[field] || p2[field] < p1[field] && p1[field] < p0[field];\n            },\n            firstControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t1 + distance, p0[yField] + distance * tangent, xField, yField);\n            },\n            secondControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t2 - distance, p3[yField] - distance * tangent, xField, yField);\n            },\n            point: function (xValue, yValue, xField, yField) {\n                var controlPoint = new geometry.Point();\n                controlPoint[xField] = xValue;\n                controlPoint[yField] = yValue;\n                return controlPoint;\n            },\n            calculateFunction: function (fn, x) {\n                var length = fn.length;\n                var result = 0;\n                for (var i = 0; i < length; i++) {\n                    result += Math.pow(x, i) * fn[i];\n                }\n                return result;\n            }\n        });\n        function numberSign(value) {\n            return value <= 0 ? -1 : 1;\n        }\n        dataviz.Gradients = GRADIENTS;\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            services: services,\n            autoMajorUnit: autoMajorUnit,\n            Point: Point,\n            Box: Box,\n            Ring: Ring,\n            Sector: Sector,\n            ShapeBuilder: ShapeBuilder,\n            ShapeElement: ShapeElement,\n            ChartElement: ChartElement,\n            BoxElement: BoxElement,\n            RootElement: RootElement,\n            FloatElement: FloatElement,\n            Text: Text,\n            TextBox: TextBox,\n            Title: Title,\n            AxisLabel: AxisLabel,\n            Axis: Axis,\n            Note: Note,\n            CategoryAxis: CategoryAxis,\n            DateCategoryAxis: DateCategoryAxis,\n            DateValueAxis: DateValueAxis,\n            NumericAxis: NumericAxis,\n            LogarithmicAxis: LogarithmicAxis,\n            PolarAxis: PolarAxis,\n            RadarCategoryAxis: RadarCategoryAxis,\n            RadarNumericAxis: RadarNumericAxis,\n            RadarLogarithmicAxis: RadarLogarithmicAxis,\n            CurveProcessor: CurveProcessor,\n            rectToBox: rectToBox,\n            addClass: addClass,\n            removeClass: removeClass,\n            alignPathToPixel: alignPathToPixel,\n            clockwise: clockwise,\n            convertableToNumber: convertableToNumber,\n            deepExtend: deepExtend,\n            elementStyles: elementStyles,\n            getSpacing: getSpacing,\n            getTemplate: getTemplate,\n            getter: __common_getter_js,\n            grep: grep,\n            hasClasses: hasClasses,\n            HashMap: HashMap,\n            inArray: inArray,\n            interpolateValue: interpolateValue,\n            InstanceObserver: InstanceObserver,\n            isArray: isArray,\n            isFunction: isFunction,\n            isNumber: isNumber,\n            isObject: isObject,\n            isString: isString,\n            map: map,\n            mousewheelDelta: mousewheelDelta,\n            FontLoader: FontLoader,\n            setDefaultOptions: setDefaultOptions,\n            sparseArrayLimits: sparseArrayLimits,\n            styleValue: styleValue,\n            find: find,\n            elementScale: elementScale,\n            autoTextColor: autoTextColor,\n            append: append,\n            bindEvents: bindEvents,\n            Class: Class,\n            defined: defined,\n            deg: deg,\n            elementOffset: elementOffset,\n            elementSize: elementSize,\n            eventElement: eventElement,\n            eventCoordinates: eventCoordinates,\n            last: last,\n            limitValue: limitValue,\n            logToConsole: kendo.logToConsole,\n            objectKey: objectKey,\n            rad: rad,\n            round: round,\n            unbindEvents: unbindEvents,\n            valueOrDefault: valueOrDefault,\n            absoluteDateDiff: absoluteDateDiff,\n            addDuration: addDuration,\n            addTicks: addTicks,\n            ceilDate: ceilDate,\n            dateComparer: dateComparer,\n            dateDiff: dateDiff,\n            dateEquals: dateEquals,\n            dateIndex: dateIndex,\n            duration: duration,\n            floorDate: floorDate,\n            lteDateIndex: lteDateIndex,\n            startOfWeek: startOfWeek,\n            toDate: toDate,\n            parseDate: parseDate,\n            parseDates: parseDates,\n            toTime: toTime,\n            firstDay: firstDay\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/core', ['dataviz/core/kendo-core'], f);\n}(function () {\n    (function ($) {\n        var dataviz = kendo.dataviz;\n        var services = dataviz.services;\n        var draw = kendo.drawing;\n        dataviz.SASS_THEMES = [\n            'sass',\n            'default-v2',\n            'bootstrap-v4',\n            'material-v2'\n        ];\n        dataviz.ExportMixin = {\n            extend: function (proto, skipLegacy) {\n                if (!proto.exportVisual) {\n                    throw new Error('Mixin target has no exportVisual method defined.');\n                }\n                proto.exportSVG = this.exportSVG;\n                proto.exportImage = this.exportImage;\n                proto.exportPDF = this.exportPDF;\n                if (!skipLegacy) {\n                    proto.svg = this.svg;\n                    proto.imageDataURL = this.imageDataURL;\n                }\n            },\n            exportSVG: function (options) {\n                return draw.exportSVG(this.exportVisual(), options);\n            },\n            exportImage: function (options) {\n                return draw.exportImage(this.exportVisual(options), options);\n            },\n            exportPDF: function (options) {\n                return draw.exportPDF(this.exportVisual(), options);\n            },\n            svg: function () {\n                if (draw.svg.Surface) {\n                    return draw.svg.exportGroup(this.exportVisual());\n                } else {\n                    throw new Error('SVG Export failed. Unable to export instantiate kendo.drawing.svg.Surface');\n                }\n            },\n            imageDataURL: function () {\n                if (!kendo.support.canvas) {\n                    return null;\n                }\n                if (draw.canvas.Surface) {\n                    var container = $('<div />').css({\n                        display: 'none',\n                        width: this.element.width(),\n                        height: this.element.height()\n                    }).appendTo(document.body);\n                    var surface = new draw.canvas.Surface(container[0]);\n                    surface.draw(this.exportVisual());\n                    var image = surface._rootElement.toDataURL();\n                    surface.destroy();\n                    container.remove();\n                    return image;\n                } else {\n                    throw new Error('Image Export failed. Unable to export instantiate kendo.drawing.canvas.Surface');\n                }\n            }\n        };\n        services.IntlService.register({\n            format: function (format) {\n                return kendo.format.apply(null, [format].concat(Array.prototype.slice.call(arguments, 1)));\n            },\n            toString: kendo.toString,\n            parseDate: kendo.parseDate,\n            firstDay: function () {\n                return kendo.culture().calendars.standard.firstDay;\n            }\n        });\n        services.TemplateService.register({ compile: kendo.template });\n        dataviz.Point2D = dataviz.Point;\n        dataviz.Box2D = dataviz.Box;\n        dataviz.mwDelta = function (e) {\n            return dataviz.mousewheelDelta(e.originalEvent);\n        };\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.core', [\n        'dataviz/core/kendo-core',\n        'dataviz/core/core'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.core',\n        name: 'Core',\n        description: 'The DataViz core functions',\n        category: 'dataviz',\n        depends: [\n            'core',\n            'drawing'\n        ],\n        hidden: true\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}