{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","$","normalizeText","text","String","replace","REPLACE_REGEX","SPACE","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","styleKey","cacheKey","cachedResult","baselineMarker","textStr","box","_baselineMarker","cloneNode","textContent","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","findAxisByName","name","axes","idx","prepareUserOptions","ChartAxis","countNumbers","values","num","count","isNumber","getField","field","row","getter","evalOptions","context","state","dryRun","defaults","depth","needsEval","property","propValue","excluded","MAX_EXPAND_DEPTH","inArray","hasOwnProperty","isFunction","valueOrDefault","isObject","categoriesCount","series","seriesCount","categories","Math","max","data","toGeometryPoint","lintPoint","stepAxis","stepDir","axis","dir","result","GeometryPoint","anyHasZIndex","elements","defined","zIndex","hasGradientOverlay","overlay","gradient","forEach","callback","forEachReverse","areNumbers","hasValue","wrapData","seriesItem","isArray","paneID","ID","appendIfNotNull","array","element","segmentVisible","fields","index","pointVisibility","visible","bindSegments","pointData","points","sum","SeriesBinder","bindPoint","valueFields","isString","parseFloat","abs","total","equalsIgnoreCase","a","b","toLowerCase","filterSeriesByType","types","currentSeries","seriesTypes","concat","type","getDateField","intlService","parseDate","isDateAxis","axisOptions","sampleCategory","dateCategory","Date","DATE","singleItemOrArray","seriesMissingValues","missingValues","AREA_REGEX","test","stack","ZERO","INTERPOLATE","hasValue$1","item","dataviz","convertableToNumber","findNext","ref","pointHasValue","outPoint","start","min","getter$$1","hasItem","createOutOfRangePoints","range","minPoint","maxPoint","hasMinPoint","hasMaxPoint","_outOfRangeMinPoint","_outOfRangeMaxPoint","isSingleAxis","pane","some","vertical","axisGroupBox","axisBox","contentBox","lineBox","wrap","clone","Box","paneAnchor","anchor","isTransparent","color","setValue","fieldName","target","parentObj","indexOf","split","shift","updateAxisOptions","targetOptions","axesOptions","CategoryAxis","categoryAxis","valueAxis","axisIndex","groupSeries","axisIx","grep","s","preventDefault","_defaultPrevented","acceptKey","e","mouseKey","event","accept","ctrlKey","shiftKey","altKey","toChartAxisRanges","axisRanges","axisRange","ranges","createDiv","className","closestHandle","hasClasses","updateAxisOptions$1","yAxis","xAxis","tooltipAlignment","angle","horizontal","radians","rad","sine","round","sin","DEFAULT_PRECISION","cosine","cos","RAD_60","CENTER","RIGHT","LEFT","RAD_30","BOTTOM","TOP","intersection","b1","b2","ua","uat","x","y","ub","Point","xComparer","groupBySeriesIx","segments","segment","seriesSegments","seriesIx","updateAxisOptions$2","resolveAxisAliases","alias","aliases","AXIS_NAMES","pointByCategoryName","category","applyAxisDefaults","themeOptions","mapAxisOptions","axisColor","axisDefaults","themeAxisDefaults","axisName","line","labels","title","applySeriesDefaults","seriesType","baseOptions","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","tooltip","_defaults","bar","column","rangeColumn","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","last","transpose","rows","rowIx","colCount","colIx","rowCount","clearMissingValues","originalOptions","fieldValue","originalValue","nullValue","DATA_FIELDS","triggerPaneRender","panes","notifyRender","datavizConstants","MAX_VALUE","MIN_VALUE","VALUE","WHITE","CIRCLE","X","Y","BLACK","ARC","ChartElement","alignPathToPixel","setDefaultOptions","eventElement","getTemplate","TextBox","ShapeElement","getSpacing","CurveProcessor","append","styleValue","BoxElement","limitValue","elementStyles","bindEvents","services","unbindEvents","support","drawing","Path","Animation","AnimationFactory","Group","Color","geometry","transform","ChartPane","ChartPlotArea","Aggregates","STD_ERR","STD_DEV","percentRegex","standardDeviationRegex","ErrorRangeCalculator","browser","INITIAL_ANIMATION_DURATION","FADEIN","GLASS","BORDER_BRIGHTNESS","TOOLTIP_OFFSET","START_SCALE","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","LINE_MARKER_SIZE","GAP","ABOVE","BELOW","SMOOTH","STEP","AREA","BAR","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","COLUMN","DONUT","FUNNEL","HEATMAP","HORIZONTAL_WATERFALL","LINE","OHLC","PIE","POLAR_AREA","POLAR_LINE","POLAR_SCATTER","RADAR_AREA","RADAR_COLUMN","RADAR_LINE","RANGE_AREA","RANGE_BAR","RANGE_COLUMN","SCATTER","SCATTER_LINE","VERTICAL_AREA","VERTICAL_BOX_PLOT","VERTICAL_BULLET","VERTICAL_LINE","VERTICAL_RANGE_AREA","WATERFALL","EQUALLY_SPACED_SERIES","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","LEGEND_ITEM_LEAVE","SERIES_CLICK","SERIES_HOVER","SERIES_OVER","SERIES_LEAVE","PLOT_AREA_CLICK","PLOT_AREA_HOVER","PLOT_AREA_LEAVE","DRAG","DRAG_END","DRAG_START","ZOOM_START","ZOOM","ZOOM_END","SELECT_START","SELECT","SELECT_END","RENDER","SHOW_TOOLTIP","HIDE_TOOLTIP","PANE_RENDER","LOGARITHMIC","CATEGORY","INSIDE_END","INSIDE_BASE","OUTSIDE_END","MOUSEWHEEL","MOUSEWHEEL_DELAY","constants","DEFAULT_ERROR_BAR_WIDTH","ErrorBarBase","CategoricalErrorBar","CategoricalChart","PointEventsMixin","NoteMixin","LinePoint","LineSegment","StepLineMixin","StepLineSegment","SplineSegment","LineChartMixin","ClipAnimation","ClipAnimationMixin","LineChart","AreaSegment","StepAreaSegment","SplineAreaSegment","AreaChart","AxisGroupRangeTracker","BarLabel","BAR_ALIGN_MIN_WIDTH","Bar","ClusterLayout","StackWrap","BarChart","Candlestick","CandlestickChart","BoxPlot","VerticalBoxPlot","BoxPlotChart","ScatterErrorBar","ScatterChart","Bubble","BubbleChart","Target","Bullet","BulletChart","BaseTooltip","CrosshairTooltip","Crosshair","ChartContainer","Pane","PlotAreaBase","allPaneAxes","PlotAreaEventsMixin","SeriesAggregator","DefaultAggregates","RangeBar","RangeBarChart","RangeLinePoint","AUTO","DEFAULT_FROM_FORMAT","DEFAULT_TO_FORMAT","RangeAreaPoint","RangeAreaSegment","SplineRangeAreaSegment","StepRangeAreaSegment","RangeAreaChart","OHLCPoint","OHLCChart","WaterfallSegment","WaterfallChart","AREA_SERIES","OUT_OF_RANGE_SERIES","CategoricalPlotArea","Highlight","Pannable","ZoomSelection","MousewheelZoom","LegendLayout","LegendItem","HORIZONTAL","POINTER","CUSTOM","Legend","PlotAreaFactory","ZOOM_ACCELERATION","SELECTOR_HEIGHT_ADJUST","Selection","Tooltip","SharedTooltip","BarChartAnimation","BubbleAnimation","FadeInAnimation","PieAnimation","ScatterLineChart","XYPlotArea","PieSegment","PieChartMixin","PIE_SECTOR_ANIM_DELAY","PieChart","PiePlotArea","DonutSegment","DONUT_SECTOR_ANIM_DELAY","DonutChart","DonutPlotArea","DEFAULT_PADDING","PolarPlotAreaBase","PolarScatterChart","PolarLineChart","SplinePolarAreaSegment","PolarAreaSegment","PolarAreaChart","PolarPlotArea","RadarLineChart","SplineRadarAreaSegment","RadarAreaSegment","RadarAreaChart","RadarSegment","RadarClusterLayout","RadarStackLayout","RadarBarChart","RadarPlotArea","FunnelSegment","FunnelChart","FunnelPlotArea","colorScale","HeatmapPoint","HeatmapChart","HeatmapPlotArea","COLOR","FIRST","FROM","MAX","MIN","NOTE_TEXT","SUMMARY_FIELD","TO","MOUSEMOVE","CONTEXTMENU","MOUSELEAVE","MOUSEMOVE_DELAY","Chart","_axis","point","getCategory","getValue","slot","from","to","limit","valueRange","visual","chartsVisual","chartContainer","_pane","plotArea","_plotArea","backgroundVisual","_bgVisual","sumOrNull","avg","first","_valueFields","_otherFields","_nullValue","_undefinedValue","register","otherFields","this$1","_makeValue","undefined","canonicalFields","pointIx","fieldData","srcValueFields","srcPointFields","Array","slice","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","RegExp","errorValue","initGlobalRanges","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","low","high","globalRange","getStandardError","binder","OBJECT","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","squareDifferenceSum","pow","msie","isVertical","chart","fn","call","reflow","targetBox","linePoints","endCaps","getAxis","valueBox","getSlot","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","y1","y2","x1","x2","boxSize","floor","createVisual","rect","toRect","sender","getSender","createDefaultVisual","defaultVisual","lineOptions","stroke","dashType","moveTo","lineTo","animation","delay","seriesValueAxis","chartService","seriesCategoryAxis","valueAxisRanges","categoryPoints","seriesPoints","seriesOptions","_evalSeries","render","traverseDataPoints","addValue","bind","pointOptions","pointType","prototype","invertAxes","plotValue","categoryIx","otherValues","categorySum","other","otherStack","isStacked100","group","plotRange","startValue","positive","prevValue","isStackedBar","otherValue","axisCrossingValue","isStacked","STRING","categoryAxisCrossingValue","stackLimits","stackName","pIx","isFinite","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","sparseArrayLimits","addErrorBar","errorBars","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","errorBar","updateRange","createPoint","owner","noteText","dataItem","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","valueSlot","pointSlot","categorySlot","aboveAxis","stackValue","percentage","reflowPoint","reflowCategories","clip","limitPoints","limitPoint","limittedSlot","limitSlot","equals","reverse","crossingValues","axisCrossingValues","slotX","slotY","seriesIx$1","currentCategory","seriesIx$2","_outOfRangeCallback","categoryAt","_bindPoint","outOfRangePoint","bindCache","_bindCache","formatPointValue","format","auto","click","trigger","eventArgs","hover","over","out","runningTotal","originalEvent","createNote","notes","label","note","Note","tooltipTracking","labelTemplate","labelText","markers","_rendered","createMarker","formatValue","align","vAlign","margin","left","right","markerBorder","background","border","brightness","toHex","rotation","opacity","markerBox","_childBox","childBox","noteTargetBox","reflowLabel","position","alignTo","createHighlight","highlight","defaultColor","shadow","getElement","highlightVisual","highlightVisualArgs","halfSize","paddingBox","Rect","tooltipAnchor","horizontalAlign","verticalAlign","clipBox","showTooltip","overlaps","overlapsBox","unclipElements","noclip","padding","HIGHLIGHT_ZINDEX","toGeometryPoints","customVisual","segmentVisual","fromPoints","closed","close","aliasFor","coords","parent","getNearestPoint","calculateStepPoints","stepPoint","justified","previousPoint","curveProcessor","curve","process","apply","renderSegments","lastSegment","sortedPoints","pointCount","_segments","sortPoints","createSegment","_addSegment","children","unshift","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","setup","_setEnd","step","pos","interpolateValue","topRight","bottomRight","suspend","setX","resume","duration","createAnimation","clipPath","root","getRoot","transitions","fromRect","_setChildrenAnimation","animationPoints","supportsPointInactiveOpacity","prevSegment","stackPoints","createFill","fill","createStroke","lineCap","strokeSegments","_strokeSegments","createStrokeSegments","segmentsFromPoints","stackSegments","createStackSegments","Segment","hasStackSegment","fillSegments","hasStackSegments","fillToAxes","fillPath","crossingValue","endSlot","firstPoint","lastPoint","end","controlOut","controlIn","previousSegment","_gapStackPoints","stackPoint","_stackPoints","endIdx","pointOffset","currentSeriesIx","gapStackPoint","startIdx","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","update","chartAxisRanges","chartRange","reset","query","content","textBox","textOptions","labelBox","top","bottom","alignToClipBox","parentBox","createLabel","rectVisual","createRect","path","strokeOpacity","getBorderColor","lineJoin","createGradientOverlay","baseColor","_brightness","borderColor","rtl","gap","spacing","slots","slotSize","child","currentChild","positionAxis","childrenCount","snapTo","clusterType","stackType","cluster","stackWrap","labelOptions","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","zeroSlot","stackAxis","childrenLength","_setAnimationOptions","pointVisual","origin","mid","ocSlot","open","lhSlot","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","container","set","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","whiskerSlot","boxSlot","medianSlot","meanSlot","q1","q3","reflowBoxSlot","lower","upper","reflowWhiskerSlot","median","mean","meanPoints","calcMeanPoints","whiskerPoints","calcWhiskerPoints","medianPoints","calcMedianPoints","renderOutliers","outlierValue","markersBorder","shape","outliers","outerFence","extremes","reflowOutliers","move","whiskers","CROSS","filterOutliers","items","seriesAxes","_initFields","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","intl","xAxisName","yAxisName","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","ref$1","radius","highlightGroup","Circle","createGradient","stops","offset","_maxSize","negativeValues","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","PI","targetValueSlot","targetSlotX","targetSlotY","targetSlot","bodyVisual","create","bulletOptions","isNaN","getStyle","pointColor","backgroundColor","font","borderWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","show","tooltipOptions","isDark","notify","hide","destroy","crosshair","formatService","initAxisName","showAt","stickyMode","formattedValue","dateFormats","baseUnit","getAnchor","ref_options","bbox","bottomLeft","translate","topLeft","moveLine","lineEnd","getBox","dim","lineStart","pointCategoryIndex","axisLineBox","currentAxis","shouldClip","_clipBox","chartsBox","clipRect","unclipLabels","stackRoot","j","charts","isStackRoot","id","createTitle","titleOptions","Title","buildTitle","appendAxis","appendAxisAt","splice","appendChart","empty","i$1","removeAxis","removeChart","pop","visualStyle","renderComplete","createGridLines","clipRoot","gridLines","altAxis","allAxes","vGridLines","hGridLines","refresh","clear","renderVisual","axisValueField","length$1","idx$1","axis$1","lineBox$1","service","getService","paneIndex","shrinkToFit","initFields","initSeries","legend","crosshairs","createPanes","createCrosshairs","currentPane","paneDefaults","paneOptions","panesLength","crosshairOptions","currentCrosshair","removeCrosshairs","hideCrosshairs","findPane","matchingPane","findPointPane","containsPoint","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","itemLabelOptions","markerColor","inactiveItems","inactiveItemsLabels","visibleInLegend","active","groupAxes","paneIx","paneAxes","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","detachLabels","reflowAxes","reflowCharts","redraw","panesArray","cleanGradients","crossingAxes","valuesToAdd","defaultValue","alignAxisTo","targetAxis","targetCrossingValue","slotEdge","targetEdge","alignAxes","paneId","anchorCrossings","pane$1","paneId$1","visible$1","anchor$1","anchorCrossings$1","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","COORD_PRECISION","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","shrinked","overflowY","fitAxes","paneBox","offsetY","currentAxis$1","offsetX","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","currentPane$1","i$2","currentPane$2","remainingHeight","remainingPanes","autoHeightPanes","parseInt","backgroundBox","axisA","axisB","axesCount","chartsBoxes","boxes","addBackgroundPaths","multipath","paths","backgroundContainsPoint","bg","MultiPath","appendVisual","pointsByCategoryIndex","categoryIndex","pointsBySeriesIndex","seriesIndex","filterPoints","pointsBySeriesName","findPoint","paneByPoint","detachAxisGroupLabels","labelAxis","labelAxisCount","createLabelAxis","edge","onAxis","END","START","plotBands","reduce","acc","_dispatchEvent","defaultAggregates","fieldAggregate","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","aggregatePoints","srcPoints","srcValues","_bindPoints","firstDataItem","dataItems","_bindField","aggregates","fromOptions","toOptions","labelFrom","_createLabel","labelTo","plotLimits","initLabelsFormat","fromPoint","toPoint","copyFields","fromBox","toBox","positionLabels","fromLabelPosition","toLabelPosition","toPoints","fromSegments","toPath","fromPath","createCurveSegments","segmentType","fromSlot","toSlot","oPoints","cPoints","lhPoints","oSlot","cSlot","createSegments","summary","totalCategories","prevPoint","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","paneSeries","visibleSeries","groups","groupIx","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createRangeAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","dateAxis","srcSeries","processedSeries","_currentPointsCache","_seriesPointsCache","categoryField","aggregateSeries","filterSeries","outOfRangePoints","dataLength","_seriesMax","currentRangeIndices","clearSeriesPointsCache","seriesSourcePoints","srcCategories","srcData","getFn","categoriesHash","mapCategories","totalIndex","aggregator","categoryItem","categoryIdx","totalCount","categoriesToAdd","defaultPaneName","paneName","stackableChartOptions","firstSeries","axisSeries","categoryAxes","unique","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","rangeAreaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","definitions","isJustified","DateCategoryAxis","defaultAxisRange","axisType","tracker","defaultRange","roundToMajorUnit","LogarithmicAxis","NumericAxis","eventType","_eventCoordinates","pointPane","_points","arrayPoints","toggleHighlight","hasHighlight","togglePointHighlight","toggleHandler","toggle","isHighlighted","_active","_panAxes","pan","delta","lock","updatedAxes","limitRange","marqueeColor","marquee","_marquee","removeElement","setStyles","styles","zoomPane","_zoomPane","_elementOffset","_zoomPaneClipBox","pageX","pageY","chartElement","elementOffset","_selectionPosition","elementOffset$$1","selectionPosition","_updateAxisRanges","zoom","pointsRange","startLocation","location","updateRanges","zoomRange","legendItem","Layout","lineSpacing","orientation","alignItems","clippedBBox","rectToBox","addVisual","createContainer","FloatElement","markerOptions","cursor","eventSink","_itemOverlay","widget","args","_legendItemHover","pointIndex","_unsetActivePoint","renderChildren","createContainers","createLegendTitle","createItems","userAlign","itemsContainer","hasTitle","innerElement","hasItems","legendBox","containerCustomReflow","containerReflow","alignTarget","containerBox","createTitleLayout","appendTitleLayoutContent","layout","_registry","registry","match","observer","_dateAxis","initOptions","createElements","_index","onPane","selection","leftHandle","rightHandle","selectionStyles","leftHandleHeight","rightHandleHeight","wrapper","direction","leftMask","rightMask","borderLeftWidth","borderRightWidth","mousewheel","_mousewheelHandler","_mousewheel","obj","_domEvents","DomEventsBuilder","stopPropagation","_start","_move","_end","tap","_tap","press","_press","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","clearTimeout","_mwTimeout","_state","_rangeEventArgs","_value","moveTarget","handle","addClass","oldRange","span","scale","removeClass","rightClick","which","mousewheelDelta","expand","setTimeout","p0","_toModelCoordinates","touches","p1","_slot","rightMaskWidth","distance","leftMaskWidth","fromValue","toValue","zDir","_current","tooltipPoints","_slotAnchor","_defaultAnchor","shared","categoryText","categoryFormat","centerPoint","slotCenter","fromScale","abort","scaleX","scaleY","easing","fadeTo","missingValue","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","DateValueAxis","axisPane$1","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","sector","themeLabels","autoTextColor","theme","animationDelay","labelHeight","labelWidth","lp","labelsOptions","labelsDistance","middle","startAngle","innerRadius","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","ShapeBuilder","createRing","midAndle","midPoint","DEFAULT_FONT","createLegendItem","pointVisible","legendOptions","legendItems","colorsCount","anglePerValue","constantAngle","currentAngle","explode","seriesColors","Ring","evalSegmentOptions","segmentOptions","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","boxCenter","leftSideLabels","rightSideLabels","seriesConfig","seriesConfigs","setRadius","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","lr","firstBox","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelsCount","labelDistance","boxY","hAlignLabel","connectorsColor","connectorLine","sr","crossing","connectors","_connectorLines","pointInCircle","pieCenter","bboxBottom","find","autoFit","reverseValue","second","originalX","sector_center","cx","cy","t","createPieChart","pieChart","totalSize","seriesWithoutSize","holeSize","currentSize","currentSeries$1","createDonutChart","donutChart","createPolarAxis","createValueAxis","polarAxis","axisDefaultRange","valueAxisOptions","RadarLogarithmicAxis","RadarNumericAxis","valueAxisBox","heightDiff","valueRadius","onCircle","_polarAxisCenter","centerSegment","_hasMissingValuesGap","PolarAxis","majorGridLines","minorGridLines","scatterChart","xValue","yValue","isFirstDataPoint","isLastDataPoint","slotAngle","slotSector","childSector","RadarCategoryAxis","_hasBarCharts","_isStacked100","chartOptions","chartBox","createPath","labelPadding","dynamicSlopeReflow","totalHeight","lastUpperSide","previousOffset","previousHeight","nextSegment","nextPercentage","firstSegment","maxSegment","dynamicHeight","segmentSpacing","constantSlopeReflow","decreasingWidth","neckRatio","topMostWidth","finalNarrow","dynamicSlope","createFunnelChart","funnelChart","minLightnessOffset","parseColor","hsl","toHSL","l","toCss","labelColor","isRoundRect","ROUNDED_RECT","halfBorderWidth","borderRadius","setRange","indexX","indexY","xRange","yRange","ref$2","xIndex","yIndex","xIn","yIn","bindCategories","createAxisLabels","xCategories","yCategories","createHeatmapChart","firstCategory","errorLow","errorHigh","userOptions","observers","addObserver","ChartService","_initElement","_originalOptions","_theme","_initTheme","_initHandlers","_initSurface","FontLoader","preloadFonts","fontLoaded","_destroyed","_redraw","_attachEvents","_setElementClass","firstChild","seriesCopies","applyDefaults","applySeriesColors","getSize","chartArea","resize","force","hasSize","_resize","_selections","_destroySelections","_setupSelection","_noTransitionsRedraw","_model","findPaneByName","findPaneByIndex","filter","seriesName","categoryName","togglePointsHighlight","_highlight","_sharedTooltip","_tooltip","hideTooltip","surface","_surfaceWrap","elementSize","renderAs","_destroySurface","Surface","_surfaceMouseenterHandler","_surfaceMouseleaveHandler","model","_getModel","_destroyView","traverse","draw","play","_createTooltip","_createPannable","_createZoomSelection","_createMousewheelZoom","_navState","_cancelDomEvents","exportVisual","exportOptions","currentOptions","pannable","_pannable","zoomable","_zoomSelection","_mousewheelZoom","_toggleDragZoomEvents","allowDrag","requiresHandlers","allowZoom","_dragZoomEnabled","touchAction","_touchAction","_toggleDomEvents","drag","domEvents","toggleDrag","toggleZoom","_createSharedTooltip","seriesColor","colors","_createPlotArea","RootElement","_modelOptions","DEFAULT_WIDTH","DEFAULT_HEIGHT","skipSeries","selections","select","_selectStart","_select","_selectEnd","_clickHandler","_click","_mouseleaveHandler","_mouseleave","_mouseover","_mouseout","_mousemove","throttle","removeObserver","eventNames","isDefaultPrevented","_toDocumentCoordinates","obj$1","_shouldAttachMouseMove","_hoveredPoint","hovered","cancel","_stopChartHandlers","_gestureDistance","suspendTracking","_zooming","resumeTracking","previousGestureDistance","scaleDelta","mousewheelZoom","_drawingChartElement","leave","_startNavigation","_suppressHover","panning","ranges$1","translateRange","_endNavigation","prevented","totalDelta","scaleRange","chartEvent","_getChartElement","eventTarget","closest","coordinates","eventCoordinates","_elementPadding","_padding","clientX","clientY","inverseTransform","elementScale","invert","drawingElement","sharedTooltip","_startHover","_trackSharedTooltip","_propagateClick","handlingTap","activePoint","multipleSeries","hasInactiveOpacity","_activePoint","_hasInactiveOpacity","_updateHoveredPoint","_displayTooltip","_displayInactiveOpacity","_activeChartInstance","_updateSeriesOpacity","_applySeriesOpacity","highlightPoints","inactivePoints","chartInstance","_chartInstanceFromPoint","_getInactivePoints","_getInactiveOpacityForSeries","_getAllPointsOfType","constructor","hoveredPoint","resetOpacity","currSeries","defaultOpacity","inactiveOpacity","_getDefaultOpacityForSeries","activeSeries","hasDefaultInactiveOpacity","defaultInactiveOpacity","seriesInactiveOpacity","DEFAULT_SERIES_OPACITY","_mouseMoveTrackHandler","_mouseMoveTracking","seriesPoint","overPlotArea","_trackCrosshairs","pointArgs","hoverArgs","_tooltipCategoryIx","_sharedHighlight","hideElements","keepTooltipOpen","_deferRedraw","_clearRedrawTimeout","_redrawTimeout","clearInterval","autoBind","bindCategoryAxisFromSeries","dataIx","dataRow","uniqueCategories","HashMap","bindable","_isBindable","transitionsState","updateMouseMoveHandler","applyOptions","setOptions","setDirection","setIntlService","noTransitionsRedraw","unbind","createProxyMember","instance","_instance","arguments","nameTemplate","seriesClone","legacyTemplate","groupNameTemplate","logToConsole","template","_slotCount","_groupIx","_groupValue","normalizeStyle","ChartInstanceObserver","proxyMembers","SeriesVisibilityState","geom","ChartSeries","NS","outerWidth","_outerWidth","outerHeight","_outerHeight","KendoChart","Widget","ui","DataSource","InstanceObserver","proxy","MOUSELEAVE_NS","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","NOTE_LEAVE","DOCUMENT_ELEMENT","documentElement","CHANGE","DATABOUND","LEAVE","MOUSEDOWN","Observable","TOOLTIP_ANIMATION_DURATION","TOOLTIP_SHOW_DELAY","TOOLTIP_INVERSE","SHARED_TOOLTIP_CLASS","RTL","events","UserEvents","global","multiTouch","fastTap","handlerMap","legendItemClick","dataSource","_seriesVisibility","_initDataSource","_bindSeries","_bindCategories","dimensions","_setEvents","_getThemeOptions","_sourceSeries","setDataSource","_hasDataSource","_onDataChanged","_dataChangeHandler","_hasData","fetch","off","_destroyCrosshairTooltips","findSeries","findSeriesByName","_createSeries","findSeriesByIndex","originalChartArea","_seriesOptions","on","relatedTarget","autoHide","themes","themeName","SASS_THEMES","autoTheme","_initChart","_createChart","_isRtl","_onInit","_initTooltip","tooltips","_crosshairTooltips","_getCrosshairTooltip","_showTooltip","_hideTooltip","_onRender","_copyMembers","names","_events","_tooltipleave","_onLegendItemClick","_legendItemClick","save","_bindData","groupedSeries","view","grouped","seriesVisibility","read","applyByGroup","applyByIndex","seriesData","categoriesData","_bindCategoryAxis","isRtl","css","ExportMixin","PDFMixin","plugin","action","persistSeriesVisibility","saveState","mobileScrollerSelector","useWithBlock","paramName","attr","_mobileScroller","downEvent","applyEventMap","guid","_closeTooltipHandler","_closeTooltip","_clearShowTimeout","remove","sharedTemplate","_offset","_ensureElement","stop","animate","showTimeout","_measure","zoomLevel","viewport","scrollTop","pageYOffset","scrollLeft","pageXOffset","movable","_fit","toggleClass","_sharedContent","_pointContent","html","forceHide","_hideElement","is","nameColumn","colorMarker","colspan","appendTo","contains","fadeOut","always","tooltipTemplate","xLow","xHigh","yLow","yHigh","viewPortSize","output","_chart","_options","_filterPoints","_clearFields","toggleVisibility","hasFilter","_filterData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,qBAAsB,cAAeD,IAC9C,YACG,SAAUE,GAqDP,QAASC,GAAcC,GACnB,OAAcA,EAAPC,IAAaC,QAAQC,EAAeC,GAE/C,QAASC,GAAUC,GAAnB,GAEaC,GADLC,IACJ,KAASD,IAAOD,GACZE,EAAMC,KAAKF,EAAMD,EAAOC,GAE5B,OAAOC,GAAME,OAAOC,KAAK,IAE7B,QAASC,GAAQC,GAAjB,GAEaC,GADLC,EAAO,UACX,KAASD,EAAI,EAAGA,EAAID,EAAIG,SAAUF,EAC9BC,IAASA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IACzEA,GAAQF,EAAII,WAAWH,EAE3B,OAAOC,KAAS,EAEpB,QAASG,KACL,OACIC,MAAO,EACPC,OAAQ,EACRC,SAAU,GA0DlB,QAASC,GAAYtB,EAAMuB,EAAOC,GAC9B,MAAOC,GAAYC,QAAQC,QAAQ3B,EAAMuB,EAAOC,GAtIvD,GAEOI,GAiDAzB,EACAC,EA0BAyB,EACAC,EAKAL,CAnFJM,QAAOC,MAAMC,KAAOF,OAAOC,MAAMC,SAC7BL,EAAWI,MAAME,MAAMC,QACvBC,KAAM,SAAUC,GACZC,KAAKC,MAAQF,EACbC,KAAKE,QAAU,EACfF,KAAKG,SAETC,IAAK,SAAUnC,EAAKoC,GAAf,GACGC,GAAMN,KAAKG,KACXI,GACAtC,IAAKA,EACLoC,MAAOA,EAEXC,GAAIrC,GAAOsC,EACNP,KAAKQ,OAGNR,KAAKS,MAAMC,MAAQH,EACnBA,EAAMI,MAAQX,KAAKS,MACnBT,KAAKS,MAAQF,GAJbP,KAAKQ,MAAQR,KAAKS,MAAQF,EAM1BP,KAAKE,SAAWF,KAAKC,OACrBK,EAAIN,KAAKQ,MAAMvC,KAAO,KACtB+B,KAAKQ,MAAQR,KAAKQ,MAAME,MACxBV,KAAKQ,MAAMG,MAAQ,MAEnBX,KAAKE,WAGbU,IAAK,SAAU3C,GACX,GAAIsC,GAAQP,KAAKG,KAAKlC,EACtB,IAAIsC,EAeA,MAdIA,KAAUP,KAAKQ,OAASD,IAAUP,KAAKS,QACvCT,KAAKQ,MAAQD,EAAMG,MACnBV,KAAKQ,MAAMG,MAAQ,MAEnBJ,IAAUP,KAAKS,QACXF,EAAMI,QACNJ,EAAMI,MAAMD,MAAQH,EAAMG,MAC1BH,EAAMG,MAAMC,MAAQJ,EAAMI,OAE9BJ,EAAMI,MAAQX,KAAKS,MACnBF,EAAMG,MAAQ,KACdV,KAAKS,MAAMC,MAAQH,EACnBP,KAAKS,MAAQF,GAEVA,EAAMF,SAIrBxC,EAAgB,eAChBC,EAAQ,IA0BRyB,GAAoBsB,mBAAoB,GAEpB,mBAAbC,YACPtB,EAAoBsB,SAASC,cAAc,OAC3CvB,EAAkBP,MAAM+B,QAAU,wQAElC7B,EAAcO,MAAME,MAAMC,QAC1BC,KAAM,SAAUmB,GACZjB,KAAKkB,OAAS,GAAI5B,GAAS,KAC3BU,KAAKiB,QAAUzD,EAAEqC,UAAWN,EAAiB0B,IAEjD5B,QAAS,SAAU3B,EAAMuB,EAAOgC,GAAvB,GAODE,GACAC,EACAC,EAIAtB,EACAb,EACAoC,EACKrD,EACDoC,EAKJkB,CAlBJ,IAHgB,SAAZN,IACAA,MAEgB,SAATvD,GAAiC,OAATA,EAC/B,MAAOkB,IAKX,IAHIuC,EAAWpD,EAAUkB,GACrBmC,EAAW9C,EAAQZ,EAAOyD,GAC1BE,EAAerB,KAAKkB,OAAON,IAAIQ,GAE/B,MAAOC,EAEPtB,GAAOnB,IACPM,EAAa+B,EAAQO,KAAOhC,EAC5B8B,EAAiBtB,KAAKyB,kBAAkBC,WAAU,EACtD,KAASzD,IAAOgB,GACRoB,EAAQpB,EAAMhB,GACG,SAAVoC,IACPnB,EAAWD,MAAMhB,GAAOoC,EAgBhC,OAbIkB,GAAUN,EAAQxD,iBAAkB,EAAQA,EAAcC,GAAeA,EAAPC,GACtEuB,EAAWyC,YAAcJ,EACzBrC,EAAW0C,YAAYN,GACvBR,SAASe,KAAKD,YAAY1C,GACtBqC,EAAQ7C,SACRqB,EAAKlB,MAAQK,EAAW4C,YAAc9B,KAAKiB,QAAQJ,mBACnDd,EAAKjB,OAASI,EAAW6C,aACzBhC,EAAKhB,SAAWuC,EAAeU,UAAYhC,KAAKiB,QAAQJ,oBAExDd,EAAKlB,MAAQ,GAAKkB,EAAKjB,OAAS,GAChCkB,KAAKkB,OAAOd,IAAIgB,EAAUrB,GAE9Bb,EAAW+C,WAAWC,YAAYhD,GAC3Ba,GAEX0B,gBAAiB,WACb,GAAIU,GAASrB,SAASC,cAAc,MAEpC,OADAoB,GAAOlD,MAAM+B,QAAU,0DAA4DhB,KAAKiB,QAAQJ,mBAAqB,eAAiBb,KAAKiB,QAAQJ,mBAAqB,uBACjKsB,KAGfhD,EAAYC,QAAU,GAAID,GAI1BO,MAAM0C,WAAW1C,MAAMC,MACnBL,SAAUA,EACVH,YAAaA,EACbH,YAAaA,EACbjB,UAAWA,EACXO,QAASA,EACTb,cAAeA,KAErBgC,OAAOC,MAAM2C,SACC,kBAAV9E,SAAwBA,OAAO+E,IAAM/E,OAAS,SAAUgF,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUlF,EAAGC,QACVA,OAAO,6BACH,aACA,cACA,gBACA,sBACDD,IACL,YACG,SAAUE,GAyFP,QAASkF,GAAeC,EAAMC,GAC1B,IAAK,GAAIC,GAAM,EAAGA,EAAMD,EAAKlE,OAAQmE,IACjC,GAAID,EAAKC,GAAK5B,QAAQ0B,OAASA,EAE3B,MADAC,GAAKC,GAAKC,qBACH,GAAIC,IAAUH,EAAKC,IAqBtC,QAASG,GAAaC,GAAtB,GAGazE,GACD0E,EAHJxE,EAASuE,EAAOvE,OAChByE,EAAQ,CACZ,KAAS3E,EAAI,EAAGA,EAAIE,EAAQF,IACpB0E,EAAMD,EAAOzE,GACb4E,GAASF,IACTC,GAGR,OAAOA,GAyEX,QAASE,GAASC,EAAOC,GACrB,GAAY,OAARA,EACA,MAAOA,EAEX,IAAI3C,GAAM4C,GAAOF,GAAO,EACxB,OAAO1C,GAAI2C,GAkgBf,QAASE,GAAYxC,EAASyC,EAASC,EAAOC,GAA9C,GAOQC,GACAC,EACAC,EAKKC,EAEGC,CALZ,IAVc,SAAVN,IACAA,MAEW,SAAXC,IACAA,GAAS,GAETC,EAAWF,EAAME,SAAWF,EAAME,aAClCC,EAAQH,EAAMG,MAAQH,EAAMG,OAAS,EACrCC,GAAY,EAChBJ,EAAMO,SAAWP,EAAMO,aACnBJ,EAAQK,GACR,MAAO,KAEX,KAASH,IAAY/C,IACZmD,GAAQJ,EAAUL,EAAMO,WAAajD,EAAQoD,eAAeL,KACzDC,EAAYhD,EAAQ+C,GACpBM,GAAWL,IACXF,GAAY,EACPH,IACD3C,EAAQ+C,GAAYO,GAAeN,EAAUP,GAAUG,EAASG,MAE7DQ,GAASP,KACXL,IACDD,EAAME,SAAWA,EAASG,IAE9BL,EAAMG,QACNC,EAAYN,EAAYQ,EAAWP,EAASC,EAAOC,IAAWG,EAC9DJ,EAAMG,SAIlB,OAAOC,GAEX,QAASU,GAAgBC,GAAzB,GAGalG,GAFLmG,EAAcD,EAAOhG,OACrBkG,EAAa,CACjB,KAASpG,EAAI,EAAGA,EAAImG,EAAanG,IAC7BoG,EAAaC,KAAKC,IAAIF,EAAYF,EAAOlG,GAAGuG,KAAKrG,OAErD,OAAOkG,GAm3BX,QAASI,GAAgBC,EAAWC,EAAUC,EAASC,EAAMC,GAA7D,GACQ7D,GAAMyD,EAAUzD,IAChB8D,EAAS,GAAIC,GAGjB,OAFAD,GAAOJ,GAAY1D,EAAI0D,EAAWC,GAClCG,EAAOF,GAAQ5D,EAAI4D,EAAOC,GACnBC,EAqHX,QAASE,GAAaC,GAClB,IAAK,GAAI5C,GAAM,EAAGA,EAAM4C,EAAS/G,OAAQmE,IACrC,GAAI6C,GAAQD,EAAS5C,GAAK8C,QACtB,OAAO,EAqcnB,QAASC,GAAmB3E,GACxB,GAAI4E,GAAU5E,EAAQ4E,OACtB,OAAOA,IAAWA,EAAQC,UAAiC,SAArBD,EAAQC,SAwOlD,QAASC,GAAQN,EAAUO,GACvBP,EAASM,QAAQC,GAErB,QAASC,GAAeR,EAAUO,GAAlC,GAEanD,GADLnE,EAAS+G,EAAS/G,MACtB,KAASmE,EAAMnE,EAAS,EAAGmE,GAAO,EAAGA,IACjCmD,EAASP,EAAS5C,GAAMA,EAAMnE,EAAS,GAqY/C,QAASwH,GAAWjD,GAChB,MAAOD,GAAaC,KAAYA,EAAOvE,OAmgB3C,QAASyH,GAAS9F,GACd,MAAOqF,IAAQrF,IAAoB,OAAVA,EA8oB7B,QAAS+F,GAASnF,GAAlB,GAEazC,GACD6H,EACAtB,EAHJL,EAASzD,EAAQyD,MACrB,KAASlG,EAAI,EAAGA,EAAIkG,EAAOhG,OAAQF,IAC3B6H,EAAa3B,EAAOlG,GACpBuG,EAAOsB,EAAWtB,MAClBA,GAASuB,GAAQvB,EAAK,KAAQP,GAASO,EAAK,MAC5CsB,EAAWtB,MAAQA,IA8c/B,QAASwB,KACL,MAAO,OAASC,KASpB,QAASC,GAAgBC,EAAOC,GACZ,OAAZA,GACAD,EAAMvI,KAAKwI,GAGnB,QAASC,GAAelC,EAAQmC,EAAQC,GAAxC,GAKQC,GAJAC,EAAUH,EAAOG,OACrB,OAAItB,IAAQsB,GACDA,GAEPD,EAAkBrC,EAAOqC,gBACzBA,EACOA,EAAgBD,GAD3B,QAIJ,QAASG,GAAavC,GAAtB,GAKa7B,GACDqE,EACA7G,EANJ0E,EAAOL,EAAOK,KACdoC,KACAC,EAAM,EACNjE,EAAQ,CACZ,KAASN,EAAM,EAAGA,EAAMkC,EAAKrG,OAAQmE,IAC7BqE,EAAYG,GAAajI,QAAQkI,UAAU5C,EAAQ7B,GACnDxC,EAAQ6G,EAAUK,YAAYlH,MAC9BmH,GAASnH,KACTA,EAAQoH,WAAWpH,IAEnB+C,GAAS/C,IACT6G,EAAUF,QAAUJ,EAAelC,EAAQwC,EAAUL,OAAQhE,MAAS,EACtEqE,EAAU7G,MAAQwE,KAAK6C,IAAIrH,GAC3B8G,EAAOhJ,KAAK+I,GACRA,EAAUF,UACVI,GAAOF,EAAU7G,OAEP,IAAVA,GACA8C,KAGJgE,EAAOhJ,KAAK,KAGpB,QACIwJ,MAAOP,EACPD,OAAQA,EACRhE,MAAOA,GAGf,QAASyE,GAAiBC,EAAGC,GACzB,MAAID,IAAKC,EACED,EAAEE,gBAAkBD,EAAEC,cAE1BF,IAAMC,EAEjB,QAASE,GAAmBtD,EAAQuD,GAApC,GAGapF,GACDqF,EAHJ5C,KACA6C,KAAiBC,OAAOH,EAC5B,KAASpF,EAAM,EAAGA,EAAM6B,EAAOhG,OAAQmE,IAC/BqF,EAAgBxD,EAAO7B,GACvBuB,GAAQ8D,EAAcG,KAAMF,IAC5B7C,EAAOnH,KAAK+J,EAGpB,OAAO5C,GAEX,QAASgD,GAAahF,EAAOC,EAAKgF,GAAlC,GAIQtK,GACAoC,CAJJ,OAAY,QAARkD,EACOA,GAEPtF,EAAM,SAAWqF,EACjBjD,EAAQkD,EAAItF,GACXoC,IACDA,EAAQmI,GAAUD,EAAa/E,GAAOF,GAAO,GAAMC,IACnDA,EAAItF,GAAOoC,GAERA,GAEX,QAASoI,GAAWC,EAAaC,GAAjC,GACQN,GAAOK,EAAYL,KACnBO,EAAeD,YAA0BE,KAC7C,QAAQR,GAAQO,GAAgBhB,EAAiBS,EAAMS,IAE3D,QAASC,GAAkBrC,GACvB,MAAwB,KAAjBA,EAAMhI,OAAegI,EAAM,GAAKA,EAG3C,QAASsC,GAAoBtE,GACzB,MAAIA,GAAOuE,cACAvE,EAAOuE,cAEXC,GAAWC,KAAKzE,EAAO2D,OAAS3D,EAAO0E,MAAQC,GAAOC,GAEjE,QAASC,GAAW7E,EAAQ8E,GAA5B,GAGalG,GAFLuD,EAASQ,GAAajI,QAAQkI,UAAU5C,EAAQ,KAAM8E,GACtDjC,EAAcV,EAAOU,WACzB,KAASjE,IAASiE,GACd,GAAIkC,GAAQC,oBAAoBnC,EAAYjE,IACxC,OAAO,EAInB,QAASqG,GAASC,GAAlB,GAQQC,GAAeC,EAPfC,EAAQH,EAAIG,MACZ1E,EAAMuE,EAAIvE,IACV2E,EAAMJ,EAAII,IACVlF,EAAM8E,EAAI9E,IACVmF,EAAYL,EAAIpG,OAChB0G,EAAUN,EAAIM,QACdxF,EAASkF,EAAIlF,OAEb7B,EAAMkH,CACV,GACIlH,IAAOwC,EACH6E,EAAQrH,KACRiH,EAAWG,EAAUpH,GACrBgH,EAAgBN,EAAW7E,EAAQoF,EAASN,aAE3CQ,GAAOnH,GAAOA,GAAOiC,IAAQ+E,EACtC,IAAIA,EACA,MAAOC,GAGf,QAASK,GAAuBzF,EAAQ0F,EAAOjH,EAAO8G,EAAWC,GAAjE,GAMYjB,GACAoB,EAAUC,EASNR,EAAUD,EAflBG,EAAMI,EAAMJ,IACZlF,EAAMsF,EAAMtF,IACZyF,EAAcP,EAAM,GAAKA,EAAM7G,EAC/BqH,EAAc1F,EAAM,EAAI3B,GACxBoH,GAAeC,KACXvB,EAAgBD,EAAoBtE,GAEpCuE,IAAkBK,IACdiB,IACAF,EAAWJ,EAAUD,EAAM,IAE3BQ,IACAF,EAAWL,EAAUnF,EAAM,MAI3ByF,IACAT,EAAWG,EAAUD,EAAM,GAC3BH,EAAgBN,EAAW7E,EAAQoF,EAASN,MAYxCa,EAXCR,EAWUC,EAVAH,GACPI,MAAOC,EACP3E,OACA2E,IAAK,EACLlF,IAAK3B,EAAQ,EACbK,OAAQyG,EACRC,QAASA,EACTxF,OAAQA,KAMhB8F,IACAV,EAAWG,EAAUnF,EAAM,GAC3B+E,EAAgBN,EAAW7E,EAAQoF,EAASN,MAYxCc,EAXCT,EAWUC,EAVAH,GACPI,MAAOjF,EACPO,IAAK,EACL2E,IAAK,EACLlF,IAAK3B,EAAQ,EACbK,OAAQyG,EACRC,QAASA,EACTxF,OAAQA,MAOpB2F,IACA3F,EAAO+F,oBAAsBJ,GAE7BC,IACA5F,EAAOgG,oBAAsBJ,IAouBzC,QAASK,GAAavF,GAClB,OAAQA,EAAKwF,KAAKhI,KAAKiI,KAAK,SAAUhD,GAClC,MAAOA,GAAE5G,QAAQ6J,WAAa1F,EAAKnE,QAAQ6J,UAAYjD,IAAMzC,GAAQyC,EAAE5G,QAAQ+F,WAAY,IAGnG,QAAS+D,GAAanI,GAAtB,GAEQpB,GACKhD,EACD4G,EACA4B,EAEIgE,EANRtM,EAASkE,EAAKlE,MAElB,KAASF,EAAI,EAAGA,EAAIE,EAAQF,IACpB4G,EAAOxC,EAAKpE,GACZwI,EAAU5B,EAAKnE,QAAQ+F,WAAY,GACnCA,GAAW2D,EAAavF,MACpB4F,EAAUhE,EAAU5B,EAAK6F,aAAe7F,EAAK8F,UAC5C1J,EAGDA,EAAI2J,KAAKH,GAFTxJ,EAAMwJ,EAAQI,QAM1B,OAAO5J,IAAO,GAAI6J,IAEtB,QAASC,GAAW1I,EAAMgI,GAA1B,GACapM,GACD+M,CADR,KAAS/M,EAAI,EAAGA,EAAIoE,EAAKlE,OAAQF,IAE7B,GADI+M,EAAS3I,EAAKpE,GACd+M,GAAUA,EAAOX,OAASA,EAC1B,MAAOW,GAInB,QAASC,GAAcC,GACnB,MAAiB,KAAVA,GAA0B,OAAVA,GAA4B,SAAVA,GAA8B,gBAAVA,IAA4B/F,GAAQ+F,GA0HrG,QAASC,GAASC,EAAWC,EAAQvL,GAArC,GAIYnC,GAHJ2N,EAAYD,EACZtI,EAAQqI,CACZ,IAAIA,EAAUG,QAAQ,QAAW,CAE7B,IADI5N,EAAQyN,EAAUI,MAAM,KACrB7N,EAAMQ,OAAS,GAClB4E,EAAQpF,EAAM8N,QACTtG,GAAQmG,EAAUvI,MACnBuI,EAAUvI,OAEduI,EAAYA,EAAUvI,EAE1BA,GAAQpF,EAAM8N,QAElBH,EAAUvI,GAASjD,EA4xCvB,QAAS4L,GAAkBC,EAAe9G,EAAMnE,GAC5C,GAAIkL,MAAgD/D,OAAlChD,YAAgBgH,IAAyBF,EAAcG,aAA0BH,EAAcI,UACjHlK,IAAW+J,EAAY/G,EAAKmH,WAAYtL,GAE5C,QAASuL,GAAY9H,EAAQU,EAAMqH,GAC/B,MAAOC,IAAKhI,EAAQ,SAAUiI,GAC1B,MAAkB,KAAXF,IAAiBE,EAAEN,cAAgBM,EAAEN,eAAiBjH,IAkErE,QAASwH,KACL5M,KAAK6M,mBAAoB,EAE7B,QAASC,GAAUC,EAAGC,GAAtB,GACQ/O,IAAO+O,GAAY,IAAIjF,cACvBkF,EAAQF,EAAEE,MACVC,EAAiB,SAARjP,KAAoBgP,EAAME,SAAWF,EAAMG,UAAYH,EAAMI,SAAWJ,EAAMhP,EAAM,MACjG,OAAOiP,GAEX,QAASI,GAAkBC,GAA3B,GAEa1K,GACD2K,EAFJC,IACJ,KAAS5K,EAAM,EAAGA,EAAM0K,EAAW7O,OAAQmE,IACnC2K,EAAYD,EAAW1K,GACvB2K,EAAUpI,KAAKnE,QAAQ0B,OACvB8K,EAAOD,EAAUpI,KAAKnE,QAAQ0B,OAC1BqH,IAAKwD,EAAUpD,MAAMJ,IACrBlF,IAAK0I,EAAUpD,MAAMtF,KAIjC,OAAO2I,GA0rBX,QAASC,GAAUC,GACf,GAAIhH,GAAU7F,SAASC,cAAc,MAIrC,OAHI4M,KACAhH,EAAQgH,UAAYA,GAEjBhH,EAEX,QAASiH,GAAcjH,GAEnB,IADA,GAAIvH,GAAUuH,EACPvH,IAAYyO,GAAWzO,EAAS,aACnCA,EAAUA,EAAQ6C,UAEtB,OAAO7C,GA2yBX,QAAS0O,GAAoB5B,EAAeK,EAAWzB,EAAU7J,GAC7D,GAAIyH,MAAiBN,OAAO0C,EAAWoB,EAAc6B,MAAQ7B,EAAc8B,OAAOzB,EAClFnK,IAAWsG,EAAazH,GAgP5B,QAASgN,GAAiBC,GAA1B,GAIQC,GAQArD,EAXAsD,EAAU3E,GAAQ4E,IAAIH,GACtBI,EAAOC,GAAM1J,KAAK2J,IAAIJ,GAAUK,IAChCC,EAASH,GAAM1J,KAAK8J,IAAIP,GAAUK,GAiBtC,OAdIN,GADAtJ,KAAK6C,IAAI4G,GAAQM,GACJC,GACNH,EAAS,EACHI,GAEAC,GAIbjE,EADAjG,KAAK6C,IAAI4G,GAAQU,GACNH,GACJP,EAAO,EACHW,GAEAC,IAGXf,WAAYA,EACZrD,SAAUA,GA6clB,QAASqE,GAAa5M,EAAIC,EAAI4M,EAAIC,GAAlC,GAGQ/J,GAEIgK,EAJJC,GAAOF,EAAGG,EAAIJ,EAAGI,IAAMjN,EAAGkN,EAAIL,EAAGK,IAAMJ,EAAGI,EAAIL,EAAGK,IAAMlN,EAAGiN,EAAIJ,EAAGI,GACjEE,GAAML,EAAGI,EAAIL,EAAGK,IAAMjN,EAAGgN,EAAIjN,EAAGiN,IAAMH,EAAGG,EAAIJ,EAAGI,IAAMhN,EAAGiN,EAAIlN,EAAGkN,EAMpE,OAJW,KAAPC,IACIJ,EAAKC,EAAMG,EACfpK,EAAS,GAAIqK,IAAMpN,EAAGiN,EAAIF,GAAM9M,EAAGgN,EAAIjN,EAAGiN,GAAIjN,EAAGkN,EAAIH,GAAM9M,EAAGiN,EAAIlN,EAAGkN,KAElEnK,EA+UX,QAASsK,GAAU/H,EAAGC,GAClB,MAAOD,GAAExH,MAAMmP,EAAI1H,EAAEzH,MAAMmP,EAwE/B,QAASK,GAAgBC,GAAzB,GAEajN,GACDkN,EAFJC,IACJ,KAASnN,EAAM,EAAGA,EAAMiN,EAASpR,OAAQmE,IACjCkN,EAAUD,EAASjN,GACvBmN,EAAeD,EAAQE,UAAYD,EAAeD,EAAQE,cAC1DD,EAAeD,EAAQE,UAAU9R,KAAK4R,EAE1C,OAAOC,GAuuCX,QAASE,GAAoBhE,EAAeK,EAAWzB,EAAU7J,GAC7D,GAAIyH,MAAiBN,OAAO0C,EAAWoB,EAAc6B,MAAQ7B,EAAc8B,OAAOzB,EAClFnK,IAAWsG,EAAazH,GA6kD5B,QAASkP,GAAmBlP,GAA5B,GAEa4B,GACDuN,EAFJC,EAAUC,EACd,KAASzN,EAAM,EAAGA,EAAMwN,EAAQ3R,OAAQmE,IAChCuN,EAAQC,EAAQxN,GAAO,OACvB5B,EAAQmP,KACRnP,EAAQoP,EAAQxN,GAAO,QAAU5B,EAAQmP,SAClCnP,GAAQmP,IAI3B,QAASG,GAAoBpJ,EAAQxE,GACjC,GAAIwE,EACA,IAAK,GAAItE,GAAM,EAAGA,EAAMsE,EAAOzI,OAAQmE,IACnC,GAAIsE,EAAOtE,GAAK2N,WAAa7N,EACzB,OAAQwE,EAAOtE,IAK/B,QAAS4N,GAAkBxP,EAASyP,GAGhC,QAASC,GAAejI,GAAxB,GACQkI,IAAalI,OAAmB+C,OAASoF,EAAapF,MACtDnG,EAASlD,MAAe0O,EAAmBA,EAAkBC,GAAWF,EAAcA,EAAaE,IACnGC,MAAQvF,MAAOmF,GACfK,QAAUxF,MAAOmF,GACjBM,OAASzF,MAAOmF,IACjBlI,EAEH,cADOpD,GAAOyL,GACPzL,EAXf,GAEQyL,GAAUF,EAAcjO,EAWnBC,EAZLiO,GAAqBJ,OAAoBG,gBAY7C,KAAShO,EAAM,EAAGA,EAAMyN,GAAW5R,OAAQmE,IACvCkO,EAAWT,GAAWzN,GAAO,OAC7BgO,EAAe5P,EAAQ4P,iBACvBjO,KAAUwF,OAAOnH,EAAQ8P,IACzBnO,EAAOA,EAAKtC,IAAIqQ,GAChB1P,EAAQ8P,GAAYnO,EAAKlE,OAAS,EAAIkE,EAAOA,EAAK,GAG1D,QAASuO,GAAoBlQ,EAASyP,GAAtC,GASalS,GACD4S,EACAC,EAVJ3M,EAASzD,EAAQyD,OACjB4M,EAAe5M,EAAOhG,OACtB6S,EAAiBtQ,EAAQsQ,eACzBC,EAAiBpP,MAAenB,EAAQsQ,gBACxCE,EAAsBf,EAAetO,MAAesO,EAAaa,mBACjEG,EAAsBtP,MAAeqP,EAGzC,KAFAE,EAA4BH,GAC5BG,EAA4BD,GACnBlT,EAAI,EAAGA,EAAI8S,EAAc9S,IAC1B4S,EAAa1M,EAAOlG,GAAG6J,MAAQpH,EAAQsQ,eAAelJ,KACtDgJ,EAAcjP,IAAa2C,SAAY2M,EAAqBD,EAAoBL,IAAeQ,QAAS3Q,EAAQ2Q,SAAWJ,EAAgBD,EAAeH,IAC9J1M,EAAOlG,GAAGqT,UAAYR,EACtB3M,EAAOlG,GAAK4D,MAAeiP,EAAa3M,EAAOlG,IAC/CkG,EAAOlG,GAAGuG,KAAOL,EAAOlG,GAAGuG,SAGnC,QAAS4M,GAA4BJ,SAC1BA,GAAeO,UACfP,GAAeQ,aACfR,GAAeS,kBACfT,GAAeP,WACfO,GAAeU,mBACfV,GAAeW,UACfX,GAAeY,YACfZ,GAAea,WACfb,GAAec,mBACfd,GAAee,cACff,GAAegB,kBACfhB,GAAeiB,aACfjB,GAAekB,kBACflB,GAAemB,WACfnB,GAAeoB,cACfpB,GAAeqB,aACfrB,GAAesB,qBACftB,GAAeuB,gBACfvB,GAAewB,gBACfxB,GAAeyB,gBACfzB,GAAe0B,gBACf1B,GAAe2B,UAE1B,QAAS3F,GAAW3K,GAApB,GAEapE,GACD4G,EACA2L,EAHJtD,IACJ,KAASjP,EAAI,EAAGA,EAAIoE,EAAKlE,OAAQF,IACzB4G,EAAOxC,EAAKpE,GACZuS,EAAW3L,EAAKnE,QAAQ0B,KACxBoO,IACAtD,EAAOsD,GAAY3L,EAAKgF,QAGhC,OAAOqD,GAEX,QAAS0F,GAAUC,EAAOC,GACL,SAAbA,IACAA,EAAW5J,GAAQ6J,aAEvB,KAAK,GAAI9U,GAAI,EAAGE,EAAS0U,EAAM1U,OAAQF,EAAIE,EAAQF,IAC/C,GAAI6U,EAASD,EAAM5U,GAAI4U,EAAM5U,EAAI,IAAM,EAAG,CACtC4U,EAAMhV,KAAKiV,EACX,OAGR,MAAOD,GAEX,QAASG,GAAYC,EAAUH,GAA/B,GAIQD,GACA1U,EACA4G,EACK9G,CAAT,KANiB,SAAb6U,IACAA,EAAW5J,GAAQ6J,cAEnBF,EAAQD,EAAUK,EAAUH,GAC5B3U,EAAS0U,EAAM1U,OACf4G,EAAS5G,EAAS,GAAK0U,EAAM,OACxB5U,EAAI,EAAGA,EAAIE,EAAQF,IACiB,IAArC6U,EAASD,EAAM5U,GAAIiV,GAAKnO,KACxBA,EAAOnH,KAAKiV,EAAM5U,GAG1B,OAAO8G,GAEX,QAASoO,GAAUC,GAAnB,GAGaC,GACDrQ,EACAsQ,EACKC,EALTC,EAAWJ,EAAKjV,OAChB4G,IACJ,KAASsO,EAAQ,EAAGA,EAAQG,EAAUH,IAGlC,IAFIrQ,EAAMoQ,EAAKC,GACXC,EAAWtQ,EAAI7E,OACVoV,EAAQ,EAAGA,EAAQD,EAAUC,IAClCxO,EAAOwO,GAASxO,EAAOwO,OACvBxO,EAAOwO,GAAO3V,KAAKoF,EAAIuQ,GAG/B,OAAOxO,GAMX,QAAS0O,IAAmBC,EAAiBhT,GAA7C,GACaqC,GAEG4Q,EACAC,EAEIC,CALhB,KAAS9Q,IAASrC,IACTmD,GAAQd,EAAO+Q,KAAgBpT,EAAQoD,eAAef,KACnD4Q,EAAajT,EAAQqC,GACrB6Q,EAAgBF,EAAgB3Q,GAChCoC,GAAQyO,KACJC,EAA2B,OAAfF,EACZE,IAAc1O,GAAQwO,UACfD,GAAgB3Q,GACnB8Q,SACOnT,GAAQqC,IAEZ6Q,GAAiB3P,GAAS0P,IAC7B1P,GAAS2P,IACTH,GAAmBG,EAAeD,KAO1D,QAASI,IAAkBC,GACvB,IAAK,GAAI1R,GAAM,EAAGA,EAAM0R,EAAM7V,OAAQmE,IAClC0R,EAAM1R,GAAK2R,eAl4YtB,GAEO/K,IACA7J,GACAwD,GACAqR,GACAC,GACAC,GACAC,GACA/F,GACAK,GACAD,GACAF,GACA8F,GACAC,GACAC,GACAC,GACAlG,GACAmG,GACAnM,GACA2F,GACAyG,GACAxP,GACAlC,GACA8C,GACA6O,GACAxF,GACAtE,GACA+J,GACAC,GACAjR,GACAE,GACAC,GACAC,GACApC,GACAqR,GACA6B,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACApO,GACAgB,GACAqN,GACAzJ,GACA0J,GACAvH,GACAwH,GACArJ,GACAsJ,GACAnI,GACAoI,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACApR,GACAqR,GACA7T,GA+BA8T,GAUAC,GAkBAC,GA8EA1P,GAiHA2P,GACAC,GACAC,GACAC,GACAC,GA2GAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACA7O,GACAC,GACA6O,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAC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","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var REPLACE_REGEX = /\\r?\\n|\\r|\\t/g;\n        var SPACE = ' ';\n        function normalizeText(text) {\n            return String(text).replace(REPLACE_REGEX, SPACE);\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: pre!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, options) {\n                if (options === void 0) {\n                    options = {};\n                }\n                if (typeof text === 'undefined' || text === null) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = options.box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n                measureBox.textContent = textStr;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (textStr.length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey,\n            normalizeText: normalizeText\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/kendo-chart', [\n        'kendo.core',\n        'kendo.color',\n        'kendo.drawing',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var dataviz = kendo.dataviz;\n        var Class = dataviz.Class;\n        var isNumber = dataviz.isNumber;\n        var datavizConstants = dataviz.constants;\n        var MAX_VALUE = datavizConstants.MAX_VALUE;\n        var MIN_VALUE = datavizConstants.MIN_VALUE;\n        var VALUE = datavizConstants.VALUE;\n        var CENTER = datavizConstants.CENTER;\n        var TOP = datavizConstants.TOP;\n        var BOTTOM = datavizConstants.BOTTOM;\n        var LEFT = datavizConstants.LEFT;\n        var WHITE = datavizConstants.WHITE;\n        var CIRCLE = datavizConstants.CIRCLE;\n        var X = datavizConstants.X;\n        var Y = datavizConstants.Y;\n        var RIGHT = datavizConstants.RIGHT;\n        var BLACK = datavizConstants.BLACK;\n        var DATE = datavizConstants.DATE;\n        var DEFAULT_PRECISION = datavizConstants.DEFAULT_PRECISION;\n        var ARC = datavizConstants.ARC;\n        var defined = dataviz.defined;\n        var getter = dataviz.getter;\n        var isArray = dataviz.isArray;\n        var ChartElement = dataviz.ChartElement;\n        var Point = dataviz.Point;\n        var Box = dataviz.Box;\n        var alignPathToPixel = dataviz.alignPathToPixel;\n        var setDefaultOptions = dataviz.setDefaultOptions;\n        var inArray = dataviz.inArray;\n        var isFunction = dataviz.isFunction;\n        var valueOrDefault = dataviz.valueOrDefault;\n        var isObject = dataviz.isObject;\n        var deepExtend = dataviz.deepExtend;\n        var last = dataviz.last;\n        var eventElement = dataviz.eventElement;\n        var getTemplate = dataviz.getTemplate;\n        var TextBox = dataviz.TextBox;\n        var ShapeElement = dataviz.ShapeElement;\n        var getSpacing = dataviz.getSpacing;\n        var CurveProcessor = dataviz.CurveProcessor;\n        var append = dataviz.append;\n        var isString = dataviz.isString;\n        var parseDate = dataviz.parseDate;\n        var styleValue = dataviz.styleValue;\n        var CategoryAxis = dataviz.CategoryAxis;\n        var BoxElement = dataviz.BoxElement;\n        var round = dataviz.round;\n        var limitValue = dataviz.limitValue;\n        var grep = dataviz.grep;\n        var elementStyles = dataviz.elementStyles;\n        var hasClasses = dataviz.hasClasses;\n        var bindEvents = dataviz.bindEvents;\n        var services = dataviz.services;\n        var unbindEvents = dataviz.unbindEvents;\n        var support = kendo.support;\n        var drawing = kendo.drawing;\n        var Path = drawing.Path;\n        var Animation = drawing.Animation;\n        var AnimationFactory = drawing.AnimationFactory;\n        var Group = drawing.Group;\n        var Color = kendo.Color;\n        var geometry = kendo.geometry;\n        var GeometryPoint = geometry.Point;\n        var transform = geometry.transform;\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n                this.options = axis.options;\n            },\n            value: function (point) {\n                var axis = this._axis;\n                var value = axis.getCategory ? axis.getCategory(point) : axis.getValue(point);\n                return value;\n            },\n            slot: function (from, to, limit) {\n                if (limit === void 0) {\n                    limit = true;\n                }\n                return this._axis.slot(from, to, limit);\n            },\n            range: function () {\n                return this._axis.range();\n            },\n            valueRange: function () {\n                return this._axis.valueRange();\n            }\n        });\n        function findAxisByName(name, axes) {\n            for (var idx = 0; idx < axes.length; idx++) {\n                if (axes[idx].options.name === name) {\n                    axes[idx].prepareUserOptions();\n                    return new ChartAxis(axes[idx]);\n                }\n            }\n        }\n        var ChartPane = kendo.Class.extend({\n            init: function (pane) {\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this._pane = pane;\n            },\n            findAxisByName: function (name) {\n                return findAxisByName(name, this._pane.axes);\n            }\n        });\n        var ChartPlotArea = Class.extend({\n            init: function (plotArea) {\n                this._plotArea = plotArea;\n                this.visual = plotArea.visual;\n                this.backgroundVisual = plotArea._bgVisual;\n            }\n        });\n        function countNumbers(values) {\n            var length = values.length;\n            var count = 0;\n            for (var i = 0; i < length; i++) {\n                var num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        var Aggregates = {\n            min: function (values) {\n                var length = values.length;\n                var min = MAX_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        min = Math.min(min, value);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var length = values.length;\n                var max = MIN_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        max = Math.max(max, value);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length;\n                var sum = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        sum += value;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length;\n                var count = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var count = countNumbers(values);\n                var result = values[0];\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        return value;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var this$1 = this;\n                if (valueFields === void 0) {\n                    valueFields = [VALUE];\n                }\n                if (otherFields === void 0) {\n                    otherFields = {};\n                }\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    var type = seriesTypes[i];\n                    this$1._valueFields[type] = valueFields;\n                    this$1._otherFields[type] = otherFields;\n                    this$1._nullValue[type] = this$1._makeValue(valueFields, null);\n                    this$1._undefinedValue[type] = this$1._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var data = series.data;\n                var pointData = defined(item) ? item : data[pointIx];\n                var result = { valueFields: { value: pointData } };\n                var valueFields = this.valueFields(series);\n                var otherFields = this._otherFields[series.type];\n                var fields, value;\n                if (pointData === null) {\n                    value = this._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = this._undefinedValue[series.type];\n                } else if (Array.isArray(pointData)) {\n                    var fieldData = pointData.slice(valueFields.length);\n                    value = this._bindFromArray(pointData, valueFields);\n                    fields = this._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === 'object') {\n                    var srcValueFields = this.sourceFields(series, valueFields);\n                    var srcPointFields = this.sourceFields(series, otherFields);\n                    value = this._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {};\n                var length = fields.length;\n                for (var i = 0; i < length; i++) {\n                    var fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {};\n                if (fields) {\n                    var length = Math.min(fields.length, array.length);\n                    for (var i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                if (srcFields === void 0) {\n                    srcFields = fields;\n                }\n                var value = {};\n                if (fields) {\n                    var length = fields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = fields[i];\n                        var srcFieldName = srcFields[i];\n                        if (srcFieldName !== null) {\n                            value[fieldName] = getField(srcFieldName, object);\n                        }\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var sourceFields = [];\n                if (canonicalFields) {\n                    var length = canonicalFields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = canonicalFields[i];\n                        var sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] !== null ? series[sourceFieldName] || fieldName : null);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var STD_ERR = 'stderr';\n        var STD_DEV = 'stddev';\n        var percentRegex = /percent(?:\\w*)\\((\\d+)\\)/;\n        var standardDeviationRegex = new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$');\n        var ErrorRangeCalculator = Class.extend({\n            init: function (errorValue, series, field) {\n                this.initGlobalRanges(errorValue, series, field);\n            },\n            initGlobalRanges: function (errorValue, series, field) {\n                var data = series.data;\n                var deviationMatch = standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var average = this.getAverage(data);\n                    var deviation = this.getStandardDeviation(data, average, false);\n                    var multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1;\n                    var errorRange = {\n                        low: average.value - deviation * multiple,\n                        high: average.value + deviation * multiple\n                    };\n                    this.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var standardError = this.getStandardError(data, this.getAverage(data));\n                    this.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data;\n                var binder = SeriesBinder.current;\n                var valueFields = binder.valueFields(series);\n                var item = defined(data[0]) ? data[0] : {};\n                var valueGetter;\n                if (isArray(item)) {\n                    var index = field ? valueFields.indexOf(field) : 0;\n                    valueGetter = getter('[' + index + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === datavizConstants.OBJECT) {\n                    var srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[valueFields.indexOf(field)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var low, high, value;\n                if (!defined(errorValue)) {\n                    return null;\n                }\n                if (this.globalRange) {\n                    return this.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - Math.abs(percentValue);\n                    high = pointValue + Math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / Math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var this$1 = this;\n                var length = data.length;\n                var total = isSample ? average.count - 1 : average.count;\n                var squareDifferenceSum = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += Math.pow(value - average.value, 2);\n                    }\n                }\n                return Math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var this$1 = this;\n                var length = data.length;\n                var sum = 0;\n                var count = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        });\n        var browser = support.browser || {};\n        var INITIAL_ANIMATION_DURATION = 600;\n        var FADEIN = 'fadeIn';\n        var GLASS = 'glass';\n        var BORDER_BRIGHTNESS = 0.8;\n        var TOOLTIP_OFFSET = 5;\n        var START_SCALE = browser.msie ? 0.001 : 0;\n        var ERROR_LOW_FIELD = 'errorLow';\n        var ERROR_HIGH_FIELD = 'errorHigh';\n        var X_ERROR_LOW_FIELD = 'xErrorLow';\n        var X_ERROR_HIGH_FIELD = 'xErrorHigh';\n        var Y_ERROR_LOW_FIELD = 'yErrorLow';\n        var Y_ERROR_HIGH_FIELD = 'yErrorHigh';\n        var LINE_MARKER_SIZE = 8;\n        var ZERO = 'zero';\n        var INTERPOLATE = 'interpolate';\n        var GAP = 'gap';\n        var ABOVE = 'above';\n        var BELOW = 'below';\n        var SMOOTH = 'smooth';\n        var STEP = 'step';\n        var AREA = 'area';\n        var BAR = 'bar';\n        var BOX_PLOT = 'boxPlot';\n        var BUBBLE = 'bubble';\n        var BULLET = 'bullet';\n        var CANDLESTICK = 'candlestick';\n        var COLUMN = 'column';\n        var DONUT = 'donut';\n        var FUNNEL = 'funnel';\n        var HEATMAP = 'heatmap';\n        var HORIZONTAL_WATERFALL = 'horizontalWaterfall';\n        var LINE = 'line';\n        var OHLC = 'ohlc';\n        var PIE = 'pie';\n        var POLAR_AREA = 'polarArea';\n        var POLAR_LINE = 'polarLine';\n        var POLAR_SCATTER = 'polarScatter';\n        var RADAR_AREA = 'radarArea';\n        var RADAR_COLUMN = 'radarColumn';\n        var RADAR_LINE = 'radarLine';\n        var RANGE_AREA = 'rangeArea';\n        var RANGE_BAR = 'rangeBar';\n        var RANGE_COLUMN = 'rangeColumn';\n        var SCATTER = 'scatter';\n        var SCATTER_LINE = 'scatterLine';\n        var VERTICAL_AREA = 'verticalArea';\n        var VERTICAL_BOX_PLOT = 'verticalBoxPlot';\n        var VERTICAL_BULLET = 'verticalBullet';\n        var VERTICAL_LINE = 'verticalLine';\n        var VERTICAL_RANGE_AREA = 'verticalRangeArea';\n        var WATERFALL = 'waterfall';\n        var EQUALLY_SPACED_SERIES = [\n            BAR,\n            COLUMN,\n            OHLC,\n            CANDLESTICK,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            BULLET,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ];\n        var LEGEND_ITEM_CLICK = 'legendItemClick';\n        var LEGEND_ITEM_HOVER = 'legendItemHover';\n        var LEGEND_ITEM_LEAVE = 'legendItemLeave';\n        var SERIES_CLICK = 'seriesClick';\n        var SERIES_HOVER = 'seriesHover';\n        var SERIES_OVER = 'seriesOver';\n        var SERIES_LEAVE = 'seriesLeave';\n        var PLOT_AREA_CLICK = 'plotAreaClick';\n        var PLOT_AREA_HOVER = 'plotAreaHover';\n        var PLOT_AREA_LEAVE = 'plotAreaLeave';\n        var DRAG = 'drag';\n        var DRAG_END = 'dragEnd';\n        var DRAG_START = 'dragStart';\n        var ZOOM_START = 'zoomStart';\n        var ZOOM = 'zoom';\n        var ZOOM_END = 'zoomEnd';\n        var SELECT_START = 'selectStart';\n        var SELECT = 'select';\n        var SELECT_END = 'selectEnd';\n        var RENDER = 'render';\n        var SHOW_TOOLTIP = 'showTooltip';\n        var HIDE_TOOLTIP = 'hideTooltip';\n        var PANE_RENDER = 'paneRender';\n        var LOGARITHMIC = 'log';\n        var CATEGORY = 'category';\n        var INSIDE_END = 'insideEnd';\n        var INSIDE_BASE = 'insideBase';\n        var OUTSIDE_END = 'outsideEnd';\n        var MOUSEWHEEL = 'DOMMouseScroll mousewheel';\n        var MOUSEWHEEL_DELAY = 150;\n        var constants = {\n            INITIAL_ANIMATION_DURATION: INITIAL_ANIMATION_DURATION,\n            FADEIN: FADEIN,\n            LEGEND_ITEM_CLICK: LEGEND_ITEM_CLICK,\n            LEGEND_ITEM_HOVER: LEGEND_ITEM_HOVER,\n            LEGEND_ITEM_LEAVE: LEGEND_ITEM_LEAVE,\n            SERIES_CLICK: SERIES_CLICK,\n            SERIES_HOVER: SERIES_HOVER,\n            SERIES_OVER: SERIES_OVER,\n            SERIES_LEAVE: SERIES_LEAVE,\n            GLASS: GLASS,\n            BORDER_BRIGHTNESS: BORDER_BRIGHTNESS,\n            TOOLTIP_OFFSET: TOOLTIP_OFFSET,\n            START_SCALE: START_SCALE,\n            ERROR_LOW_FIELD: ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD: ERROR_HIGH_FIELD,\n            X_ERROR_LOW_FIELD: X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD: X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD: Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD: Y_ERROR_HIGH_FIELD,\n            LINE_MARKER_SIZE: LINE_MARKER_SIZE,\n            INTERPOLATE: INTERPOLATE,\n            ZERO: ZERO,\n            SMOOTH: SMOOTH,\n            STEP: STEP,\n            CATEGORY: CATEGORY,\n            FUNNEL: FUNNEL,\n            BAR: BAR,\n            CANDLESTICK: CANDLESTICK,\n            PIE: PIE,\n            COLUMN: COLUMN,\n            AREA: AREA,\n            VERTICAL_BULLET: VERTICAL_BULLET,\n            BOX_PLOT: BOX_PLOT,\n            OHLC: OHLC,\n            WATERFALL: WATERFALL,\n            LINE: LINE,\n            BULLET: BULLET,\n            VERTICAL_LINE: VERTICAL_LINE,\n            VERTICAL_AREA: VERTICAL_AREA,\n            RANGE_AREA: RANGE_AREA,\n            VERTICAL_RANGE_AREA: VERTICAL_RANGE_AREA,\n            RANGE_COLUMN: RANGE_COLUMN,\n            VERTICAL_BOX_PLOT: VERTICAL_BOX_PLOT,\n            RANGE_BAR: RANGE_BAR,\n            HORIZONTAL_WATERFALL: HORIZONTAL_WATERFALL,\n            SCATTER: SCATTER,\n            SCATTER_LINE: SCATTER_LINE,\n            BUBBLE: BUBBLE,\n            RADAR_AREA: RADAR_AREA,\n            RADAR_LINE: RADAR_LINE,\n            RADAR_COLUMN: RADAR_COLUMN,\n            POLAR_LINE: POLAR_LINE,\n            POLAR_AREA: POLAR_AREA,\n            POLAR_SCATTER: POLAR_SCATTER,\n            RENDER: RENDER,\n            PLOT_AREA_CLICK: PLOT_AREA_CLICK,\n            PLOT_AREA_HOVER: PLOT_AREA_HOVER,\n            PLOT_AREA_LEAVE: PLOT_AREA_LEAVE,\n            LOGARITHMIC: LOGARITHMIC,\n            DRAG: DRAG,\n            DRAG_START: DRAG_START,\n            DRAG_END: DRAG_END,\n            ZOOM_START: ZOOM_START,\n            ZOOM: ZOOM,\n            ZOOM_END: ZOOM_END,\n            SELECT_START: SELECT_START,\n            SELECT: SELECT,\n            SELECT_END: SELECT_END,\n            PANE_RENDER: PANE_RENDER,\n            GAP: GAP,\n            DONUT: DONUT,\n            INSIDE_END: INSIDE_END,\n            INSIDE_BASE: INSIDE_BASE,\n            OUTSIDE_END: OUTSIDE_END,\n            MOUSEWHEEL: MOUSEWHEEL,\n            MOUSEWHEEL_DELAY: MOUSEWHEEL_DELAY,\n            SHOW_TOOLTIP: SHOW_TOOLTIP,\n            HIDE_TOOLTIP: HIDE_TOOLTIP,\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES,\n            ABOVE: ABOVE,\n            BELOW: BELOW,\n            HEATMAP: HEATMAP\n        };\n        var DEFAULT_ERROR_BAR_WIDTH = 4;\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                ChartElement.fn.init.call(this, options);\n                this.low = low;\n                this.high = high;\n                this.isVertical = isVertical;\n                this.chart = chart;\n                this.series = series;\n            },\n            reflow: function (targetBox) {\n                var endCaps = this.options.endCaps;\n                var isVertical = this.isVertical;\n                var axis = this.getAxis();\n                var valueBox = axis.getSlot(this.low, this.high);\n                var centerBox = targetBox.center();\n                var capsWidth = this.getCapsWidth(targetBox, isVertical);\n                var capValue = isVertical ? centerBox.x : centerBox.y;\n                var capStart = capValue - capsWidth;\n                var capEnd = capValue + capsWidth;\n                var linePoints;\n                if (isVertical) {\n                    linePoints = [\n                        new Point(centerBox.x, valueBox.y1),\n                        new Point(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(capStart, valueBox.y1), new Point(capEnd, valueBox.y1), new Point(capStart, valueBox.y2), new Point(capEnd, valueBox.y2));\n                    }\n                    this.box = new Box(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        new Point(valueBox.x1, centerBox.y),\n                        new Point(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(valueBox.x1, capStart), new Point(valueBox.x1, capEnd), new Point(valueBox.x2, capStart), new Point(valueBox.x2, capEnd));\n                    }\n                    this.box = new Box(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                this.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height();\n                var capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual = options.visual;\n                if (visual) {\n                    this.visual = visual({\n                        low: this.low,\n                        high: this.high,\n                        rect: this.box.toRect(),\n                        sender: this.getSender(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            this$1.createDefaultVisual();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    this.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var linePoints = ref.linePoints;\n                var lineOptions = {\n                    stroke: {\n                        color: options.color,\n                        width: options.line.width,\n                        dashType: options.line.dashType\n                    }\n                };\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    alignPathToPixel(line);\n                    this$1.visual.append(line);\n                }\n            }\n        });\n        setDefaultOptions(ErrorBarBase, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            endCaps: true,\n            line: { width: 2 },\n            zIndex: 1\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axis = this.chart.seriesValueAxis(this.series);\n                return axis;\n            }\n        });\n        var MAX_EXPAND_DEPTH = 5;\n        function evalOptions(options, context, state, dryRun) {\n            if (state === void 0) {\n                state = {};\n            }\n            if (dryRun === void 0) {\n                dryRun = false;\n            }\n            var defaults = state.defaults = state.defaults || {};\n            var depth = state.depth = state.depth || 0;\n            var needsEval = false;\n            state.excluded = state.excluded || [];\n            if (depth > MAX_EXPAND_DEPTH) {\n                return null;\n            }\n            for (var property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    var propValue = options[property];\n                    if (isFunction(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (isObject(propValue)) {\n                        if (!dryRun) {\n                            state.defaults = defaults[property];\n                        }\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length;\n            var categories = 0;\n            for (var i = 0; i < seriesCount; i++) {\n                categories = Math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                this.valueAxisRanges = {};\n                this.points = [];\n                this.categoryPoints = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    var otherValues = [];\n                    var categorySum = 0;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += Math.abs(other.value);\n                                otherValues.push(Math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var this$1 = this;\n                if (startValue === void 0) {\n                    startValue = 0;\n                }\n                var categoryPoints = this.categoryPoints[point.categoryIx];\n                if (this.options.isStacked) {\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === datavizConstants.STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this$1.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this$1.options.isStacked100) {\n                                plotValue = Math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    dataviz.convertableToNumber(point.value) ? point.value : axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var this$1 = this;\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPoints = this$1.categoryPoints[i];\n                    if (!categoryPoints) {\n                        continue;\n                    }\n                    for (var pIx = 0; pIx < categoryPoints.length; pIx++) {\n                        var point = categoryPoints[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this$1.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = Math.max(max, to);\n                                    min = Math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var isStacked = ref.isStacked;\n                var chartSeries = ref.series;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        var limits = limitsCache[key];\n                        if (!limits) {\n                            limits = this$1.stackLimits(axisName, series.stack);\n                            var errorTotals = this$1.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = Math.min(limits.min, dataviz.sparseArrayLimits(errorTotals.negative).min);\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = Math.max(limits.max, dataviz.sparseArrayLimits(errorTotals.positive).max);\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            this$1.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var value = point.value;\n                var series = point.series;\n                var seriesIx = point.seriesIx;\n                var errorBars = point.options.errorBars;\n                var lowValue = data.fields[ERROR_LOW_FIELD];\n                var highValue = data.fields[ERROR_HIGH_FIELD];\n                var errorRange;\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    this.seriesErrorRanges = this.seriesErrorRanges || [];\n                    this.seriesErrorRanges[seriesIx] = this.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = this.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    this.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var isVertical = !this.options.invertAxes;\n                var options = point.options.errorBars;\n                var series = point.series;\n                var low = point.low;\n                var high = point.high;\n                if (this.options.isStacked) {\n                    var stackedErrorRange = this.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    this.updateRange({ value: low }, fields);\n                    this.updateRange({ value: high }, fields);\n                }\n                var errorBar = new CategoricalErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var plotValue = this.plotRange(point, 0)[1] - point.value;\n                var low = point.low + plotValue;\n                var high = point.high + plotValue;\n                this.errorTotals = this.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    this.errorTotals.negative[categoryIx] = Math.min(this.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    this.errorTotals.positive[categoryIx] = Math.max(this.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = this.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = this.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    this.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = this.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = this;\n                    point.noteText = data.fields.noteText;\n                    if (!defined(point.dataItem)) {\n                        point.dataItem = series.data[categoryIx];\n                    }\n                    this.addErrorBar(point, data, categoryIx);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                this.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, pointOptions);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return pointOptions;\n            },\n            updateRange: function (data, fields) {\n                var axisName = fields.series.axis;\n                var value = data.value;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, value);\n                    axisRange.max = Math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea;\n                var axisName = series.axis;\n                var axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var categorySlots = this.categorySlots = [];\n                var chartPoints = this.points;\n                var categoryAxis = this.categoryAxis;\n                var pointIx = 0;\n                this.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    var valueAxis = this$1.seriesValueAxis(currentSeries);\n                    var point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = this$1.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = this$1.plotRange(point, valueAxis.startValue());\n                        var valueSlot = this$1.valueSlot(valueAxis, plotRange);\n                        if (valueSlot) {\n                            var pointSlot = this$1.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = this$1.aboveAxis(point, valueAxis);\n                            point.stackValue = plotRange[1];\n                            if (this$1.options.isStacked100) {\n                                point.percentage = this$1.plotValue(point);\n                            }\n                            this$1.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.reflowCategories(categorySlots);\n                if (!this.options.clip && this.options.limitPoints && this.points.length) {\n                    this.limitPoints();\n                }\n                this.box = targetBox;\n            },\n            valueSlot: function (valueAxis, plotRange) {\n                return valueAxis.getSlot(plotRange[0], plotRange[1], !this.options.clip);\n            },\n            limitPoints: function () {\n                var this$1 = this;\n                var categoryPoints = this.categoryPoints;\n                var points = categoryPoints[0].concat(last(categoryPoints));\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx]) {\n                        this$1.limitPoint(points[idx]);\n                    }\n                }\n            },\n            limitPoint: function (point) {\n                var limittedSlot = this.categoryAxis.limitSlot(point.box);\n                if (!limittedSlot.equals(point.box)) {\n                    point.reflow(limittedSlot);\n                }\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis;\n                var options = valueAxis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var options = this.options;\n                var invertAxes = options.invertAxes;\n                var slotX = invertAxes ? valueSlot : categorySlot;\n                var slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var series = this.options.series;\n                var count = categoriesCount(series);\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this$1._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (var seriesIx$1 = 0; seriesIx$1 < seriesCount; seriesIx$1++) {\n                        var currentSeries = series[seriesIx$1];\n                        var currentCategory = this$1.categoryAxis.categoryAt(categoryIx);\n                        var pointData = this$1._bindPoint(currentSeries, seriesIx$1, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            categoriesCount: count,\n                            series: currentSeries,\n                            seriesIx: seriesIx$1\n                        });\n                    }\n                }\n                for (var seriesIx$2 = 0; seriesIx$2 < seriesCount; seriesIx$2++) {\n                    this$1._outOfRangeCallback(series[seriesIx$2], '_outOfRangeMaxPoint', seriesIx$2, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx,\n                        dataItem: outOfRangePoint.item\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        setDefaultOptions(CategoricalChart, {\n            series: [],\n            invertAxes: false,\n            isStacked: false,\n            clip: true,\n            limitPoints: true\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            over: function (chart, e) {\n                return chart.trigger(SERIES_OVER, this.eventArgs(e));\n            },\n            out: function (chart, e) {\n                return chart.trigger(SERIES_LEAVE, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: eventElement(e),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var options = this.options.notes;\n                var text = this.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    this.note = new dataviz.Note({\n                        value: this.value,\n                        text: text,\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        series: this.series\n                    }, this.options.notes, this.owner.chartService);\n                    this.append(this.note);\n                }\n            }\n        };\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n            },\n            render: function () {\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                if (markers.visible && markers.size) {\n                    this.marker = this.createMarker();\n                    this.append(this.marker);\n                }\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var pointData = this.pointData();\n                    var labelText = this.value;\n                    if (labelTemplate) {\n                        labelText = labelTemplate(pointData);\n                    } else if (labels.format) {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels), pointData);\n                    this.append(this.label);\n                }\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: function () {\n            },\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: this.series.opacity || options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var aboveAxis = ref.aboveAxis;\n                var vertical = options.vertical;\n                this.render();\n                this.box = targetBox;\n                var childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                this._childBox = childBox;\n                if (this.marker) {\n                    this.marker.reflow(childBox);\n                }\n                this.reflowLabel(childBox);\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (this.note) {\n                    var noteTargetBox = this.markerBox();\n                    if (!(options.markers.visible && options.markers.size)) {\n                        var center = noteTargetBox.center();\n                        noteTargetBox = new Box(center.x, center.y, center.x, center.y);\n                    }\n                    this.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(this.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var markers = this.options.highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var size = options.size + (options.border.width || 0) + (markers.border.width || 0);\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: size,\n                    height: size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual, rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geometry.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function () {\n                var markerBox = this.markerBox();\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    var x = markerBox.x2 + TOOLTIP_OFFSET;\n                    var horizontalAlign = LEFT;\n                    var y, verticalAlign;\n                    if (this.aboveAxis) {\n                        y = markerBox.y1;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        y = markerBox.y2;\n                        verticalAlign = TOP;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            },\n            unclipElements: function () {\n                if (this.label) {\n                    this.label.options.noclip = true;\n                }\n                if (this.note) {\n                    this.note.options.noclip = true;\n                }\n            },\n            pointData: function () {\n                return {\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    series: this.series\n                };\n            }\n        });\n        LinePoint.prototype.defaults = {\n            vertical: true,\n            markers: {\n                visible: true,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                position: ABOVE,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: '#fff',\n                        width: 2\n                    }\n                },\n                zIndex: datavizConstants.HIGHLIGHT_ZINDEX\n            },\n            errorBars: { line: { width: 1 } }\n        };\n        deepExtend(LinePoint.prototype, PointEventsMixin);\n        deepExtend(LinePoint.prototype, NoteMixin);\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                ChartElement.fn.init.call(this);\n                this.linePoints = linePoints;\n                this.series = series;\n                this.seriesIx = seriesIx;\n            },\n            points: function () {\n                return this.toGeometryPoints(this.linePoints);\n            },\n            toGeometryPoints: function (points) {\n                var result = [];\n                for (var i = 0, length = points.length; i < length; i++) {\n                    if (points[i] && points[i].visible !== false) {\n                        result.push(points[i]._childBox.toRect().center());\n                    }\n                }\n                return result;\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var customVisual = this.series.visual;\n                if (customVisual) {\n                    this.visual = customVisual({\n                        points: this.toGeometryPoints(this.linePoints),\n                        series: this.series,\n                        sender: this.getSender(),\n                        createVisual: function () {\n                            this$1.segmentVisual();\n                            return this$1.visual;\n                        }\n                    });\n                    if (this.visual && !defined(this.visual.options.zIndex)) {\n                        this.visual.options.zIndex = this.series.zIndex;\n                    }\n                } else {\n                    this.segmentVisual();\n                }\n            },\n            segmentVisual: function () {\n                var ref = this;\n                var options = ref.options;\n                var series = ref.series;\n                var color = series.color;\n                var defaults = series._defaults;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                return this.parent.getNearestPoint(coords.x, coords.y, this.seriesIx);\n            }\n        });\n        setDefaultOptions(LineSegment, { closed: false });\n        var StepLineMixin = {\n            calculateStepPoints: function (points) {\n                var categoryAxis = this.parent.plotArea.seriesCategoryAxis(this.series);\n                var ref = categoryAxis.options;\n                var justified = ref.justified;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var stepAxis = vertical ? X : Y;\n                var axis = vertical ? Y : X;\n                var stepDir = reverse ? 2 : 1;\n                var dir = stepDir;\n                var previousPoint = toGeometryPoint(points[0], stepAxis, stepDir, axis, dir);\n                var result = [previousPoint];\n                for (var idx = 1; idx < points.length; idx++) {\n                    var point = toGeometryPoint(points[idx], stepAxis, stepDir, axis, dir);\n                    if (previousPoint[stepAxis] !== point[stepAxis]) {\n                        var stepPoint = new GeometryPoint();\n                        stepPoint[stepAxis] = previousPoint[stepAxis];\n                        stepPoint[axis] = point[axis];\n                        result.push(stepPoint, point);\n                    }\n                    previousPoint = point;\n                }\n                if (!justified) {\n                    result.push(toGeometryPoint(last(points), stepAxis, stepDir, axis, reverse ? 1 : 2));\n                } else if (previousPoint !== last(result)) {\n                    result.push(previousPoint);\n                }\n                return result;\n            }\n        };\n        function toGeometryPoint(lintPoint, stepAxis, stepDir, axis, dir) {\n            var box = lintPoint.box;\n            var result = new GeometryPoint();\n            result[stepAxis] = box[stepAxis + stepDir];\n            result[axis] = box[axis + dir];\n            return result;\n        }\n        var StepLineSegment = LineSegment.extend({\n            points: function () {\n                return this.calculateStepPoints(this.linePoints);\n            }\n        });\n        deepExtend(StepLineSegment.prototype, StepLineMixin);\n        var SplineSegment = LineSegment.extend({\n            segmentVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesPoints = ref.seriesPoints;\n                var series = options.series;\n                var seriesCount = seriesPoints.length;\n                var lastSegment;\n                this._segments = [];\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var sortedPoints = this$1.sortPoints(seriesPoints[seriesIx]);\n                    var pointCount = sortedPoints.length;\n                    var linePoints = [];\n                    for (var pointIx = 0; pointIx < pointCount; pointIx++) {\n                        var point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (this$1.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this$1._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this$1._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues;\n                var assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimation = Animation.extend({\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(dataviz.interpolateValue(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        setDefaultOptions(ClipAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register('clip', ClipAnimation);\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.size();\n                    var clipPath = Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n                this.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var missingValues = this.seriesMissingValues(series);\n                var value = data.valueFields.value;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var this$1 = this;\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this$1.plotValue(other);\n                        if (this$1.options.isStacked100) {\n                            plotValue = Math.min(plotValue, 1);\n                        }\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            },\n            supportsPointInactiveOpacity: function () {\n                return false;\n            }\n        });\n        deepExtend(LineChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, currentSeries, seriesIx, prevSegment, stackPoints) {\n                LineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.prevSegment = prevSegment;\n                this.stackPoints = stackPoints;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var lineOptions = series.line || {};\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                if (lineOptions.width > 0 && lineOptions.visible !== false) {\n                    this.createStroke({\n                        stroke: deepExtend({\n                            color: color,\n                            opacity: series.opacity,\n                            lineCap: 'butt'\n                        }, lineOptions)\n                    });\n                }\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    segments = this._strokeSegments = this.createStrokeSegments();\n                }\n                return segments;\n            },\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.points());\n            },\n            stackSegments: function () {\n                if (this.prevSegment) {\n                    return this.prevSegment.createStackSegments(this.stackPoints);\n                }\n                return this.createStackSegments(this.stackPoints);\n            },\n            createStackSegments: function (stackPoints) {\n                return this.segmentsFromPoints(this.toGeometryPoints(stackPoints)).reverse();\n            },\n            segmentsFromPoints: function (points) {\n                return points.map(function (point) {\n                    return new geometry.Segment(point);\n                });\n            },\n            createStroke: function (style) {\n                var stroke = new Path(style);\n                stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                this.visual.append(stroke);\n            },\n            hasStackSegment: function () {\n                return this.prevSegment || this.stackPoints && this.stackPoints.length;\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var hasStackSegments = this.hasStackSegment();\n                if (hasStackSegments) {\n                    var stackSegments = this.stackSegments();\n                    append(fillSegments, stackSegments);\n                }\n                var fill = new Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                if (!hasStackSegments && strokeSegments.length > 1) {\n                    this.fillToAxes(fill);\n                }\n                this.visual.append(fill);\n            },\n            fillToAxes: function (fillPath) {\n                var chart = this.parent;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var crossingValue = chart.categoryAxisCrossingValue(valueAxis);\n                var endSlot = valueAxis.getSlot(crossingValue, crossingValue, true);\n                var segments = this.strokeSegments();\n                var firstPoint = segments[0].anchor();\n                var lastPoint = last(segments).anchor();\n                var end = invertAxes ? endSlot.x1 : endSlot.y1;\n                if (invertAxes) {\n                    fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                } else {\n                    fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                }\n            }\n        });\n        var StepAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.calculateStepPoints(this.linePoints));\n            },\n            createStackSegments: function (stackPoints) {\n                return this.segmentsFromPoints(this.calculateStepPoints(stackPoints)).reverse();\n            }\n        });\n        deepExtend(StepAreaSegment.prototype, StepLineMixin);\n        var SplineAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var linePoints = this.points();\n                return curveProcessor.process(linePoints);\n            },\n            createStackSegments: function () {\n                var strokeSegments = this.strokeSegments();\n                var stackSegments = [];\n                for (var idx = strokeSegments.length - 1; idx >= 0; idx--) {\n                    var segment = strokeSegments[idx];\n                    stackSegments.push(new geometry.Segment(segment.anchor(), segment.controlOut(), segment.controlIn()));\n                }\n                return stackSegments;\n            }\n        });\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var previousSegment;\n                var stackPoints;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues !== 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                        previousSegment = prevSegment;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                }\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        var stackPoint = stackPoints[idx];\n                        var pointSlot = this$1.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var this$1 = this;\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var length = linePoints.length;\n                if (startIdx < 0) {\n                    startIdx = 0;\n                    length--;\n                }\n                var endIdx = startIdx + length;\n                var pointOffset = this.seriesOptions[0]._outOfRangeMinPoint ? 1 : 0;\n                var stackPoints = [];\n                this._stackPoints = this._stackPoints || [];\n                for (var categoryIx = startIdx; categoryIx < endIdx; categoryIx++) {\n                    var pointIx = categoryIx + pointOffset;\n                    var currentSeriesIx = seriesIx;\n                    var point = void 0;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][pointIx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && categoryIx > startIdx && !seriesPoints[currentSeriesIx][pointIx - 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && categoryIx + 1 < endIdx && !seriesPoints[currentSeriesIx][pointIx + 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        var gapStackPoint = this$1._createGapStackPoint(categoryIx);\n                        this$1._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, pointIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var index = seriesIdx;\n                var point;\n                while (index > 0 && !point) {\n                    index--;\n                    point = seriesPoints[index][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[index][pointIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            },\n            supportsPointInactiveOpacity: function () {\n                return false;\n            }\n        });\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                this.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var axisRanges = this.axisRanges;\n                for (var axisName in chartAxisRanges) {\n                    var chartRange = chartAxisRanges[axisName];\n                    var range = axisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = Math.min(range.min, chartRange.min);\n                    range.max = Math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var BarLabel = ChartElement.extend({\n            init: function (content, options, pointData) {\n                ChartElement.fn.init.call(this, options);\n                this.textBox = new TextBox(content, this.options, pointData);\n                this.append(this.textBox);\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var aboveAxis = options.aboveAxis;\n                var text = this.children[0];\n                var textOptions = text.options;\n                var box = text.box;\n                var padding = text.options.padding;\n                var labelBox = targetBox;\n                textOptions.align = vertical ? CENTER : LEFT;\n                textOptions.vAlign = vertical ? TOP : CENTER;\n                if (options.position === INSIDE_END) {\n                    if (vertical) {\n                        textOptions.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            textOptions.vAlign = BOTTOM;\n                        }\n                    } else {\n                        textOptions.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position === CENTER) {\n                    textOptions.vAlign = CENTER;\n                    textOptions.align = CENTER;\n                } else if (options.position === INSIDE_BASE) {\n                    if (vertical) {\n                        textOptions.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        textOptions.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position === OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            labelBox = new Box(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        textOptions.align = CENTER;\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            labelBox = new Box(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (labelBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (labelBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(labelBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var vertical = this.options.vertical;\n                var field = vertical ? Y : X;\n                var start = field + '1';\n                var end = field + '2';\n                var text = this.children[0];\n                var parentBox = this.parent.box;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    var targetBox = text.paddingBox.clone();\n                    targetBox[start] = Math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = Math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        setDefaultOptions(BarLabel, {\n            position: OUTSIDE_END,\n            margin: getSpacing(3),\n            padding: getSpacing(4),\n            color: BLACK,\n            background: '',\n            border: {\n                width: 1,\n                color: ''\n            },\n            aboveAxis: true,\n            vertical: false,\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            zIndex: 2\n        });\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient !== 'none';\n        }\n        var BAR_ALIGN_MIN_WIDTH = 6;\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.options = options;\n                this.color = options.color || WHITE;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.value = value;\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                if (labels.visible) {\n                    var pointData = this.pointData();\n                    var labelTemplate = getTemplate(labels);\n                    var labelText;\n                    if (labelTemplate) {\n                        labelText = labelTemplate(pointData);\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, labels), pointData);\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                this.render();\n                var label = this.label;\n                this.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = this.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var options = ref.options;\n                var customVisual = options.visual;\n                if (this.visible !== false) {\n                    ChartElement.fn.createVisual.call(this);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            sender: this.getSender(),\n                            series: this.series,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        this.createRect(this.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    var overlay = this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay));\n                    visual.append(overlay);\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var color = this.color;\n                var border = this.options.border;\n                var brightness = border._brightness || BORDER_BRIGHTNESS;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var aboveAxis = ref.aboveAxis;\n                var clipBox = this.owner.pane.clipBox() || box;\n                var horizontalAlign = LEFT;\n                var verticalAlign = TOP;\n                var x, y;\n                if (options.vertical) {\n                    x = Math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n                    if (aboveAxis) {\n                        y = Math.max(box.y1, clipBox.y1);\n                    } else {\n                        y = Math.min(box.y2, clipBox.y2);\n                        verticalAlign = BOTTOM;\n                    }\n                } else {\n                    var x1 = Math.max(box.x1, clipBox.x1);\n                    var x2 = Math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        verticalAlign = BOTTOM;\n                        if (aboveAxis) {\n                            horizontalAlign = RIGHT;\n                            x = x2;\n                        } else {\n                            x = x1;\n                        }\n                        y = Math.max(box.y1, clipBox.y1) - TOOLTIP_OFFSET;\n                    } else {\n                        if (aboveAxis) {\n                            x = x2 + TOOLTIP_OFFSET;\n                        } else {\n                            x = x1 - TOOLTIP_OFFSET;\n                            horizontalAlign = RIGHT;\n                        }\n                        y = Math.max(box.y1, clipBox.y1);\n                    }\n                }\n                return {\n                    point: new Point(x, y),\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            },\n            pointData: function () {\n                return {\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    series: this.series\n                };\n            }\n        });\n        deepExtend(Bar.prototype, PointEventsMixin);\n        deepExtend(Bar.prototype, NoteMixin);\n        Bar.prototype.defaults = {\n            border: { width: 1 },\n            vertical: true,\n            overlay: { gradient: 'glass' },\n            labels: {\n                visible: false,\n                format: '{0}'\n            },\n            opacity: 1,\n            notes: { label: {} }\n        };\n        function forEach(elements, callback) {\n            elements.forEach(callback);\n        }\n        function forEachReverse(elements, callback) {\n            var length = elements.length;\n            for (var idx = length - 1; idx >= 0; idx--) {\n                callback(elements[idx], idx - length - 1);\n            }\n        }\n        var ClusterLayout = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.forEach = options.rtl ? forEachReverse : forEach;\n            },\n            reflow: function (box) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var gap = ref.gap;\n                var spacing = ref.spacing;\n                var children = this.children;\n                var count = children.length;\n                var axis = vertical ? Y : X;\n                var slots = count + gap + spacing * (count - 1);\n                var slotSize = (vertical ? box.height() : box.width()) / slots;\n                var position = box[axis + 1] + slotSize * (gap / 2);\n                this.forEach(children, function (child, idx) {\n                    var childBox = (child.box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    child.reflow(childBox);\n                    if (idx < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                });\n            }\n        });\n        setDefaultOptions(ClusterLayout, {\n            vertical: false,\n            gap: 0,\n            spacing: 0\n        });\n        var StackWrap = ChartElement.extend({\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var positionAxis = this.options.vertical ? X : Y;\n                var children = this.children;\n                var childrenCount = children.length;\n                var box = this.box = new Box();\n                for (var i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i];\n                    if (currentChild.visible !== false) {\n                        var childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this$1.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        setDefaultOptions(StackWrap, { vertical: true });\n        var BarChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var isStacked = options.isStacked;\n                var value = this.pointValue(data);\n                var pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position === OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var pointType = this.pointType();\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    var clusterType = this.clusterType();\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = this.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === datavizConstants.STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var options = this.options;\n                var categorySlot = categoryAxis.getSlot(categoryIx);\n                var startValue = valueAxis.startValue();\n                if (options.isStacked) {\n                    var zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    var stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                CategoricalChart.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    var pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this$1.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new GeometryPoint(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        setDefaultOptions(BarChart, { animation: { type: BAR } });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var ocSlot = valueAxis.getSlot(value.open, value.close);\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                this.realBody = ocSlot;\n                var mid = lhSlot.center().x;\n                var points = [];\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                this.lines = points;\n                this.box = lhSlot.clone().wrap(ocSlot);\n                if (!this._rendered) {\n                    this._rendered = true;\n                    this.createNote();\n                }\n                this.reflowNote();\n            },\n            reflowNote: function () {\n                if (this.note) {\n                    this.note.reflow(this.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var border = this.options.border;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(this.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                var clipBox = this.owner.pane.clipBox() || box;\n                return {\n                    point: new Point(box.x2 + TOOLTIP_OFFSET, Math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET),\n                    align: {\n                        horizontal: LEFT,\n                        vertical: TOP\n                    }\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        setDefaultOptions(Candlestick, {\n            vertical: true,\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{4:d}</th></tr>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            }\n        });\n        deepExtend(Candlestick.prototype, PointEventsMixin);\n        deepExtend(Candlestick.prototype, NoteMixin);\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        var CandlestickChart = CategoricalChart.extend({\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var pointType = this.pointType();\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var color = data.fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type === CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.vertical = !this.options.invertAxes;\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var parts = this.splitValue(value);\n                var axisRange = this.valueAxisRanges[axisName];\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.prototype, ClipAnimationMixin);\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                Candlestick.fn.init.call(this, value, options);\n                this.createNote();\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var whiskerSlot, boxSlot;\n                this.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                this.realBody = boxSlot;\n                this.reflowBoxSlot(box);\n                this.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                this.reflowWhiskerSlot(box);\n                var medianSlot = valueAxis.getSlot(value.median);\n                if (value.mean) {\n                    var meanSlot = valueAxis.getSlot(value.mean);\n                    this.meanPoints = this.calcMeanPoints(box, meanSlot);\n                }\n                this.whiskerPoints = this.calcWhiskerPoints(boxSlot, whiskerSlot);\n                this.medianPoints = this.calcMedianPoints(box, medianSlot);\n                this.box = whiskerSlot.clone().wrap(boxSlot);\n                this.reflowNote();\n            },\n            reflowBoxSlot: function (box) {\n                this.boxSlot.x1 = box.x1;\n                this.boxSlot.x2 = box.x2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.x1 = box.x1;\n                this.whiskerSlot.x2 = box.x2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            box.x1,\n                            meanSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            meanSlot.y1\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().x;\n                return [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n            },\n            renderOutliers: function (options) {\n                var this$1 = this;\n                var value = this.value;\n                var outliers = value.outliers || [];\n                var outerFence = Math.abs(value.q3 - value.q1) * 3;\n                var elements = [];\n                var markers = options.markers || {};\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    var markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(this$1.color)) {\n                            markersBorder.color = this$1.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    var shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var this$1 = this;\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var center = this.box.center();\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue);\n                    if (this$1.options.vertical) {\n                        markerBox.move(center.x);\n                    } else {\n                        markerBox.move(undefined, center.y);\n                    }\n                    this$1.box = this$1.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.whiskers);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if ((this.options.border || {}).color) {\n                    return this.options.border.color;\n                }\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.fn.getBorderColor.call(this);\n            }\n        });\n        setDefaultOptions(BoxPlot, {\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            median: { color: '#f6f6f6' },\n            mean: {\n                width: 2,\n                dashType: 'dash',\n                color: '#f6f6f6'\n            },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{6:d}</th></tr>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            },\n            outliers: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: datavizConstants.CROSS,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            },\n            extremes: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            }\n        });\n        deepExtend(BoxPlot.prototype, PointEventsMixin);\n        var VerticalBoxPlot = BoxPlot.extend({\n            reflowBoxSlot: function (box) {\n                this.boxSlot.y1 = box.y1;\n                this.boxSlot.y2 = box.y2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.y1 = box.y1;\n                this.whiskerSlot.y2 = box.y2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            meanSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            meanSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().y;\n                return [\n                    [\n                        [\n                            whiskerSlot.x1,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid\n                        ],\n                        [\n                            boxSlot.x1,\n                            mid\n                        ]\n                    ],\n                    [\n                        [\n                            whiskerSlot.x2,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid\n                        ],\n                        [\n                            boxSlot.x2,\n                            mid\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            medianSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            medianSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                if (this.options.invertAxes) {\n                    return VerticalBoxPlot;\n                }\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                var parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length;\n                var result = [];\n                for (var i = 0; i < length; i++) {\n                    var item = items[i];\n                    if (defined(item) && item !== null) {\n                        result.push(item);\n                    }\n                }\n                return result;\n            },\n            supportsPointInactiveOpacity: function () {\n                return false;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axes = this.chart.seriesAxes(this.series);\n                var axis = this.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this._initFields();\n                this.render();\n            },\n            _initFields: function () {\n                this.xAxisRanges = {};\n                this.yAxisRanges = {};\n                this.points = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            addErrorBar: function (point, field, fields) {\n                var value = point.value[field];\n                var valueErrorField = field + 'Value';\n                var lowField = field + 'ErrorLow';\n                var highField = field + 'ErrorHigh';\n                var seriesIx = fields.seriesIx;\n                var series = fields.series;\n                var errorBars = point.options.errorBars;\n                var lowValue = fields[lowField];\n                var highValue = fields[highField];\n                if (isNumber(value)) {\n                    var errorRange;\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        this.seriesErrorRanges = this.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        this.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var low = errorRange.low;\n                var high = errorRange.high;\n                var series = point.series;\n                var options = point.options.errorBars;\n                var isVertical = field === Y;\n                var item = {};\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                var errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                this.updateRange(item, series);\n                item[field] = high;\n                this.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var x = value.x;\n                var y = value.y;\n                var seriesIx = fields.seriesIx;\n                var series = this.options.series[seriesIx];\n                var missingValues = this.seriesMissingValues(series);\n                var seriesPoints = this.seriesPoints[seriesIx];\n                var pointValue = value;\n                if (!(hasValue(x) && hasValue(y))) {\n                    pointValue = this.createMissingValue(pointValue, missingValues);\n                }\n                var point;\n                if (pointValue) {\n                    point = this.createPoint(pointValue, fields);\n                    if (point) {\n                        $.extend(point, fields);\n                        this.addErrorBar(point, X, fields);\n                        this.addErrorBar(point, Y, fields);\n                    }\n                    this.updateRange(pointValue, fields.series);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: function () {\n            },\n            updateRange: function (value, series) {\n                var intlService = this.chartService.intl;\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var x = value.x;\n                var y = value.y;\n                var xAxisRange = this.xAxisRanges[xAxisName];\n                var yAxisRange = this.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = this.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(x)) {\n                        x = parseDate(intlService, x);\n                    }\n                    xAxisRange.min = Math.min(xAxisRange.min, x);\n                    xAxisRange.max = Math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = this.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(y)) {\n                        y = parseDate(intlService, y);\n                    }\n                    yAxisRange.min = Math.min(yAxisRange.min, y);\n                    yAxisRange.max = Math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, options);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return pointOptions;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var plotArea = this.plotArea;\n                var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n                var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var chartPoints = this.points;\n                var limit = !this.options.clip;\n                var pointIx = 0;\n                this.traverseDataPoints(function (value, fields) {\n                    var point = chartPoints[pointIx++];\n                    var seriesAxes = this$1.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n                    var slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n                    if (point) {\n                        if (slotX && slotY) {\n                            var pointSlot = this$1.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var seriesPoints = ref.seriesPoints;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                        var value = ref$1.valueFields;\n                        var fields = ref$1.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: this$1\n                        }, fields));\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        setDefaultOptions(ScatterChart, {\n            series: [],\n            tooltip: { format: '{0}, {1}' },\n            labels: { format: '{0}, {1}' },\n            clip: true\n        });\n        deepExtend(ScatterChart.prototype, ClipAnimationMixin, { _bindPoint: CategoricalChart.prototype._bindPoint });\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                LinePoint.fn.init.call(this, value, options);\n                this.category = value.category;\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = (markers.size + markers.border.width + border.width) / 2;\n                var highlightGroup = new Group();\n                var shadow = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y + radius / 5 + border.width / 2\n                ], radius + border.width / 2), {\n                    stroke: { color: 'none' },\n                    fill: this.createGradient({\n                        gradient: 'bubbleShadow',\n                        color: markers.background,\n                        stops: [\n                            {\n                                offset: 0,\n                                color: markers.background,\n                                opacity: 0.3\n                            },\n                            {\n                                offset: 1,\n                                color: markers.background,\n                                opacity: 0\n                            }\n                        ]\n                    })\n                });\n                var overlay = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                highlightGroup.append(shadow, overlay);\n                return highlightGroup;\n            }\n        });\n        Bubble.prototype.defaults = deepExtend({}, Bubble.prototype.defaults, {\n            labels: { position: CENTER },\n            highlight: {\n                opacity: 1,\n                border: {\n                    color: '#fff',\n                    width: 2,\n                    opacity: 1\n                }\n            }\n        });\n        Bubble.prototype.defaults.highlight.zIndex = undefined;\n        var BubbleChart = ScatterChart.extend({\n            _initFields: function () {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn._initFields.call(this);\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = Math.max(this._maxSize, Math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                this.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(this, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointsCount = series.data.length;\n                var delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount);\n                var animationOptions = {\n                    delay: delay,\n                    duration: INITIAL_ANIMATION_DURATION - delay,\n                    type: BUBBLE\n                };\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                var pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                var point = new Bubble(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var boxSize = Math.min(box.width(), box.height());\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesPoints = this$1.seriesPoints[seriesIx];\n                    var minSize = currentSeries.minSize || Math.max(boxSize * 0.02, 10);\n                    var maxSize = currentSeries.maxSize || boxSize * 0.2;\n                    var minR = minSize / 2;\n                    var maxR = maxSize / 2;\n                    var minArea = Math.PI * minR * minR;\n                    var maxArea = Math.PI * maxR * maxR;\n                    var areaRange = maxArea - minArea;\n                    var areaRatio = areaRange / this$1._maxSize;\n                    for (var pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = Math.abs(point.value.size) * areaRatio;\n                            var radius = Math.sqrt((minArea + area) / Math.PI);\n                            var baseZIndex = valueOrDefault(point.options.zIndex, 0);\n                            var zIndex = baseZIndex + (1 - radius / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: radius * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: function () {\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(BubbleChart, {\n            tooltip: { format: '{3}' },\n            labels: { format: '{3}' }\n        });\n        var Target = ShapeElement.extend({});\n        deepExtend(Target.prototype, PointEventsMixin);\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.aboveAxis = this.options.aboveAxis;\n                this.color = options.color || WHITE;\n                this.value = value;\n            },\n            render: function () {\n                var options = this.options;\n                if (!this._rendered) {\n                    this._rendered = true;\n                    if (defined(this.value.target)) {\n                        this.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || this.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        this.target.value = this.value;\n                        this.target.dataItem = this.dataItem;\n                        this.target.series = this.series;\n                        this.append(this.target);\n                    }\n                    this.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var ref = this;\n                var options = ref.options;\n                var target = ref.target;\n                var chart = ref.owner;\n                var invertAxes = options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.options);\n                var categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis);\n                var targetValueSlot = valueAxis.getSlot(this.value.target);\n                var targetSlotX = invertAxes ? targetValueSlot : categorySlot;\n                var targetSlotY = invertAxes ? categorySlot : targetValueSlot;\n                if (target) {\n                    var targetSlot = new Box(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (this.note) {\n                    this.note.reflow(box);\n                }\n                this.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            createHighlight: function (style) {\n                return Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        Bullet.prototype.tooltipAnchor = Bar.prototype.tooltipAnchor;\n        setDefaultOptions(Bullet, {\n            border: { width: 1 },\n            vertical: false,\n            opacity: 1,\n            target: {\n                shape: '',\n                border: {\n                    width: 0,\n                    color: 'green'\n                },\n                line: { width: 2 }\n            },\n            tooltip: { format: 'Current: {0}<br />Target: {1}' }\n        });\n        deepExtend(Bullet.prototype, PointEventsMixin);\n        deepExtend(Bullet.prototype, NoteMixin);\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                wrapData(options);\n                CategoricalChart.fn.init.call(this, plotArea, options);\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var value = data.valueFields;\n                var bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = this.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                var bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var current = value.current;\n                var target = value.target;\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, current, target);\n                    axisRange.max = Math.max(axisRange.max, current, target);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    point.options.animation = this$1.options.animation;\n                    point.createAnimation();\n                }\n            }\n        });\n        BulletChart.prototype._setAnimationOptions = BarChart.prototype._setAnimationOptions;\n        setDefaultOptions(BulletChart, { animation: { type: BAR } });\n        function wrapData(options) {\n            var series = options.series;\n            for (var i = 0; i < series.length; i++) {\n                var seriesItem = series[i];\n                var data = seriesItem.data;\n                if (data && !isArray(data[0]) && !isObject(data[0])) {\n                    seriesItem.data = [data];\n                }\n            }\n        }\n        var BaseTooltip = Class.extend({\n            init: function (chartService, options) {\n                this.chartService = chartService;\n                this.options = deepExtend({}, this.options, options);\n            },\n            getStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                var padding = getSpacing(options.padding || {}, 'auto');\n                return {\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: styleValue(options.border.width),\n                    paddingTop: styleValue(padding.top),\n                    paddingBottom: styleValue(padding.bottom),\n                    paddingLeft: styleValue(padding.left),\n                    paddingRight: styleValue(padding.right)\n                };\n            },\n            show: function (options, tooltipOptions, point) {\n                options.format = tooltipOptions.format;\n                var style = this.getStyle(tooltipOptions, point);\n                options.style = style;\n                var background = new Color(style.backgroundColor);\n                if (!defined(tooltipOptions.color) && !background.isDark()) {\n                    options.className = 'k-chart-tooltip-inverse';\n                }\n                this.chartService.notify(SHOW_TOOLTIP, options);\n                this.visible = true;\n            },\n            hide: function () {\n                if (this.chartService) {\n                    this.chartService.notify(HIDE_TOOLTIP);\n                }\n                this.visible = false;\n            },\n            destroy: function () {\n                delete this.chartService;\n            }\n        });\n        setDefaultOptions(BaseTooltip, {\n            border: { width: 1 },\n            opacity: 1\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (chartService, crosshair, options) {\n                BaseTooltip.fn.init.call(this, chartService, options);\n                this.crosshair = crosshair;\n                this.formatService = chartService.format;\n                this.initAxisName();\n            },\n            initAxisName: function () {\n                var axis = this.crosshair.axis;\n                var plotArea = axis.plotArea;\n                var name;\n                if (plotArea.categoryAxis) {\n                    name = axis.getCategory ? 'categoryAxis' : 'valueAxis';\n                } else {\n                    name = axis.options.vertical ? 'yAxis' : 'xAxis';\n                }\n                this.axisName = name;\n            },\n            showAt: function (point) {\n                var ref = this;\n                var axis = ref.crosshair.axis;\n                var options = ref.options;\n                var value = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                var formattedValue = value;\n                if (options.format) {\n                    formattedValue = this.formatService.auto(options.format, value);\n                } else if (axis.options.type === DATE) {\n                    formattedValue = this.formatService.auto(axis.options.labels.dateFormats[axis.options.baseUnit], value);\n                }\n                this.show({\n                    point: point,\n                    anchor: this.getAnchor(),\n                    crosshair: this.crosshair,\n                    value: formattedValue,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                }, this.options);\n            },\n            hide: function () {\n                this.chartService.notify(HIDE_TOOLTIP, {\n                    crosshair: this.crosshair,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                });\n            },\n            getAnchor: function () {\n                var ref = this;\n                var crosshair = ref.crosshair;\n                var ref_options = ref.options;\n                var position = ref_options.position;\n                var padding = ref_options.padding;\n                var vertical = !crosshair.axis.options.vertical;\n                var lineBox = crosshair.line.bbox();\n                var horizontalAlign, verticalAlign, point;\n                if (vertical) {\n                    horizontalAlign = CENTER;\n                    if (position === BOTTOM) {\n                        verticalAlign = TOP;\n                        point = lineBox.bottomLeft().translate(0, padding);\n                    } else {\n                        verticalAlign = BOTTOM;\n                        point = lineBox.topLeft().translate(0, -padding);\n                    }\n                } else {\n                    verticalAlign = CENTER;\n                    if (position === LEFT) {\n                        horizontalAlign = RIGHT;\n                        point = lineBox.topLeft().translate(-padding, 0);\n                    } else {\n                        horizontalAlign = LEFT;\n                        point = lineBox.topRight().translate(padding, 0);\n                    }\n                }\n                return {\n                    point: point,\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            }\n        });\n        setDefaultOptions(CrosshairTooltip, { padding: 10 });\n        var Crosshair = ChartElement.extend({\n            init: function (chartService, axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    this.tooltip = new CrosshairTooltip(chartService, this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                if (this.tooltip) {\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var ref = this;\n                var axis = ref.axis;\n                var point = ref.point;\n                var vertical = axis.options.vertical;\n                var box = this.getBox();\n                var dim = vertical ? Y : X;\n                var lineStart = new GeometryPoint(box.x1, box.y1);\n                var lineEnd;\n                if (vertical) {\n                    lineEnd = new GeometryPoint(box.x2, box.y1);\n                } else {\n                    lineEnd = new GeometryPoint(box.x1, box.y2);\n                }\n                if (point) {\n                    if (this.stickyMode) {\n                        var slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                this.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var axis = this.axis;\n                var axes = axis.pane.axes;\n                var length = axes.length;\n                var vertical = axis.options.vertical;\n                var box = axis.lineBox().clone();\n                var dim = vertical ? X : Y;\n                var axisLineBox;\n                for (var i = 0; i < length; i++) {\n                    var currentAxis = axes[i];\n                    if (currentAxis.options.vertical !== vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                if (this.tooltip) {\n                    this.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(this);\n            }\n        });\n        setDefaultOptions(Crosshair, {\n            color: BLACK,\n            width: 2,\n            zIndex: -1,\n            tooltip: { visible: false }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                ChartElement.fn.init.call(this, options);\n                this.pane = pane;\n            },\n            shouldClip: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                return this.pane.chartsBox();\n            },\n            createVisual: function () {\n                this.visual = new Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = Path.fromRect(clipRect);\n                    alignPathToPixel(clipPath);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            unclipLabels: function () {\n                var ref = this;\n                var charts = ref.children;\n                var clipBox = ref.clipBox;\n                for (var i = 0; i < charts.length; i++) {\n                    var points = charts[i].points || {};\n                    var length = points.length;\n                    for (var j = 0; j < length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && point.overlapsBox && point.overlapsBox(clipBox)) {\n                            if (point.unclipElements) {\n                                point.unclipElements();\n                            } else {\n                                var label = point.label;\n                                var note = point.note;\n                                if (label && label.options.visible) {\n                                    if (label.alignToClipBox) {\n                                        label.alignToClipBox(clipBox);\n                                    }\n                                    label.options.noclip = true;\n                                }\n                                if (note && note.options.visible) {\n                                    note.options.noclip = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        ChartContainer.prototype.isStackRoot = true;\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.id = paneID();\n                this.createTitle();\n                this.content = new ChartElement();\n                this.chartContainer = new ChartContainer({}, this);\n                this.append(this.content);\n                this.axes = [];\n                this.charts = [];\n            },\n            createTitle: function () {\n                var titleOptions = this.options.title;\n                if (isObject(titleOptions)) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                this.title = dataviz.Title.buildTitle(titleOptions, this, Pane.prototype.options.title);\n            },\n            appendAxis: function (axis) {\n                this.content.append(axis);\n                this.axes.push(axis);\n                axis.pane = this;\n            },\n            appendAxisAt: function (axis, pos) {\n                this.content.append(axis);\n                this.axes.splice(pos, 0, axis);\n                axis.pane = this;\n            },\n            appendChart: function (chart) {\n                if (this.chartContainer.parent !== this.content) {\n                    this.content.append(this.chartContainer);\n                }\n                this.charts.push(chart);\n                this.chartContainer.append(chart);\n                chart.pane = this;\n            },\n            empty: function () {\n                var this$1 = this;\n                var plotArea = this.parent;\n                if (plotArea) {\n                    for (var i = 0; i < this.axes.length; i++) {\n                        plotArea.removeAxis(this$1.axes[i]);\n                    }\n                    for (var i$1 = 0; i$1 < this.charts.length; i$1++) {\n                        plotArea.removeChart(this$1.charts[i$1]);\n                    }\n                }\n                this.axes = [];\n                this.charts = [];\n                this.content.destroy();\n                this.content.children = [];\n                this.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var content;\n                if (last(this.children) === this.content) {\n                    content = this.children.pop();\n                }\n                BoxElement.fn.reflow.call(this, targetBox);\n                if (content) {\n                    this.children.push(content);\n                }\n                if (this.title) {\n                    this.contentBox.y1 += this.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            clipRoot: function () {\n                return this;\n            },\n            createGridLines: function () {\n                var axes = this.axes;\n                var allAxes = axes.concat(this.parent.axes);\n                var vGridLines = [];\n                var hGridLines = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var vertical = axis.options.vertical;\n                    var gridLines = vertical ? vGridLines : hGridLines;\n                    for (var j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            var altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = this.createGradient.bind(this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n                this.notifyRender();\n            },\n            chartsBox: function () {\n                var axes = this.axes;\n                var length = axes.length;\n                var chartsBox = new Box();\n                for (var idx = 0; idx < length; idx++) {\n                    var axis = axes[idx];\n                    var axisValueField = axis.options.vertical ? Y : X;\n                    var lineBox = axis.lineBox();\n                    chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                if (chartsBox.x2 === 0) {\n                    var allAxes = this.parent.axes;\n                    var length$1 = allAxes.length;\n                    for (var idx$1 = 0; idx$1 < length$1; idx$1++) {\n                        var axis$1 = allAxes[idx$1];\n                        if (!axis$1.options.vertical) {\n                            var lineBox$1 = axis$1.lineBox();\n                            chartsBox.x1 = lineBox$1.x1;\n                            chartsBox.x2 = lineBox$1.x2;\n                        }\n                    }\n                }\n                return chartsBox;\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            },\n            notifyRender: function () {\n                var service = this.getService();\n                if (service) {\n                    service.notify(PANE_RENDER, {\n                        pane: new ChartPane(this),\n                        index: this.paneIndex,\n                        name: this.options.name\n                    });\n                }\n            }\n        });\n        var ID = 1;\n        function paneID() {\n            return 'pane' + ID++;\n        }\n        Pane.prototype.isStackRoot = true;\n        setDefaultOptions(Pane, {\n            zIndex: -1,\n            shrinkToFit: true,\n            title: { align: LEFT },\n            visible: true\n        });\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        function segmentVisible(series, fields, index) {\n            var visible = fields.visible;\n            if (defined(visible)) {\n                return visible;\n            }\n            var pointVisibility = series.pointVisibility;\n            if (pointVisibility) {\n                return pointVisibility[index];\n            }\n        }\n        function bindSegments(series) {\n            var data = series.data;\n            var points = [];\n            var sum = 0;\n            var count = 0;\n            for (var idx = 0; idx < data.length; idx++) {\n                var pointData = SeriesBinder.current.bindPoint(series, idx);\n                var value = pointData.valueFields.value;\n                if (isString(value)) {\n                    value = parseFloat(value);\n                }\n                if (isNumber(value)) {\n                    pointData.visible = segmentVisible(series, pointData.fields, idx) !== false;\n                    pointData.value = Math.abs(value);\n                    points.push(pointData);\n                    if (pointData.visible) {\n                        sum += pointData.value;\n                    }\n                    if (value !== 0) {\n                        count++;\n                    }\n                } else {\n                    points.push(null);\n                }\n            }\n            return {\n                total: sum,\n                points: points,\n                count: count\n            };\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function filterSeriesByType(series, types) {\n            var result = [];\n            var seriesTypes = [].concat(types);\n            for (var idx = 0; idx < series.length; idx++) {\n                var currentSeries = series[idx];\n                if (inArray(currentSeries.type, seriesTypes)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function getDateField(field, row, intlService) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field;\n            var value = row[key];\n            if (!value) {\n                value = parseDate(intlService, getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type;\n            var dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        var AREA_REGEX = /area/i;\n        function seriesMissingValues(series) {\n            if (series.missingValues) {\n                return series.missingValues;\n            }\n            return AREA_REGEX.test(series.type) || series.stack ? ZERO : INTERPOLATE;\n        }\n        function hasValue$1(series, item) {\n            var fields = SeriesBinder.current.bindPoint(series, null, item);\n            var valueFields = fields.valueFields;\n            for (var field in valueFields) {\n                if (dataviz.convertableToNumber(valueFields[field])) {\n                    return true;\n                }\n            }\n        }\n        function findNext(ref) {\n            var start = ref.start;\n            var dir = ref.dir;\n            var min = ref.min;\n            var max = ref.max;\n            var getter$$1 = ref.getter;\n            var hasItem = ref.hasItem;\n            var series = ref.series;\n            var pointHasValue, outPoint;\n            var idx = start;\n            do {\n                idx += dir;\n                if (hasItem(idx)) {\n                    outPoint = getter$$1(idx);\n                    pointHasValue = hasValue$1(series, outPoint.item);\n                }\n            } while (min <= idx && idx <= max && !pointHasValue);\n            if (pointHasValue) {\n                return outPoint;\n            }\n        }\n        function createOutOfRangePoints(series, range, count, getter$$1, hasItem) {\n            var min = range.min;\n            var max = range.max;\n            var hasMinPoint = min > 0 && min < count;\n            var hasMaxPoint = max + 1 < count;\n            if (hasMinPoint || hasMaxPoint) {\n                var missingValues = seriesMissingValues(series);\n                var minPoint, maxPoint;\n                if (missingValues !== INTERPOLATE) {\n                    if (hasMinPoint) {\n                        minPoint = getter$$1(min - 1);\n                    }\n                    if (hasMaxPoint) {\n                        maxPoint = getter$$1(max + 1);\n                    }\n                } else {\n                    var outPoint, pointHasValue;\n                    if (hasMinPoint) {\n                        outPoint = getter$$1(min - 1);\n                        pointHasValue = hasValue$1(series, outPoint.item);\n                        if (!pointHasValue) {\n                            minPoint = findNext({\n                                start: min,\n                                dir: -1,\n                                min: 0,\n                                max: count - 1,\n                                getter: getter$$1,\n                                hasItem: hasItem,\n                                series: series\n                            });\n                        } else {\n                            minPoint = outPoint;\n                        }\n                    }\n                    if (hasMaxPoint) {\n                        outPoint = getter$$1(max + 1);\n                        pointHasValue = hasValue$1(series, outPoint.item);\n                        if (!pointHasValue) {\n                            maxPoint = findNext({\n                                start: max,\n                                dir: 1,\n                                min: 0,\n                                max: count - 1,\n                                getter: getter$$1,\n                                hasItem: hasItem,\n                                series: series\n                            });\n                        } else {\n                            maxPoint = outPoint;\n                        }\n                    }\n                }\n                if (minPoint) {\n                    series._outOfRangeMinPoint = minPoint;\n                }\n                if (maxPoint) {\n                    series._outOfRangeMaxPoint = maxPoint;\n                }\n            }\n        }\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.initFields(series, options);\n                this.series = series;\n                this.initSeries();\n                this.charts = [];\n                this.options.legend = this.options.legend || {};\n                this.options.legend.items = [];\n                this.axes = [];\n                this.crosshairs = [];\n                this.chartService = chartService;\n                this.originalOptions = options;\n                this.createPanes();\n                this.render();\n                this.createCrosshairs();\n            },\n            initFields: function () {\n            },\n            initSeries: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    series[i].index = i;\n                }\n            },\n            createPanes: function () {\n                var this$1 = this;\n                var titleOptions = this.options.title || {};\n                var paneDefaults = this.options.paneDefaults;\n                var paneOptions = this.options.panes || [];\n                var panesLength = Math.max(paneOptions.length, 1);\n                var panes = [];\n                var defaults = deepExtend({ title: { color: titleOptions.color } }, paneDefaults);\n                for (var i = 0; i < panesLength; i++) {\n                    var options = deepExtend({}, defaults, paneOptions[i]);\n                    if (isString(options.title)) {\n                        options.title = deepExtend({ text: options.title }, defaults.title);\n                    }\n                    var currentPane = new Pane(options);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    this$1.append(currentPane);\n                }\n                this.panes = panes;\n            },\n            crosshairOptions: function (axis) {\n                return axis.options.crosshair;\n            },\n            createCrosshairs: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    for (var j = 0; j < pane.axes.length; j++) {\n                        var axis = pane.axes[j];\n                        var options = this$1.crosshairOptions(axis);\n                        if (options && options.visible) {\n                            var currentCrosshair = new Crosshair(this$1.chartService, axis, options);\n                            this$1.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var crosshairs = this.crosshairs;\n                var axes = pane.axes;\n                for (var i = crosshairs.length - 1; i >= 0; i--) {\n                    for (var j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var pane = this.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                this.axes.push(axis);\n                axis.plotArea = this;\n            },\n            removeAxis: function (axisToRemove) {\n                var this$1 = this;\n                var filteredAxes = [];\n                for (var i = 0; i < this.axes.length; i++) {\n                    var axis = this$1.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                this.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                this.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    this.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var this$1 = this;\n                var filteredCharts = [];\n                for (var i = 0; i < this.charts.length; i++) {\n                    var chart = this$1.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                this.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length;\n                var legend = this.options.legend;\n                var labels = legend.labels || {};\n                var inactiveItems = legend.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                var data = [];\n                for (var i = 0; i < count; i++) {\n                    var currentSeries = series[i];\n                    var seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    var text = currentSeries.name;\n                    var labelTemplate = seriesVisible ? getTemplate(labels) : getTemplate(inactiveItemsLabels) || getTemplate(labels);\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: hasValue(text) ? text : '',\n                            series: currentSeries\n                        });\n                    }\n                    var defaults = currentSeries._defaults;\n                    var color = currentSeries.color;\n                    if (isFunction(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    var itemLabelOptions = void 0, markerColor = void 0;\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (hasValue(text) && text !== '') {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [];\n                var yAxes = [];\n                for (var paneIx = 0; paneIx < panes.length; paneIx++) {\n                    var paneAxes = panes[paneIx].axes;\n                    for (var axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        var axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var this$1 = this;\n                var series = this.series;\n                var seriesByPane = {};\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var pane = this$1.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var result = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var options = this.options.plotArea;\n                var panes = this.panes;\n                var margin = getSpacing(options.margin);\n                this.box = targetBox.clone().unpad(margin);\n                this.reflowPanes();\n                this.detachLabels();\n                this.reflowAxes(panes);\n                this.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var this$1 = this;\n                var panesArray = [].concat(panes);\n                this.initSeries();\n                var root = this.getRoot();\n                if (root) {\n                    root.cleanGradients();\n                }\n                for (var i = 0; i < panesArray.length; i++) {\n                    this$1.removeCrosshairs(panesArray[i]);\n                    panesArray[i].empty();\n                }\n                this.render(panesArray);\n                this.detachLabels();\n                this.reflowAxes(this.panes);\n                this.reflowCharts(panesArray);\n                this.createCrosshairs(panesArray);\n                for (var i$1 = 0; i$1 < panesArray.length; i$1++) {\n                    panesArray[i$1].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                var valuesToAdd = crossingAxes.length - crossingValues.length;\n                var defaultValue = crossingValues[0] || 0;\n                for (var i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true);\n                var slotEdge = axis.options.reverse ? 2 : 1;\n                var targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true);\n                var targetEdge = targetAxis.options.reverse ? 2 : 1;\n                var axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var this$1 = this;\n                var xAnchor = xAxes[0];\n                var yAnchor = yAxes[0];\n                var xAnchorCrossings = this.axisCrossingValues(xAnchor, yAxes);\n                var yAnchorCrossings = this.axisCrossingValues(yAnchor, xAxes);\n                var leftAnchors = {};\n                var rightAnchors = {};\n                var topAnchors = {};\n                var bottomAnchors = {};\n                for (var i = 0; i < yAxes.length; i++) {\n                    var axis = yAxes[i];\n                    var pane = axis.pane;\n                    var paneId = pane.id;\n                    var visible = axis.options.visible !== false;\n                    var anchor = paneAnchor(xAxes, pane) || xAnchor;\n                    var anchorCrossings = xAnchorCrossings;\n                    if (anchor !== xAnchor) {\n                        anchorCrossings = this$1.axisCrossingValues(anchor, yAxes);\n                    }\n                    this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            leftAnchors[paneId] = axis;\n                        }\n                    }\n                    if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            rightAnchors[paneId] = axis;\n                        }\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (var i$1 = 0; i$1 < xAxes.length; i$1++) {\n                    var axis$1 = xAxes[i$1];\n                    var pane$1 = axis$1.pane;\n                    var paneId$1 = pane$1.id;\n                    var visible$1 = axis$1.options.visible !== false;\n                    var anchor$1 = paneAnchor(yAxes, pane$1) || yAnchor;\n                    var anchorCrossings$1 = yAnchorCrossings;\n                    if (anchor$1 !== yAnchor) {\n                        anchorCrossings$1 = this$1.axisCrossingValues(anchor$1, xAxes);\n                    }\n                    this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                    if (axis$1.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis$1.lineBox().y1) === round(anchor$1.lineBox().y1)) {\n                        if (!axis$1._mirrored) {\n                            axis$1.options.labels.mirror = !axis$1.options.labels.mirror;\n                            axis$1._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                        if (topAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(topAnchors[paneId$1].box, TOP).translate(0, -axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            topAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (round(axis$1.lineBox().y2, datavizConstants.COORD_PRECISION) === round(anchor$1.lineBox().y2, datavizConstants.COORD_PRECISION)) {\n                        if (bottomAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(bottomAnchors[paneId$1].box, BOTTOM).translate(0, axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            bottomAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (i$1 !== 0) {\n                        axis$1.alignTo(xAnchor);\n                        axis$1.reflow(axis$1.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var axisBox = axisGroupBox(axes);\n                var overflowX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = Math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                        var currentAxis = axes[i$1];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var shrinked;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var axes = currentPane.axes;\n                    var overflowY = Math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (var j = 0; j < axes.length; j++) {\n                            var currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var offsetX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var paneAxes = currentPane.axes;\n                    var paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        var axisBox = axisGroupBox(paneAxes);\n                        var offsetY = Math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        offsetX = Math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        for (var j = 0; j < paneAxes.length; j++) {\n                            var currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                    var currentAxis$1 = axes[i$1];\n                    currentAxis$1.reflow(currentAxis$1.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var this$1 = this;\n                var axes = this.groupAxes(panes);\n                for (var i = 0; i < panes.length; i++) {\n                    this$1.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    this.alignAxes(axes.x, axes.y);\n                    this.shrinkAxisWidth(panes);\n                    this.autoRotateAxisLabels(axes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisWidth(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.shrinkAxisHeight(panes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisHeight(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var this$1 = this;\n                var ref = this;\n                var panes = ref.panes;\n                var axes = allPaneAxes(panes);\n                var rotated;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (var idx$1 = 0; idx$1 < panes.length; idx$1++) {\n                        this$1.reflowPaneAxes(panes[idx$1]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes;\n                var length = axes.length;\n                if (length > 0) {\n                    for (var i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var charts = this.charts;\n                var count = charts.length;\n                var box = this.box;\n                for (var i = 0; i < count; i++) {\n                    var chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var ref = this;\n                var box = ref.box;\n                var panes = ref.panes;\n                var panesLength = panes.length;\n                var remainingHeight = box.height();\n                var remainingPanes = panesLength;\n                var autoHeightPanes = 0;\n                var top = box.y1;\n                for (var i = 0; i < panesLength; i++) {\n                    var currentPane = panes[i];\n                    var height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            var percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (var i$1 = 0; i$1 < panesLength; i$1++) {\n                    var currentPane$1 = panes[i$1];\n                    if (!currentPane$1.options.height) {\n                        currentPane$1.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (var i$2 = 0; i$2 < panesLength; i$2++) {\n                    var currentPane$2 = panes[i$2];\n                    var paneBox = box.clone().move(box.x1, top);\n                    currentPane$2.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane$2.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var axes = this.axes;\n                var axesCount = axes.length;\n                var box;\n                for (var i = 0; i < axesCount; i++) {\n                    var axisA = axes[i];\n                    for (var j = 0; j < axesCount; j++) {\n                        var axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            var lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || this.box;\n            },\n            chartsBoxes: function () {\n                var panes = this.panes;\n                var boxes = [];\n                for (var idx = 0; idx < panes.length; idx++) {\n                    boxes.push(panes[idx].chartsBox());\n                }\n                return boxes;\n            },\n            addBackgroundPaths: function (multipath) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    multipath.paths.push(Path.fromRect(boxes[idx].toRect()));\n                }\n            },\n            backgroundContainsPoint: function (point) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    if (boxes[idx].containsPoint(point)) {\n                        return true;\n                    }\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options.plotArea;\n                var opacity = options.opacity;\n                var background = options.background;\n                var border = options.border;\n                if (border === void 0) {\n                    border = {};\n                }\n                if (isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = new drawing.MultiPath({\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.addBackgroundPaths(bg);\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts;\n                var result = [];\n                if (categoryIndex !== null) {\n                    for (var i = 0; i < charts.length; i++) {\n                        var chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        var points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (var j = 0; j < points.length; j++) {\n                                var point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                return this.filterPoints(function (point) {\n                    return point.series.index === seriesIndex;\n                });\n            },\n            pointsBySeriesName: function (name) {\n                return this.filterPoints(function (point) {\n                    return point.series.name === name;\n                });\n            },\n            filterPoints: function (callback) {\n                var charts = this.charts;\n                var result = [];\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && callback(point)) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            findPoint: function (callback) {\n                var charts = this.charts;\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && callback(point)) {\n                            return point;\n                        }\n                    }\n                }\n            },\n            paneByPoint: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            },\n            detachLabels: function () {\n                var axes = this.groupAxes(this.panes);\n                var xAxes = axes.x;\n                var yAxes = axes.y;\n                this.detachAxisGroupLabels(yAxes, xAxes);\n                this.detachAxisGroupLabels(xAxes, yAxes);\n            },\n            detachAxisGroupLabels: function (axes, crossingAxes) {\n                var this$1 = this;\n                var labelAxisCount = 0;\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var pane = axis.pane;\n                    var anchor = paneAnchor(crossingAxes, pane) || crossingAxes[0];\n                    var axisIndex = i + labelAxisCount;\n                    var labelAxis = this$1.createLabelAxis(axis, axisIndex, anchor);\n                    if (labelAxis) {\n                        labelAxisCount++;\n                        var pos = pane.axes.indexOf(axis) + labelAxisCount;\n                        pane.appendAxisAt(labelAxis, pos);\n                    }\n                }\n            },\n            createLabelAxis: function (axis, axisIndex, anchor) {\n                var labelOptions = axis.options.labels;\n                var position = labelOptions.position;\n                var onAxis = position !== datavizConstants.END && position !== datavizConstants.START;\n                var visible = labelOptions.visible;\n                if (onAxis || visible === false) {\n                    return null;\n                }\n                var allAxes = this.groupAxes(this.panes);\n                var crossingAxes = anchor.options.vertical ? allAxes.x : allAxes.y;\n                var anchorCrossings = this.axisCrossingValues(anchor, crossingAxes);\n                var end = position === datavizConstants.END;\n                var range = anchor.range();\n                var edge = end ? range.max : range.min;\n                var crossingValue = limitValue(anchorCrossings[axisIndex], range.min, range.max);\n                if (crossingValue - edge === 0) {\n                    return null;\n                }\n                anchorCrossings.splice(axisIndex + 1, 0, edge);\n                anchor.options.axisCrossingValues = anchorCrossings;\n                var labelAxis = axis.clone();\n                axis.clear();\n                labelAxis.options.name = undefined;\n                labelAxis.options.line.visible = false;\n                labelAxis.options.crosshair = undefined;\n                labelAxis.options.notes = undefined;\n                labelAxis.options.plotBands = undefined;\n                return labelAxis;\n            }\n        });\n        function isSingleAxis(axis) {\n            return !axis.pane.axes.some(function (a) {\n                return a.options.vertical === axis.options.vertical && a !== axis && a.options.visible !== false;\n            });\n        }\n        function axisGroupBox(axes) {\n            var length = axes.length;\n            var box;\n            for (var i = 0; i < length; i++) {\n                var axis = axes[i];\n                var visible = axis.options.visible !== false;\n                if (visible || isSingleAxis(axis)) {\n                    var axisBox = visible ? axis.contentBox() : axis.lineBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || new Box();\n        }\n        function paneAnchor(axes, pane) {\n            for (var i = 0; i < axes.length; i++) {\n                var anchor = axes[i];\n                if (anchor && anchor.pane === pane) {\n                    return anchor;\n                }\n            }\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        var allPaneAxes = function (panes) {\n            return panes.reduce(function (acc, pane) {\n                return acc.concat(pane.axes);\n            }, []);\n        };\n        setDefaultOptions(PlotAreaBase, {\n            series: [],\n            plotArea: { margin: {} },\n            background: '',\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            paneDefaults: { title: {} },\n            legend: {\n                inactiveItems: {\n                    labels: { color: '#919191' },\n                    markers: { color: '#919191' }\n                }\n            }\n        });\n        var PlotAreaEventsMixin = {\n            hover: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n            },\n            click: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n            }\n        };\n        var SeriesAggregator = Class.extend({\n            init: function (series, binder, defaultAggregates) {\n                var canonicalFields = binder.canonicalFields(series);\n                var valueFields = binder.valueFields(series);\n                var sourceFields = binder.sourceFields(series, canonicalFields);\n                var seriesFields = this._seriesFields = [];\n                var defaults = defaultAggregates.query(series.type);\n                var rootAggregate = series.aggregate || defaults;\n                this._series = series;\n                this._binder = binder;\n                for (var i = 0; i < canonicalFields.length; i++) {\n                    var field = canonicalFields[i];\n                    var fieldAggregate = void 0;\n                    if (isObject(rootAggregate)) {\n                        fieldAggregate = rootAggregate[field];\n                    } else if (i === 0 || inArray(field, valueFields)) {\n                        fieldAggregate = rootAggregate;\n                    } else {\n                        break;\n                    }\n                    if (fieldAggregate) {\n                        seriesFields.push({\n                            canonicalName: field,\n                            name: sourceFields[i],\n                            transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                        });\n                    }\n                }\n            },\n            aggregatePoints: function (srcPoints, group) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref._series;\n                var seriesFields = ref._seriesFields;\n                var data = this._bindPoints(srcPoints || []);\n                var firstDataItem = data.dataItems[0];\n                var result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (var i = 0; i < seriesFields.length; i++) {\n                    var field = seriesFields[i];\n                    var srcValues = this$1._bindField(data.values, field.canonicalName);\n                    var value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            setValue(field.name, result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var ref = this;\n                var binder = ref._binder;\n                var series = ref._series;\n                var values = [];\n                var dataItems = [];\n                for (var i = 0; i < points.length; i++) {\n                    var pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [];\n                var count = data.length;\n                for (var i = 0; i < count; i++) {\n                    var item = data[i];\n                    var valueFields = item.valueFields;\n                    var value = void 0;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        });\n        function setValue(fieldName, target, value) {\n            var parentObj = target;\n            var field = fieldName;\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.');\n                while (parts.length > 1) {\n                    field = parts.shift();\n                    if (!defined(parentObj[field])) {\n                        parentObj[field] = {};\n                    }\n                    parentObj = parentObj[field];\n                }\n                field = parts.shift();\n            }\n            parentObj[field] = value;\n        }\n        var DefaultAggregates = Class.extend({\n            init: function () {\n                this._defaults = {};\n            },\n            register: function (seriesTypes, aggregates) {\n                var this$1 = this;\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this$1._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        });\n        DefaultAggregates.current = new DefaultAggregates();\n        var RangeBar = Bar.extend({\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelTemplate = getTemplate(options);\n                var pointData = this.pointData();\n                var labelText;\n                if (labelTemplate) {\n                    labelText = labelTemplate(pointData);\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options), pointData);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var ref = this;\n                var labelFrom = ref.labelFrom;\n                var labelTo = ref.labelTo;\n                var value = ref.value;\n                this.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = value.from > value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = value.to > value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n            }\n        });\n        RangeBar.prototype.defaults = deepExtend({}, RangeBar.prototype.defaults, {\n            labels: { format: '{0} - {1}' },\n            tooltip: { format: '{1}' }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value.from, point.value.to);\n            },\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var from = value.from;\n                var to = value.to;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, from);\n                    axisRange.max = Math.max(axisRange.max, from);\n                    axisRange.min = Math.min(axisRange.min, to);\n                    axisRange.max = Math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        RangeBarChart.prototype.plotLimits = CategoricalChart.prototype.plotLimits;\n        var RangeLinePoint = LinePoint.extend({\n            aliasFor: function () {\n                return this.parent;\n            }\n        });\n        var AUTO = 'auto';\n        var DEFAULT_FROM_FORMAT = '{0}';\n        var DEFAULT_TO_FORMAT = '{1}';\n        var RangeAreaPoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n                this.initLabelsFormat();\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                var value = this.value;\n                var fromPoint = this.fromPoint = new RangeLinePoint(value, deepExtend({}, this.options, {\n                    labels: labels.from,\n                    markers: markers.from\n                }));\n                var toPoint = this.toPoint = new RangeLinePoint(value, deepExtend({}, this.options, {\n                    labels: labels.to,\n                    markers: markers.to\n                }));\n                this.copyFields(fromPoint);\n                this.copyFields(toPoint);\n                this.append(fromPoint);\n                this.append(toPoint);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var fromBox = targetBox.from;\n                var toBox = targetBox.to;\n                this.positionLabels(fromBox, toBox);\n                this.fromPoint.reflow(fromBox);\n                this.toPoint.reflow(toBox);\n                this.box = this.fromPoint.markerBox().clone().wrap(this.toPoint.markerBox());\n            },\n            createHighlight: function () {\n                var group = new Group();\n                group.append(this.fromPoint.createHighlight());\n                group.append(this.toPoint.createHighlight());\n                return group;\n            },\n            highlightVisual: function () {\n                return this.visual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    from: this.fromPoint.highlightVisualArgs(),\n                    to: this.toPoint.highlightVisualArgs()\n                };\n            },\n            tooltipAnchor: function () {\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(this.box);\n                if (showTooltip) {\n                    var box = this.box;\n                    var center = box.center();\n                    var horizontalAlign = LEFT;\n                    var x, y, verticalAlign;\n                    if (this.options.vertical) {\n                        x = center.x;\n                        y = box.y1 - TOOLTIP_OFFSET;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        x = box.x2 + TOOLTIP_OFFSET;\n                        y = center.y;\n                        verticalAlign = CENTER;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            },\n            unclipElements: function () {\n                this.fromPoint.unclipElements();\n                this.toPoint.unclipElements();\n            },\n            initLabelsFormat: function () {\n                var labels = this.options.labels;\n                if (!labels.format) {\n                    if (!labels.from || !labels.from.format) {\n                        labels.from = $.extend({}, labels.from, { format: DEFAULT_FROM_FORMAT });\n                    }\n                    if (!labels.to || !labels.to.format) {\n                        labels.to = $.extend({}, labels.to, { format: DEFAULT_TO_FORMAT });\n                    }\n                }\n            },\n            positionLabels: function (fromBox, toBox) {\n                var ref = this.options;\n                var labels = ref.labels;\n                var vertical = ref.vertical;\n                if (labels.position === AUTO) {\n                    var fromLabelPosition, toLabelPosition;\n                    if (vertical) {\n                        if (toBox.y1 <= fromBox.y1) {\n                            toLabelPosition = ABOVE;\n                            fromLabelPosition = BELOW;\n                        } else {\n                            toLabelPosition = BELOW;\n                            fromLabelPosition = ABOVE;\n                        }\n                    } else {\n                        if (toBox.x1 <= fromBox.x1) {\n                            toLabelPosition = LEFT;\n                            fromLabelPosition = RIGHT;\n                        } else {\n                            toLabelPosition = RIGHT;\n                            fromLabelPosition = LEFT;\n                        }\n                    }\n                    if (!labels.from || !labels.from.position) {\n                        this.fromPoint.options.labels.position = fromLabelPosition;\n                    }\n                    if (!labels.to || !labels.to.position) {\n                        this.toPoint.options.labels.position = toLabelPosition;\n                    }\n                }\n            },\n            copyFields: function (point) {\n                point.dataItem = this.dataItem;\n                point.category = this.category;\n                point.series = this.series;\n                point.color = this.color;\n                point.owner = this.owner;\n            }\n        });\n        deepExtend(RangeAreaPoint.prototype, PointEventsMixin);\n        deepExtend(RangeAreaPoint.prototype, NoteMixin);\n        RangeAreaPoint.prototype.defaults = {\n            markers: {\n                visible: false,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                position: AUTO\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: WHITE,\n                        width: 2\n                    }\n                },\n                zIndex: datavizConstants.HIGHLIGHT_ZINDEX\n            },\n            tooltip: { format: '{0} - {1}' }\n        };\n        var RangeAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.toGeometryPoints(this.toPoints()));\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.segmentsFromPoints(this.toGeometryPoints(this.fromPoints().reverse()));\n                }\n                return fromSegments;\n            },\n            createStroke: function (style) {\n                var toPath = new Path(style);\n                var fromPath = new Path(style);\n                toPath.segments.push.apply(toPath.segments, this.strokeSegments());\n                fromPath.segments.push.apply(fromPath.segments, this.stackSegments());\n                this.visual.append(toPath);\n                this.visual.append(fromPath);\n            },\n            hasStackSegment: function () {\n                return true;\n            },\n            fromPoints: function () {\n                return this.linePoints.map(function (point) {\n                    return point.fromPoint;\n                });\n            },\n            toPoints: function () {\n                return this.linePoints.map(function (point) {\n                    return point.toPoint;\n                });\n            }\n        });\n        var SplineRangeAreaSegment = RangeAreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.createCurveSegments(this.toPoints());\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.createCurveSegments(this.fromPoints().reverse());\n                }\n                return fromSegments;\n            },\n            createCurveSegments: function (points) {\n                var curveProcessor = new CurveProcessor();\n                return curveProcessor.process(this.toGeometryPoints(points));\n            }\n        });\n        var StepRangeAreaSegment = RangeAreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.calculateStepPoints(this.toPoints()));\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.segmentsFromPoints(this.calculateStepPoints(this.fromPoints()));\n                    fromSegments.reverse();\n                }\n                return fromSegments;\n            }\n        });\n        deepExtend(StepRangeAreaSegment.prototype, StepLineMixin);\n        var RangeAreaChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            pointType: function () {\n                return RangeAreaPoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                if (!hasValue(value.from) && !hasValue(value.to)) {\n                    if (this.seriesMissingValues(series) === ZERO) {\n                        value = {\n                            from: 0,\n                            to: 0\n                        };\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new RangeAreaPoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segmentType;\n                if (style === 'smooth') {\n                    segmentType = SplineRangeAreaSegment;\n                } else if (style === 'step') {\n                    segmentType = StepRangeAreaSegment;\n                } else {\n                    segmentType = RangeAreaSegment;\n                }\n                return new segmentType(linePoints, currentSeries, seriesIx);\n            },\n            plotRange: function (point, startValue) {\n                if (!point) {\n                    return [\n                        startValue,\n                        startValue\n                    ];\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            valueSlot: function (valueAxis, plotRange) {\n                var fromSlot = valueAxis.getSlot(plotRange[0], plotRange[0], !this.options.clip);\n                var toSlot = valueAxis.getSlot(plotRange[1], plotRange[1], !this.options.clip);\n                if (fromSlot && toSlot) {\n                    return {\n                        from: fromSlot,\n                        to: toSlot\n                    };\n                }\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var from = valueSlot.from;\n                var to = valueSlot.to;\n                var fromSlot, toSlot;\n                if (this.options.invertAxes) {\n                    fromSlot = new Box(from.x1, categorySlot.y1, from.x2, categorySlot.y2);\n                    toSlot = new Box(to.x1, categorySlot.y1, to.x2, categorySlot.y2);\n                } else {\n                    fromSlot = new Box(categorySlot.x1, from.y1, categorySlot.x2, from.y2);\n                    toSlot = new Box(categorySlot.x1, to.y1, categorySlot.x2, to.y2);\n                }\n                return {\n                    from: fromSlot,\n                    to: toSlot\n                };\n            },\n            addValue: function (data, fields) {\n                var valueFields = data.valueFields;\n                if (!isNumber(valueFields.from)) {\n                    valueFields.from = valueFields.to;\n                }\n                if (!isNumber(valueFields.to)) {\n                    valueFields.to = valueFields.from;\n                }\n                CategoricalChart.fn.addValue.call(this, data, fields);\n            },\n            updateRange: function (value, fields) {\n                if (value !== null && isNumber(value.from) && isNumber(value.to)) {\n                    var axisName = fields.series.axis;\n                    var axisRange = this.valueAxisRanges[axisName] = this.valueAxisRanges[axisName] || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    var from = value.from;\n                    var to = value.to;\n                    axisRange.min = Math.min(axisRange.min, from, to);\n                    axisRange.max = Math.max(axisRange.max, from, to);\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.from, value.to);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point) {\n                        result.push((point.fromPoint || {}).marker);\n                        result.push((point.toPoint || {}).marker);\n                    }\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(RangeAreaChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var oPoints = [];\n                var cPoints = [];\n                var lhPoints = [];\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                var oSlot = valueAxis.getSlot(value.open, value.open);\n                var cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                var mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                this.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                this.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                this.reflowNote();\n            },\n            createBody: function () {\n            }\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                ChartElement.fn.init.call(this);\n                this.from = from;\n                this.to = to;\n                this.series = series;\n            },\n            linePoints: function () {\n                var from = this.from;\n                var ref = this;\n                var fromBox = ref.from.box;\n                var toBox = ref.to.box;\n                var points = [];\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        setDefaultOptions(WaterfallSegment, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var series = this.options.series;\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to = void 0;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: this$1.categoryAxis.categoryAt(categoryIx),\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint = void 0;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this$1.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        var AREA_SERIES = [\n            AREA,\n            VERTICAL_AREA,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ];\n        var OUT_OF_RANGE_SERIES = [\n            LINE,\n            VERTICAL_LINE\n        ].concat(AREA_SERIES);\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            initFields: function (series) {\n                var this$1 = this;\n                this.namedCategoryAxes = {};\n                this.namedValueAxes = {};\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    this.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        VERTICAL_RANGE_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL,\n                        VERTICAL_BOX_PLOT\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            this$1.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n            },\n            render: function (panes) {\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                this.createCategoryAxes(panes);\n                this.aggregateCategories(panes);\n                this.createCategoryAxesLabels(panes);\n                this.createCharts(panes);\n                this.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete this.namedCategoryAxes[axisName];\n                } else {\n                    this.valueAxisRangeTracker.reset(axisName);\n                    delete this.namedValueAxes[axisName];\n                }\n                if (axis === this.categoryAxis) {\n                    delete this.categoryAxis;\n                }\n                if (axis === this.valueAxis) {\n                    delete this.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var this$1 = this;\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this$1.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createRangeAreaChart(filterSeriesByType(series, [\n                    RANGE_AREA,\n                    VERTICAL_RANGE_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, [\n                    BOX_PLOT,\n                    VERTICAL_BOX_PLOT\n                ]), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var this$1 = this;\n                var series = this.srcSeries || this.series;\n                var processedSeries = [];\n                this._currentPointsCache = {};\n                this._seriesPointsCache = this._seriesPointsCache || {};\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n                    var axisPane = this$1.findPane(categoryAxis.options.pane);\n                    var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n                    } else {\n                        currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                this._seriesPointsCache = this._currentPointsCache;\n                this._currentPointsCache = null;\n                this.srcSeries = series;\n                this.series = processedSeries;\n            },\n            filterSeries: function (series, categoryAxis) {\n                var dataLength = (series.data || {}).length;\n                categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, dataLength);\n                if (!(isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max))) {\n                    return series;\n                }\n                var range = categoryAxis.currentRangeIndices();\n                var outOfRangePoints = inArray(series.type, OUT_OF_RANGE_SERIES);\n                var currentSeries = deepExtend({}, series);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max + 1);\n                if (outOfRangePoints) {\n                    createOutOfRangePoints(currentSeries, range, dataLength, function (idx) {\n                        return {\n                            item: series.data[idx],\n                            category: categoryAxis.categoryAt(idx, true),\n                            categoryIx: idx - range.min\n                        };\n                    }, function (idx) {\n                        return defined(series.data[idx]);\n                    });\n                }\n                return currentSeries;\n            },\n            clearSeriesPointsCache: function () {\n                this._seriesPointsCache = {};\n            },\n            seriesSourcePoints: function (series, categoryAxis) {\n                var this$1 = this;\n                var key = series.index + ';' + categoryAxis.categoriesHash();\n                if (this._seriesPointsCache[key]) {\n                    this._currentPointsCache[key] = this._seriesPointsCache[key];\n                    return this._seriesPointsCache[key];\n                }\n                var axisOptions = categoryAxis.options;\n                var srcCategories = axisOptions.srcCategories;\n                var dateAxis = equalsIgnoreCase(axisOptions.type, DATE);\n                var srcData = series.data;\n                var getFn = dateAxis ? getDateField : getField;\n                var result = [];\n                if (!dateAxis) {\n                    categoryAxis.mapCategories();\n                }\n                for (var idx = 0; idx < srcData.length; idx++) {\n                    var category = void 0;\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[idx], this$1.chartService.intl);\n                    } else {\n                        category = srcCategories[idx];\n                    }\n                    if (defined(category) && category !== null) {\n                        var categoryIx = categoryAxis.totalIndex(category);\n                        result[categoryIx] = result[categoryIx] || {\n                            items: [],\n                            category: category\n                        };\n                        result[categoryIx].items.push(idx);\n                    }\n                }\n                this._currentPointsCache[key] = result;\n                return result;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var srcData = series.data;\n                if (!srcData.length) {\n                    return series;\n                }\n                var srcPoints = this.seriesSourcePoints(series, categoryAxis);\n                var result = deepExtend({}, series);\n                var aggregator = new SeriesAggregator(deepExtend({}, series), SeriesBinder.current, DefaultAggregates.current);\n                var data = result.data = [];\n                var dataItems = categoryAxis.options.dataItems || [];\n                var range = categoryAxis.currentRangeIndices();\n                var categoryItem = function (idx) {\n                    var categoryIdx = idx - range.min;\n                    var point = srcPoints[idx];\n                    if (!point) {\n                        point = srcPoints[idx] = {};\n                    }\n                    point.categoryIx = categoryIdx;\n                    if (!point.item) {\n                        var category = categoryAxis.categoryAt(idx, true);\n                        point.category = category;\n                        point.item = aggregator.aggregatePoints(point.items, category);\n                    }\n                    return point;\n                };\n                for (var idx = range.min; idx <= range.max; idx++) {\n                    var point = categoryItem(idx);\n                    data[point.categoryIx] = point.item;\n                    if (point.items && point.items.length) {\n                        dataItems[point.categoryIx] = point.item;\n                    }\n                }\n                if (inArray(result.type, OUT_OF_RANGE_SERIES)) {\n                    createOutOfRangePoints(result, range, categoryAxis.totalCount(), categoryItem, function (idx) {\n                        return srcPoints[idx];\n                    });\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var series = chart.options.series;\n                var categoryAxis = this.seriesCategoryAxis(series[0]);\n                var categories = categoryAxis.options.categories;\n                var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n                if (categoriesToAdd > 0) {\n                    categories = categoryAxis.options.categories = categoryAxis.options.categories.slice(0);\n                    while (categoriesToAdd--) {\n                        categories.push('');\n                    }\n                }\n                this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var axisName = series.axis;\n                var axisOptions = [].concat(options.valueAxis);\n                var axis = grep(axisOptions, function (a) {\n                    return a.name === axisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = (panes[0] || {}).name || 'default';\n                var paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var axisName = series.categoryAxis;\n                var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack;\n                var isStacked100 = stack && stack.type === '100%';\n                var clip = pane.options.clip;\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var categoryAxes = [];\n                var unique = {};\n                for (var idx = 0; idx < series.length; idx++) {\n                    var name = series[idx].categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        categoryAxes.push(name);\n                    }\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(series, axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var barChart = new BarChart(this, $.extend({\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var rangeColumnChart = new RangeBarChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var bulletChart = new BulletChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var lineChart = new LineChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var areaChart = new AreaChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(areaChart, pane);\n            },\n            createRangeAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var rangeAreaChart = new RangeAreaChart(this, {\n                    invertAxes: this.invertAxes,\n                    series: series,\n                    clip: pane.options.clip\n                });\n                this.appendChart(rangeAreaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new OHLCChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new CandlestickChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new BoxPlotChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var waterfallChart = new WaterfallChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var this$1 = this;\n                var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n                for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n                    var currentSeries = this$1.series[seriesIx];\n                    if (inArray(currentSeries.type, AREA_SERIES)) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n                    var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var this$1 = this;\n                var invertAxes = this.invertAxes;\n                var definitions = [].concat(this.options.categoryAxis);\n                var axes = [];\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var categories = axisOptions.categories;\n                        if (categories === void 0) {\n                            categories = [];\n                        }\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            reverse: !invertAxes && this$1.chartService.rtl,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = this$1.isJustified();\n                        }\n                        if (this$1.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        var categoryAxis = void 0;\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new dataviz.DateCategoryAxis(axisOptions, this$1.chartService);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n                        }\n                        definitions[i].categories = categoryAxis.options.srcCategories;\n                        if (name) {\n                            if (this$1.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        this$1.appendAxis(categoryAxis);\n                    }\n                }\n                var primaryAxis = this.categoryAxis || axes[0];\n                this.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisY = primaryAxis;\n                } else {\n                    this.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (!inArray(currentSeries.type, AREA_SERIES)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var this$1 = this;\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var definitions = [].concat(this.options.valueAxis);\n                var invertAxes = this.invertAxes;\n                var baseOptions = {\n                    vertical: !invertAxes,\n                    reverse: invertAxes && this.chartService.rtl\n                };\n                var axes = [];\n                if (this.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        var range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = Math.min(range.min, defaultRange.min);\n                            range.max = Math.max(range.max, defaultRange.max);\n                        }\n                        var axisType = void 0;\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = dataviz.LogarithmicAxis;\n                        } else {\n                            axisType = dataviz.NumericAxis;\n                        }\n                        var valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions), this$1.chartService);\n                        if (name) {\n                            if (this$1.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        this$1.appendAxis(valueAxis);\n                    }\n                }\n                var primaryAxis = this.valueAxis || axes[0];\n                this.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisX = primaryAxis;\n                } else {\n                    this.axisY = primaryAxis;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var pane = this.pointPane(point);\n                var categories = [];\n                var values = [];\n                if (!pane) {\n                    return;\n                }\n                var allAxes = pane.axes;\n                for (var i = 0; i < allAxes.length; i++) {\n                    var axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                updateAxisOptions(this.options, axis, options);\n                updateAxisOptions(this.originalOptions, axis, options);\n            }\n        });\n        function updateAxisOptions(targetOptions, axis, options) {\n            var axesOptions = axis instanceof CategoryAxis ? [].concat(targetOptions.categoryAxis) : [].concat(targetOptions.valueAxis);\n            deepExtend(axesOptions[axis.axisIndex], options);\n        }\n        function groupSeries(series, axis, axisIx) {\n            return grep(series, function (s) {\n                return axisIx === 0 && !s.categoryAxis || s.categoryAxis === axis;\n            });\n        }\n        setDefaultOptions(CategoricalPlotArea, {\n            categoryAxis: {},\n            valueAxis: {}\n        });\n        deepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points, opacity) {\n                var this$1 = this;\n                var arrayPoints = [].concat(points);\n                this.hide();\n                for (var i = 0; i < arrayPoints.length; i++) {\n                    var point = arrayPoints[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this$1.togglePointHighlight(point, true, opacity);\n                        this$1._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show, opacity) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        stackValue: point.stackValue,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show, opacity);\n                    }\n                } else {\n                    point.toggleHighlight(show, opacity);\n                }\n            },\n            hide: function () {\n                var this$1 = this;\n                var points = this._points;\n                while (points.length) {\n                    this$1.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element === point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var event = e.event;\n            var accept = key === 'none' && !(event.ctrlKey || event.shiftKey || event.altKey) || event[key + 'Key'];\n            return accept;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                var axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            start: function (e) {\n                this._active = acceptKey(e, this.options.key);\n                return this._active;\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                var active = this._active;\n                this._active = false;\n                return active;\n            },\n            pan: function () {\n                var ref = this;\n                var plotArea = ref.plotArea;\n                var axisRanges = ref.axisRanges;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.plotArea;\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() !== position) {\n                    var axes = plotArea.axes;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        var axis = axes[idx];\n                        if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n                            var range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        Pannable.prototype.options = {\n            key: 'none',\n            lock: 'none'\n        };\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this.createElement();\n            },\n            createElement: function () {\n                var marquee = this._marquee = document.createElement('div');\n                marquee.className = 'k-marquee';\n                var marqueeColor = document.createElement('div');\n                marqueeColor.className = 'k-marquee-color';\n                marquee.appendChild(marqueeColor);\n            },\n            removeElement: function () {\n                if (this._marquee.parentNode) {\n                    this._marquee.parentNode.removeChild(this._marquee);\n                }\n            },\n            setStyles: function (styles) {\n                elementStyles(this._marquee, styles);\n            },\n            start: function (e) {\n                if (acceptKey(e, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._eventCoordinates(e);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    var clipBox = zoomPane ? zoomPane.chartsBox().clone() : null;\n                    if (zoomPane && clipBox) {\n                        var offset = this._elementOffset();\n                        clipBox.translate(offset.left, offset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        document.body.appendChild(this._marquee);\n                        this.setStyles({\n                            left: e.pageX + 1,\n                            top: e.pageY + 1,\n                            width: 0,\n                            height: 0\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var ref = elementStyles(chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref.paddingLeft;\n                var paddingTop = ref.paddingTop;\n                var offset = dataviz.elementOffset(chartElement);\n                return {\n                    left: paddingLeft + offset.left,\n                    top: paddingTop + offset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    this.setStyles(this._selectionPosition(e));\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset$$1 = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset$$1.left;\n                    selectionPosition.top -= elementOffset$$1.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this.removeElement();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this.removeElement();\n                delete this._marquee;\n                delete this.chart;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical) && defined(axis.axisIndex)) {\n                        var range = axis.pointsRange(start, end);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var clipBox = this._zoomPaneClipBox;\n                var startLocation = {\n                    x: e.x.startLocation,\n                    y: e.y.startLocation\n                };\n                var pageX = e.x.location;\n                var pageY = e.y.location;\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = Math.min(startLocation.x, pageX);\n                var top = Math.min(startLocation.y, pageY);\n                var width = Math.abs(startLocation.x - pageX);\n                var height = Math.abs(startLocation.y - pageY);\n                if (lock === X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock === Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (pageX > clipBox.x2) {\n                    width = clipBox.x2 - startLocation.x;\n                }\n                if (pageX < clipBox.x1) {\n                    width = startLocation.x - clipBox.x1;\n                }\n                if (pageY > clipBox.y2) {\n                    height = clipBox.y2 - startLocation.y;\n                }\n                if (pageY < clipBox.y1) {\n                    height = startLocation.y - clipBox.y1;\n                }\n                return {\n                    left: Math.max(left, clipBox.x1),\n                    top: Math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        ZoomSelection.prototype.options = {\n            key: 'shift',\n            lock: 'none'\n        };\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical) && axis.zoomRange) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                var plotArea = this.chart._plotArea;\n                if (axisRanges && axisRanges.length && plotArea.updateAxisOptions) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.chart;\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n            },\n            render: function () {\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var vertical = options.vertical;\n                this.visual = new drawing.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal',\n                    reverse: options.rtl,\n                    alignItems: vertical ? 'start' : 'center'\n                });\n                for (var idx = 0; idx < children.length; idx++) {\n                    var legendItem = children[idx];\n                    legendItem.reflow(new Box());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: function () {\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.createContainer();\n                if (!options.rtl) {\n                    this.createMarker();\n                    this.createLabel();\n                } else {\n                    this.createLabel();\n                    this.createMarker();\n                }\n            },\n            createContainer: function () {\n                this.container = new dataviz.FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER,\n                    spacing: this.options.spacing\n                });\n                this.append(this.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labelOptions = deepExtend({}, options.labels);\n                this.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                BoxElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args) && e && e.type === 'contextmenu') {\n                    e.preventDefault();\n                }\n            },\n            over: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            out: function (widget, e) {\n                widget._unsetActivePoint();\n                widget.trigger(LEGEND_ITEM_LEAVE, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: eventElement(e),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    this.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        sender: this.getSender(),\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: this.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            this$1.renderComplete();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var HORIZONTAL = 'horizontal';\n        var POINTER = 'pointer';\n        var CUSTOM = 'custom';\n        var Legend = ChartElement.extend({\n            init: function (options, chartService) {\n                if (chartService === void 0) {\n                    chartService = {};\n                }\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!inArray(this.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    this.options.position = RIGHT;\n                }\n                this.createContainers();\n                this.createLegendTitle(options.title);\n                this.createItems();\n            },\n            createContainers: function () {\n                var options = this.options;\n                var position = options.position;\n                var userAlign = options.align;\n                var align = position;\n                var vAlign = CENTER;\n                if (position === CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign === 'start') {\n                        align = LEFT;\n                    } else if (userAlign === 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign === 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign === 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                this.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                if (this.hasTitle()) {\n                    this.itemsContainer = new BoxElement({\n                        vAlign: vAlign,\n                        align: align,\n                        zIndex: options.zIndex,\n                        shrinkToFit: true\n                    });\n                } else {\n                    this.itemsContainer = this.container;\n                }\n                this.append(this.container);\n            },\n            createItems: function () {\n                var chartService = this.getService();\n                var options = this.options;\n                var vertical = this.isVertical();\n                var innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing,\n                    rtl: chartService.rtl\n                }, chartService);\n                var items = options.items;\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                var count = items.length;\n                for (var i = 0; i < count; i++) {\n                    var item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels,\n                        rtl: chartService.rtl\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                this.itemsContainer.append(innerElement);\n            },\n            isVertical: function () {\n                var ref = this.options;\n                var orientation = ref.orientation;\n                var position = ref.position;\n                var vertical = position === CUSTOM && orientation !== HORIZONTAL || (defined(orientation) ? orientation !== HORIZONTAL : inArray(position, [\n                    LEFT,\n                    RIGHT\n                ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var legendBox = targetBox.clone();\n                if (!this.hasItems()) {\n                    this.box = legendBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    this.containerCustomReflow(legendBox);\n                    this.box = legendBox;\n                } else {\n                    this.containerReflow(legendBox);\n                }\n                if (this.hasTitle()) {\n                    this.title.reflow(new Box(this.container.box.x1, this.title.box.y1, this.container.box.x2, this.title.box.y2));\n                }\n            },\n            containerReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var position = options.position;\n                var width = options.width;\n                var height = options.height;\n                var pos = position === TOP || position === BOTTOM ? X : Y;\n                var vertical = this.isVertical();\n                var alignTarget = targetBox.clone();\n                var containerBox = targetBox.clone();\n                if (position === LEFT || position === RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                var box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                this.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var offsetX = options.offsetX;\n                var offsetY = options.offsetY;\n                var width = options.width;\n                var height = options.height;\n                var vertical = this.isVertical();\n                var containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(new Box(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            },\n            createLegendTitle: function (title) {\n                var titleOptions = deepExtend({}, {\n                    color: BLACK,\n                    position: TOP,\n                    align: CENTER\n                }, title);\n                var text = titleOptions.text;\n                if (!title || title.visible === false) {\n                    return;\n                }\n                if (defined(titleOptions) && titleOptions.visible) {\n                    var labelTemplate = getTemplate(titleOptions);\n                    if (labelTemplate) {\n                        text = labelTemplate({ text: text });\n                    } else if (titleOptions.format) {\n                        text = this.chartService.format.auto(titleOptions.format, text);\n                    }\n                }\n                this.title = new TextBox(text, titleOptions);\n                this.createTitleLayout();\n                this.appendTitleLayoutContent();\n            },\n            createTitleLayout: function () {\n                this.layout = new dataviz.FloatElement({\n                    vertical: true,\n                    wrap: false\n                });\n                this.container.append(this.layout);\n            },\n            hasTitle: function () {\n                return Boolean(this.options.title && this.options.title.visible !== false);\n            },\n            appendTitleLayoutContent: function () {\n                var options = this.options;\n                if (options.title.position === BOTTOM) {\n                    this.layout.append(this.itemsContainer);\n                    this.layout.append(this.title);\n                } else {\n                    this.layout.append(this.title);\n                    this.layout.append(this.itemsContainer);\n                }\n            }\n        });\n        setDefaultOptions(Legend, {\n            position: RIGHT,\n            items: [],\n            offsetX: 0,\n            offsetY: 0,\n            margin: getSpacing(5),\n            padding: getSpacing(5),\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            item: {\n                cursor: POINTER,\n                spacing: 6\n            },\n            spacing: 6,\n            background: '',\n            zIndex: 1,\n            markers: {\n                border: { width: 0 },\n                width: 15,\n                height: 3,\n                type: 'rect',\n                align: LEFT,\n                vAlign: CENTER\n            }\n        });\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options, chartService) {\n                var registry = this._registry;\n                var match = registry[0];\n                var series;\n                for (var idx = 0; idx < registry.length; idx++) {\n                    var entry = registry[idx];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options, chartService);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var ZOOM_ACCELERATION = 3;\n        var SELECTOR_HEIGHT_ADJUST = 0.1;\n        function createDiv(className) {\n            var element = document.createElement('div');\n            if (className) {\n                element.className = className;\n            }\n            return element;\n        }\n        function closestHandle(element) {\n            var current = element;\n            while (current && !hasClasses(current, 'k-handle')) {\n                current = current.parentNode;\n            }\n            return current;\n        }\n        var Selection = Class.extend({\n            init: function (chart, categoryAxis, options, observer) {\n                var chartElement = chart.element;\n                this.options = deepExtend({}, this.options, options);\n                this.chart = chart;\n                this.observer = observer;\n                this.chartElement = chartElement;\n                this.categoryAxis = categoryAxis;\n                this._dateAxis = this.categoryAxis instanceof dataviz.DateCategoryAxis;\n                this.initOptions();\n                this.visible = this.options.visible && chartElement.offsetHeight;\n                if (this.visible) {\n                    this.createElements();\n                    this.set(this._index(this.options.from), this._index(this.options.to));\n                    this.bindEvents();\n                }\n            },\n            onPane: function (pane) {\n                return this.categoryAxis.pane === pane;\n            },\n            createElements: function () {\n                var options = this.options;\n                var wrapper = this.wrapper = createDiv('k-selector');\n                elementStyles(wrapper, {\n                    top: options.offset.top,\n                    left: options.offset.left,\n                    width: options.width,\n                    height: options.height,\n                    direction: 'ltr'\n                });\n                var selection = this.selection = createDiv('k-selection');\n                this.leftMask = createDiv('k-mask');\n                this.rightMask = createDiv('k-mask');\n                wrapper.appendChild(this.leftMask);\n                wrapper.appendChild(this.rightMask);\n                wrapper.appendChild(selection);\n                selection.appendChild(createDiv('k-selection-bg'));\n                var leftHandle = this.leftHandle = createDiv('k-handle k-left-handle');\n                var rightHandle = this.rightHandle = createDiv('k-handle k-right-handle');\n                leftHandle.appendChild(createDiv());\n                rightHandle.appendChild(createDiv());\n                selection.appendChild(leftHandle);\n                selection.appendChild(rightHandle);\n                this.chartElement.appendChild(wrapper);\n                var selectionStyles = elementStyles(selection, [\n                    'borderLeftWidth',\n                    'borderRightWidth',\n                    'height'\n                ]);\n                var leftHandleHeight = elementStyles(leftHandle, 'height').height;\n                var rightHandleHeight = elementStyles(rightHandle, 'height').height;\n                options.selection = {\n                    border: {\n                        left: selectionStyles.borderLeftWidth,\n                        right: selectionStyles.borderRightWidth\n                    }\n                };\n                elementStyles(leftHandle, { top: (selectionStyles.height - leftHandleHeight) / 2 });\n                elementStyles(rightHandle, { top: (selectionStyles.height - rightHandleHeight) / 2 });\n                wrapper.style.cssText = wrapper.style.cssText;\n            },\n            bindEvents: function () {\n                if (this.options.mousewheel !== false) {\n                    this._mousewheelHandler = this._mousewheel.bind(this);\n                    var obj;\n                    bindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                }\n                this._domEvents = services.DomEventsBuilder.create(this.wrapper, {\n                    stopPropagation: true,\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    press: this._press.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            initOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var box = categoryAxis.pane.chartsBox();\n                var intlService = this.chart.chartService.intl;\n                if (this._dateAxis) {\n                    deepExtend(options, {\n                        min: parseDate(intlService, options.min),\n                        max: parseDate(intlService, options.max),\n                        from: parseDate(intlService, options.from),\n                        to: parseDate(intlService, options.to)\n                    });\n                }\n                var ref$1 = elementStyles(this.chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref$1.paddingLeft;\n                var paddingTop = ref$1.paddingTop;\n                this.options = deepExtend({}, {\n                    width: box.width(),\n                    height: box.height() + SELECTOR_HEIGHT_ADJUST,\n                    padding: {\n                        left: paddingLeft,\n                        top: paddingTop\n                    },\n                    offset: {\n                        left: box.x1 + paddingLeft,\n                        top: box.y1 + paddingTop\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n            },\n            destroy: function () {\n                if (this._domEvents) {\n                    this._domEvents.destroy();\n                    delete this._domEvents;\n                }\n                clearTimeout(this._mwTimeout);\n                this._state = null;\n                if (this.wrapper) {\n                    if (this._mousewheelHandler) {\n                        var obj;\n                        unbindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                        this._mousewheelHandler = null;\n                    }\n                    this.chartElement.removeChild(this.wrapper);\n                    this.wrapper = null;\n                }\n            },\n            _rangeEventArgs: function (range) {\n                return {\n                    axis: this.categoryAxis.options,\n                    from: this._value(range.from),\n                    to: this._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var options = this.options;\n                var target = eventElement(e);\n                if (this._state || !target) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                this._state = {\n                    moveTarget: closestHandle(target) || target,\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs({\n                    from: this._index(options.from),\n                    to: this._index(options.to)\n                });\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                }\n            },\n            _press: function (e) {\n                var handle;\n                if (this._state) {\n                    handle = this._state.moveTarget;\n                } else {\n                    handle = closestHandle(eventElement(e));\n                }\n                if (handle) {\n                    dataviz.addClass(handle, 'k-handle-active');\n                }\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var ref = this;\n                var state = ref._state;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var range = state.range;\n                var target = state.moveTarget;\n                var reverse = categoryAxis.options.reverse;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var delta = state.startLocation - e.x.location;\n                var oldRange = {\n                    from: range.from,\n                    to: range.to\n                };\n                var span = range.to - range.from;\n                var scale = elementStyles(this.wrapper, 'width').width / (categoryAxis.categoriesCount() - 1);\n                var offset = Math.round(delta / scale) * (reverse ? -1 : 1);\n                if (!target) {\n                    return;\n                }\n                var leftHandle = hasClasses(target, 'k-left-handle');\n                var rightHandle = hasClasses(target, 'k-right-handle');\n                if (hasClasses(target, 'k-selection k-selection-bg')) {\n                    range.from = Math.min(Math.max(min, from - offset), max - span);\n                    range.to = Math.min(range.from + span, max);\n                } else if (leftHandle && !reverse || rightHandle && reverse) {\n                    range.from = Math.min(Math.max(min, from - offset), max - 1);\n                    range.to = Math.max(range.from + 1, range.to);\n                } else if (leftHandle && reverse || rightHandle && !reverse) {\n                    range.to = Math.min(Math.max(min + 1, to - offset), max);\n                    range.from = Math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.move(range.from, range.to);\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                if (this._state) {\n                    var moveTarget = this._state.moveTarget;\n                    if (moveTarget) {\n                        dataviz.removeClass(moveTarget, 'k-handle-active');\n                    }\n                    var range = this._state.range;\n                    this.set(range.from, range.to);\n                    this.trigger(SELECT_END, this._rangeEventArgs(range));\n                    delete this._state;\n                }\n            },\n            _tap: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var coords = this.chart._eventCoordinates(e);\n                var categoryIx = categoryAxis.pointCategoryIndex(new Point(coords.x, categoryAxis.box.y1));\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var span = to - from;\n                var mid = from + span / 2;\n                var range = {};\n                var rightClick = e.event.which === 3;\n                var offset = Math.round(mid - categoryIx);\n                if (this._state || rightClick) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = Math.min(Math.max(min, from - offset), max - span);\n                range.to = Math.min(range.from + span, max);\n                this._start(e);\n                if (this._state) {\n                    this._state.range = range;\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                    this._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                this._start({ target: this.selection });\n                if (this._state) {\n                    var range = this._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (Math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (this.options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (this.expand(delta)) {\n                        this.trigger(SELECT, {\n                            axis: this.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: this._value(range.from),\n                            to: this._value(range.to)\n                        });\n                    }\n                    if (this._mwTimeout) {\n                        clearTimeout(this._mwTimeout);\n                    }\n                    this._mwTimeout = setTimeout(function () {\n                        this$1._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _gesturestart: function (e) {\n                var options = this.options;\n                this._state = {\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs(this._state.range);\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                } else {\n                    e.preventDefault();\n                }\n            },\n            _gestureend: function () {\n                if (this._state) {\n                    this.trigger(SELECT_END, this._rangeEventArgs(this._state.range));\n                    delete this._state;\n                }\n            },\n            _gesturechange: function (e) {\n                var ref = this;\n                var chart = ref.chart;\n                var state = ref._state;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var range = state.range;\n                var p0 = chart._toModelCoordinates(e.touches[0].x.location).x;\n                var p1 = chart._toModelCoordinates(e.touches[1].x.location).x;\n                var left = Math.min(p0, p1);\n                var right = Math.max(p0, p1);\n                e.preventDefault();\n                range.from = categoryAxis.pointCategoryIndex(new Point(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new Point(right)) || options.max;\n                this.move(range.from, range.to);\n                this.trigger(SELECT, this._rangeEventArgs(range));\n            },\n            _index: function (value) {\n                var index = value;\n                if (value instanceof Date) {\n                    index = this.categoryAxis.categoryIndex(value);\n                }\n                return index;\n            },\n            _value: function (index) {\n                var value = index;\n                if (this._dateAxis) {\n                    value = this.categoryAxis.categoryAt(index);\n                    if (value > this.options.max) {\n                        value = this.options.max;\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var categoryAxis = this.categoryAxis;\n                var index = this._index(value);\n                return categoryAxis.getSlot(index, index, true);\n            },\n            move: function (from, to) {\n                var options = this.options;\n                var reverse = this.categoryAxis.options.reverse;\n                var offset = options.offset;\n                var padding = options.padding;\n                var border = options.selection.border;\n                var left = reverse ? to : from;\n                var right = reverse ? from : to;\n                var edge = 'x' + (reverse ? 2 : 1);\n                var box = this._slot(left);\n                var leftMaskWidth = round(box[edge] - offset.left + padding.left);\n                elementStyles(this.leftMask, { width: leftMaskWidth });\n                elementStyles(this.selection, { left: leftMaskWidth });\n                box = this._slot(right);\n                var rightMaskWidth = round(options.width - (box[edge] - offset.left + padding.left));\n                elementStyles(this.rightMask, { width: rightMaskWidth });\n                var distance = options.width - rightMaskWidth;\n                if (distance !== options.width) {\n                    distance += border.right;\n                }\n                elementStyles(this.rightMask, { left: distance });\n                elementStyles(this.selection, { width: Math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0) });\n            },\n            set: function (from, to) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var fromValue = limitValue(this._index(from), min, max);\n                var toValue = limitValue(this._index(to), fromValue + 1, max);\n                if (options.visible) {\n                    this.move(fromValue, toValue);\n                }\n                options.from = this._value(fromValue);\n                options.to = this._value(toValue);\n            },\n            expand: function (delta) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var zDir = options.mousewheel.zoom;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var range = {\n                    from: from,\n                    to: to\n                };\n                var oldRange = deepExtend({}, range);\n                if (this._state) {\n                    range = this._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.set(range.from, range.to);\n                    return true;\n                }\n            },\n            trigger: function (name, args) {\n                return (this.observer || this.chart).trigger(name, args);\n            }\n        });\n        setDefaultOptions(Selection, {\n            visible: true,\n            mousewheel: { zoom: 'both' },\n            min: MIN_VALUE,\n            max: MAX_VALUE\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                if (!point || !point.tooltipAnchor || this._current && this._current === point) {\n                    return;\n                }\n                var options = deepExtend({}, this.options, point.options.tooltip);\n                var anchor = point.tooltipAnchor();\n                if (anchor) {\n                    this._current = point;\n                    BaseTooltip.fn.show.call(this, {\n                        point: point,\n                        anchor: anchor\n                    }, options, point);\n                } else {\n                    this.hide();\n                }\n            },\n            hide: function () {\n                delete this._current;\n                BaseTooltip.fn.hide.call(this);\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (plotArea, options) {\n                BaseTooltip.fn.init.call(this, plotArea.chartService, options);\n                this.plotArea = plotArea;\n                this.formatService = plotArea.chartService.format;\n            },\n            showAt: function (points, coords) {\n                var tooltipPoints = grep(points, function (point) {\n                    var tooltip = point.series.tooltip;\n                    var excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (tooltipPoints.length > 0) {\n                    var point = tooltipPoints[0];\n                    var slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n                    var anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n                    this.show({\n                        anchor: anchor,\n                        shared: true,\n                        points: points,\n                        category: point.category,\n                        categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n                        series: this.plotArea.series\n                    }, this.options);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var axis = this.plotArea.categoryAxis;\n                var align = {\n                    horizontal: 'left',\n                    vertical: 'center'\n                };\n                if (!axis.options.vertical) {\n                    point.x = slot.center().x;\n                }\n                return {\n                    point: point,\n                    align: align\n                };\n            },\n            _defaultAnchor: function (point, slot) {\n                var box = point.owner.pane.chartsBox();\n                var vertical = this.plotArea.categoryAxis.options.vertical;\n                var center = box.center();\n                var slotCenter = slot.center();\n                var align = {\n                    horizontal: 'center',\n                    vertical: 'center'\n                };\n                var centerPoint;\n                if (vertical) {\n                    centerPoint = new Point(center.x, slotCenter.y);\n                } else {\n                    centerPoint = new Point(slotCenter.x, center.y);\n                }\n                return {\n                    point: centerPoint,\n                    align: align\n                };\n            }\n        });\n        setDefaultOptions(SharedTooltip, { categoryFormat: '{0:d}' });\n        var BarChartAnimation = Animation.extend({\n            setup: function () {\n                var ref = this;\n                var element = ref.element;\n                var options = ref.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new GeometryPoint(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = dataviz.interpolateValue(this.fromScale.x, 1, pos);\n                var scaleY = dataviz.interpolateValue(this.fromScale.y, 1, pos);\n                this.element.transform(transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        setDefaultOptions(BarChartAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register(BAR, BarChartAnimation);\n        var BubbleAnimation = Animation.extend({\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.center));\n            }\n        });\n        setDefaultOptions(BubbleAnimation, { easing: 'easeOutElastic' });\n        AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var FadeInAnimation = Animation.extend({\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        setDefaultOptions(FadeInAnimation, {\n            duration: 200,\n            easing: 'linear'\n        });\n        AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var PieAnimation = Animation.extend({\n            setup: function () {\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.options.center));\n            }\n        });\n        setDefaultOptions(PieAnimation, {\n            easing: 'easeOutElastic',\n            duration: INITIAL_ANIMATION_DURATION\n        });\n        AnimationFactory.current.register(PIE, PieAnimation);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                ScatterChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.prototype, LineChartMixin);\n        var XYPlotArea = PlotAreaBase.extend({\n            initFields: function () {\n                this.namedXAxes = {};\n                this.namedYAxes = {};\n                this.xAxisRangeTracker = new AxisGroupRangeTracker();\n                this.yAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var filteredSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    this$1.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    this$1.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    this$1.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                this.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                this.xAxisRangeTracker.update(chart.xAxisRanges);\n                this.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis.options.vertical) {\n                    this.yAxisRangeTracker.reset(axisName);\n                    delete this.namedYAxes[axisName];\n                } else {\n                    this.xAxisRangeTracker.reset(axisName);\n                    delete this.namedXAxes[axisName];\n                }\n                if (axis === this.axisX) {\n                    delete this.axisX;\n                }\n                if (axis === this.axisY) {\n                    delete this.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var xAxisName = series.xAxis;\n                var xAxisOptions = [].concat(options.xAxis);\n                var xAxis = grep(xAxisOptions, function (a) {\n                    return a.name === xAxisName;\n                })[0];\n                var yAxisName = series.yAxis;\n                var yAxisOptions = [].concat(options.yAxis);\n                var yAxis = grep(yAxisOptions, function (a) {\n                    return a.name === yAxisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = panes[0].name || 'default';\n                var paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterLineChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new BubbleChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var axisName = options.name;\n                var namedAxes = vertical ? this.namedYAxes : this.namedXAxes;\n                var tracker = vertical ? this.yAxisRangeTracker : this.xAxisRangeTracker;\n                var axisOptions = deepExtend({ reverse: !vertical && this.chartService.rtl }, options, { vertical: vertical });\n                var isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC);\n                var defaultRange = tracker.query();\n                var defaultAxisRange = isLog ? {\n                    min: 0.1,\n                    max: 1\n                } : {\n                    min: 0,\n                    max: 1\n                };\n                var range = tracker.query(axisName) || defaultRange || defaultAxisRange;\n                var typeSamples = [\n                    axisOptions.min,\n                    axisOptions.max\n                ];\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName === axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        var firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var inferredDate;\n                for (var i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                var axisType;\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = dataviz.DateValueAxis;\n                } else if (isLog) {\n                    axisType = dataviz.LogarithmicAxis;\n                } else {\n                    axisType = dataviz.NumericAxis;\n                }\n                var axis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                axis.axisIndex = axisIndex;\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                this.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var this$1 = this;\n                var options = this.options;\n                var xAxesOptions = [].concat(options.xAxis);\n                var xAxes = [];\n                var yAxesOptions = [].concat(options.yAxis);\n                var yAxes = [];\n                for (var idx = 0; idx < xAxesOptions.length; idx++) {\n                    var axisPane = this$1.findPane(xAxesOptions[idx].pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(this$1.createXYAxis(xAxesOptions[idx], false, idx));\n                    }\n                }\n                for (var idx$1 = 0; idx$1 < yAxesOptions.length; idx$1++) {\n                    var axisPane$1 = this$1.findPane(yAxesOptions[idx$1].pane);\n                    if (inArray(axisPane$1, panes)) {\n                        yAxes.push(this$1.createXYAxis(yAxesOptions[idx$1], true, idx$1));\n                    }\n                }\n                this.axisX = this.axisX || xAxes[0];\n                this.axisY = this.axisY || yAxes[0];\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var allAxes = this.axes;\n                var length = allAxes.length;\n                var xValues = [];\n                var yValues = [];\n                for (var i = 0; i < length; i++) {\n                    var axis = allAxes[i];\n                    var values = axis.options.vertical ? yValues : xValues;\n                    var currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = (vertical ? axes.y : axes.x).indexOf(axis);\n                updateAxisOptions$1(this.options, index, vertical, options);\n                updateAxisOptions$1(this.originalOptions, index, vertical, options);\n            }\n        });\n        function updateAxisOptions$1(targetOptions, axisIndex, vertical, options) {\n            var axisOptions = [].concat(vertical ? targetOptions.yAxis : targetOptions.xAxis)[axisIndex];\n            deepExtend(axisOptions, options);\n        }\n        setDefaultOptions(XYPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(XYPlotArea.prototype, PlotAreaEventsMixin);\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.sector = sector;\n            },\n            render: function () {\n                var labels = this.options.labels;\n                var chartService = this.owner.chartService;\n                var labelText = this.value;\n                if (this._rendered || this.visible === false) {\n                    return;\n                }\n                this._rendered = true;\n                var labelTemplate = getTemplate(labels);\n                var pointData = this.pointData();\n                if (labelTemplate) {\n                    labelText = labelTemplate(pointData);\n                } else if (labels.format) {\n                    labelText = chartService.format.auto(labels.format, labelText);\n                }\n                if (labels.visible && (labelText || labelText === 0)) {\n                    if (labels.position === CENTER || labels.position === INSIDE_END) {\n                        if (!labels.color) {\n                            labels.color = dataviz.autoTextColor(this.options.color);\n                        }\n                        if (!labels.background) {\n                            labels.background = this.options.color;\n                        }\n                    } else {\n                        var themeLabels = chartService.theme.seriesDefaults.labels;\n                        labels.color = labels.color || themeLabels.color;\n                        labels.background = labels.background || themeLabels.background;\n                    }\n                    this.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: this.animationDelay\n                        }\n                    }), pointData);\n                    this.append(this.label);\n                }\n            },\n            reflow: function (targetBox) {\n                this.render();\n                this.box = targetBox;\n                this.reflowLabel();\n            },\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var labelsDistance = labelsOptions.distance;\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    var labelWidth = label.box.width();\n                    var lp;\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius = Math.abs((sector.radius - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position === INSIDE_END) {\n                        sector.radius = sector.radius - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        var x1;\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.center.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(new Box(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                ChartElement.fn.createVisual.call(this);\n                if (this.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            series: this.series,\n                            percentage: this.percentage,\n                            center: new GeometryPoint(sector.center.x, sector.center.y),\n                            radius: sector.radius,\n                            innerRadius: sector.innerRadius,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            sender: this.getSender(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else {\n                        this.createSegmentVisual(this.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                var borderOptions = options.border || {};\n                var border = borderOptions.width > 0 ? {\n                    stroke: {\n                        color: borderOptions.color,\n                        width: borderOptions.width,\n                        opacity: borderOptions.opacity,\n                        dashType: borderOptions.dashType\n                    }\n                } : {};\n                var color = options.color;\n                var fill = {\n                    color: color,\n                    opacity: options.opacity\n                };\n                var visual = this.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.center.x,\n                            sector.center.y\n                        ],\n                        innerRadius: sector.innerRadius,\n                        radius: sector.radius,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new drawing.Circle(new geometry.Circle(new GeometryPoint(sector.center.x, sector.center.y), sector.radius), options);\n                }\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            },\n            createAnimation: function () {\n                var ref = this;\n                var options = ref.options;\n                var center = ref.sector.center;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var highlight = this.options.highlight || {};\n                var border = highlight.border || {};\n                return this.createSegment(this.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.radius,\n                    innerRadius: sector.innerRadius,\n                    center: new GeometryPoint(sector.center.x, sector.center.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function () {\n                var sector = this.sector.clone().expand(TOOLTIP_OFFSET);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                return {\n                    point: midPoint,\n                    align: tooltipAlignment(midAndle + 180)\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            pointData: function () {\n                return {\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    series: this.series,\n                    percentage: this.percentage\n                };\n            }\n        });\n        var RAD_30 = round(dataviz.rad(30), DEFAULT_PRECISION);\n        var RAD_60 = round(dataviz.rad(60), DEFAULT_PRECISION);\n        function tooltipAlignment(angle) {\n            var radians = dataviz.rad(angle);\n            var sine = round(Math.sin(radians), DEFAULT_PRECISION);\n            var cosine = round(Math.cos(radians), DEFAULT_PRECISION);\n            var horizontal;\n            if (Math.abs(sine) > RAD_60) {\n                horizontal = CENTER;\n            } else if (cosine < 0) {\n                horizontal = RIGHT;\n            } else {\n                horizontal = LEFT;\n            }\n            var vertical;\n            if (Math.abs(sine) < RAD_30) {\n                vertical = CENTER;\n            } else if (sine < 0) {\n                vertical = BOTTOM;\n            } else {\n                vertical = TOP;\n            }\n            return {\n                horizontal: horizontal,\n                vertical: vertical\n            };\n        }\n        setDefaultOptions(PieSegment, {\n            color: WHITE,\n            overlay: { gradient: 'roundedBevel' },\n            border: { width: 0.5 },\n            labels: {\n                visible: false,\n                distance: 35,\n                font: datavizConstants.DEFAULT_FONT,\n                margin: getSpacing(0.5),\n                align: CIRCLE,\n                zIndex: 1,\n                position: OUTSIDE_END\n            },\n            animation: { type: PIE },\n            highlight: {\n                visible: true,\n                border: { width: 1 }\n            },\n            visible: true\n        });\n        deepExtend(PieSegment.prototype, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var legendOptions = this.options.legend || {};\n                var labelsOptions = legendOptions.labels || {};\n                var inactiveItems = legendOptions.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                if (options && options.visibleInLegend !== false) {\n                    var pointVisible = options.visible !== false;\n                    var labelTemplate = pointVisible ? getTemplate(labelsOptions) : getTemplate(inactiveItemsLabels) || getTemplate(labelsOptions);\n                    var text = options.category;\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    var itemLabelOptions, markerColor;\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (hasValue(text) && text !== '') {\n                        this.legendItems.push({\n                            active: pointVisible,\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        var PIE_SECTOR_ANIM_DELAY = 70;\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.points = [];\n                this.legendItems = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var colorsCount = seriesColors.length;\n                var series = options.series;\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var data = currentSeries.data;\n                    var ref$1 = bindSegments(currentSeries);\n                    var total = ref$1.total;\n                    var points = ref$1.points;\n                    var count = ref$1.count;\n                    var anglePerValue = 360 / total;\n                    var constantAngle = void 0;\n                    if (!isFinite(anglePerValue)) {\n                        constantAngle = 360 / count;\n                    }\n                    var currentAngle = void 0;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx !== seriesCount - 1) {\n                        if (currentSeries.labels.position === OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (var i = 0; i < points.length; i++) {\n                        var pointData = points[i];\n                        if (!pointData) {\n                            continue;\n                        }\n                        var fields = pointData.fields;\n                        var value = pointData.value;\n                        var visible = pointData.visible;\n                        var angle = value !== 0 ? constantAngle || value * anglePerValue : 0;\n                        var explode = data.length !== 1 && Boolean(fields.explode);\n                        if (!isFunction(currentSeries.color)) {\n                            currentSeries.color = fields.color || seriesColors[i % colorsCount];\n                        }\n                        callback(pointData.valueFields.value, new dataviz.Ring(null, 0, 0, currentAngle, angle), {\n                            owner: this$1,\n                            category: defined(fields.category) ? fields.category : '',\n                            index: i,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? value / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: this$1.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (visible !== false) {\n                            currentAngle += angle;\n                        }\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                var segment = new PieSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var points = ref.points;\n                var seriesConfigs = ref.seriesConfigs;\n                if (seriesConfigs === void 0) {\n                    seriesConfigs = [];\n                }\n                var count = points.length;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var newBox = new Box(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth);\n                var newBoxCenter = newBox.center();\n                var boxCenter = box.center();\n                var seriesCount = options.series.length;\n                var leftSideLabels = [];\n                var rightSideLabels = [];\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                this.targetBox = targetBox;\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                var radius = halfMinWidth - padding;\n                var center = new Point(radius + newBox.x1 + padding, radius + newBox.y1 + padding);\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var seriesIndex = segment.seriesIx;\n                    sector.radius = radius;\n                    sector.center = center;\n                    if (seriesConfigs.length) {\n                        var seriesConfig = seriesConfigs[seriesIndex];\n                        sector.innerRadius = seriesConfig.innerRadius;\n                        sector.radius = seriesConfig.radius;\n                    }\n                    if (seriesIndex === seriesCount - 1 && segment.explode) {\n                        sector.center = sector.clone().setRadius(sector.radius * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    var label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex === seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(this.labelComparator(true));\n                    this.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(this.labelComparator(false));\n                    this.rightLabelsReflow(rightSideLabels);\n                }\n                this.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var count = labels.length - 1;\n                var lr = sector.radius + segment.options.labels.distance;\n                var distances = [];\n                var firstBox = labels[0].box;\n                var distance = round(firstBox.y1 - (sector.center.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (var i = 0; i < count; i++) {\n                    var secondBox = labels[i + 1].box;\n                    firstBox = labels[i].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.center.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var this$1 = this;\n                var count = distances.length;\n                var left, right, remaining;\n                for (var i = 0; i < count; i++) {\n                    remaining = -distances[i];\n                    left = right = i;\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = this$1._takeDistance(distances, i, --left, remaining);\n                        remaining = this$1._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                this.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                var result = amount;\n                if (distances[position] > 0) {\n                    var available = Math.min(distances[position], result);\n                    result -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return result;\n            },\n            reflowLabels: function (distances, labels) {\n                var this$1 = this;\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var labelOptions = segment.options.labels;\n                var labelsCount = labels.length;\n                var labelDistance = labelOptions.distance;\n                var boxY = sector.center.y - (sector.radius + labelDistance) - labels[0].box.height();\n                var boxX;\n                distances[0] += 2;\n                for (var i = 0; i < labelsCount; i++) {\n                    var label = labels[i];\n                    var box = label.box;\n                    boxY += distances[i];\n                    boxX = this$1.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation === RIGHT);\n                    if (label.orientation === RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.radius + sector.center.x + labelDistance;\n                        }\n                        label.reflow(new Box(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.center.x - sector.radius - labelDistance;\n                        }\n                        label.reflow(new Box(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var connectors = ref.options.connectors;\n                var points = ref.points;\n                var count = points.length;\n                var space = 4;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var label = segment.label;\n                    var angle = sector.middle();\n                    var connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n                    if (label) {\n                        var connectorLine = new Path({\n                            stroke: {\n                                color: connectorsColor,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END) {\n                            var box = label.box;\n                            var centerPoint = sector.center;\n                            var start = sector.point(angle);\n                            var middle = new Point(box.x1, box.center().y);\n                            var sr = void 0, end = void 0, crossing = void 0;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation === RIGHT) {\n                                end = new Point(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.min(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x < sector.center.x) {\n                                    sr = sector.center.x + sector.radius + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = new Point(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.max(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x > sector.center.x) {\n                                    sr = sector.center.x - sector.radius - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this$1._connectorLines.push(connectorLine);\n                            this$1.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            renderVisual: function () {\n                ChartElement.fn.renderVisual.call(this);\n                if (dataviz.find(this.options.series, function (options) {\n                        return options.autoFit;\n                    })) {\n                    var targetBox = this.targetBox;\n                    var pieCenter = this.box.center();\n                    var bbox = this.visual.bbox();\n                    if (!bbox) {\n                        return;\n                    }\n                    var bboxBottom = bbox.bottomRight();\n                    var scale = Math.min((pieCenter.y - targetBox.y1) / (pieCenter.y - bbox.origin.y), (targetBox.y2 - pieCenter.y) / (bboxBottom.y - pieCenter.y), (pieCenter.x - targetBox.x1) / (pieCenter.x - bbox.origin.x), (targetBox.x2 - pieCenter.x) / (bboxBottom.x - pieCenter.x));\n                    if (scale < 1) {\n                        this.visual.transform(transform().scale(scale, scale, [\n                            pieCenter.x,\n                            pieCenter.y\n                        ]));\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                var reverseValue = reverse ? -1 : 1;\n                return function (a, b) {\n                    var first = (a.parent.sector.middle() + 270) % 360;\n                    var second = (b.parent.sector.middle() + 270) % 360;\n                    return (first - second) * reverseValue;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var radius = sector.radius;\n                var sector_center = sector.center;\n                var cx = sector_center.x;\n                var cy = sector_center.y;\n                var t = Math.min(Math.abs(cy - y1), Math.abs(cy - y2));\n                if (t > radius) {\n                    return originalX;\n                }\n                return cx + Math.sqrt(radius * radius - t * t) * (direction ? 1 : -1);\n            },\n            pointInCircle: function (point, center, radius) {\n                return Math.pow(center.x - point.x, 2) + Math.pow(center.y - point.y, 2) < Math.pow(radius, 2);\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            },\n            stackRoot: function () {\n                return this;\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var uat = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\n            var ub = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n            var result;\n            if (ub !== 0) {\n                var ua = uat / ub;\n                result = new Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        setDefaultOptions(PieChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            },\n            inactiveItems: {\n                markers: {},\n                labels: {}\n            }\n        });\n        deepExtend(PieChart.prototype, PieChartMixin);\n        PieChart.prototype.isStackRoot = true;\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createPieChart(this.series);\n            },\n            createPieChart: function (series) {\n                var firstSeries = series[0];\n                var pieChart = new PieChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    startAngle: firstSeries.startAngle,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutSegment = PieSegment.extend({\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius -= (sector.radius - sector.innerRadius) / 2;\n                        var lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(this);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        setDefaultOptions(DonutSegment, {\n            overlay: { gradient: 'roundedGlass' },\n            labels: { position: CENTER },\n            animation: { type: PIE }\n        });\n        deepExtend(DonutSegment.prototype, PointEventsMixin);\n        var DONUT_SECTOR_ANIM_DELAY = 50;\n        var DonutChart = PieChart.extend({\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                var segment = new DonutSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var series = options.series;\n                var seriesCount = series.length;\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                var totalSize = halfMinWidth - padding;\n                var seriesWithoutSize = 0;\n                var holeSize;\n                for (var i = 0; i < seriesCount; i++) {\n                    var currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i !== seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    var currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                var innerRadius = holeSize;\n                var margin = 0;\n                var size, radius;\n                this.seriesConfigs = [];\n                for (var i$1 = 0; i$1 < seriesCount; i$1++) {\n                    var currentSeries$1 = series[i$1];\n                    size = valueOrDefault(currentSeries$1.size, totalSize / seriesWithoutSize);\n                    innerRadius += margin;\n                    radius = innerRadius + size;\n                    this$1.seriesConfigs.push({\n                        innerRadius: innerRadius,\n                        radius: radius\n                    });\n                    margin = currentSeries$1.margin || 0;\n                    innerRadius = radius;\n                }\n                PieChart.fn.reflow.call(this, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        setDefaultOptions(DonutChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                this.createDonutChart(this.series);\n            },\n            createDonutChart: function (series) {\n                var firstSeries = series[0];\n                var donutChart = new DonutChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(donutChart);\n            }\n        });\n        var DEFAULT_PADDING = 0.15;\n        var PolarPlotAreaBase = PlotAreaBase.extend({\n            initFields: function () {\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function () {\n                this.addToLegend(this.series);\n                this.createPolarAxis();\n                this.createCharts();\n                this.createValueAxis();\n            },\n            alignAxes: function () {\n                var axis = this.valueAxis;\n                var range = axis.range();\n                var crossingValue = axis.options.reverse ? range.max : range.min;\n                var slot = axis.getSlot(crossingValue);\n                var center = this.polarAxis.getSlot(0).center;\n                var axisBox = axis.box.translate(center.x - slot.x1, center.y - slot.y1);\n                axis.reflow(axisBox);\n            },\n            createValueAxis: function () {\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var axisOptions = this.valueAxisOptions({\n                    roundToMajorUnit: false,\n                    zIndex: -1\n                });\n                var axisType, axisDefaultRange;\n                if (axisOptions.type === LOGARITHMIC) {\n                    axisType = dataviz.RadarLogarithmicAxis;\n                    axisDefaultRange = {\n                        min: 0.1,\n                        max: 1\n                    };\n                } else {\n                    axisType = dataviz.RadarNumericAxis;\n                    axisDefaultRange = {\n                        min: 0,\n                        max: 1\n                    };\n                }\n                var range = tracker.query(name) || defaultRange || axisDefaultRange;\n                if (range && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var valueAxis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                this.valueAxis = valueAxis;\n                this.appendAxis(valueAxis);\n            },\n            reflowAxes: function () {\n                var ref = this;\n                var options = ref.options.plotArea;\n                var valueAxis = ref.valueAxis;\n                var polarAxis = ref.polarAxis;\n                var box = ref.box;\n                var defaultPadding = Math.min(box.width(), box.height()) * DEFAULT_PADDING;\n                var padding = getSpacing(options.padding || {}, defaultPadding);\n                var paddingBox = box.clone().unpad(padding);\n                var axisBox = paddingBox.clone();\n                axisBox.y2 = axisBox.y1 + Math.min(axisBox.width(), axisBox.height());\n                axisBox.align(paddingBox, Y, CENTER);\n                var valueAxisBox = axisBox.clone().shrink(0, axisBox.height() / 2);\n                polarAxis.reflow(axisBox);\n                valueAxis.reflow(valueAxisBox);\n                var heightDiff = valueAxis.lineBox().height() - valueAxis.box.height();\n                valueAxis.reflow(valueAxis.box.unpad({ top: heightDiff }));\n                this.axisBox = axisBox;\n                this.alignAxes(axisBox);\n            },\n            backgroundBox: function () {\n                return this.box;\n            },\n            detachLabels: function () {\n            }\n        });\n        var PolarScatterChart = ScatterChart.extend({\n            pointSlot: function (slotX, slotY) {\n                var valueRadius = slotX.center.y - slotY.y1;\n                var slot = Point.onCircle(slotX.center, slotX.startAngle, valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            }\n        });\n        setDefaultOptions(PolarScatterChart, { clip: false });\n        var PolarLineChart = ScatterLineChart.extend({});\n        PolarLineChart.prototype.pointSlot = PolarScatterChart.prototype.pointSlot;\n        setDefaultOptions(PolarLineChart, { clip: false });\n        var SplinePolarAreaSegment = SplineAreaSegment.extend({\n            fillToAxes: function (fillPath) {\n                var center = this._polarAxisCenter();\n                fillPath.lineTo(center.x, center.y);\n            },\n            _polarAxisCenter: function () {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                return center;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var center = this._polarAxisCenter();\n                    var curveProcessor = new CurveProcessor(false);\n                    var linePoints = this.points();\n                    linePoints.push(center);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                    segments.pop();\n                }\n                return segments;\n            }\n        });\n        var PolarAreaSegment = AreaSegment.extend({\n            fillToAxes: function (fillPath) {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                var centerSegment = new geometry.Segment([\n                    center.x,\n                    center.y\n                ]);\n                fillPath.segments.unshift(centerSegment);\n                fillPath.segments.push(centerSegment);\n            }\n        });\n        var PolarAreaChart = PolarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplinePolarAreaSegment(linePoints, currentSeries, seriesIx);\n                } else {\n                    segment = new PolarAreaSegment(linePoints, currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            createMissingValue: function (value, missingValues) {\n                var missingValue;\n                if (hasValue(value.x) && missingValues !== INTERPOLATE) {\n                    missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (missingValues === ZERO) {\n                        missingValue.y = 0;\n                    }\n                }\n                return missingValue;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            },\n            _hasMissingValuesGap: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (this$1.seriesMissingValues(series[idx]) === GAP) {\n                        return true;\n                    }\n                }\n            },\n            sortPoints: function (points) {\n                var this$1 = this;\n                points.sort(xComparer);\n                if (this._hasMissingValuesGap()) {\n                    for (var idx = 0; idx < points.length; idx++) {\n                        var point = points[idx];\n                        if (point) {\n                            var value = point.value;\n                            if (!hasValue(value.y) && this$1.seriesMissingValues(point.series) === GAP) {\n                                delete points[idx];\n                            }\n                        }\n                    }\n                }\n                return points;\n            }\n        });\n        function xComparer(a, b) {\n            return a.value.x - b.value.x;\n        }\n        var PolarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var polarAxis = new dataviz.PolarAxis(this.options.xAxis, this.chartService);\n                this.polarAxis = polarAxis;\n                this.axisX = polarAxis;\n                this.appendAxis(polarAxis);\n            },\n            valueAxisOptions: function (defaults) {\n                return deepExtend(defaults, {\n                    majorGridLines: { type: ARC },\n                    minorGridLines: { type: ARC }\n                }, this.options.yAxis);\n            },\n            createValueAxis: function () {\n                PolarPlotAreaBase.fn.createValueAxis.call(this);\n                this.axisY = this.valueAxis;\n            },\n            appendChart: function (chart, pane) {\n                this.valueAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createLineChart(filterSeriesByType(series, [POLAR_LINE]), pane);\n                this.createScatterChart(filterSeriesByType(series, [POLAR_SCATTER]), pane);\n                this.createAreaChart(filterSeriesByType(series, [POLAR_AREA]), pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new PolarLineChart(this, { series: series });\n                this.appendChart(lineChart, pane);\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var scatterChart = new PolarScatterChart(this, { series: series });\n                this.appendChart(scatterChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new PolarAreaChart(this, { series: series });\n                this.appendChart(areaChart, pane);\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var xValue = this.axisX.getValue(point);\n                var yValue = this.axisY.getValue(point);\n                if (xValue !== null && yValue !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        x: xValue,\n                        y: yValue\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        setDefaultOptions(PolarPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(PolarPlotArea.prototype, PlotAreaEventsMixin);\n        function groupBySeriesIx(segments) {\n            var seriesSegments = [];\n            for (var idx = 0; idx < segments.length; idx++) {\n                var segment = segments[idx];\n                seriesSegments[segment.seriesIx] = seriesSegments[segment.seriesIx] || [];\n                seriesSegments[segment.seriesIx].push(segment);\n            }\n            return seriesSegments;\n        }\n        var RadarLineChart = LineChart.extend({\n            pointSlot: function (categorySlot, valueSlot) {\n                var valueRadius = categorySlot.center.y - valueSlot.y1;\n                var slot = Point.onCircle(categorySlot.center, categorySlot.middle(), valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            },\n            renderSegments: function () {\n                LineChart.fn.renderSegments.call(this);\n                if (this._segments && this._segments.length > 1) {\n                    var seriesSegments = groupBySeriesIx(this._segments);\n                    for (var idx = 0; idx < seriesSegments.length; idx++) {\n                        var segments = seriesSegments[idx];\n                        if (segments && segments.length > 1) {\n                            var firstPoint = segments[0].linePoints[0];\n                            var lastSegment = last(segments);\n                            var lastPoint = last(lastSegment.linePoints);\n                            var isFirstDataPoint = firstPoint.categoryIx === 0;\n                            var isLastDataPoint = lastPoint.categoryIx === lastPoint.categoriesCount - 1;\n                            if (isFirstDataPoint && isLastDataPoint) {\n                                last(segments).linePoints.push(firstPoint);\n                            }\n                        }\n                    }\n                }\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                var segment = new pointType(linePoints, currentSeries, seriesIx);\n                var missingValues = this.seriesMissingValues(currentSeries);\n                if (linePoints.length === currentSeries.data.length || missingValues === INTERPOLATE) {\n                    segment.options.closed = true;\n                }\n                return segment;\n            }\n        });\n        setDefaultOptions(RadarLineChart, {\n            clip: false,\n            limitPoints: false\n        });\n        var SplineRadarAreaSegment = SplineAreaSegment.extend({\n            fillToAxes: function () {\n            }\n        });\n        var RadarAreaSegment = AreaSegment.extend({\n            fillToAxes: function () {\n            }\n        });\n        var RadarAreaChart = RadarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var previousSegment;\n                var stackPoints;\n                var segment;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    stackPoints = prevSegment.linePoints.slice(0);\n                    previousSegment = prevSegment;\n                }\n                if (style === SMOOTH) {\n                    segment = new SplineRadarAreaSegment(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n                    segment.options.closed = true;\n                } else {\n                    linePoints.push(linePoints[0]);\n                    segment = new RadarAreaSegment(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n                }\n                return segment;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var RadarSegment = DonutSegment.extend({\n            init: function (value, options) {\n                DonutSegment.fn.init.call(this, value, null, options);\n            }\n        });\n        setDefaultOptions(RadarSegment, {\n            overlay: { gradient: 'none' },\n            labels: { distance: 10 }\n        });\n        var RadarClusterLayout = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.forEach = options.rtl ? forEachReverse : forEach;\n            },\n            reflow: function (sector) {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var gap = options.gap;\n                var spacing = options.spacing;\n                var count = children.length;\n                var slots = count + gap + spacing * (count - 1);\n                var slotAngle = sector.angle / slots;\n                var angle = sector.startAngle + slotAngle * (gap / 2);\n                this.forEach(children, function (child) {\n                    var slotSector = sector.clone();\n                    slotSector.startAngle = angle;\n                    slotSector.angle = slotAngle;\n                    if (child.sector) {\n                        slotSector.radius = child.sector.radius;\n                    }\n                    child.reflow(slotSector);\n                    child.sector = slotSector;\n                    angle += slotAngle + slotAngle * spacing;\n                });\n            }\n        });\n        setDefaultOptions(RadarClusterLayout, {\n            gap: 1,\n            spacing: 0\n        });\n        var RadarStackLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var reverse = ref.options.reverse;\n                var children = ref.children;\n                var childrenCount = children.length;\n                var first = reverse ? childrenCount - 1 : 0;\n                var step = reverse ? -1 : 1;\n                this.box = new Box();\n                for (var i = first; i >= 0 && i < childrenCount; i += step) {\n                    var childSector = children[i].sector;\n                    childSector.startAngle = sector.startAngle;\n                    childSector.angle = sector.angle;\n                }\n            }\n        });\n        var RadarBarChart = BarChart.extend({\n            pointType: function () {\n                return RadarSegment;\n            },\n            clusterType: function () {\n                return RadarClusterLayout;\n            },\n            stackType: function () {\n                return RadarStackLayout;\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var slot = categorySlot.clone();\n                var y = categorySlot.center.y;\n                slot.radius = y - valueSlot.y1;\n                slot.innerRadius = y - valueSlot.y2;\n                return slot;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.sector = pointSlot;\n                point.reflow();\n            },\n            createAnimation: function () {\n                this.options.animation.center = this.box.toRect().center();\n                BarChart.fn.createAnimation.call(this);\n            }\n        });\n        RadarBarChart.prototype.reflow = CategoricalChart.prototype.reflow;\n        setDefaultOptions(RadarBarChart, {\n            clip: false,\n            limitPoints: false,\n            animation: { type: 'pie' }\n        });\n        var RadarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var categoryAxis = new dataviz.RadarCategoryAxis(this.options.categoryAxis, this.chartService);\n                this.polarAxis = categoryAxis;\n                this.categoryAxis = categoryAxis;\n                this.appendAxis(categoryAxis);\n                this.aggregateCategories();\n                this.createCategoryAxesLabels();\n            },\n            valueAxisOptions: function (defaults) {\n                if (this._hasBarCharts) {\n                    deepExtend(defaults, {\n                        majorGridLines: { type: ARC },\n                        minorGridLines: { type: ARC }\n                    });\n                }\n                if (this._isStacked100) {\n                    deepExtend(defaults, {\n                        roundToMajorUnit: false,\n                        labels: { format: 'P0' }\n                    });\n                }\n                return deepExtend(defaults, this.options.valueAxis);\n            },\n            aggregateCategories: function () {\n                CategoricalPlotArea.prototype.aggregateCategories.call(this, this.panes);\n            },\n            createCategoryAxesLabels: function () {\n                CategoricalPlotArea.prototype.createCategoryAxesLabels.call(this, this.panes);\n            },\n            filterSeries: function (currentSeries) {\n                return currentSeries;\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createAreaChart(filterSeriesByType(series, [RADAR_AREA]), pane);\n                this.createLineChart(filterSeriesByType(series, [RADAR_LINE]), pane);\n                this.createBarChart(filterSeriesByType(series, [RADAR_COLUMN]), pane);\n            },\n            chartOptions: function (series) {\n                var options = { series: series };\n                var firstSeries = series[0];\n                if (firstSeries) {\n                    var filteredSeries = this.filterVisibleSeries(series);\n                    var stack = firstSeries.stack;\n                    options.isStacked = stack && filteredSeries.length > 1;\n                    options.isStacked100 = stack && stack.type === '100%' && filteredSeries.length > 1;\n                    if (options.isStacked100) {\n                        this._isStacked100 = true;\n                    }\n                }\n                return options;\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new RadarAreaChart(this, this.chartOptions(series));\n                this.appendChart(areaChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new RadarLineChart(this, this.chartOptions(series));\n                this.appendChart(lineChart, pane);\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var options = this.chartOptions(series);\n                options.gap = firstSeries.gap;\n                options.spacing = firstSeries.spacing;\n                var barChart = new RadarBarChart(this, options);\n                this.appendChart(barChart, pane);\n                this._hasBarCharts = true;\n            },\n            seriesCategoryAxis: function () {\n                return this.categoryAxis;\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var category = this.categoryAxis.getCategory(point);\n                var value = this.valueAxis.getValue(point);\n                if (category !== null && value !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        category: category,\n                        value: value\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        deepExtend(RadarPlotArea.prototype, PlotAreaEventsMixin, {\n            appendChart: CategoricalPlotArea.prototype.appendChart,\n            aggregateSeries: CategoricalPlotArea.prototype.aggregateSeries,\n            seriesSourcePoints: CategoricalPlotArea.prototype.seriesSourcePoints\n        });\n        setDefaultOptions(RadarPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        var FunnelSegment = ChartElement.extend({\n            init: function (value, options, segmentOptions) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.options.index = segmentOptions.index;\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var label = this.children[0];\n                this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n                if (label) {\n                    label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual;\n                ChartElement.fn.createVisual.call(this);\n                if (options.visual) {\n                    visual = options.visual({\n                        category: this.category,\n                        dataItem: this.dataItem,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage,\n                        points: this.points,\n                        options: options,\n                        sender: this.getSender(),\n                        createVisual: function () {\n                            return this$1.createPath();\n                        }\n                    });\n                } else {\n                    visual = this.createPath();\n                }\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            },\n            createPath: function () {\n                var options = this.options;\n                var border = options.border;\n                var path = Path.fromPoints(this.points, {\n                    fill: {\n                        color: options.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: border.color,\n                        opacity: border.opacity,\n                        width: border.width\n                    }\n                }).close();\n                return path;\n            },\n            createHighlight: function (style) {\n                return Path.fromPoints(this.points, style);\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var path = Path.fromPoints(this.points).close();\n                return {\n                    options: this.options,\n                    path: path\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                return {\n                    point: new Point(box.center().x, box.y1),\n                    align: {\n                        horizontal: 'center',\n                        vertical: 'top'\n                    }\n                };\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        setDefaultOptions(FunnelSegment, {\n            color: WHITE,\n            border: { width: 1 }\n        });\n        deepExtend(FunnelSegment.prototype, PointEventsMixin);\n        var FunnelChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.points = [];\n                this.labels = [];\n                this.legendItems = [];\n                this.render();\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            render: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var series = options.series[0];\n                var data = series.data;\n                if (!data) {\n                    return;\n                }\n                var ref$1 = bindSegments(series);\n                var total = ref$1.total;\n                var points = ref$1.points;\n                for (var i = 0; i < points.length; i++) {\n                    var pointData = points[i];\n                    if (!pointData) {\n                        continue;\n                    }\n                    var fields = pointData.fields;\n                    if (!isFunction(series.color)) {\n                        series.color = fields.color || seriesColors[i % seriesColors.length];\n                    }\n                    fields = deepExtend({\n                        index: i,\n                        owner: this$1,\n                        series: series,\n                        dataItem: data[i],\n                        percentage: pointData.value / total\n                    }, fields, { visible: pointData.visible });\n                    var value = pointData.valueFields.value;\n                    var segment = this$1.createSegment(value, fields);\n                    var label = this$1.createLabel(value, fields);\n                    if (segment && label) {\n                        segment.append(label);\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    index: fields.index\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'toggle',\n                        'visual'\n                    ]\n                });\n            },\n            createSegment: function (value, fields) {\n                var seriesOptions = deepExtend({}, fields.series);\n                this.evalSegmentOptions(seriesOptions, value, fields);\n                this.createLegendItem(value, seriesOptions, fields);\n                if (fields.visible !== false) {\n                    var segment = new FunnelSegment(value, seriesOptions, fields);\n                    $.extend(segment, fields);\n                    this.append(segment);\n                    this.points.push(segment);\n                    return segment;\n                }\n            },\n            createLabel: function (value, fields) {\n                var series = fields.series;\n                var dataItem = fields.dataItem;\n                var labels = deepExtend({}, this.options.labels, series.labels);\n                var text = value;\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var data = {\n                        dataItem: dataItem,\n                        value: value,\n                        percentage: fields.percentage,\n                        category: fields.category,\n                        series: series\n                    };\n                    if (labelTemplate) {\n                        text = labelTemplate(data);\n                    } else if (labels.format) {\n                        text = this.plotArea.chartService.format.auto(labels.format, text);\n                    }\n                    if (!labels.color) {\n                        labels.color = dataviz.autoTextColor(series.color);\n                        if (!labels.background) {\n                            labels.background = series.color;\n                        }\n                    }\n                    this.evalSegmentOptions(labels, value, fields);\n                    var textBox = new TextBox(text, deepExtend({ vAlign: labels.position }, labels), data);\n                    this.labels.push(textBox);\n                    return textBox;\n                }\n            },\n            labelPadding: function () {\n                var labels = this.labels;\n                var padding = {\n                    left: 0,\n                    right: 0\n                };\n                for (var i = 0; i < labels.length; i++) {\n                    var label = labels[i];\n                    var align = label.options.align;\n                    if (align !== CENTER) {\n                        var width = labels[i].box.width();\n                        if (align === LEFT) {\n                            padding.left = Math.max(padding.left, width);\n                        } else {\n                            padding.right = Math.max(padding.right, width);\n                        }\n                    }\n                }\n                return padding;\n            },\n            dynamicSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var firstSegment = segments[0];\n                var maxSegment = firstSegment;\n                for (var idx = 0; idx < segments.length; idx++) {\n                    if (segments[idx].percentage > maxSegment.percentage) {\n                        maxSegment = segments[idx];\n                    }\n                }\n                var lastUpperSide = firstSegment.percentage / maxSegment.percentage * width;\n                var previousOffset = (width - lastUpperSide) / 2;\n                var previousHeight = 0;\n                for (var idx$1 = 0; idx$1 < count; idx$1++) {\n                    var percentage = segments[idx$1].percentage;\n                    var nextSegment = segments[idx$1 + 1];\n                    var nextPercentage = nextSegment ? nextSegment.percentage : percentage;\n                    var points = segments[idx$1].points = [];\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    var offset = void 0;\n                    if (!percentage) {\n                        offset = nextPercentage ? 0 : width / 2;\n                    } else {\n                        offset = (width - lastUpperSide * (nextPercentage / percentage)) / 2;\n                    }\n                    offset = limitValue(offset, 0, width);\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + offset, box.y1 + height + previousHeight));\n                    previousOffset = offset;\n                    previousHeight += height + options.segmentSpacing;\n                    lastUpperSide = limitValue(width - 2 * offset, 0, width);\n                }\n            },\n            constantSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var decreasingWidth = options.neckRatio <= 1;\n                var neckRatio = decreasingWidth ? options.neckRatio * width : width;\n                var previousOffset = decreasingWidth ? 0 : (width - width / options.neckRatio) / 2;\n                var topMostWidth = decreasingWidth ? width : width - previousOffset * 2;\n                var finalNarrow = (topMostWidth - neckRatio) / 2;\n                var previousHeight = 0;\n                for (var idx = 0; idx < count; idx++) {\n                    var points = segments[idx].points = [];\n                    var percentage = segments[idx].percentage;\n                    var offset = options.dynamicHeight ? finalNarrow * percentage : finalNarrow / count;\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + previousOffset + offset, box.y1 + height + previousHeight));\n                    previousOffset += offset;\n                    previousHeight += height + options.segmentSpacing;\n                }\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var count = points.length;\n                if (!count) {\n                    return;\n                }\n                var options = this.options;\n                var box = chartBox.clone().unpad(this.labelPadding());\n                var totalHeight = box.height() - options.segmentSpacing * (count - 1);\n                var width = box.width();\n                if (options.dynamicSlope) {\n                    this.dynamicSlopeReflow(box, width, totalHeight);\n                } else {\n                    this.constantSlopeReflow(box, width, totalHeight);\n                }\n                for (var idx = 0; idx < count; idx++) {\n                    points[idx].reflow(chartBox);\n                }\n            }\n        });\n        setDefaultOptions(FunnelChart, {\n            neckRatio: 0.3,\n            width: 300,\n            dynamicSlope: false,\n            dynamicHeight: true,\n            segmentSpacing: 0,\n            labels: {\n                visible: false,\n                align: CENTER,\n                position: CENTER,\n                zIndex: 1\n            }\n        });\n        deepExtend(FunnelChart.prototype, PieChartMixin);\n        var FunnelPlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createFunnelChart(this.series);\n            },\n            createFunnelChart: function (series) {\n                var firstSeries = series[0];\n                var funnelChart = new FunnelChart(this, {\n                    series: series,\n                    legend: this.options.legend,\n                    neckRatio: firstSeries.neckRatio,\n                    dynamicHeight: firstSeries.dynamicHeight,\n                    dynamicSlope: firstSeries.dynamicSlope,\n                    segmentSpacing: firstSeries.segmentSpacing,\n                    highlight: firstSeries.highlight\n                });\n                this.appendChart(funnelChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var colorScale = function (color, minLightnessOffset) {\n            if (minLightnessOffset === void 0) {\n                minLightnessOffset = 0.05;\n            }\n            var baseColor = kendo.parseColor(color);\n            var offset = 1 - minLightnessOffset;\n            return function (value) {\n                var hsl = baseColor.toHSL();\n                var range = 100 - hsl.l;\n                var point = offset - value;\n                hsl.l += Math.min(point * range, range);\n                return hsl.toCss();\n            };\n        };\n        var HeatmapPoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.options = options;\n                this.color = options.color || WHITE;\n                this.value = value;\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                this.createMarker();\n                this.createLabel();\n                this.createNote();\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                if (labels.visible) {\n                    var pointData = this.pointData();\n                    var labelTemplate = getTemplate(labels);\n                    var labelText;\n                    var labelColor = labels.color;\n                    if (labelTemplate) {\n                        labelText = labelTemplate(pointData);\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    if (!labelColor) {\n                        labelColor = dataviz.autoTextColor(this.color);\n                    }\n                    this.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels, { color: labelColor }), pointData);\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var label = this.label;\n                this.box = targetBox;\n                if (label) {\n                    label.reflow(this.markerBox());\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n                this.marker.reflow(this.markerBox());\n            },\n            markerBox: function () {\n                var options = this.options;\n                var markers = options.markers;\n                var border = markers.border;\n                var rect = this.box.toRect();\n                var type = valueOrDefault(markers.type, 'rect');\n                var isRoundRect = type === datavizConstants.ROUNDED_RECT;\n                var borderWidth = valueOrDefault(border.width, isRoundRect ? 1 : 0);\n                var halfBorderWidth = Math.round(borderWidth / 2);\n                if (markers.size) {\n                    var center = rect.center();\n                    rect.size.width = rect.size.height = markers.size;\n                    rect.origin.x = Math.round(center.x - rect.size.width / 2);\n                    rect.origin.y = Math.round(center.y - rect.size.height / 2);\n                }\n                rect.size.width -= borderWidth;\n                rect.size.height -= borderWidth;\n                rect.origin.y += halfBorderWidth + 0.5;\n                rect.origin.x += halfBorderWidth + 0.5;\n                return dataviz.rectToBox(rect);\n            },\n            markerBorder: function () {\n                var options = this.options;\n                var markers = options.markers;\n                var border = markers.border;\n                var opacity = valueOrDefault(border.opacity, options.opacity);\n                return {\n                    color: border.color || this.color,\n                    width: border.width,\n                    opacity: opacity,\n                    dashType: border.dashType\n                };\n            },\n            createMarker: function () {\n                var options = this.options;\n                var markerOptions = options.markers;\n                var marker = new ShapeElement({\n                    type: valueOrDefault(markerOptions.type, 'rect'),\n                    width: markerOptions.size,\n                    height: markerOptions.size,\n                    rotation: markerOptions.rotation,\n                    background: this.color,\n                    border: this.markerBorder(),\n                    borderRadius: markerOptions.borderRadius,\n                    opacity: this.series.opacity || options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                this.marker = marker;\n                this.append(marker);\n            },\n            createHighlight: function (style) {\n                var options = this.options;\n                var markerOptions = this.options.highlight.markers || this.options.markers;\n                var highlight = new ShapeElement({\n                    type: valueOrDefault(markerOptions.type, 'rect'),\n                    width: markerOptions.size,\n                    height: markerOptions.size,\n                    rotation: markerOptions.rotation,\n                    background: markerOptions.color || this.color,\n                    border: this.markerBorder(),\n                    borderRadius: markerOptions.borderRadius,\n                    opacity: this.series.opacity || options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex)\n                });\n                highlight.reflow(this.markerBox());\n                var visual = highlight.getElement();\n                visual.options.fill = style.fill;\n                visual.options.stroke = style.stroke;\n                return visual;\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var left = this.box.center().x;\n                var top = this.box.y1 - TOOLTIP_OFFSET;\n                return {\n                    point: new Point(left, top),\n                    align: {\n                        horizontal: CENTER,\n                        vertical: BOTTOM\n                    }\n                };\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            },\n            unclipElements: function () {\n            },\n            pointData: function () {\n                return {\n                    x: this.value.x,\n                    y: this.value.y,\n                    value: this.value.value,\n                    dataItem: this.dataItem,\n                    series: this.series\n                };\n            }\n        });\n        deepExtend(HeatmapPoint.prototype, PointEventsMixin);\n        deepExtend(HeatmapPoint.prototype, NoteMixin);\n        HeatmapPoint.prototype.defaults = {\n            markers: {\n                type: 'rect',\n                borderRadius: 4,\n                border: { color: 'transparent' }\n            },\n            padding: { top: 1 },\n            labels: {\n                visible: false,\n                padding: 3\n            },\n            opacity: 1,\n            notes: { label: {} }\n        };\n        var HeatmapChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this._initFields();\n                this.render();\n            },\n            _initFields: function () {\n                this.points = [];\n                this.seriesOptions = [];\n                this.valueRange = {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                this._evalSeries = [];\n            },\n            render: function () {\n                this.setRange();\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            setRange: function () {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                        var valueFields = ref$1.valueFields;\n                        this$1.valueRange.min = Math.min(this$1.valueRange.min, valueFields.value);\n                        this$1.valueRange.max = Math.max(this$1.valueRange.max, valueFields.value);\n                    }\n                }\n            },\n            addValue: function (value, fields) {\n                var point;\n                if (value) {\n                    point = this.createPoint(value, fields);\n                    if (point) {\n                        $.extend(point, fields);\n                    }\n                }\n                this.points.push(point);\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, options);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem,\n                        min: this.valueRange.min,\n                        max: this.valueRange.max\n                    }, state);\n                }\n                return pointOptions;\n            },\n            pointType: function () {\n                return HeatmapPoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                } else {\n                    var scale = colorScale(color);\n                    color = scale(value.value / this.valueRange.max);\n                }\n                var point = new HeatmapPoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var plotArea = this.plotArea;\n                var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n                var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    xAxis: xAxis,\n                    yAxis: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var chartPoints = this.points;\n                var limit = !this.options.clip;\n                var pointIx = 0;\n                this.traverseDataPoints(function (value, fields) {\n                    var point = chartPoints[pointIx++];\n                    var ref = this$1.seriesAxes(fields.series);\n                    var xAxis = ref.xAxis;\n                    var yAxis = ref.yAxis;\n                    var indexX = xAxis.categoryIndex(value.x);\n                    var indexY = yAxis.categoryIndex(value.y);\n                    var slotX = xAxis.getSlot(indexX, indexX, limit);\n                    var slotY = yAxis.getSlot(indexY, indexY, limit);\n                    if (point) {\n                        if (slotX && slotY) {\n                            var pointSlot = this$1.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var ref$1 = this$1.seriesAxes(currentSeries);\n                    var xAxis = ref$1.xAxis;\n                    var yAxis = ref$1.yAxis;\n                    var xRange = xAxis.currentRangeIndices();\n                    var yRange = yAxis.currentRangeIndices();\n                    for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        var ref$2 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                        var value = ref$2.valueFields;\n                        var fields = ref$2.fields;\n                        var xIndex = xAxis.totalIndex(value.x);\n                        var yIndex = yAxis.totalIndex(value.y);\n                        var xIn = xRange.min <= xIndex && xIndex <= xRange.max;\n                        var yIn = yRange.min <= yIndex && yIndex <= yRange.max;\n                        if (xIn && yIn) {\n                            callback(value, deepExtend({\n                                pointIx: pointIx,\n                                series: currentSeries,\n                                seriesIx: seriesIx,\n                                dataItem: currentSeries.data[pointIx],\n                                owner: this$1\n                            }, fields));\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y, value.value);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        setDefaultOptions(HeatmapChart, {\n            series: [],\n            tooltip: { format: '{0}, {1}: {2}' },\n            labels: { format: '{2}' },\n            clip: true\n        });\n        deepExtend(HeatmapChart.prototype, { _bindPoint: CategoricalChart.prototype._bindPoint });\n        var HeatmapPlotArea = PlotAreaBase.extend({\n            initFields: function () {\n                this.namedXAxes = {};\n                this.namedYAxes = {};\n            },\n            render: function (panes) {\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                this.bindCategories();\n                this.createAxes(panes);\n                this.createCharts(panes);\n                this.createAxisLabels();\n            },\n            bindCategories: function () {\n                var this$1 = this;\n                var series = this.srcSeries || this.series;\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var data = currentSeries.data || [];\n                    var ref = this$1.seriesAxes(currentSeries);\n                    var xAxis = ref.xAxis;\n                    var yAxis = ref.yAxis;\n                    var xCategories = [].concat(xAxis.categories || []);\n                    var yCategories = [].concat(yAxis.categories || []);\n                    for (var pointIndex = 0; pointIndex < data.length; pointIndex++) {\n                        var ref$1 = SeriesBinder.current.bindPoint(currentSeries, pointIndex).valueFields;\n                        var x = ref$1.x;\n                        var y = ref$1.y;\n                        if (xCategories.indexOf(x) === -1) {\n                            xCategories.push(x);\n                        }\n                        if (yCategories.indexOf(y) === -1) {\n                            yCategories.push(y);\n                        }\n                    }\n                    xAxis.categories = xCategories;\n                    yAxis.categories = yCategories;\n                }\n            },\n            createCharts: function (panes) {\n                var this$1 = this;\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var filteredSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    this$1.createHeatmapChart(filterSeriesByType(filteredSeries, [HEATMAP]), pane);\n                }\n            },\n            createHeatmapChart: function (series, pane) {\n                var chart = new HeatmapChart(this, { series: series });\n                this.appendChart(chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var xAxisName = series.xAxis;\n                var xAxisOptions = [].concat(options.xAxis);\n                var xAxis = grep(xAxisOptions, function (a) {\n                    return a.name === xAxisName;\n                })[0];\n                var yAxisName = series.yAxis;\n                var yAxisOptions = [].concat(options.yAxis);\n                var yAxis = grep(yAxisOptions, function (a) {\n                    return a.name === yAxisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = panes[0].name || 'default';\n                var paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesAxes: function (series) {\n                var xAxis;\n                var yAxis;\n                var options = this.options;\n                var xAxisOptions = [].concat(options.xAxis);\n                var xAxisName = series.xAxis;\n                if (xAxisName) {\n                    xAxis = xAxisOptions.find(function (axis) {\n                        return axis.name === xAxisName;\n                    });\n                } else {\n                    xAxis = xAxisOptions[0];\n                }\n                var yAxisOptions = [].concat(options.yAxis);\n                var yAxisName = series.yAxis;\n                if (yAxisName) {\n                    yAxis = yAxisOptions.find(function (axis) {\n                        return axis.name === yAxisName;\n                    });\n                } else {\n                    yAxis = yAxisOptions[0];\n                }\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    xAxis: xAxis,\n                    yAxis: yAxis\n                };\n            },\n            createAxisLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    axes[i].createLabels();\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var axisName = options.name;\n                var namedAxes = vertical ? this.namedYAxes : this.namedXAxes;\n                var axisOptions = $.extend({ axisCrossingValue: 0 }, options, {\n                    vertical: vertical,\n                    reverse: vertical || this.chartService.rtl ? !options.reverse : options.reverse,\n                    justified: false\n                });\n                var firstCategory = axisOptions.categories ? axisOptions.categories[0] : null;\n                var typeSamples = [\n                    axisOptions.min,\n                    axisOptions.max,\n                    firstCategory\n                ];\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName === axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        var firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                var inferredDate;\n                for (var i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                var axisType;\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = dataviz.DateCategoryAxis;\n                } else {\n                    axisType = CategoryAxis;\n                }\n                var axis = new axisType(axisOptions, this.chartService);\n                axis.axisIndex = axisIndex;\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                this.appendAxis(axis);\n                axis.mapCategories();\n                return axis;\n            },\n            createAxes: function (panes) {\n                var this$1 = this;\n                var options = this.options;\n                var xAxesOptions = [].concat(options.xAxis);\n                var xAxes = [];\n                var yAxesOptions = [].concat(options.yAxis);\n                var yAxes = [];\n                for (var idx = 0; idx < xAxesOptions.length; idx++) {\n                    var axisPane = this$1.findPane(xAxesOptions[idx].pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(this$1.createXYAxis(xAxesOptions[idx], false, idx));\n                    }\n                }\n                for (var idx$1 = 0; idx$1 < yAxesOptions.length; idx$1++) {\n                    var axisPane$1 = this$1.findPane(yAxesOptions[idx$1].pane);\n                    if (inArray(axisPane$1, panes)) {\n                        yAxes.push(this$1.createXYAxis(yAxesOptions[idx$1], true, idx$1));\n                    }\n                }\n                this.axisX = this.axisX || xAxes[0];\n                this.axisY = this.axisY || yAxes[0];\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis.options.vertical) {\n                    delete this.namedYAxes[axisName];\n                } else {\n                    delete this.namedXAxes[axisName];\n                }\n                if (axis === this.axisX) {\n                    delete this.axisX;\n                }\n                if (axis === this.axisY) {\n                    delete this.axisY;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var allAxes = this.axes;\n                var length = allAxes.length;\n                var xValues = [];\n                var yValues = [];\n                for (var i = 0; i < length; i++) {\n                    var axis = allAxes[i];\n                    var values = axis.options.vertical ? yValues : xValues;\n                    appendIfNotNull(values, axis.getCategory(point));\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = (vertical ? axes.y : axes.x).indexOf(axis);\n                updateAxisOptions$2(this.options, index, vertical, options);\n                updateAxisOptions$2(this.originalOptions, index, vertical, options);\n            },\n            crosshairOptions: function (axis) {\n                return $.extend({}, axis.options.crosshair, { zIndex: 0 });\n            }\n        });\n        function updateAxisOptions$2(targetOptions, axisIndex, vertical, options) {\n            var axisOptions = [].concat(vertical ? targetOptions.yAxis : targetOptions.xAxis)[axisIndex];\n            deepExtend(axisOptions, options);\n        }\n        setDefaultOptions(HeatmapPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(HeatmapPlotArea.prototype, PlotAreaEventsMixin);\n        var COLOR = 'color';\n        var FIRST = 'first';\n        var FROM = 'from';\n        var MAX = 'max';\n        var MIN = 'min';\n        var NOTE_TEXT = 'noteText';\n        var SUMMARY_FIELD = 'summary';\n        var TO = 'to';\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        PlotAreaFactory.current.register(FunnelPlotArea, [FUNNEL]);\n        PlotAreaFactory.current.register(PolarPlotArea, [\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ]);\n        PlotAreaFactory.current.register(RadarPlotArea, [\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ]);\n        PlotAreaFactory.current.register(HeatmapPlotArea, [HEATMAP]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        SeriesBinder.current.register([\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ], [\n            X,\n            Y\n        ], [COLOR]);\n        SeriesBinder.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], [VALUE], [COLOR]);\n        SeriesBinder.current.register([FUNNEL], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            'visible'\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        DefaultAggregates.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], {\n            value: MAX,\n            color: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([HEATMAP], [\n            X,\n            Y,\n            VALUE\n        ], [\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        var AXIS_NAMES = [\n            CATEGORY,\n            VALUE,\n            X,\n            Y\n        ];\n        var MOUSEMOVE = 'mousemove';\n        var CONTEXTMENU = 'contextmenu';\n        var MOUSELEAVE = 'mouseleave';\n        var MOUSEMOVE_DELAY = 20;\n        var Chart = Class.extend({\n            init: function (element, userOptions, themeOptions, context) {\n                var this$1 = this;\n                if (context === void 0) {\n                    context = {};\n                }\n                this.observers = [];\n                this.addObserver(context.observer);\n                this.chartService = new services.ChartService(this, context);\n                this.chartService.theme = themeOptions;\n                this._initElement(element);\n                var options = deepExtend({}, this.options, userOptions);\n                this._originalOptions = deepExtend({}, options);\n                this._theme = themeOptions;\n                this._initTheme(options, themeOptions);\n                this._initHandlers();\n                this._initSurface();\n                this.bindCategories();\n                dataviz.FontLoader.preloadFonts(userOptions, function () {\n                    this$1.fontLoaded = true;\n                    if (!this$1._destroyed) {\n                        this$1.trigger('init');\n                        this$1._redraw();\n                        this$1._attachEvents();\n                    }\n                });\n            },\n            _initElement: function (element) {\n                this._setElementClass(element);\n                element.style.position = 'relative';\n                while (element.firstChild) {\n                    element.removeChild(element.firstChild);\n                }\n                this.element = element;\n            },\n            _setElementClass: function (element) {\n                dataviz.addClass(element, 'k-chart');\n            },\n            _initTheme: function (options, themeOptions) {\n                var seriesCopies = [];\n                var series = options.series || [];\n                for (var i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                this.applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    delete options.seriesColors;\n                }\n                this.options = deepExtend({}, themeOptions, options);\n                this.applySeriesColors();\n            },\n            getSize: function () {\n                var chartArea = this.options.chartArea || {};\n                var width = chartArea.width ? parseInt(chartArea.width, 10) : Math.floor(this.element.offsetWidth);\n                var height = chartArea.height ? parseInt(chartArea.height, 10) : Math.floor(this.element.offsetHeight);\n                return {\n                    width: width,\n                    height: height\n                };\n            },\n            resize: function (force) {\n                var size = this.getSize();\n                var currentSize = this._size;\n                var hasSize = size.width > 0 || size.height > 0;\n                if (force || hasSize && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n                    this._size = size;\n                    this._resize(size, force);\n                    this.trigger('resize', size);\n                } else if (hasSize && this._selections && dataviz.find(this._selections, function (s) {\n                        return !s.visible;\n                    })) {\n                    this._destroySelections();\n                    this._setupSelection();\n                }\n            },\n            _resize: function () {\n                this._noTransitionsRedraw();\n            },\n            redraw: function (paneName) {\n                this.applyDefaults(this.options);\n                this.applySeriesColors();\n                if (paneName) {\n                    var plotArea = this._model._plotArea;\n                    var pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    this._redraw();\n                }\n            },\n            getAxis: function (name) {\n                return findAxisByName(name, this._plotArea.axes);\n            },\n            findAxisByName: function (name) {\n                return this.getAxis(name);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(panes[idx]);\n                }\n            },\n            plotArea: function () {\n                return new ChartPlotArea(this._plotArea);\n            },\n            toggleHighlight: function (show, filter) {\n                var plotArea = this._plotArea;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var points;\n                if (isFunction(filter)) {\n                    points = plotArea.filterPoints(filter);\n                } else {\n                    var seriesName, categoryName;\n                    if (isObject(filter)) {\n                        seriesName = filter.series;\n                        categoryName = filter.category;\n                    } else {\n                        seriesName = categoryName = filter;\n                    }\n                    if (firstSeries.type === DONUT) {\n                        points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                    } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                        points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                    } else {\n                        points = plotArea.pointsBySeriesName(seriesName);\n                    }\n                }\n                if (points) {\n                    this.togglePointsHighlight(show, points);\n                }\n            },\n            togglePointsHighlight: function (show, points) {\n                var highlight = this._highlight;\n                for (var idx = 0; idx < points.length; idx++) {\n                    highlight.togglePointHighlight(points[idx], show);\n                }\n            },\n            showTooltip: function (filter) {\n                var shared = this._sharedTooltip();\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var plotArea = ref._plotArea;\n                var point, categoryIndex;\n                if (isFunction(filter)) {\n                    point = plotArea.findPoint(filter);\n                    if (point && shared) {\n                        categoryIndex = point.categoryIx;\n                    }\n                } else if (shared && defined(filter)) {\n                    categoryIndex = plotArea.categoryAxis.categoryIndex(filter);\n                }\n                if (shared) {\n                    if (categoryIndex >= 0) {\n                        var points = this._plotArea.pointsByCategoryIndex(categoryIndex);\n                        tooltip.showAt(points);\n                    }\n                } else if (point) {\n                    tooltip.show(point);\n                }\n            },\n            hideTooltip: function () {\n                this._tooltip.hide();\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea || {};\n                if (chartArea.width) {\n                    dataviz.elementSize(wrap, { width: chartArea.width });\n                }\n                if (chartArea.height) {\n                    dataviz.elementSize(wrap, { height: chartArea.height });\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    this._destroySurface();\n                    this.surface = drawing.Surface.create(wrap, { type: this.options.renderAs });\n                    this.surface.bind('mouseenter', this._surfaceMouseenterHandler);\n                    this.surface.bind('mouseleave', this._surfaceMouseleaveHandler);\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var model = this._getModel();\n                this._size = {\n                    width: model.options.width,\n                    height: model.options.height\n                };\n                this._destroyView();\n                this._model = model;\n                this._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                this._initSurface();\n                this.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                this._tooltip = this._createTooltip();\n                this._highlight = new Highlight();\n                this._setupSelection();\n                this._createPannable();\n                this._createZoomSelection();\n                this._createMousewheelZoom();\n                this.trigger(RENDER);\n                triggerPaneRender(this._plotArea.panes);\n                if (!this._navState) {\n                    this._cancelDomEvents();\n                }\n            },\n            exportVisual: function (exportOptions) {\n                var visual;\n                if (exportOptions && (exportOptions.width || exportOptions.height || exportOptions.options)) {\n                    var currentOptions = this.options;\n                    var options = deepExtend({}, exportOptions.options, {\n                        chartArea: {\n                            width: exportOptions.width,\n                            height: exportOptions.height\n                        }\n                    });\n                    clearMissingValues(this._originalOptions, options);\n                    this.options = deepExtend({}, this._originalOptions, options);\n                    this._initTheme(this.options, this._theme);\n                    this.bindCategories();\n                    var model = this._getModel();\n                    model.renderVisual();\n                    triggerPaneRender(model._plotArea.panes);\n                    visual = model.visual;\n                    this.options = currentOptions;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                return this._plotArea instanceof CategoricalPlotArea && this.options.tooltip && this.options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _toggleDragZoomEvents: function () {\n                var pannable = this.options.pannable;\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                var mousewheel = (zoomable || {}).mousewheel;\n                var allowDrag = !pannable && (zoomable === false || selection === false) && !this.requiresHandlers([\n                    DRAG_START,\n                    DRAG,\n                    DRAG_END\n                ]);\n                var allowZoom = (zoomable === false || mousewheel === false) && !this.requiresHandlers([\n                    ZOOM_START,\n                    ZOOM,\n                    ZOOM_END\n                ]);\n                var element = this.element;\n                if (this._dragZoomEnabled && allowDrag && allowZoom) {\n                    element.style.touchAction = this._touchAction || '';\n                    this._dragZoomEnabled = false;\n                } else if (!this._dragZoomEnabled && !(allowDrag && allowZoom)) {\n                    element.style.touchAction = 'none';\n                    this._dragZoomEnabled = true;\n                }\n                this._toggleDomEvents(!allowDrag, !allowZoom);\n            },\n            _toggleDomEvents: function (drag, zoom) {\n                var domEvents = this.domEvents;\n                if (!domEvents) {\n                    return;\n                }\n                if (domEvents.toggleDrag) {\n                    domEvents.toggleDrag(drag);\n                }\n                if (domEvents.toggleZoom) {\n                    domEvents.toggleZoom(zoom);\n                }\n            },\n            _createTooltip: function () {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var tooltip;\n                if (this._sharedTooltip()) {\n                    tooltip = this._createSharedTooltip(tooltipOptions);\n                } else {\n                    tooltip = new Tooltip(this.chartService, tooltipOptions);\n                }\n                return tooltip;\n            },\n            _createSharedTooltip: function (options) {\n                return new SharedTooltip(this._plotArea, options);\n            },\n            applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            applySeriesColors: function () {\n                var options = this.options;\n                var series = options.series;\n                var colors = options.seriesColors || [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var seriesColor = colors[i % colors.length];\n                    var defaults = currentSeries._defaults;\n                    currentSeries.color = currentSeries.color || seriesColor;\n                    if (defaults) {\n                        defaults.color = defaults.color || seriesColor;\n                    }\n                }\n            },\n            _getModel: function () {\n                var options = this.options;\n                var plotArea = this._createPlotArea();\n                var model = new dataviz.RootElement(this._modelOptions());\n                model.chart = this;\n                model._plotArea = plotArea;\n                dataviz.Title.buildTitle(options.title, model);\n                if (options.legend && options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend, this.chartService));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var options = this.options;\n                var size = this.getSize();\n                return deepExtend({\n                    transitions: options.transitions,\n                    width: size.width || datavizConstants.DEFAULT_WIDTH,\n                    height: size.height || datavizConstants.DEFAULT_HEIGHT\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var options = this.options;\n                var plotArea = PlotAreaFactory.current.create(skipSeries ? [] : options.series, options, this.chartService);\n                return plotArea;\n            },\n            _setupSelection: function () {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref._plotArea.axes;\n                var selections = this._selections = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        var range = axis.range();\n                        var selection = new Selection(this$1, axis, deepExtend({\n                            min: range.min,\n                            max: range.max\n                        }, options.select));\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _initHandlers: function () {\n                this._clickHandler = this._click.bind(this);\n                this._mousewheelHandler = this._mousewheel.bind(this);\n                this._mouseleaveHandler = this._mouseleave.bind(this);\n                this._surfaceMouseenterHandler = this._mouseover.bind(this);\n                this._surfaceMouseleaveHandler = this._mouseout.bind(this);\n                this._mousemove = kendo.throttle(this._mousemove.bind(this), MOUSEMOVE_DELAY);\n            },\n            addObserver: function (observer) {\n                if (observer) {\n                    this.observers.push(observer);\n                }\n            },\n            removeObserver: function (observer) {\n                var index = this.observers.indexOf(observer);\n                if (index >= 0) {\n                    this.observers.splice(index, 1);\n                }\n            },\n            requiresHandlers: function (eventNames) {\n                var observers = this.observers;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].requiresHandlers(eventNames)) {\n                        return true;\n                    }\n                }\n            },\n            trigger: function (name, args) {\n                if (args === void 0) {\n                    args = {};\n                }\n                if (name === SHOW_TOOLTIP) {\n                    args.anchor.point = this._toDocumentCoordinates(args.anchor.point);\n                }\n                args.sender = this;\n                var observers = this.observers;\n                var isDefaultPrevented = false;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].trigger(name, args)) {\n                        isDefaultPrevented = true;\n                    }\n                }\n                return isDefaultPrevented;\n            },\n            _attachEvents: function () {\n                var element = this.element;\n                this._touchAction = element.style.touchAction;\n                var obj;\n                bindEvents(element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj[MOUSELEAVE] = this._mouseleaveHandler, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n                this.domEvents = services.DomEventsBuilder.create(this.element, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n                this._toggleDragZoomEvents();\n            },\n            _mouseleave: function (e) {\n                if (this._hoveredPoint) {\n                    this._hoveredPoint.out(this, e);\n                    this._hoveredPoint = null;\n                }\n                if (this._plotArea.hovered) {\n                    this.trigger(PLOT_AREA_LEAVE);\n                    this._plotArea.hovered = false;\n                }\n            },\n            _cancelDomEvents: function () {\n                if (this.domEvents && this.domEvents.cancel) {\n                    this.domEvents.cancel();\n                }\n            },\n            _gesturestart: function (e) {\n                if (this._mousewheelZoom && !this._stopChartHandlers(e)) {\n                    this._gestureDistance = e.distance;\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                }\n            },\n            _gestureend: function (e) {\n                if (this._zooming && !this._stopChartHandlers(e)) {\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                    this._zooming = false;\n                    this.trigger(ZOOM_END, {});\n                }\n            },\n            _gesturechange: function (e) {\n                var mousewheelZoom = this._mousewheelZoom;\n                if (mousewheelZoom && !this._stopChartHandlers(e)) {\n                    e.preventDefault();\n                    var previousGestureDistance = this._gestureDistance;\n                    var scaleDelta = -e.distance / previousGestureDistance + 1;\n                    if (Math.abs(scaleDelta) >= 0.1) {\n                        scaleDelta = Math.round(scaleDelta * 10);\n                        this._gestureDistance = e.distance;\n                        var args = {\n                            delta: scaleDelta,\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        };\n                        if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                            if (!this._zooming) {\n                                this._zooming = true;\n                            }\n                            var ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                            if (ranges && !this.trigger(ZOOM, args)) {\n                                mousewheelZoom.zoom();\n                            }\n                        }\n                    }\n                }\n            },\n            _mouseout: function (e) {\n                if (e.element) {\n                    var element = this._drawingChartElement(e.element, e);\n                    if (element && element.leave) {\n                        element.leave(this, e.originalEvent);\n                    }\n                }\n            },\n            _start: function (e) {\n                var coords = this._eventCoordinates(e);\n                if (this._stopChartHandlers(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (this.requiresHandlers([\n                        DRAG_START,\n                        DRAG,\n                        DRAG_END\n                    ])) {\n                    this._startNavigation(e, coords, DRAG_START);\n                }\n                if (this._pannable && this._pannable.start(e)) {\n                    this.surface.suspendTracking();\n                    this._unsetActivePoint();\n                    this._suppressHover = true;\n                    this.chartService.panning = true;\n                }\n                if (this._zoomSelection) {\n                    if (this._zoomSelection.start(e)) {\n                        this.trigger(ZOOM_START, {\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _move: function (e) {\n                var ref = this;\n                var state = ref._navState;\n                var pannable = ref._pannable;\n                if (this._stopChartHandlers(e)) {\n                    return;\n                }\n                if (pannable) {\n                    var ranges = pannable.move(e);\n                    if (ranges && !this.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    var ranges$1 = {};\n                    var axes = state.axes;\n                    for (var i = 0; i < axes.length; i++) {\n                        var currentAxis = axes[i];\n                        var axisName = currentAxis.options.name;\n                        if (axisName) {\n                            var axis = currentAxis.options.vertical ? e.y : e.x;\n                            var delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges$1[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges$1;\n                    this.trigger(DRAG, {\n                        axisRanges: ranges$1,\n                        originalEvent: e\n                    });\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                if (this._stopChartHandlers(e)) {\n                    return;\n                }\n                var pannable = this._pannable;\n                if (pannable && pannable.end(e)) {\n                    this.surface.resumeTracking();\n                    this.trigger(DRAG_END, {\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                    this.chartService.panning = false;\n                } else {\n                    this._endNavigation(e, DRAG_END);\n                }\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                        this.trigger(ZOOM_END, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _stopChartHandlers: function (e) {\n                var selections = this._selections || [];\n                if (!selections.length) {\n                    return false;\n                }\n                var coords = this._eventCoordinates(e);\n                var pane = this._plotArea.paneByPoint(coords);\n                if (pane) {\n                    for (var idx = 0; idx < selections.length; idx++) {\n                        if (selections[idx].onPane(pane)) {\n                            return true;\n                        }\n                    }\n                }\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                var mousewheelZoom = this._mousewheelZoom;\n                var coords = this._eventCoordinates(e);\n                if (this._stopChartHandlers(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (mousewheelZoom) {\n                    var args = {\n                        delta: delta,\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    };\n                    if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                        e.preventDefault();\n                        if (!this._zooming) {\n                            this._unsetActivePoint();\n                            this.surface.suspendTracking();\n                            this._zooming = true;\n                        }\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        args.axisRanges = mousewheelZoom.updateRanges(delta);\n                        if (args.axisRanges && !this.trigger(ZOOM, args)) {\n                            mousewheelZoom.zoom();\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1.trigger(ZOOM_END, args);\n                            this$1._zooming = false;\n                            if (this$1.surface) {\n                                this$1.surface.resumeTracking();\n                            }\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                } else {\n                    var state = this._navState;\n                    if (!state) {\n                        var prevented = this._startNavigation(e, coords, ZOOM_START);\n                        if (!prevented) {\n                            state = this._navState;\n                        }\n                    }\n                    if (state) {\n                        var totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        var axes = this._navState.axes;\n                        var ranges = {};\n                        for (var i = 0; i < axes.length; i++) {\n                            var currentAxis = axes[i];\n                            var axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        this.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, coords, chartEvent) {\n                var plotArea = this._model._plotArea;\n                var pane = plotArea.findPointPane(coords);\n                var axes = plotArea.axes.slice(0);\n                if (!pane) {\n                    return;\n                }\n                var ranges = axisRanges(axes);\n                var prevented = this.trigger(chartEvent, {\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n                if (prevented) {\n                    this._cancelDomEvents();\n                } else {\n                    this._suppressHover = true;\n                    this._unsetActivePoint();\n                    this._navState = {\n                        axisRanges: ranges,\n                        pane: pane,\n                        axes: axes\n                    };\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                if (this._navState) {\n                    this.trigger(chartEvent, {\n                        axisRanges: this._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                    this._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (element) {\n                    return this._drawingChartElement(element, e, match);\n                }\n            },\n            _drawingChartElement: function (element, e, match) {\n                var current = element;\n                var chartElement;\n                while (current && !chartElement) {\n                    chartElement = current.chartElement;\n                    current = current.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                        if (chartElement && chartElement.aliasFor) {\n                            chartElement = chartElement.aliasFor();\n                        }\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var coordinates = dataviz.eventCoordinates(e);\n                return this._toModelCoordinates(coordinates.x, coordinates.y);\n            },\n            _elementPadding: function () {\n                if (!this._padding) {\n                    var ref = elementStyles(this.element, [\n                        'paddingLeft',\n                        'paddingTop'\n                    ]);\n                    var paddingLeft = ref.paddingLeft;\n                    var paddingTop = ref.paddingTop;\n                    this._padding = {\n                        top: paddingTop,\n                        left: paddingLeft\n                    };\n                }\n                return this._padding;\n            },\n            _toDocumentCoordinates: function (point) {\n                var padding = this._elementPadding();\n                var offset = dataviz.elementOffset(this.element);\n                return {\n                    left: round(point.x + padding.left + offset.left),\n                    top: round(point.y + padding.top + offset.top)\n                };\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element;\n                var offset = dataviz.elementOffset(element);\n                var padding = this._elementPadding();\n                var inverseTransform = dataviz.elementScale(element).invert();\n                var point = new GeometryPoint(clientX - offset.left - padding.left, clientY - offset.top - padding.top).transform(inverseTransform);\n                return new Point(point.x, point.y);\n            },\n            _tap: function (e) {\n                var this$1 = this;\n                var drawingElement = this.surface.eventTarget(e);\n                var element = this._drawingChartElement(drawingElement, e);\n                var sharedTooltip = this._sharedTooltip();\n                if (!this._startHover(drawingElement, e) && !sharedTooltip) {\n                    this._unsetActivePoint();\n                }\n                if (sharedTooltip) {\n                    this._trackSharedTooltip(this._eventCoordinates(e), e, true);\n                }\n                this._propagateClick(element, e);\n                this.handlingTap = true;\n                setTimeout(function () {\n                    this$1.handlingTap = false;\n                }, 0);\n            },\n            _click: function (e) {\n                var element = this._getChartElement(e);\n                this._propagateClick(element, e);\n            },\n            _propagateClick: function (element, e) {\n                var this$1 = this;\n                var current = element;\n                while (current) {\n                    if (current.click) {\n                        current.click(this$1, e);\n                    }\n                    current = current.parent;\n                }\n            },\n            _startHover: function (element, e) {\n                if (this._suppressHover) {\n                    return false;\n                }\n                var point = this._drawingChartElement(element, e, function (element) {\n                    return (element.hover || element.over) && !(element instanceof PlotAreaBase);\n                });\n                var activePoint = this._activePoint;\n                var multipleSeries = this._plotArea.series.length > 1;\n                var hasInactiveOpacity = this._hasInactiveOpacity();\n                this._updateHoveredPoint(point, e);\n                if (point && activePoint !== point && point.hover) {\n                    this._activePoint = point;\n                    if (!this._sharedTooltip() && !point.hover(this, e)) {\n                        this._displayTooltip(point);\n                        if (hasInactiveOpacity) {\n                            this._displayInactiveOpacity(point, multipleSeries);\n                        } else {\n                            this._highlight.show(point);\n                        }\n                    }\n                } else if (!point && hasInactiveOpacity) {\n                    if (multipleSeries && this._activeChartInstance) {\n                        this._updateSeriesOpacity(point, true);\n                        this._applySeriesOpacity(this._activeChartInstance.children, null, true);\n                        this._activeChartInstance = null;\n                    }\n                    this._highlight && this._highlight.hide();\n                    this._activePoint = null;\n                }\n                return point;\n            },\n            _displayTooltip: function (point) {\n                var tooltipOptions = deepExtend({}, this.options.tooltip, point.options.tooltip);\n                if (tooltipOptions.visible) {\n                    this._tooltip.show(point);\n                }\n            },\n            _displayInactiveOpacity: function (activePoint, multipleSeries, highlightPoints) {\n                var chartInstance = this._activeChartInstance = this._chartInstanceFromPoint(activePoint);\n                if (!chartInstance) {\n                    return;\n                }\n                if (multipleSeries) {\n                    this._updateSeriesOpacity(activePoint);\n                    this._applySeriesOpacity(chartInstance.children, null, true);\n                    this._applySeriesOpacity(chartInstance.children, activePoint.series);\n                    this._highlight.show(highlightPoints || activePoint);\n                } else {\n                    var inactivePoints;\n                    if (!chartInstance.supportsPointInactiveOpacity()) {\n                        this._highlight.show(activePoint);\n                        return;\n                    }\n                    inactivePoints = this._getInactivePoints(activePoint, chartInstance);\n                    if (inactivePoints && inactivePoints.length) {\n                        this._highlight.show(inactivePoints, 1 - this._getInactiveOpacityForSeries(activePoint.series));\n                    }\n                }\n            },\n            _getInactivePoints: function (activePoint, chartInstance) {\n                var allPoints = this._getAllPointsOfType(chartInstance, activePoint.constructor);\n                return allPoints.filter(function (point) {\n                    return point !== activePoint;\n                });\n            },\n            _getAllPointsOfType: function (container, type) {\n                var this$1 = this;\n                var points = [];\n                for (var i = 0; i < container.children.length; i++) {\n                    var element = container.children[i];\n                    if (element.constructor === type) {\n                        points.push(element);\n                    } else if (element.children && element.children.length) {\n                        points = points.concat(this$1._getAllPointsOfType(element, type));\n                    }\n                }\n                return points;\n            },\n            _updateHoveredPoint: function (point, e) {\n                var hoveredPoint = this._hoveredPoint;\n                if (hoveredPoint && hoveredPoint !== point) {\n                    hoveredPoint.out(this, e);\n                    this._hoveredPoint = null;\n                }\n                if (point && hoveredPoint !== point && point.over) {\n                    this._hoveredPoint = point;\n                    point.over(this, e);\n                }\n            },\n            _updateSeriesOpacity: function (point, resetOpacity) {\n                var this$1 = this;\n                var plotArea = this._plotArea;\n                var length = plotArea.series.length;\n                for (var i = 0; i < length; i++) {\n                    var currSeries = plotArea.series[i];\n                    var defaultOpacity = this$1._getDefaultOpacityForSeries(currSeries);\n                    var inactiveOpacity = this$1._getInactiveOpacityForSeries(currSeries);\n                    if (!resetOpacity && currSeries !== point.series) {\n                        currSeries.defaultOpacity = defaultOpacity;\n                        currSeries.opacity = inactiveOpacity;\n                        if (currSeries.line) {\n                            currSeries.line.opacity = inactiveOpacity;\n                        }\n                    } else {\n                        currSeries.opacity = defaultOpacity;\n                        if (currSeries.line) {\n                            currSeries.line.opacity = defaultOpacity;\n                        }\n                    }\n                }\n            },\n            _applySeriesOpacity: function (elements, activeSeries, reset, series) {\n                var this$1 = this;\n                for (var i = 0; i < elements.length; i++) {\n                    var element = elements[i];\n                    var currSeries = element.series || series;\n                    if (currSeries && element.visual) {\n                        var opacity = series ? series.opacity : element.series.opacity;\n                        if (currSeries !== activeSeries || reset) {\n                            element.visual.opacity(reset ? 1 : opacity);\n                        }\n                    }\n                    if (element.children && element.children.length) {\n                        this$1._applySeriesOpacity(element.children, activeSeries, reset, element.series);\n                    }\n                }\n            },\n            _chartInstanceFromPoint: function (point) {\n                var chartInstance = point.parent;\n                while (chartInstance && !chartInstance.plotArea) {\n                    chartInstance = chartInstance.parent;\n                }\n                return chartInstance;\n            },\n            _hasInactiveOpacity: function () {\n                var hasDefaultInactiveOpacity = this.options.seriesDefaults.highlight.inactiveOpacity !== undefined;\n                var hasInactiveOpacity = this.options.series.filter(function (s) {\n                    return s.highlight.inactiveOpacity !== undefined;\n                }).length > 0;\n                return hasDefaultInactiveOpacity || hasInactiveOpacity;\n            },\n            _getInactiveOpacityForSeries: function (series) {\n                var defaultInactiveOpacity = this.options.seriesDefaults.highlight.inactiveOpacity;\n                var seriesInactiveOpacity = series.highlight.inactiveOpacity;\n                return seriesInactiveOpacity || defaultInactiveOpacity || series.opacity || datavizConstants.DEFAULT_SERIES_OPACITY;\n            },\n            _getDefaultOpacityForSeries: function (series) {\n                return series.defaultOpacity || series.opacity || datavizConstants.DEFAULT_SERIES_OPACITY;\n            },\n            _mouseover: function (e) {\n                var point = this._startHover(e.element, e.originalEvent);\n                if (point && point.tooltipTracking && !this._mouseMoveTrackHandler && !this._sharedTooltip()) {\n                    this._mouseMoveTrackHandler = this._mouseMoveTracking.bind(this);\n                    var obj;\n                    bindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                var point = ref._activePoint;\n                var coords = this._eventCoordinates(e);\n                if (this._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        var seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint !== point) {\n                            this._activePoint = seriesPoint;\n                            if (!seriesPoint.hover(this, e)) {\n                                var tooltipOptions = deepExtend({}, options.tooltip, seriesPoint.options.tooltip);\n                                if (tooltipOptions.visible) {\n                                    tooltip.show(seriesPoint);\n                                }\n                                highlight.show(seriesPoint);\n                            }\n                        }\n                    }\n                } else {\n                    var obj;\n                    unbindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                    this._unsetActivePoint();\n                    this._mouseMoveTrackHandler = null;\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                var plotArea = this._plotArea;\n                this._trackCrosshairs(coords);\n                if (plotArea.hover) {\n                    var overPlotArea = plotArea.backgroundContainsPoint(coords);\n                    if (overPlotArea) {\n                        plotArea.hovered = true;\n                        this._plotArea.hover(this, e);\n                    } else if (plotArea.hovered && !overPlotArea) {\n                        this.trigger(PLOT_AREA_LEAVE);\n                        plotArea.hovered = false;\n                    }\n                }\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs;\n                for (var i = 0; i < crosshairs.length; i++) {\n                    var current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e, toggle) {\n                if (this._suppressHover) {\n                    return;\n                }\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var plotArea = ref._plotArea;\n                var categoryAxis = ref._plotArea.categoryAxis;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (plotArea.backgroundContainsPoint(coords)) {\n                    var index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== this._tooltipCategoryIx || !this._sharedHighlight && toggle) {\n                        var points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = points.map(function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                            this._sharedHighlight = true;\n                        } else {\n                            tooltip.hide();\n                        }\n                        this._tooltipCategoryIx = index;\n                    } else if (toggle && this._sharedHighlight) {\n                        highlight.hide();\n                        tooltip.hide();\n                        this._sharedHighlight = false;\n                    }\n                } else if (this._sharedHighlight) {\n                    highlight.hide();\n                    tooltip.hide();\n                    this._tooltipCategoryIx = null;\n                    this._sharedHighlight = false;\n                }\n            },\n            hideElements: function (options) {\n                var plotArea = this._plotArea;\n                this._mousemove.cancel();\n                plotArea.hideCrosshairs();\n                this._unsetActivePoint(options);\n            },\n            _unsetActivePoint: function (options) {\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._activePoint = null;\n                this._hoveredPoint = null;\n                if (tooltip && !(options && options.keepTooltipOpen)) {\n                    tooltip.hide();\n                }\n                this._tooltipCategoryIx = null;\n                this._sharedHighlight = false;\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _deferRedraw: function () {\n                this._redraw();\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            bindCategories: function () {\n                var this$1 = this;\n                var options = this.options;\n                var definitions = [].concat(options.categoryAxis);\n                for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    var axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        this$1.bindCategoryAxisFromSeries(axis, axisIx);\n                    }\n                }\n            },\n            bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesLength = series.length;\n                var uniqueCategories = new dataviz.HashMap();\n                var items = [];\n                var bindable = false;\n                var dateAxis;\n                for (var seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    var s = series[seriesIx];\n                    var onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    var data = s.data;\n                    var dataLength = data.length;\n                    var bind = s.categoryField && onAxis;\n                    bindable = bind || bindable;\n                    if (bind && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        var getFn = dateAxis ? getDateField : getField;\n                        for (var dataIx = 0; dataIx < dataLength; dataIx++) {\n                            var dataRow = data[dataIx];\n                            var category = getFn(s.categoryField, dataRow, this$1.chartService.intl);\n                            if (dateAxis || !uniqueCategories.get(category)) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories.set(category, true);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dataviz.dateComparer(a[0], b[0]);\n                        });\n                    }\n                    var result = transpose(items);\n                    axis.categories = result[0];\n                } else if (bindable) {\n                    axis.categories = [];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series);\n                var result = true;\n                for (var i = 0; i < valueFields.length; i++) {\n                    var field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _noTransitionsRedraw: function () {\n                var options = this.options;\n                var transitionsState;\n                if (options.transitions !== false) {\n                    options.transitions = false;\n                    transitionsState = true;\n                }\n                this._redraw();\n                if (transitionsState) {\n                    options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var highlight = ref._highlight;\n                var currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                var items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    items = plotArea.findPoint(function (point) {\n                        return point.series.index === seriesIndex && point.index === pointIndex;\n                    });\n                } else {\n                    items = plotArea.pointsBySeriesIndex(seriesIndex);\n                }\n                if (this._hasInactiveOpacity() && currentSeries.visible && items) {\n                    var multipleSeries = plotArea.series.length > 1;\n                    var point = items.length ? items[0] : items;\n                    this._displayInactiveOpacity(point, multipleSeries, items);\n                } else {\n                    highlight.show(items);\n                }\n            },\n            _shouldAttachMouseMove: function () {\n                return this._plotArea.crosshairs.length || this._tooltip && this._sharedTooltip() || this.requiresHandlers([\n                    PLOT_AREA_HOVER,\n                    PLOT_AREA_LEAVE\n                ]);\n            },\n            updateMouseMoveHandler: function () {\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(this.element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n            },\n            applyOptions: function (options, theme) {\n                clearMissingValues(this._originalOptions, options);\n                this._originalOptions = deepExtend(this._originalOptions, options);\n                this.options = deepExtend({}, this._originalOptions);\n                if (theme) {\n                    this._theme = theme;\n                    this.chartService.theme = theme;\n                }\n                this._initTheme(this.options, this._theme);\n                this._toggleDragZoomEvents();\n            },\n            setOptions: function (options, theme) {\n                this.applyOptions(options, theme);\n                this.bindCategories();\n                this.redraw();\n                this.updateMouseMoveHandler();\n            },\n            setDirection: function (rtl) {\n                this.chartService.rtl = Boolean(rtl);\n                if (this.surface && this.surface.type === 'svg') {\n                    this._destroySurface();\n                }\n            },\n            setIntlService: function (intl) {\n                this.chartService.intl = intl;\n            },\n            noTransitionsRedraw: function () {\n                this._noTransitionsRedraw();\n            },\n            destroy: function () {\n                this._destroyed = true;\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj[MOUSEMOVE] = this._mousemove, obj[MOUSELEAVE] = this._mouseleaveHandler, obj));\n                if (this.domEvents) {\n                    this.domEvents.destroy();\n                    delete this.domEvents;\n                }\n                if (this._mouseMoveTrackHandler) {\n                    var obj$1;\n                    unbindEvents(document, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mouseMoveTrackHandler, obj$1));\n                }\n                this._destroyView();\n                this._destroySurface();\n                this._clearRedrawTimeout();\n            },\n            _destroySurface: function () {\n                var surface = this.surface;\n                if (surface) {\n                    surface.unbind('mouseenter', this._surfaceMouseenterHandler);\n                    surface.unbind('mouseleave', this._surfaceMouseleaveHandler);\n                    surface.destroy();\n                    this.surface = null;\n                }\n            },\n            _destroySelections: function () {\n                var selections = this._selections;\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n            },\n            _destroyView: function () {\n                var model = this._model;\n                if (model) {\n                    model.destroy();\n                    this._model = null;\n                }\n                this._unsetActivePoint();\n                this._destroySelections();\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                }\n                if (this._highlight) {\n                    this._highlight.destroy();\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.destroy();\n                    delete this._zoomSelection;\n                }\n                if (this._pannable) {\n                    this._pannable.destroy();\n                    delete this._pannable;\n                }\n                if (this._mousewheelZoom) {\n                    this._mousewheelZoom.destroy();\n                    delete this._mousewheelZoom;\n                }\n            }\n        });\n        function resolveAxisAliases(options) {\n            var aliases = AXIS_NAMES;\n            for (var idx = 0; idx < aliases.length; idx++) {\n                var alias = aliases[idx] + 'Axes';\n                if (options[alias]) {\n                    options[aliases[idx] + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            }\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            var axisName, axisDefaults, axes;\n            function mapAxisOptions(axisOptions) {\n                var axisColor = (axisOptions || {}).color || axisDefaults.color;\n                var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                    line: { color: axisColor },\n                    labels: { color: axisColor },\n                    title: { color: axisColor }\n                }, axisOptions);\n                delete result[axisName];\n                return result;\n            }\n            for (var idx = 0; idx < AXIS_NAMES.length; idx++) {\n                axisName = AXIS_NAMES[idx] + 'Axis';\n                axisDefaults = options.axisDefaults || {};\n                axes = [].concat(options[axisName]);\n                axes = axes.map(mapAxisOptions);\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            }\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series;\n            var seriesLength = series.length;\n            var seriesDefaults = options.seriesDefaults;\n            var commonDefaults = deepExtend({}, options.seriesDefaults);\n            var themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {};\n            var commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (var i = 0; i < seriesLength; i++) {\n                var seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n                series[i].data = series[i].data || [];\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function axisRanges(axes) {\n            var ranges = {};\n            for (var i = 0; i < axes.length; i++) {\n                var axis = axes[i];\n                var axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function sortDates(dates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            var dates = sortDates(srcDates, comparer);\n            var length = dates.length;\n            var result = length > 0 ? [dates[0]] : [];\n            for (var i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function transpose(rows) {\n            var rowCount = rows.length;\n            var result = [];\n            for (var rowIx = 0; rowIx < rowCount; rowIx++) {\n                var row = rows[rowIx];\n                var colCount = row.length;\n                for (var colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        var DATA_FIELDS = [\n            'data',\n            'categories'\n        ];\n        function clearMissingValues(originalOptions, options) {\n            for (var field in options) {\n                if (!inArray(field, DATA_FIELDS) && options.hasOwnProperty(field)) {\n                    var fieldValue = options[field];\n                    var originalValue = originalOptions[field];\n                    if (defined(originalValue)) {\n                        var nullValue = fieldValue === null;\n                        if (nullValue || !defined(fieldValue)) {\n                            delete originalOptions[field];\n                            if (nullValue) {\n                                delete options[field];\n                            }\n                        } else if (originalValue && isObject(fieldValue)) {\n                            if (isObject(originalValue)) {\n                                clearMissingValues(originalValue, fieldValue);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        function triggerPaneRender(panes) {\n            for (var idx = 0; idx < panes.length; idx++) {\n                panes[idx].notifyRender();\n            }\n        }\n        setDefaultOptions(Chart, {\n            renderAs: '',\n            chartArea: {},\n            legend: {\n                visible: true,\n                labels: {}\n            },\n            categoryAxis: {},\n            seriesDefaults: {\n                type: COLUMN,\n                data: [],\n                highlight: { visible: true },\n                labels: {},\n                negativeValues: { visible: false }\n            },\n            series: [],\n            seriesColors: null,\n            tooltip: { visible: false },\n            transitions: true,\n            valueAxis: {},\n            plotArea: {},\n            title: {},\n            xAxis: {},\n            yAxis: {},\n            panes: [{}],\n            pannable: false,\n            zoomable: false\n        });\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BoxPlotChart: BoxPlotChart,\n            BoxPlot: BoxPlot,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            Chart: Chart,\n            ChartContainer: ChartContainer,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaEventsMixin: PlotAreaEventsMixin,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            RangeAreaPoint: RangeAreaPoint,\n            RangeAreaChart: RangeAreaChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            MousewheelZoom: MousewheelZoom,\n            ZoomSelection: ZoomSelection,\n            Pannable: Pannable,\n            ChartAxis: ChartAxis,\n            ChartPane: ChartPane,\n            ChartPlotArea: ChartPlotArea,\n            findAxisByName: findAxisByName,\n            anyHasZIndex: anyHasZIndex,\n            appendIfNotNull: appendIfNotNull,\n            areNumbers: areNumbers,\n            bindSegments: bindSegments,\n            categoriesCount: categoriesCount,\n            countNumbers: countNumbers,\n            equalsIgnoreCase: equalsIgnoreCase,\n            evalOptions: evalOptions,\n            filterSeriesByType: filterSeriesByType,\n            getDateField: getDateField,\n            getField: getField,\n            hasGradientOverlay: hasGradientOverlay,\n            hasValue: hasValue,\n            isDateAxis: isDateAxis,\n            segmentVisible: segmentVisible,\n            singleItemOrArray: singleItemOrArray,\n            createOutOfRangePoints: createOutOfRangePoints\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/chart', [\n        'dataviz/chart/kendo-chart',\n        'kendo.data',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'kendo.drawing',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var NS = '.kendoChart';\n        var kendo = window.kendo;\n        var Class = kendo.Class;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n        var dataviz = kendo.dataviz;\n        var constants = dataviz.constants;\n        var KendoChart = dataviz.Chart;\n        var SeriesBinder = dataviz.SeriesBinder;\n        var Widget = kendo.ui.Widget;\n        var DataSource = kendo.data.DataSource;\n        var deepExtend = kendo.deepExtend;\n        var defined = dataviz.defined;\n        var getField = dataviz.getField;\n        var InstanceObserver = dataviz.InstanceObserver;\n        var inArray = dataviz.inArray;\n        var services = dataviz.services;\n        var proxy = $.proxy;\n        var isArray = $.isArray;\n        var extend = $.extend;\n        var template = kendo.template;\n        var MOUSELEAVE_NS = 'mouseleave' + NS;\n        var AXIS_LABEL_CLICK = constants.AXIS_LABEL_CLICK;\n        var LEGEND_ITEM_CLICK = constants.LEGEND_ITEM_CLICK;\n        var LEGEND_ITEM_HOVER = constants.LEGEND_ITEM_HOVER;\n        var LEGEND_ITEM_LEAVE = constants.LEGEND_ITEM_LEAVE;\n        var SERIES_CLICK = constants.SERIES_CLICK;\n        var SERIES_HOVER = constants.SERIES_HOVER;\n        var SERIES_OVER = constants.SERIES_OVER;\n        var SERIES_LEAVE = constants.SERIES_LEAVE;\n        var PANE_RENDER = constants.PANE_RENDER;\n        var PLOT_AREA_CLICK = constants.PLOT_AREA_CLICK;\n        var PLOT_AREA_HOVER = constants.PLOT_AREA_HOVER;\n        var PLOT_AREA_LEAVE = constants.PLOT_AREA_LEAVE;\n        var DRAG = constants.DRAG;\n        var DRAG_END = constants.DRAG_END;\n        var DRAG_START = constants.DRAG_START;\n        var ZOOM_START = constants.ZOOM_START;\n        var ZOOM = constants.ZOOM;\n        var ZOOM_END = constants.ZOOM_END;\n        var SELECT_START = constants.SELECT_START;\n        var SELECT = constants.SELECT;\n        var SELECT_END = constants.SELECT_END;\n        var RENDER = constants.RENDER;\n        var NOTE_CLICK = constants.NOTE_CLICK;\n        var NOTE_HOVER = constants.NOTE_HOVER;\n        var NOTE_LEAVE = constants.NOTE_LEAVE;\n        var DOCUMENT_ELEMENT = $(document.documentElement);\n        var CHANGE = 'change';\n        var DATABOUND = 'dataBound';\n        var LEAVE = 'leave';\n        var MOUSEDOWN = 'down';\n        var VALUE = constants.VALUE;\n        var PIE = constants.PIE;\n        var DONUT = constants.DONUT;\n        var FUNNEL = constants.FUNNEL;\n        var Observable = kendo.Observable;\n        var TOOLTIP_ANIMATION_DURATION = 150;\n        var TOOLTIP_SHOW_DELAY = 100;\n        var TOOLTIP_INVERSE = 'k-chart-tooltip-inverse';\n        var SHARED_TOOLTIP_CLASS = 'k-chart-shared-tooltip';\n        var RTL = 'rtl';\n        services.DomEventsBuilder.register({\n            create: function (element, events) {\n                return new kendo.UserEvents(element, deepExtend({\n                    global: true,\n                    multiTouch: true,\n                    fastTap: true\n                }, events));\n            }\n        });\n        var ChartInstanceObserver = InstanceObserver.extend({\n            handlerMap: {\n                showTooltip: '_showTooltip',\n                hideTooltip: '_hideTooltip',\n                legendItemClick: '_onLegendItemClick',\n                render: '_onRender',\n                init: '_onInit'\n            }\n        });\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(this, element);\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    delete userOptions.dataSource;\n                }\n                this.options = deepExtend({}, this.options, userOptions);\n                this.wrapper = this.element;\n                this._attachEvents();\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                this._seriesVisibility = new SeriesVisibilityState();\n                this.bind(this.events, this.options);\n                this._initDataSource(userOptions);\n                kendo.notify(this, dataviz.ui);\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                SERIES_OVER,\n                SERIES_LEAVE,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                LEGEND_ITEM_LEAVE,\n                PANE_RENDER,\n                PLOT_AREA_CLICK,\n                PLOT_AREA_HOVER,\n                PLOT_AREA_LEAVE,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                NOTE_LEAVE,\n                RENDER\n            ],\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                axisDefaults: {},\n                chartArea: {},\n                legend: {},\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {},\n                series: [],\n                seriesColors: null,\n                tooltip: {},\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            items: function () {\n                return $();\n            },\n            refresh: function () {\n                var chart = this;\n                var instance = chart._instance;\n                instance.applyDefaults(chart.options);\n                instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            redraw: function (paneName) {\n                this._size = null;\n                this._instance.redraw(paneName);\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                delete options.dataSource;\n                Widget.fn._setEvents.call(chart, options);\n                this._instance.applyOptions(options, this._getThemeOptions(options));\n                this.options = this._instance.options;\n                this._tooltip.setOptions(this.options.tooltip);\n                this._seriesVisibility.setOptions(this.options);\n                this._sourceSeries = null;\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                chart._instance.updateMouseMoveHandler();\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                }\n                if (chart._instance) {\n                    chart._instance.destroy();\n                    delete this._instance;\n                }\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                    delete this._tooltip;\n                }\n                this._destroyCrosshairTooltips();\n                Widget.fn.destroy.call(chart);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(this, panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(this, panes[idx]);\n                }\n            },\n            findSeries: function (callback) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (callback(series[idx])) {\n                        return new ChartSeries(this, series[idx]);\n                    }\n                }\n            },\n            findSeriesByName: function (name) {\n                return this._createSeries({ name: name });\n            },\n            findSeriesByIndex: function (index) {\n                return this._createSeries({ index: index });\n            },\n            exportVisual: function (options) {\n                var instance = this._instance;\n                if (!instance) {\n                    return;\n                }\n                var visual;\n                if (options && (options.width || options.height)) {\n                    var chartArea = instance.options.chartArea;\n                    var originalChartArea = instance._originalOptions.chartArea;\n                    deepExtend(chartArea, options);\n                    var model = instance._getModel();\n                    chartArea.width = originalChartArea.width;\n                    chartArea.height = originalChartArea.height;\n                    model.renderVisual();\n                    triggerPaneRender(model._plotArea.panes);\n                    visual = model.visual;\n                } else {\n                    visual = instance.exportVisual();\n                }\n                return visual;\n            },\n            _createSeries: function (options) {\n                var seriesOptions = this._seriesOptions(options);\n                if (seriesOptions) {\n                    return new ChartSeries(this, seriesOptions);\n                }\n            },\n            _seriesOptions: function (options) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                var seriesOptions;\n                if (defined(options.index)) {\n                    seriesOptions = series[options.index];\n                } else if (defined(options.name)) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (series[idx].name === options.name) {\n                            seriesOptions = series[idx];\n                            break;\n                        }\n                    }\n                }\n                return seriesOptions;\n            },\n            _attachEvents: function () {\n                this.element.on(MOUSELEAVE_NS, proxy(this._mouseleave, this));\n            },\n            _mouseleave: function (e) {\n                var instance = this._instance;\n                var tooltip = this._tooltip;\n                var target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length) && instance && !instance.handlingTap) {\n                    instance.hideElements({ keepTooltipOpen: !tooltip.options.autoHide });\n                }\n            },\n            _getThemeOptions: function (userOptions) {\n                var themeName = (userOptions || {}).theme;\n                if (themeName && dataviz.SASS_THEMES.indexOf(themeName.toLowerCase()) !== -1) {\n                    return dataviz.autoTheme().chart;\n                }\n                if (defined(themeName)) {\n                    var themes = dataviz.ui.themes || {};\n                    var theme = themes[themeName] || themes[themeName.toLowerCase()] || {};\n                    return theme.chart || {};\n                }\n            },\n            _initChart: function () {\n                this._createChart(this.options, this._getThemeOptions(this.options));\n                this.options = this._instance.options;\n                this._seriesVisibility.setOptions(this.options);\n            },\n            _createChart: function (options, themeOptions) {\n                this._instance = new KendoChart(this.element[0], options, themeOptions, {\n                    observer: new ChartInstanceObserver(this),\n                    sender: this,\n                    rtl: this._isRtl()\n                });\n            },\n            _onInit: function (e) {\n                this._instance = e.sender;\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind('change', chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                this._initChart();\n                this._initTooltip();\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            _destroyCrosshairTooltips: function () {\n                var tooltips = this._crosshairTooltips;\n                if (tooltips) {\n                    for (var key in tooltips) {\n                        tooltips[key].destroy();\n                    }\n                }\n                this._crosshairTooltips = {};\n            },\n            _getCrosshairTooltip: function (name, index) {\n                var tooltips = this._crosshairTooltips = this._crosshairTooltips || {};\n                var key = name + index;\n                var tooltip = tooltips[key];\n                if (!tooltip) {\n                    tooltip = tooltips[key] = new CrosshairTooltip(this.element);\n                }\n                return tooltip;\n            },\n            _showTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.show(e);\n                } else if (this._tooltip) {\n                    this._tooltip.show(e);\n                }\n            },\n            _hideTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.hide();\n                } else if (this._tooltip) {\n                    this._tooltip.hide();\n                }\n            },\n            _onRender: function (e) {\n                this._destroyCrosshairTooltips();\n                this._copyMembers(e.sender);\n                if (!this._hasDataSource || this._hasData || !this.options.autoBind) {\n                    this.trigger(RENDER);\n                }\n            },\n            _copyMembers: function (instance) {\n                this.options = instance.options;\n                this._originalOptions = instance._originalOptions;\n                this.surface = instance.surface;\n                this._plotArea = instance._plotArea;\n                this._model = instance._model;\n                this._highlight = instance._highlight;\n                this._selections = instance._selections;\n                this._pannable = instance._pannable;\n                this._zoomSelection = instance._zoomSelection;\n                this._mousewheelZoom = instance._mousewheelZoom;\n            },\n            requiresHandlers: function (names) {\n                var events = this._events;\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (defined(events[names[idx]])) {\n                        return true;\n                    }\n                }\n            },\n            _initTooltip: function () {\n                this._tooltip = this._createTooltip();\n                this._tooltip.bind(LEAVE, proxy(this._tooltipleave, this));\n            },\n            _onLegendItemClick: function (e) {\n                if (!this.trigger(LEGEND_ITEM_CLICK, e)) {\n                    this._legendItemClick(e.seriesIndex, e.pointIndex);\n                }\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this._instance, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                if (chart._hasInactiveOpacity() && chart._activeChartInstance) {\n                    chart._updateSeriesOpacity(null, true);\n                    chart._applySeriesOpacity(chart._activeChartInstance.children, null, true);\n                    chart._activeChartInstance = null;\n                }\n                if ($.inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ]) >= 0) {\n                    var point = currentSeries.data[pointIndex];\n                    if (point && defined(point.visible)) {\n                        point.visible = !point.visible;\n                    } else {\n                        var pointVisibility = currentSeries.pointVisibility = currentSeries.pointVisibility || {};\n                        var visible = pointVisibility[pointIndex];\n                        pointVisibility[pointIndex] = defined(visible) ? !visible : false;\n                    }\n                } else {\n                    currentSeries.visible = !currentSeries.visible;\n                    this._seriesVisibility.save(currentSeries);\n                }\n                chart._noTransitionsRedraw();\n            },\n            _createTooltip: function () {\n                return new Tooltip(this.element, extend({}, this.options.tooltip, { rtl: this._isRtl() }));\n            },\n            _tooltipleave: function () {\n                if (this._instance) {\n                    this._instance.hideElements();\n                }\n            },\n            _bindData: function (e) {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], seriesVisibility = this._seriesVisibility, currentSeries, groupedSeries;\n                seriesVisibility.read();\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        groupedSeries = groupSeries(currentSeries, data);\n                        processedSeries = processedSeries.concat(groupedSeries);\n                        seriesVisibility.applyByGroup(groupedSeries, e);\n                    } else {\n                        currentSeries = extend({}, currentSeries);\n                        processedSeries.push(currentSeries);\n                        seriesVisibility.applyByIndex(currentSeries, e);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                this._instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                this._hasData = true;\n            },\n            _onDataChanged: function (e) {\n                this._bindData(e);\n                this.trigger(DATABOUND);\n                if (this._instance && this._instance.fontLoaded) {\n                    this._redraw();\n                }\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else if (this._instance) {\n                    this._instance.bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _isRtl: function () {\n                return kendo.support.isRtl(this.element) && this.element.css('direction') === RTL;\n            }\n        });\n        var proxyMembers = [\n            'getAxis',\n            'findAxisByName',\n            'plotArea',\n            'toggleHighlight',\n            'showTooltip',\n            'hideTooltip',\n            '_resize',\n            '_redraw',\n            '_noTransitionsRedraw',\n            '_legendItemHover',\n            '_eventCoordinates'\n        ];\n        function createProxyMember(name) {\n            Chart.fn[name] = function () {\n                var instance = this._instance;\n                if (instance) {\n                    return instance[name].apply(instance, arguments);\n                }\n            };\n        }\n        for (var idx = 0; idx < proxyMembers.length; idx++) {\n            createProxyMember(proxyMembers[idx]);\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!kendo.isFunction(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                seriesClone._groupValue = data[groupIx].value;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        dataviz.ui.plugin(Chart);\n        var SeriesVisibilityState = Class.extend({\n            init: function () {\n                this.groups = {};\n                this.index = {};\n                this.options = {};\n            },\n            applyByGroup: function (series, e) {\n                if (e && e.action || this.options.persistSeriesVisibility) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (this.groups[series[idx]._groupValue] === false) {\n                            series[idx].visible = false;\n                        }\n                    }\n                } else {\n                    this.groups = {};\n                }\n            },\n            applyByIndex: function (series, e) {\n                if (e && e.action || this.options.persistSeriesVisibility) {\n                    if (this.index[series.index] === false) {\n                        series.visible = false;\n                    }\n                } else {\n                    this.index = {};\n                }\n            },\n            save: function (series) {\n                if (!series) {\n                    return;\n                }\n                if (this.options.persistSeriesVisibility) {\n                    this.options.series[series.index].visible = series.visible;\n                } else {\n                    this.saveState(series);\n                }\n            },\n            setOptions: function (options) {\n                this.options = options;\n                this.groups = {};\n                this.index = {};\n            },\n            read: function () {\n                var options = this.options;\n                if (options.persistSeriesVisibility) {\n                    var series = options.series;\n                    for (var idx = 0; idx < series.length; idx++) {\n                        this.saveState(series[idx]);\n                    }\n                }\n            },\n            saveState: function (series) {\n                if (defined(series._groupValue)) {\n                    this.groups[series._groupValue] = series.visible;\n                } else {\n                    this.index[series.index] = series.visible;\n                }\n            }\n        });\n        var geom = kendo.geometry;\n        function normalizeStyle(style) {\n            for (var field in style) {\n                if (style[field] === undefined) {\n                    style[field] = '';\n                }\n            }\n            return style;\n        }\n        var Tooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                this.setOptions(options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = Tooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = Tooltip.template = kendo.template('<div class=\\'k-tooltip #if (!d.autoHide) {# k-tooltip-closable#}# k-chart-tooltip#= d.rtl ? \" k-rtl\" : \"\"#\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + '#if (d.border) {# border: #= d.border.width #px solid; #}#' + 'opacity: #= d.opacity #;\\'>' + '<div class=\"k-tooltip-content\"></div>' + '#if (!d.autoHide) {# <div class=\"k-tooltip-button\"><a href=\"\\\\#\" class=\"k-icon k-i-close\" title=\"Close\"></a></div> #}#' + '</div>', {\n                        useWithBlock: false,\n                        paramName: 'd'\n                    });\n                }\n                tooltip.element = $(tooltip.template(tooltip.options));\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n                tooltip.downEvent = kendo.applyEventMap(MOUSEDOWN, kendo.guid());\n                tooltip._closeTooltipHandler = proxy(tooltip._closeTooltip, tooltip);\n            },\n            destroy: function () {\n                var tooltip = this;\n                this._clearShowTimeout();\n                DOCUMENT_ELEMENT.off(tooltip.downEvent, tooltip._closeTooltipHandler);\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            setOptions: function (options) {\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION },\n                sharedTemplate: '<table>' + '<th colspan=\\'#= colspan #\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '# if(colorMarker) { # ' + '<td><span class=\\'k-chart-shared-tooltip-marker\\' style=\\'background-color:#:point.series.color#\\'></span></td>' + '# } #' + '# if(nameColumn) { # ' + '<td> #if (point.series.name) {# #: point.series.name #: #} else {# &nbsp; #}#</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}',\n                autoHide: true\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            getAnchor: function (size) {\n                var anchor = this.anchor;\n                var point = anchor.point;\n                var align = anchor.align;\n                var x = point.left;\n                var y = point.top;\n                if (align.horizontal === 'center') {\n                    x -= size.width / 2;\n                } else if (align.horizontal === 'right') {\n                    x -= size.width;\n                }\n                if (align.vertical === 'center') {\n                    y -= size.height / 2;\n                } else if (align.vertical === 'bottom') {\n                    y -= size.height;\n                }\n                return {\n                    x: x,\n                    y: y\n                };\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.getAnchor(size), top = anchor.y, left = anchor.x, zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, outerHeight(viewport) / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, outerWidth(viewport) / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            show: function (e) {\n                var tooltip = this;\n                this.anchor = e.anchor;\n                this.element.css(normalizeStyle(e.style));\n                this.element.toggleClass(TOOLTIP_INVERSE, !!e.className);\n                this.element.toggleClass(SHARED_TOOLTIP_CLASS, !!e.shared);\n                var content = e.shared ? this._sharedContent(e) : this._pointContent(e.point);\n                this.element.find('.k-tooltip-content').html(content);\n                if (!tooltip.options.autoHide) {\n                    tooltip.element.off('click' + NS).on('click' + NS, '.k-tooltip-button', tooltip._closeTooltipHandler);\n                    DOCUMENT_ELEMENT.off(tooltip.downEvent, tooltip._closeTooltipHandler).on(tooltip.downEvent, tooltip._closeTooltipHandler);\n                }\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function (forceHide) {\n                var tooltip = this;\n                if (!tooltip.options.autoHide && !forceHide) {\n                    return;\n                }\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                    DOCUMENT_ELEMENT.off(tooltip.downEvent, tooltip._closeTooltipHandler);\n                }\n            },\n            _closeTooltip: function (e) {\n                var target = $(e.target);\n                if (!target.is('.k-chart-tooltip, .k-tooltip-content')) {\n                    e.preventDefault();\n                    this.chartElement.data('kendoChart')._instance.hideElements();\n                    this.hide(true);\n                }\n            },\n            _sharedContent: function (e) {\n                var points = e.points;\n                var nameColumn = dataviz.grep(points, function (point) {\n                    return defined(point.series.name);\n                }).length;\n                var colorMarker = e.series.length > 1;\n                var colspan = 1;\n                if (nameColumn) {\n                    colspan++;\n                }\n                if (colorMarker) {\n                    colspan++;\n                }\n                var template = kendo.template(this.options.sharedTemplate);\n                var content = template({\n                    points: points,\n                    category: e.category,\n                    categoryText: e.categoryText,\n                    content: this._pointContent,\n                    colorMarker: colorMarker,\n                    nameColumn: nameColumn,\n                    colspan: colspan\n                });\n                return content;\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: outerWidth(this.element),\n                    height: outerHeight(this.element)\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var CrosshairTooltip = Tooltip.extend({\n            init: function (chartElement, options) {\n                Tooltip.fn.init.call(this, chartElement, options);\n                this.element.addClass('k-chart-crosshair-tooltip');\n            },\n            show: function (e) {\n                var element = this.element;\n                if (element) {\n                    this.anchor = e.anchor;\n                    this.element.css(e.style);\n                    this.element.html(this.content(e));\n                    this.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (e) {\n                var content = e.value, options = e.crosshair.options.tooltip;\n                if (options.template) {\n                    content = template(options.template)({ value: content });\n                }\n                return content;\n            },\n            hide: function () {\n                this.element.hide();\n            }\n        });\n        var ChartPane = Class.extend({\n            init: function (chart, pane) {\n                this._chart = chart;\n                this._pane = pane;\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this.name = pane.options.name;\n            },\n            series: function () {\n                var chart = this._chart;\n                var seriesByPane = chart._plotArea.groupSeriesByPane();\n                var series = seriesByPane[this.name || 'default'];\n                var result = [];\n                if (series) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        result.push(new ChartSeries(chart, series[idx]));\n                    }\n                }\n                return result;\n            }\n        });\n        var ChartSeries = Class.extend({\n            init: function (chart, options) {\n                this._chart = chart;\n                this._options = options;\n            },\n            points: function (filter) {\n                var points = this._points;\n                if (!points) {\n                    var series = this._seriesOptions();\n                    var plotArea = this._chart._plotArea;\n                    this._points = points = plotArea.pointsBySeriesIndex(series.index);\n                }\n                if (kendo.isFunction(filter)) {\n                    points = this._filterPoints(points, filter);\n                }\n                return points;\n            },\n            data: function (data) {\n                var series = this._seriesOptions();\n                if (data) {\n                    var chart = this._chart;\n                    var plotArea = chart._plotArea;\n                    series.data = data;\n                    if (series.categoryField) {\n                        var axis = plotArea.seriesCategoryAxis(series);\n                        var options = [].concat(chart.options.categoryAxis);\n                        chart._instance.bindCategoryAxisFromSeries(options[axis.axisIndex], axis.axisIndex);\n                    }\n                    chart._noTransitionsRedraw();\n                    this._clearFields();\n                }\n                return series.data;\n            },\n            findPoint: function (filter) {\n                var points = this.points();\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (filter(points[idx])) {\n                        return points[idx];\n                    }\n                }\n            },\n            toggleHighlight: function (show, elements) {\n                if (!elements) {\n                    elements = this.points();\n                } else if (kendo.isFunction(elements)) {\n                    elements = this.points(elements);\n                } else {\n                    elements = isArray(elements) ? elements : [elements];\n                }\n                this._chart._instance.togglePointsHighlight(show, elements);\n            },\n            toggleVisibility: function (visible, filter) {\n                var chart = this._chart;\n                var seriesOptions = this._seriesOptions();\n                var hasFilter = kendo.isFunction(filter);\n                if (!hasFilter) {\n                    seriesOptions.visible = visible;\n                    chart._seriesVisibility.save(seriesOptions);\n                } else {\n                    if (inArray(seriesOptions.type, [\n                            PIE,\n                            DONUT,\n                            FUNNEL\n                        ])) {\n                        var data = this._filterData(filter);\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data[idx].visible = visible;\n                        }\n                    } else {\n                        seriesOptions.visible = function (data) {\n                            return filter(data.dataItem) ? visible : true;\n                        };\n                    }\n                }\n                chart._noTransitionsRedraw();\n                this._clearFields();\n            },\n            _filterData: function (filter) {\n                var data = this._seriesOptions().data;\n                var length = data.length;\n                var result = [];\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(data[idx])) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            _filterPoints: function (points, filter) {\n                var result = [];\n                var length = points.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(points[idx])) {\n                        result.push(points[idx]);\n                    }\n                }\n                return result;\n            },\n            _seriesOptions: function () {\n                var series = this._series;\n                if (!series) {\n                    series = this._series = this._chart._seriesOptions(this._options);\n                }\n                return series;\n            },\n            _clearFields: function () {\n                delete this._points;\n                delete this._series;\n            }\n        });\n        function triggerPaneRender(panes) {\n            for (var idx = 0; idx < panes.length; idx++) {\n                panes[idx].notifyRender();\n            }\n        }\n        dataviz.Tooltip = Tooltip;\n        dataviz.CrosshairTooltip = CrosshairTooltip;\n        dataviz.ChartInstanceObserver = ChartInstanceObserver;\n        dataviz.ChartPane = ChartPane;\n        dataviz.ChartSeries = ChartSeries;\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'dataviz/chart/kendo-chart',\n        'dataviz/chart/chart'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [{\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }]\n    };\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}