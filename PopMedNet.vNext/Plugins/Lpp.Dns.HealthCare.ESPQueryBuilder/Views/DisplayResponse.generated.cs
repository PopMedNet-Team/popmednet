#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lpp.Dns.HealthCare.ESPQueryBuilder.Views
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Lpp;
    using Lpp.Dns.HealthCare.Controllers;
    using Lpp.Dns.HealthCare.ESPQueryBuilder;
    using Lpp.Dns.HealthCare.ESPQueryBuilder.Models;
    using Lpp.Dns.HealthCare.ESPQueryBuilder.Views;
    using Lpp.Mvc;
    using Lpp.Mvc.Application;
    using Lpp.Mvc.Controls;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/DisplayResponse.cshtml")]
    public partial class DisplayResponse : System.Web.Mvc.WebViewPage<Lpp.Dns.HealthCare.ESPQueryBuilder.Models.ESPResponseModel>
    {
        public DisplayResponse()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n<div");

WriteLiteral(" id=\"ResponseContainer\"");

WriteLiteral(">\r\n");

            
            #line 5 "..\..\Views\DisplayResponse.cshtml"
 if (Model.Projected)
{
            
            #line default
            #line hidden
WriteLiteral("\r\n    <div");

WriteLiteral(" class=\"left\"");

WriteLiteral(@">
        <p>
            Projection data are available for requests with stratifications for any of the following options:
            No stratifications selected, 10-year age group, sex, and/or race-ethnicity.
            These strata correspond to the US Census data used for the calculations.
            For additional information and calculations used, please see <a");

WriteLiteral(" href=\"https://popmednet.atlassian.net/wiki/display/DOC/ESP+Query+Composer+Projec" +
"tions\"");

WriteLiteral(">https://popmednet.atlassian.net/wiki/display/DOC/ESP+Query+Composer+Projections<" +
"/a>\r\n        </p>\r\n    </div>");

WriteLiteral("\r\n");

            
            #line 15 "..\..\Views\DisplayResponse.cshtml"
   if (Model.StratificationIncludesLocations) {
            
            #line default
            #line hidden
WriteLiteral(" ");

WriteLiteral("\r\n    <div");

WriteLiteral(" data-bind=\"kendoTabStrip:{ select: onProjectionTypeSelect }\"");

WriteLiteral(" id=\"projectionViews\"");

WriteLiteral(">\r\n        <ul");

WriteLiteral(" id=\"projectionTypes\"");

WriteLiteral(">\r\n            <li");

WriteLiteral(" class=\"k-state-active\"");

WriteLiteral(" id=\"RequestedLocations\"");

WriteLiteral(">Projected to Requested Locations</li>\r\n            <li");

WriteLiteral(" id=\"OtherLocations\"");

WriteLiteral(">Other Locations</li>\r\n        </ul>\r\n\r\n        <div");

WriteLiteral(" id=\"PopulationProjection\"");

WriteLiteral(" style=\"min-height:350px;\"");

WriteLiteral(" data-bind=\"with:ProjectedOnLocationsVM\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" id=\"display_populationprojection\"");

WriteLiteral(" class=\"metricview\"");

WriteLiteral(" data-bind=\"foreach: { data: Tables, as: \'table\' }\"");

WriteLiteral(">\r\n                <table");

WriteLiteral(" class=\"table table-striped\"");

WriteLiteral(">\r\n                    <thead>\r\n                        <tr");

WriteLiteral(" data-bind=\"foreach: $parent.Headers\"");

WriteLiteral(">\r\n                            <th");

WriteLiteral(" data-bind=\"html: $data.text, attr: { title: $data.tooltip }, style: { textAlign:" +
" $data.align, verticalAlign: \'bottom\' }\"");

WriteLiteral("></th>\r\n                        </tr>\r\n                    </thead>\r\n            " +
"        <tbody");

WriteLiteral(" data-bind=\"foreach: { data: table, as: \'rows\' }\"");

WriteLiteral(">\r\n                        <tr");

WriteLiteral(" data-bind=\"foreach: { data: rows, as: \'col\' }\"");

WriteLiteral(">\r\n                            <td");

WriteLiteral(" data-bind=\"text: col, style: { textAlign: ESPQueryBuilder.IsNumber(col) == true " +
"? \'right\' : \'left\' }\"");

WriteLiteral("></td>\r\n                        </tr>\r\n                    </tbody>\r\n            " +
"    </table>\r\n            </div>\r\n        </div>\r\n\r\n");

WriteLiteral("\r\n");

            
            #line 40 "..\..\Views\DisplayResponse.cshtml"
   }
            
            #line default
            #line hidden
WriteLiteral("\r\n        <div");

WriteLiteral(" id=\"GeographicProjection\"");

WriteLiteral(" style=\"min-height:350px;\"");

WriteLiteral(" data-bind=\"with:OtherLocationsVM\"");

WriteLiteral(">\r\n\r\n            <div");

WriteLiteral(" class=\"right\"");

WriteLiteral(" style=\"margin-top:8px;\"");

WriteLiteral(">\r\n                State:&nbsp;\r\n                <select");

WriteLiteral(" id=\"cboState\"");

WriteLiteral(" data-bind=\"value: State\"");

WriteLiteral(">\r\n                    <option");

WriteLiteral(" value=\"\"");

WriteLiteral(" selected></option>\r\n                    <option");

WriteLiteral(" value=\"MA\"");

WriteLiteral(">Mass</option>\r\n                </select>\r\n                &nbsp;Location:&nbsp;\r" +
"\n                <select");

WriteLiteral(" id=\"cboLocation\"");

WriteLiteral(" style=\"width: 150px;\"");

WriteLiteral(" data-bind=\"value: Location, event: {change: LocationChanged.bind($root.OtherLoca" +
"tionsVM, $data)}\"");

WriteLiteral(">\r\n                    <option");

WriteLiteral(" value=\"\"");

WriteLiteral(" selected></option>\r\n                    <optgroup");

WriteLiteral(" label=\"Regions\"");

WriteLiteral(" data-bind=\"foreach: Regions\"");

WriteLiteral(">\r\n                        <option");

WriteLiteral(" data-bind=\"text: $data, attr: { value: $data }\"");

WriteLiteral("></option>\r\n                    </optgroup>\r\n                    <optgroup");

WriteLiteral(" label=\"Towns\"");

WriteLiteral(" data-bind=\"foreach: Towns\"");

WriteLiteral(">\r\n                        <option");

WriteLiteral(" data-bind=\"text: $data, attr: { value: $data }\"");

WriteLiteral("></option>\r\n                    </optgroup>\r\n                </select>\r\n         " +
"   </div>\r\n            <div");

WriteLiteral(" id=\"esp_displayresponse\"");

WriteLiteral(" class=\"metricview\"");

WriteLiteral(" data-bind=\"foreach: { data: Tables, as: \'table\' }\"");

WriteLiteral(">\r\n                <table");

WriteLiteral(" class=\"table table-striped\"");

WriteLiteral(">\r\n                    <thead>\r\n                        <tr");

WriteLiteral(" data-bind=\"foreach: $parent.Headers\"");

WriteLiteral(">\r\n                            <th");

WriteLiteral(" data-bind=\"html: $data.text, attr: { title: $data.tooltip }, style: { textAlign:" +
" $data.align, verticalAlign: \'bottom\' }\"");

WriteLiteral("></th>\r\n                        </tr>\r\n                    </thead>\r\n            " +
"        <tbody");

WriteLiteral(" data-bind=\"foreach: { data: table, as: \'rows\' }\"");

WriteLiteral(">\r\n                        <tr");

WriteLiteral(" data-bind=\"foreach: { data: rows, as: \'col\' }\"");

WriteLiteral(">\r\n                            <td");

WriteLiteral(" data-bind=\"text: col, style: { textAlign: ESPQueryBuilder.IsNumber(col) == true " +
"? \'right\' : \'left\' }\"");

WriteLiteral("></td>\r\n                        </tr>\r\n                    </tbody>\r\n            " +
"    </table>\r\n            </div>\r\n\r\n        </div>");

WriteLiteral("\r\n");

            
            #line 76 "..\..\Views\DisplayResponse.cshtml"
    if(Model.StratificationIncludesLocations){       

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n");

            
            #line 78 "..\..\Views\DisplayResponse.cshtml"
    }
}
else
{

            
            #line default
            #line hidden
WriteLiteral("    <!-- ko with: SimpleResultVM -->\r\n");

WriteLiteral("    <div");

WriteLiteral(" id=\"esp_displayresponse\"");

WriteLiteral(" class=\"metricview\"");

WriteLiteral(" data-bind=\"foreach: { data: Tables, as: \'table\' }\"");

WriteLiteral(">\r\n        <table");

WriteLiteral(" class=\"table table-striped\"");

WriteLiteral(">\r\n            <thead>\r\n                <tr");

WriteLiteral(" data-bind=\"foreach: $parent.Headers\"");

WriteLiteral(">\r\n                    <th");

WriteLiteral(" data-bind=\"html: $data.text, attr: { title: $data.tooltip }, style: { textAlign:" +
" $data.align, verticalAlign: \'bottom\' }\"");

WriteLiteral("></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody");

WriteLiteral(" data-bind=\"foreach: { data: table, as: \'rows\' }\"");

WriteLiteral(">\r\n                <tr");

WriteLiteral(" data-bind=\"foreach: { data: rows, as: \'col\' }\"");

WriteLiteral(">\r\n                    <td");

WriteLiteral(" data-bind=\"text: col, style: { textAlign: ESPQueryBuilder.IsNumber(col) == true " +
"? \'right\' : \'left\' }\"");

WriteLiteral("></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>" +
"\r\n");

WriteLiteral("    <!-- /ko -->\r\n");

            
            #line 98 "..\..\Views\DisplayResponse.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("\r\n</div>\r\n");

WriteLiteral("\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteAttribute("src", Tuple.Create(" src=\"", 5192), Tuple.Create("\"", 5250)
            
            #line 102 "..\..\Views\DisplayResponse.cshtml"
, Tuple.Create(Tuple.Create("", 5198), Tuple.Create<System.Object, System.Int32>(this.Resource("espquerybuilder/DisplayResponse.js")
            
            #line default
            #line hidden
, 5198), false)
);

WriteLiteral("></script>\r\n<script>\r\n    $(function () {\r\n        var model = ");

            
            #line 105 "..\..\Views\DisplayResponse.cshtml"
               Write(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)));

            
            #line default
            #line hidden
WriteLiteral(";\r\n        ESPQueryBuilder.init(model, $(\'#ResponseContainer\'));\r\n    });\r\n</scri" +
"pt>");

        }
    }
}
#pragma warning restore 1591
