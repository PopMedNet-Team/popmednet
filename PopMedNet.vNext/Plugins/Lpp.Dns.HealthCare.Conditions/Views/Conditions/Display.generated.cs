#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lpp.Dns.HealthCare.Conditions.Views.Conditions
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Lpp;
    using Lpp.Dns.HealthCare.Conditions;
    using Lpp.Dns.HealthCare.Conditions.Models;
    using Lpp.Dns.HealthCare.Controllers;
    using Lpp.Mvc;
    using Lpp.Mvc.Application;
    using Lpp.Mvc.Controls;
    using Lpp.Utilities.Legacy;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Conditions/Display.cshtml")]
    public partial class Display : System.Web.Mvc.WebViewPage<Lpp.Dns.HealthCare.Conditions.Models.ConditionsViewModel>
    {
        public Display()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\Conditions\Display.cshtml"
   this.Stylesheet( "ESPQueryBuilder.css" ); 
            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<div");

WriteLiteral(" class=\"MedicalRequest Display ui-form\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"ui-form\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"ReportType\"");

WriteLiteral(">\r\n     \r\n        <div");

WriteLiteral(" class=\"ui-groupbox\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"ui-groupbox-header\"");

WriteLiteral("><span>Disease Selected</span></div>\r\n            <div");

WriteLiteral(" class=\"ui-form\"");

WriteLiteral("><div><label");

WriteLiteral(" class=\"Selections\"");

WriteLiteral(">Disease</label></div></div><br />\r\n");

WriteLiteral("            ");

            
            #line 11 "..\..\Views\Conditions\Display.cshtml"
       Write(Model.Base.Disease);

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <br />\r\n\r\n    <div");

WriteLiteral(" class=\"Parameters\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"LeftParamBlock\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"ui-groupbox\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"ui-groupbox-header\"");

WriteLiteral("><span>Observation Period Range<img");

WriteLiteral(" src=\"/Content/img/icons/help16.gif\"");

WriteLiteral(" class=\"helptip\"");

WriteLiteral(" title=\"Dates may differ by network and are based on encounter dates.\"");

WriteLiteral(" /></span></div>\r\n                <table>\r\n                    <tr>\r\n            " +
"            <td><div");

WriteLiteral(" class=\"ui-form\"");

WriteLiteral("><div><label");

WriteLiteral(" class=\"Selections\"");

WriteLiteral(">Start Period</label></div></div></td>\r\n                        <td><div");

WriteLiteral(" class=\"ui-form\"");

WriteLiteral("><div><label");

WriteLiteral(" class=\"Selections\"");

WriteLiteral(">End Period</label></div></div></td>\r\n                    </tr>\r\n                " +
"    <tr>\r\n                        <td><div");

WriteLiteral(" class=\"DisplayField\"");

WriteLiteral(">");

            
            #line 28 "..\..\Views\Conditions\Display.cshtml"
                                                  Write(Model.Base.StartPeriodDate == null ? "(None)" : Model.Base.StartPeriodDate.Value.ToString("MM/dd/yyyy"));

            
            #line default
            #line hidden
WriteLiteral("</div></td>\r\n                        <td><div");

WriteLiteral(" class=\"DisplayField\"");

WriteLiteral(">");

            
            #line 29 "..\..\Views\Conditions\Display.cshtml"
                                                  Write(Model.Base.EndPeriodDate == null ? "(None)" : Model.Base.EndPeriodDate.Value.ToString("MM/dd/yyyy"));

            
            #line default
            #line hidden
WriteLiteral("</div></td>\r\n                    </tr>\r\n                </table>\r\n            </d" +
"iv><br />\r\n\r\n            <div>\r\n                <div");

WriteLiteral(" class=\"AgeBlock\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"ui-groupbox\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"ui-groupbox-header\"");

WriteLiteral("><span>Age Range</span></div>\r\n                            <table>\r\n             " +
"                   <tr>\r\n                                    <td><div");

WriteLiteral(" class=\"ui-form\"");

WriteLiteral("><div><label");

WriteLiteral(" class=\"Selections\"");

WriteLiteral(">Min</label></div></div></td>\r\n                                    <td><div");

WriteLiteral(" class=\"ui-form\"");

WriteLiteral("><div><label");

WriteLiteral(" class=\"Selections\"");

WriteLiteral(">Max</label></div></div></td>\r\n                                </tr>\r\n           " +
"                     <tr>\r\n                                    <td><div");

WriteLiteral(" class=\"DisplayField\"");

WriteLiteral(">");

            
            #line 44 "..\..\Views\Conditions\Display.cshtml"
                                                             Write(Model.Base.MinAge);

            
            #line default
            #line hidden
WriteLiteral("</div></td>\r\n                                    <td><div");

WriteLiteral(" class=\"DisplayField\"");

WriteLiteral(">");

            
            #line 45 "..\..\Views\Conditions\Display.cshtml"
                                                             Write(Model.Base.MaxAge);

            
            #line default
            #line hidden
WriteLiteral("</div></td>\r\n                                </tr>\r\n                            <" +
"/table>\r\n                    </div>\r\n                </div>\r\n                <di" +
"v");

WriteLiteral(" class=\"SexBlock\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"ui-groupbox\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"ui-groupbox-header\"");

WriteLiteral("><span>Gender</span></div>\r\n                        <table>\r\n                    " +
"        <tr>\r\n                                <td><div");

WriteLiteral(" class=\"ui-form\"");

WriteLiteral("><div><label");

WriteLiteral(" class=\"Selections\"");

WriteLiteral(">Sex</label></div></div></td>\r\n                            </tr>\r\n               " +
"             <tr>\r\n                                <td>\r\n                       " +
"             <div");

WriteLiteral(" class=\"DisplayField\"");

WriteLiteral(">\r\n");

WriteLiteral("                                        ");

            
            #line 60 "..\..\Views\Conditions\Display.cshtml"
                                   Write(Model.Base.SexSelections.Where(v => v.StratificationCategoryId == Model.Base.Sex).Select(s => s.CategoryText).FirstOrDefault());

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    </div>\r\n                                </t" +
"d> \r\n                            </tr>\r\n                        </table>\r\n      " +
"              </div>\r\n                </div>\r\n                <br");

WriteLiteral(" class=\"clear\"");

WriteLiteral(" />\r\n            </div>\r\n        </div>\r\n\r\n        <div");

WriteLiteral(" class=\"RightParamBlock\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"ui-groupbox\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"ui-groupbox-header\"");

WriteLiteral("><span>Races Selected</span></div>\r\n                <div");

WriteLiteral(" class=\"Selections Display\"");

WriteLiteral("><ul>\r\n");

WriteLiteral("                    ");

            
            #line 75 "..\..\Views\Conditions\Display.cshtml"
               Write(Html.Raw( string.Join( "", 
                        from rc in Model.Base.RaceSelections
                        join id in (Model.Base.Race??"").Split(',') on rc.StratificationCategoryId.ToString() equals id
                        select "<li>" + rc.CategoryText + "</li>")));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </ul></div>\r\n            </div>\r\n        </div>\r\n");

WriteLiteral("\r\n\r\n        <br");

WriteLiteral(" class=\"clear\"");

WriteLiteral(" />\r\n    </div>\r\n\r\n    <div");

WriteLiteral(" class=\"Report\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"ui-groupbox\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"ui-groupbox-header\"");

WriteLiteral("><span>Reports Selected</span></div>\r\n            <div");

WriteLiteral(" class=\"Selections Display\"");

WriteLiteral("><ul>\r\n");

WriteLiteral("                ");

            
            #line 101 "..\..\Views\Conditions\Display.cshtml"
           Write(Html.Raw( string.Join( "", 
                    from rp in Model.Base.ReportSelections
                    join id in (Model.Base.Report??"").Split(',') on rp.Value.ToString() equals id
                    let stratId = rp.Name.StartsWith("Age") ? Model.Base.AgeStratification :
                                    rp.Name.StartsWith("Period") ? Model.Base.PeriodStratification :
                                        rp.Name.StartsWith("ICD9") ? Model.Base.ICD9Stratification :
                                    null
                    let strat = rp.SelectionList.EmptyIfNull()
                                    .Where( s => s.StratificationCategoryId == stratId )
                                    .Select( s => " (" + s.CategoryText + ")" )
                                    .FirstOrDefault()
                    select "<li>" + rp.Display + strat + "</li>") ));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </ul></div>\r\n        </div>\r\n    </div>\r\n\r\n    <br");

WriteLiteral(" class=\"clear\"");

WriteLiteral(" />\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

        }
    }
}
#pragma warning restore 1591
