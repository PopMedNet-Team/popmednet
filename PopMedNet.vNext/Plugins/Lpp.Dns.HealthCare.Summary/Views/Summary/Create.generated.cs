#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lpp.Dns.HealthCare.Summary.Views.Summary
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Lpp;
    
    #line 1 "..\..\Views\Summary\Create.cshtml"
    using Lpp.Dns.DTO.Enums;
    
    #line default
    #line hidden
    using Lpp.Dns.HealthCare.Controllers;
    using Lpp.Dns.HealthCare.Summary;
    using Lpp.Dns.HealthCare.Summary.Models;
    using Lpp.Mvc;
    using Lpp.Mvc.Application;
    using Lpp.Mvc.Controls;
    using Lpp.Utilities.Legacy;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Summary/Create.cshtml")]
    public partial class Create : System.Web.Mvc.WebViewPage<Lpp.Dns.HealthCare.Summary.Models.SummaryRequestModel>
    {
        public Create()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\Summary\Create.cshtml"
   
    this.Stylesheet("Medical.css"); 
    
    var viewModel = new {
        Model.RequestType.Name,
        Model.RequestType.IsMetadataRequest,
        Model.RequestType.ShowCategory,
        Model.RequestType.LookupList,
        Model.RequestType.ShowMetricType,
        Model.RequestType.ShowOutputCriteria,
        Model.RequestType.ShowSetting,
        Model.RequestType.ShowCoverage,
        Model.RequestType.ShowAge,
        Model.RequestType.ShowSex,
        Model.YearsDataAvailabilityPeriods,
        Model.QuartersDataAvailabilityPeriods,
        Model.AgeStratification,
        Model.SexStratification,
        Model.Setting,
        Model.MetricType,
        Model.MetricTypes,
        Model.OutputCriteria,
        Model.Coverage,
        Model.ByYearsOrQuarters,
        Model.StartPeriod,
        Model.EndPeriod,
        Model.StartQuarter,
        Model.EndQuarter,
        Model.Codes
    };   

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<script");

WriteAttribute("src", Tuple.Create(" src=\'", 1050), Tuple.Create("\'", 1083)
            
            #line 35 "..\..\Views\Summary\Create.cshtml"
, Tuple.Create(Tuple.Create("", 1056), Tuple.Create<System.Object, System.Int32>(this.Resource("Create.js")
            
            #line default
            #line hidden
, 1056), false)
);

WriteLiteral("></script>\r\n<script>\r\n    Summary.Create.RawModel = ");

            
            #line 37 "..\..\Views\Summary\Create.cshtml"
                         Write(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(viewModel)));

            
            #line default
            #line hidden
WriteLiteral(";\r\n</script>\r\n\r\n<div");

WriteLiteral(" class=\"MedicalRequest ui-form\"");

WriteLiteral(" id=\"fsCriteria\"");

WriteLiteral(">\r\n    <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" id=\"hiddenDataControl\"");

WriteLiteral("/>\r\n");

WriteLiteral("    ");

            
            #line 42 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.AgeStratification, new { id = "AgeStratification" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 43 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.SexStratification, new { id = "SexStratification" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 44 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.MetricType, new { id = "MetricType" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 45 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.OutputCriteria, new { id = "OutputCriteria" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 46 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.Setting, new { id = "Setting" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 47 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.Coverage, new { id = "Coverage" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 48 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.ByYearsOrQuarters, new { id = "ByYearsOrQuarters" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 49 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.StartPeriod, new { id = "StartPeriod" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 50 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.EndPeriod, new { id = "EndPeriod" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 51 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.StartQuarter, new { id = "StartQuarter" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 52 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.EndQuarter, new { id = "EndQuarter" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 53 "..\..\Views\Summary\Create.cshtml"
Write(Html.HiddenFor(m => m.Codes, new { id = "Codes" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" data-bind=\"visible: NotMetadataRequest\"");

WriteLiteral(">\r\n        <fieldset");

WriteLiteral(" data-bind=\"visible: ShowCategory\"");

WriteLiteral(">\r\n            <legend");

WriteLiteral(" data-bind=\"text: LookupList\"");

WriteLiteral("></legend>\r\n            <div");

WriteLiteral(" class=\"ui-groupbox\"");

WriteLiteral(">\r\n                <label>Code Set</label>\r\n                <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                    <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default\"");

WriteLiteral(" id=\"btnSelectCode\"");

WriteLiteral(" data-bind=\"click: SelectCode\"");

WriteLiteral(">Select...</button>\r\n                    <label>Selected Codes:&nbsp;</label>\r\n  " +
"                  <span");

WriteLiteral(" style=\"word-break:break-all;word-wrap:break-word;\"");

WriteLiteral(" data-bind=\"html: Codes\"");

WriteLiteral("></span>\r\n                </div> \r\n            </div>\r\n        </fieldset>\r\n     " +
"   <div");

WriteLiteral(" class=\"Parameters\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"LeftParamBlock\"");

WriteLiteral(">\r\n                <fieldset");

WriteLiteral(" data-bind=\"visible: ShowMetricType\"");

WriteLiteral(">\r\n                    <legend>Metric Type</legend>\r\n                    <select");

WriteLiteral(" data-bind=\"kendoDropDownList: { value: MetricType, data: Metrics, dataTextField:" +
" \'text\', dataValueField: \'value\'}\"");

WriteLiteral(" style=\"width: 100%;\"");

WriteLiteral("></select>\r\n                </fieldset>\r\n                <fieldset");

WriteLiteral(" data-bind=\"visible: ShowOutputCriteria\"");

WriteLiteral(">\r\n                    <legend>Output Criteria<img");

WriteLiteral(" src=\"/Content/img/icons/help16.gif\"");

WriteLiteral(" class=\"helptip\"");

WriteLiteral(" title=\"Output the top XX by age group, sex. For example, selecting 20 will outpu" +
"t the 20 most frequent occurrences identified in the specific table.\"");

WriteLiteral(" /></legend>\r\n                    <select");

WriteLiteral(" data-bind=\"kendoDropDownList: { value: OutputCriteria, data: Dns.Enums.OutputCri" +
"teriaTranslation, dataTextField: \'text\', dataValueField: \'value\'}\"");

WriteLiteral(" style=\"width: 100%;\"");

WriteLiteral("></select>\r\n                </fieldset>\r\n                <fieldset");

WriteLiteral(" data-bind=\"visible: ShowSetting\"");

WriteLiteral(">\r\n                    <legend>Setting</legend>\r\n                    <select");

WriteLiteral(" data-bind=\"kendoDropDownList: { value: Setting, data: Dns.Enums.SettingsTranslat" +
"ion, dataTextField: \'text\', dataValueField: \'value\'}\"");

WriteLiteral(" style=\"width: 100%;\"");

WriteLiteral("></select>\r\n                </fieldset>\r\n                <fieldset");

WriteLiteral(" data-bind=\"visible: ShowCoverage\"");

WriteLiteral(">\r\n                    <legend>Coverage</legend>\r\n                    <select");

WriteLiteral(" data-bind=\"kendoDropDownList: { value: Coverage, data: Dns.Enums.CoveragesTransl" +
"ation, dataTextField: \'text\', dataValueField: \'value\'}\"");

WriteLiteral(" style=\"width: 100%;\"");

WriteLiteral("></select>\r\n                </fieldset>\r\n                <fieldset");

WriteLiteral(" data-bind=\"visible: ShowAge\"");

WriteLiteral(">\r\n                    <legend>Age Stratification<img");

WriteLiteral(" src=\"/Content/img/icons/help16.gif\"");

WriteLiteral(" class=\"helptip\"");

WriteLiteral(" title=\"Age is defined as the age as of the date of first utilization during the " +
"observation period year.\"");

WriteLiteral(" /></legend>\r\n                    <select");

WriteLiteral(" data-bind=\"kendoDropDownList: { value: AgeStratification, data: AgeStratificatio" +
"nOptions, dataTextField: \'text\', dataValueField: \'value\'}\"");

WriteLiteral(" style=\"width: 100%;\"");

WriteLiteral("></select>\r\n                </fieldset>\r\n                <fieldset");

WriteLiteral(" data-bind=\"visible: ShowSex\"");

WriteLiteral(">\r\n                    <legend>Sex Stratification</legend>\r\n                    <" +
"select");

WriteLiteral(" data-bind=\"kendoDropDownList: { value: SexStratification, data: SexStratificatio" +
"nOptions, dataTextField: \'text\', dataValueField: \'value\'}\"");

WriteLiteral(" style=\"width: 100%;\"");

WriteLiteral("></select>\r\n            </fieldset>\r\n            </div>\r\n            <fieldset");

WriteLiteral(" class=\"RightParamBlock\"");

WriteLiteral(" data-bind=\"visible: ShowObservationPeriod\"");

WriteLiteral(">\r\n                <legend>Observation Period<img");

WriteLiteral(" src=\"/Content/img/icons/help16.gif\"");

WriteLiteral(" class=\"helptip\"");

WriteLiteral(" title=\"Select the start and end year for the observation period. Results are str" +
"atified by year or quarter.\"");

WriteLiteral(" /></legend>\r\n                <div");

WriteLiteral(" data-bind=\"visible: ShowQuartersYearsRadio\"");

WriteLiteral(">\r\n                    <label");

WriteLiteral(" for=\"rdByYears\"");

WriteLiteral(">By Years</label>\r\n                    <input");

WriteLiteral(" id=\"rdByYears\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" value=\"ByYears\"");

WriteLiteral(" data-bind=\"checked: ByYearsOrQuarters\"");

WriteLiteral(" />\r\n                    <label");

WriteLiteral(" for=\"rdByQuarters\"");

WriteLiteral(">By Quarters</label>\r\n                    <input");

WriteLiteral(" id=\"rdByQuarters\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" value=\"ByQuarters\"");

WriteLiteral(" data-bind=\"checked: ByYearsOrQuarters\"");

WriteLiteral(" />\r\n                </div>\r\n                <div");

WriteLiteral(" data-bind=\"visible: NoQuarterlyData\"");

WriteLiteral(">\r\n                    Quarterly data not available.\r\n                </div>\r\n   " +
"             <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"col-sm-4 form-group\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"txStartPeriod\"");

WriteLiteral(">Start Period<em>*</em></label>\r\n                        <input");

WriteLiteral(" type=\"number\"");

WriteLiteral("\r\n                               id=\"txStartPeriod\"");

WriteLiteral("\r\n                               name=\"txStartPeriod\"");

WriteLiteral("\r\n                               maxlength=\"4\"");

WriteLiteral("\r\n                               validationmessage=\"Field is required\"");

WriteLiteral("\r\n                               data-bind=\"kendoNumericTextBox: {value: StartPer" +
"iod, min: 1800, max: 9999, decimals: 0, format: \'0000\'}, attr: { required: NotMe" +
"tadataRequest }\"");

WriteLiteral("  />\r\n                        <span");

WriteLiteral(" class=\"k-invalid-msg\"");

WriteLiteral(" data-for=\"txStartPeriod\"");

WriteLiteral("></span>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"col-sm-4 form-group\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"txEndPeriod\"");

WriteLiteral(">End Period<em>*</em></label>\r\n                        <input");

WriteLiteral(" type=\"number\"");

WriteLiteral("\r\n                               id=\"txEndPeriod\"");

WriteLiteral("\r\n                               name=\"txEndPeriod\"");

WriteLiteral("\r\n                               maxlength=\"4\"");

WriteLiteral("\r\n                               validationmessage=\"Field is required\"");

WriteLiteral("\r\n                               data-bind=\"kendoNumericTextBox: {value: EndPerio" +
"d, min: 1800, max: 9999, decimals: 0, format: \'0000\'}, attr: { required: NotMeta" +
"dataRequest }\"");

WriteLiteral(" />\r\n                        <span");

WriteLiteral(" class=\"k-invalid-msg\"");

WriteLiteral(" data-for=\"txEndPeriod\"");

WriteLiteral("></span>\r\n                    </div>  \r\n                </div>\r\n                <" +
"div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"col-sm-4 form-group\"");

WriteLiteral(" data-bind=\"visible: ShowQuarters\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"cbStartQuarter\"");

WriteLiteral(">Start Quarter</label>\r\n                        <select");

WriteLiteral(" id=\"cbStartQuarter\"");

WriteLiteral(" data-bind=\"kendoDropDownList: { value: StartQuarter, data: DataAvailableQuarters" +
", dataTextField: \'text\', dataValueField: \'value\'}\"");

WriteLiteral(" style=\"width: 50%\"");

WriteLiteral("></select>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"col-sm-4 form-group\"");

WriteLiteral(" data-bind=\"visible: ShowQuarters\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"cbEndQuarter\"");

WriteLiteral(">End Quarter</label>\r\n                        <select");

WriteLiteral(" id=\"cbEndQuarter\"");

WriteLiteral(" data-bind=\"kendoDropDownList: { value: EndQuarter, data: DataAvailableQuarters, " +
"dataTextField: \'text\', dataValueField: \'value\'}\"");

WriteLiteral(" style=\"width: 50%\"");

WriteLiteral("></select>\r\n                    </div>\r\n                </div>\r\n            </fie" +
"ldset>\r\n        </div>\r\n    </div>\r\n                                     \r\n</div" +
">\r\n\r\n");

        }
    }
}
#pragma warning restore 1591
