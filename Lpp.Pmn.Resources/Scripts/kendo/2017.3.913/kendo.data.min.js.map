{"version":3,"sources":["kendo.data.js"],"names":["f","define","$","undefined","eventHandler","context","type","field","prefix","e","key","event","CHANGE","_notifyChange","trigger","equal","x","y","xtype","ytype","getTime","getFieldByName","obj","name","fieldName","isPlainObject","Query","data","this","normalizeSort","dir","descriptor","STRING","descriptors","isArray","grep","d","normalizeOperator","expression","idx","length","filter","operator","filters","operatorMap","toLowerCase","normalizeFilter","isEmptyObject","logic","compareDescriptor","f1","f2","value","normalizeDescriptor","fieldComparer","a","b","compareFilters","expr1","expr2","filters1","filters2","slice","sort","normalizeAggregate","expressions","normalizeGroup","map","aggregates","groupValueComparer","calculateAggregate","accumulator","item","index","state","aggr","functionName","len","aggregate","functions","kendo","accessor","isNumber","val","isNaN","isDate","toJSON","array","result","Array","serializeRecords","getters","modelInstance","originalFieldNames","fieldNames","record","getter","originalName","setters","setter","convertRecords","_parse","convertGroup","hasSubgroups","items","wrapDataAccess","originalFunction","model","converter","toString","call","ObservableArray","mergeGroups","target","dest","skip","take","group","concat","splice","flattenGroups","itemIndex","at","push","wrapGroupItems","LazyObservableArray","eachGroupItems","func","replaceInRanges","ranges","observable","replaceInRange","replaceWithObservable","view","serverGrouping","viewIndex","removeModel","dataItem","startIndex","endIndex","math","min","uid","indexOfPristineModel","indexOf","idField","id","_defaultId","indexOfModel","comparer","fieldNameFromModel","fields","from","isFunction","convertFilterDescriptorsField","convertDescriptorsField","inferSelect","select","options","firstField","secondField","optgroup","option","parentNode","disabled","label","text","attributes","specified","inferTable","table","fieldIndex","cells","cell","empty","tbody","tBodies","rows","fieldCount","nodeName","innerHTML","dataMethod","_data","DataSource","fn","apply","arguments","_attachBubbleHandlers","inferList","list","elements","collection","tagName","add","find","textChild","className","children","textField","urlField","spriteCssClassField","imageUrlField","_loaded","eq","firstChild","attr","nodeType","nodeValue","prop","trim","replace","hasChildren","ObservableObject","parsers","defaultValues","Model","Comparer","StableComparer","operators","LocalTransport","RemoteTransport","Cache","DataReader","Transport","Node","HierarchicalDataSource","Buffer","BatchBuffer","extend","proxy","ajax","each","noop","window","Observable","Class","FUNCTION","CREATE","READ","UPDATE","DESTROY","SYNC","GET","ERROR","REQUESTSTART","PROGRESS","REQUESTEND","crud","identity","o","stringify","Math","join","pop","shift","unshift","stableSort","support","dateRegExp","init","that","wrapAll","json","parent","source","wrap","object","bind","node","action","howMany","i","unbind","forEach","callback","reduce","reduceRight","every","some","remove","Symbol","iterator","prototype","_parent","member","_handlers","charAt","guid","shouldSerialize","hasOwnProperty","get","_set","paths","path","composite","split","set","isSetPrevented","current","change","isObservableArray","isDataSource","number","parseFloat","date","parseDate","boolean","string","default","Date","defaults","_initializers","dirty","dirtyFields","parse","editable","initiator","accept","isNew","base","proto","functionFields","nullable","defaultValue","selector","compare","localeCompare","create","combine","comparers","asc","valueA","valueB","__position","desc","quote","str","JSON","textOp","impl","ignore","op","exec","getMatchRegexp","pattern","rx","esc","ch","neq","gt","gte","lt","lte","startswith","doesnotstartwith","endswith","n","doesnotendwith","contains","doesnotcontain","matches","substring","doesnotmatch","isempty","isnotempty","isnull","isnotnull","filterExpr","expr","and","or","fieldFunctions","operatorFunctions","match","ignoreCase","==","equals","isequalto","equalto","!=","ne","notequals","isnotequalto","notequalto","notequal","<","islessthan","lessthan","less","<=","le","islessthanorequalto","lessthanequal",">","isgreaterthan","greaterthan","greater",">=","isgreaterthanorequalto","greaterthanequal","ge","notsubstringof","toArray","range","count","order","inPlace","orderBy","orderByDescending","compiled","predicate","Function","allData","groupBy","currentValue","sorted","_sortForGrouping","groupValue","sum","average","max","process","total","query","filterCallback","read","success","update","destroy","parameterMap","url","cache","setup","error","parameters","operation","_store","clear","store","inmemory","schema","dataFunction","groupsFunction","serializeFunction","serializeGetters","modelBase","_dataAccessFunction","groups","serialize","fromName","errors","_map","_prefetch","_pristineData","_ranges","_view","_pristineTotal","_destroyed","_pageSize","pageSize","_page","page","_sort","_filter","_group","_aggregate","_total","_shouldDetachObservableParents","transport","pushCreate","_pushCreate","pushUpdate","_pushUpdate","pushDestroy","_pushDestroy","offlineStorage","_storage","getItem","localStorage","setItem","reader","readers","_detachObservableParents","_observe","_online","serverSorting","serverPaging","serverFiltering","serverAggregates","batch","inPlaceSort","clone","online","sync","Deferred","resolve","promise","offlineData","_isServerGrouped","_push","_readData","_flatData","useRanges","getByUid","_getByUid","dataItems","_storeData","_addRange","_process","_observeView","flatView","insert","_createNewModel","_wrapInEmptyGroup","_insertModelInRange","pushInsert","pushed","autoSync","pristine","_updatePristineForModel","_removeItems","destroyed","found","_eachItem","_removePristineForModel","hasGroups","currentRangeStart","_removeModelFromRanges","created","updated","promises","submit","_sendSubmit","_send","when","then","_accept","_change","cancelChanges","_cancelModel","_markOfflineUpdatesAsDirty","__state__","hasChanges","models","response","serverGroup","_handleCustomErrors","values","_executeOnPristineForModel","deepExtend","_eachPristineItem","_pristineForModel","_submit","status","reject","deferred","_promise","method","converted","params","_params","_queueRequest","isPrevented","_dequeueRequest","args","_readAggregates","itemIds","_aggregateResult","endless","_changeHandler","updatePristine","start","_skip","end","timestamp","xhr","errorThrown","_requestInProgress","_pending","_shouldWrap","arrayType","_updateTotalForAction","parseInt","handler","first","_calculateAggregates","_take","_queryProcess","_mergeState","_currentRangeStart","moreItemsCount","remote","fetch","_query","next","totalPages","prev","round","_emptyAggregates","ceil","inRange","_findRange","lastRange","firstItemUid","enableRequestsInProgress","_skipRequestsInProgress","_timeStamp","pageSkip","size","paging","sorting","filtering","_currentRequestTimeStamp","floor","_rangeExists","prefetch","skipIdx","takeIdx","rangeData","rangeEnd","processed","flatData","_mergeGroups","prevGroup","temp","_prefetchSuccessHandler","force","clearTimeout","_timeout","setTimeout","_multiplePrefetch","_updateRangesLength","rangesLength","mismatchFound","mismatchLength","lengthDifference","abs","dataSource","transportOptions","transports","schemas","logToConsole","hasChildrenObject","childrenField","childrenOptions","_childrenOptions","_initChildren","_updateChildrenField","append","loaded","level","_childrenLoaded","load","one","_matchFilter","_hierarchicalFilter","_markHierarchicalQuery","_updateHierarchicalFilter","_find","_dataSource","viewSize","disablePrefetch","_prefetching","buffer","_reset","_syncWithDataSource","setViewSize","_recalculate","itemPresent","dataOffset","prefetchThreshold","midPageThreshold","nextMidRange","nextPageThreshold","nextFullRange","pullBackThreshold","offset","previousMidRange","previousFullRange","_goToRange","nextRange","syncDataSource","prefetchOffset","expanding","_expanding","_syncPending","_firstItemUid","batchSize","batchBuffer","endreached","prefetching","prefetched","reset","resize","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.data.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.data', [\n        'kendo.core',\n        'kendo.data.odata',\n        'kendo.data.xml'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'data',\n        name: 'Data source',\n        category: 'framework',\n        description: 'Powerful component for using local and remote data.Fully supports CRUD, Sorting, Paging, Filtering, Grouping, and Aggregates.',\n        depends: ['core'],\n        features: [\n            {\n                id: 'data-odata',\n                name: 'OData',\n                description: 'Support for accessing Open Data Protocol (OData) services.',\n                depends: ['data.odata']\n            },\n            {\n                id: 'data-signalr',\n                name: 'SignalR',\n                description: 'Support for binding to SignalR hubs.',\n                depends: ['data.signalr']\n            },\n            {\n                id: 'data-XML',\n                name: 'XML',\n                description: 'Support for binding to XML.',\n                depends: ['data.xml']\n            }\n        ]\n    };\n    (function ($, undefined) {\n        var extend = $.extend, proxy = $.proxy, isPlainObject = $.isPlainObject, isEmptyObject = $.isEmptyObject, isArray = $.isArray, grep = $.grep, ajax = $.ajax, map, each = $.each, noop = $.noop, kendo = window.kendo, isFunction = kendo.isFunction, Observable = kendo.Observable, Class = kendo.Class, STRING = 'string', FUNCTION = 'function', CREATE = 'create', READ = 'read', UPDATE = 'update', DESTROY = 'destroy', CHANGE = 'change', SYNC = 'sync', GET = 'get', ERROR = 'error', REQUESTSTART = 'requestStart', PROGRESS = 'progress', REQUESTEND = 'requestEnd', crud = [\n                CREATE,\n                READ,\n                UPDATE,\n                DESTROY\n            ], identity = function (o) {\n                return o;\n            }, getter = kendo.getter, stringify = kendo.stringify, math = Math, push = [].push, join = [].join, pop = [].pop, splice = [].splice, shift = [].shift, slice = [].slice, unshift = [].unshift, toString = {}.toString, stableSort = kendo.support.stableSort, dateRegExp = /^\\/Date\\((.*?)\\)\\/$/;\n        var ObservableArray = Observable.extend({\n            init: function (array, type) {\n                var that = this;\n                that.type = type || ObservableObject;\n                Observable.fn.init.call(that);\n                that.length = array.length;\n                that.wrapAll(array, that);\n            },\n            at: function (index) {\n                return this[index];\n            },\n            toJSON: function () {\n                var idx, length = this.length, value, json = new Array(length);\n                for (idx = 0; idx < length; idx++) {\n                    value = this[idx];\n                    if (value instanceof ObservableObject) {\n                        value = value.toJSON();\n                    }\n                    json[idx] = value;\n                }\n                return json;\n            },\n            parent: noop,\n            wrapAll: function (source, target) {\n                var that = this, idx, length, parent = function () {\n                        return that;\n                    };\n                target = target || [];\n                for (idx = 0, length = source.length; idx < length; idx++) {\n                    target[idx] = that.wrap(source[idx], parent);\n                }\n                return target;\n            },\n            wrap: function (object, parent) {\n                var that = this, observable;\n                if (object !== null && toString.call(object) === '[object Object]') {\n                    observable = object instanceof that.type || object instanceof Model;\n                    if (!observable) {\n                        object = object instanceof ObservableObject ? object.toJSON() : object;\n                        object = new that.type(object);\n                    }\n                    object.parent = parent;\n                    object.bind(CHANGE, function (e) {\n                        that.trigger(CHANGE, {\n                            field: e.field,\n                            node: e.node,\n                            index: e.index,\n                            items: e.items || [this],\n                            action: e.node ? e.action || 'itemloaded' : 'itemchange'\n                        });\n                    });\n                }\n                return object;\n            },\n            push: function () {\n                var index = this.length, items = this.wrapAll(arguments), result;\n                result = push.apply(this, items);\n                this.trigger(CHANGE, {\n                    action: 'add',\n                    index: index,\n                    items: items\n                });\n                return result;\n            },\n            slice: slice,\n            sort: [].sort,\n            join: join,\n            pop: function () {\n                var length = this.length, result = pop.apply(this);\n                if (length) {\n                    this.trigger(CHANGE, {\n                        action: 'remove',\n                        index: length - 1,\n                        items: [result]\n                    });\n                }\n                return result;\n            },\n            splice: function (index, howMany, item) {\n                var items = this.wrapAll(slice.call(arguments, 2)), result, i, len;\n                result = splice.apply(this, [\n                    index,\n                    howMany\n                ].concat(items));\n                if (result.length) {\n                    this.trigger(CHANGE, {\n                        action: 'remove',\n                        index: index,\n                        items: result\n                    });\n                    for (i = 0, len = result.length; i < len; i++) {\n                        if (result[i] && result[i].children) {\n                            result[i].unbind(CHANGE);\n                        }\n                    }\n                }\n                if (item) {\n                    this.trigger(CHANGE, {\n                        action: 'add',\n                        index: index,\n                        items: items\n                    });\n                }\n                return result;\n            },\n            shift: function () {\n                var length = this.length, result = shift.apply(this);\n                if (length) {\n                    this.trigger(CHANGE, {\n                        action: 'remove',\n                        index: 0,\n                        items: [result]\n                    });\n                }\n                return result;\n            },\n            unshift: function () {\n                var items = this.wrapAll(arguments), result;\n                result = unshift.apply(this, items);\n                this.trigger(CHANGE, {\n                    action: 'add',\n                    index: 0,\n                    items: items\n                });\n                return result;\n            },\n            indexOf: function (item) {\n                var that = this, idx, length;\n                for (idx = 0, length = that.length; idx < length; idx++) {\n                    if (that[idx] === item) {\n                        return idx;\n                    }\n                }\n                return -1;\n            },\n            forEach: function (callback) {\n                var idx = 0, length = this.length;\n                for (; idx < length; idx++) {\n                    callback(this[idx], idx, this);\n                }\n            },\n            map: function (callback) {\n                var idx = 0, result = [], length = this.length;\n                for (; idx < length; idx++) {\n                    result[idx] = callback(this[idx], idx, this);\n                }\n                return result;\n            },\n            reduce: function (callback) {\n                var idx = 0, result, length = this.length;\n                if (arguments.length == 2) {\n                    result = arguments[1];\n                } else if (idx < length) {\n                    result = this[idx++];\n                }\n                for (; idx < length; idx++) {\n                    result = callback(result, this[idx], idx, this);\n                }\n                return result;\n            },\n            reduceRight: function (callback) {\n                var idx = this.length - 1, result;\n                if (arguments.length == 2) {\n                    result = arguments[1];\n                } else if (idx > 0) {\n                    result = this[idx--];\n                }\n                for (; idx >= 0; idx--) {\n                    result = callback(result, this[idx], idx, this);\n                }\n                return result;\n            },\n            filter: function (callback) {\n                var idx = 0, result = [], item, length = this.length;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (callback(item, idx, this)) {\n                        result[result.length] = item;\n                    }\n                }\n                return result;\n            },\n            find: function (callback) {\n                var idx = 0, item, length = this.length;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (callback(item, idx, this)) {\n                        return item;\n                    }\n                }\n            },\n            every: function (callback) {\n                var idx = 0, item, length = this.length;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (!callback(item, idx, this)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            some: function (callback) {\n                var idx = 0, item, length = this.length;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (callback(item, idx, this)) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            remove: function (item) {\n                var idx = this.indexOf(item);\n                if (idx !== -1) {\n                    this.splice(idx, 1);\n                }\n            },\n            empty: function () {\n                this.splice(0, this.length);\n            }\n        });\n        if (typeof Symbol !== 'undefined' && Symbol.iterator && !ObservableArray.prototype[Symbol.iterator]) {\n            ObservableArray.prototype[Symbol.iterator] = [][Symbol.iterator];\n        }\n        var LazyObservableArray = ObservableArray.extend({\n            init: function (data, type) {\n                Observable.fn.init.call(this);\n                this.type = type || ObservableObject;\n                for (var idx = 0; idx < data.length; idx++) {\n                    this[idx] = data[idx];\n                }\n                this.length = idx;\n                this._parent = proxy(function () {\n                    return this;\n                }, this);\n            },\n            at: function (index) {\n                var item = this[index];\n                if (!(item instanceof this.type)) {\n                    item = this[index] = this.wrap(item, this._parent);\n                } else {\n                    item.parent = this._parent;\n                }\n                return item;\n            }\n        });\n        function eventHandler(context, type, field, prefix) {\n            return function (e) {\n                var event = {}, key;\n                for (key in e) {\n                    event[key] = e[key];\n                }\n                if (prefix) {\n                    event.field = field + '.' + e.field;\n                } else {\n                    event.field = field;\n                }\n                if (type == CHANGE && context._notifyChange) {\n                    context._notifyChange(event);\n                }\n                context.trigger(type, event);\n            };\n        }\n        var ObservableObject = Observable.extend({\n            init: function (value) {\n                var that = this, member, field, parent = function () {\n                        return that;\n                    };\n                Observable.fn.init.call(this);\n                this._handlers = {};\n                for (field in value) {\n                    member = value[field];\n                    if (typeof member === 'object' && member && !member.getTime && field.charAt(0) != '_') {\n                        member = that.wrap(member, field, parent);\n                    }\n                    that[field] = member;\n                }\n                that.uid = kendo.guid();\n            },\n            shouldSerialize: function (field) {\n                return this.hasOwnProperty(field) && field !== '_handlers' && field !== '_events' && typeof this[field] !== FUNCTION && field !== 'uid';\n            },\n            forEach: function (f) {\n                for (var i in this) {\n                    if (this.shouldSerialize(i)) {\n                        f(this[i], i);\n                    }\n                }\n            },\n            toJSON: function () {\n                var result = {}, value, field;\n                for (field in this) {\n                    if (this.shouldSerialize(field)) {\n                        value = this[field];\n                        if (value instanceof ObservableObject || value instanceof ObservableArray) {\n                            value = value.toJSON();\n                        }\n                        result[field] = value;\n                    }\n                }\n                return result;\n            },\n            get: function (field) {\n                var that = this, result;\n                that.trigger(GET, { field: field });\n                if (field === 'this') {\n                    result = that;\n                } else {\n                    result = kendo.getter(field, true)(that);\n                }\n                return result;\n            },\n            _set: function (field, value) {\n                var that = this;\n                var composite = field.indexOf('.') >= 0;\n                if (composite) {\n                    var paths = field.split('.'), path = '';\n                    while (paths.length > 1) {\n                        path += paths.shift();\n                        var obj = kendo.getter(path, true)(that);\n                        if (obj instanceof ObservableObject) {\n                            obj.set(paths.join('.'), value);\n                            return composite;\n                        }\n                        path += '.';\n                    }\n                }\n                kendo.setter(field)(that, value);\n                return composite;\n            },\n            set: function (field, value) {\n                var that = this, isSetPrevented = false, composite = field.indexOf('.') >= 0, current = kendo.getter(field, true)(that);\n                if (current !== value) {\n                    if (current instanceof Observable && this._handlers[field]) {\n                        if (this._handlers[field].get) {\n                            current.unbind(GET, this._handlers[field].get);\n                        }\n                        current.unbind(CHANGE, this._handlers[field].change);\n                    }\n                    isSetPrevented = that.trigger('set', {\n                        field: field,\n                        value: value\n                    });\n                    if (!isSetPrevented) {\n                        if (!composite) {\n                            value = that.wrap(value, field, function () {\n                                return that;\n                            });\n                        }\n                        if (!that._set(field, value) || field.indexOf('(') >= 0 || field.indexOf('[') >= 0) {\n                            that.trigger(CHANGE, { field: field });\n                        }\n                    }\n                }\n                return isSetPrevented;\n            },\n            parent: noop,\n            wrap: function (object, field, parent) {\n                var that = this;\n                var get;\n                var change;\n                var type = toString.call(object);\n                if (object != null && (type === '[object Object]' || type === '[object Array]')) {\n                    var isObservableArray = object instanceof ObservableArray;\n                    var isDataSource = object instanceof DataSource;\n                    if (type === '[object Object]' && !isDataSource && !isObservableArray) {\n                        if (!(object instanceof ObservableObject)) {\n                            object = new ObservableObject(object);\n                        }\n                        get = eventHandler(that, GET, field, true);\n                        object.bind(GET, get);\n                        change = eventHandler(that, CHANGE, field, true);\n                        object.bind(CHANGE, change);\n                        that._handlers[field] = {\n                            get: get,\n                            change: change\n                        };\n                    } else if (type === '[object Array]' || isObservableArray || isDataSource) {\n                        if (!isObservableArray && !isDataSource) {\n                            object = new ObservableArray(object);\n                        }\n                        change = eventHandler(that, CHANGE, field, false);\n                        object.bind(CHANGE, change);\n                        that._handlers[field] = { change: change };\n                    }\n                    object.parent = parent;\n                }\n                return object;\n            }\n        });\n        function equal(x, y) {\n            if (x === y) {\n                return true;\n            }\n            var xtype = $.type(x), ytype = $.type(y), field;\n            if (xtype !== ytype) {\n                return false;\n            }\n            if (xtype === 'date') {\n                return x.getTime() === y.getTime();\n            }\n            if (xtype !== 'object' && xtype !== 'array') {\n                return false;\n            }\n            for (field in x) {\n                if (!equal(x[field], y[field])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        var parsers = {\n            'number': function (value) {\n                return kendo.parseFloat(value);\n            },\n            'date': function (value) {\n                return kendo.parseDate(value);\n            },\n            'boolean': function (value) {\n                if (typeof value === STRING) {\n                    return value.toLowerCase() === 'true';\n                }\n                return value != null ? !!value : value;\n            },\n            'string': function (value) {\n                return value != null ? value + '' : value;\n            },\n            'default': function (value) {\n                return value;\n            }\n        };\n        var defaultValues = {\n            'string': '',\n            'number': 0,\n            'date': new Date(),\n            'boolean': false,\n            'default': ''\n        };\n        function getFieldByName(obj, name) {\n            var field, fieldName;\n            for (fieldName in obj) {\n                field = obj[fieldName];\n                if (isPlainObject(field) && field.field && field.field === name) {\n                    return field;\n                } else if (field === name) {\n                    return field;\n                }\n            }\n            return null;\n        }\n        var Model = ObservableObject.extend({\n            init: function (data) {\n                var that = this;\n                if (!data || $.isEmptyObject(data)) {\n                    data = $.extend({}, that.defaults, data);\n                    if (that._initializers) {\n                        for (var idx = 0; idx < that._initializers.length; idx++) {\n                            var name = that._initializers[idx];\n                            data[name] = that.defaults[name]();\n                        }\n                    }\n                }\n                ObservableObject.fn.init.call(that, data);\n                that.dirty = false;\n                that.dirtyFields = {};\n                if (that.idField) {\n                    that.id = that.get(that.idField);\n                    if (that.id === undefined) {\n                        that.id = that._defaultId;\n                    }\n                }\n            },\n            shouldSerialize: function (field) {\n                return ObservableObject.fn.shouldSerialize.call(this, field) && field !== 'uid' && !(this.idField !== 'id' && field === 'id') && field !== 'dirty' && field !== 'dirtyFields' && field !== '_accessors';\n            },\n            _parse: function (field, value) {\n                var that = this, fieldName = field, fields = that.fields || {}, parse;\n                field = fields[field];\n                if (!field) {\n                    field = getFieldByName(fields, fieldName);\n                }\n                if (field) {\n                    parse = field.parse;\n                    if (!parse && field.type) {\n                        parse = parsers[field.type.toLowerCase()];\n                    }\n                }\n                return parse ? parse(value) : value;\n            },\n            _notifyChange: function (e) {\n                var action = e.action;\n                if (action == 'add' || action == 'remove') {\n                    this.dirty = true;\n                    this.dirtyFields[e.field] = true;\n                }\n            },\n            editable: function (field) {\n                field = (this.fields || {})[field];\n                return field ? field.editable !== false : true;\n            },\n            set: function (field, value, initiator) {\n                var that = this;\n                var dirty = that.dirty;\n                if (that.editable(field)) {\n                    value = that._parse(field, value);\n                    if (!equal(value, that.get(field))) {\n                        that.dirty = true;\n                        that.dirtyFields[field] = true;\n                        if (ObservableObject.fn.set.call(that, field, value, initiator) && !dirty) {\n                            that.dirty = dirty;\n                            if (!that.dirty) {\n                                that.dirtyFields[field] = false;\n                            }\n                        }\n                    }\n                }\n            },\n            accept: function (data) {\n                var that = this, parent = function () {\n                        return that;\n                    }, field;\n                for (field in data) {\n                    var value = data[field];\n                    if (field.charAt(0) != '_') {\n                        value = that.wrap(data[field], field, parent);\n                    }\n                    that._set(field, value);\n                }\n                if (that.idField) {\n                    that.id = that.get(that.idField);\n                }\n                that.dirty = false;\n                that.dirtyFields = {};\n            },\n            isNew: function () {\n                return this.id === this._defaultId;\n            }\n        });\n        Model.define = function (base, options) {\n            if (options === undefined) {\n                options = base;\n                base = Model;\n            }\n            var model, proto = extend({ defaults: {} }, options), name, field, type, value, idx, length, fields = {}, originalName, id = proto.id, functionFields = [];\n            if (id) {\n                proto.idField = id;\n            }\n            if (proto.id) {\n                delete proto.id;\n            }\n            if (id) {\n                proto.defaults[id] = proto._defaultId = '';\n            }\n            if (toString.call(proto.fields) === '[object Array]') {\n                for (idx = 0, length = proto.fields.length; idx < length; idx++) {\n                    field = proto.fields[idx];\n                    if (typeof field === STRING) {\n                        fields[field] = {};\n                    } else if (field.field) {\n                        fields[field.field] = field;\n                    }\n                }\n                proto.fields = fields;\n            }\n            for (name in proto.fields) {\n                field = proto.fields[name];\n                type = field.type || 'default';\n                value = null;\n                originalName = name;\n                name = typeof field.field === STRING ? field.field : name;\n                if (!field.nullable) {\n                    value = proto.defaults[originalName !== name ? originalName : name] = field.defaultValue !== undefined ? field.defaultValue : defaultValues[type.toLowerCase()];\n                    if (typeof value === 'function') {\n                        functionFields.push(name);\n                    }\n                }\n                if (options.id === name) {\n                    proto._defaultId = value;\n                }\n                proto.defaults[originalName !== name ? originalName : name] = value;\n                field.parse = field.parse || parsers[type];\n            }\n            if (functionFields.length > 0) {\n                proto._initializers = functionFields;\n            }\n            model = base.extend(proto);\n            model.define = function (options) {\n                return Model.define(model, options);\n            };\n            if (proto.fields) {\n                model.fields = proto.fields;\n                model.idField = proto.idField;\n            }\n            return model;\n        };\n        var Comparer = {\n            selector: function (field) {\n                return isFunction(field) ? field : getter(field);\n            },\n            compare: function (field) {\n                var selector = this.selector(field);\n                return function (a, b) {\n                    a = selector(a);\n                    b = selector(b);\n                    if (a == null && b == null) {\n                        return 0;\n                    }\n                    if (a == null) {\n                        return -1;\n                    }\n                    if (b == null) {\n                        return 1;\n                    }\n                    if (a.localeCompare) {\n                        return a.localeCompare(b);\n                    }\n                    return a > b ? 1 : a < b ? -1 : 0;\n                };\n            },\n            create: function (sort) {\n                var compare = sort.compare || this.compare(sort.field);\n                if (sort.dir == 'desc') {\n                    return function (a, b) {\n                        return compare(b, a, true);\n                    };\n                }\n                return compare;\n            },\n            combine: function (comparers) {\n                return function (a, b) {\n                    var result = comparers[0](a, b), idx, length;\n                    for (idx = 1, length = comparers.length; idx < length; idx++) {\n                        result = result || comparers[idx](a, b);\n                    }\n                    return result;\n                };\n            }\n        };\n        var StableComparer = extend({}, Comparer, {\n            asc: function (field) {\n                var selector = this.selector(field);\n                return function (a, b) {\n                    var valueA = selector(a);\n                    var valueB = selector(b);\n                    if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                        valueA = valueA.getTime();\n                        valueB = valueB.getTime();\n                    }\n                    if (valueA === valueB) {\n                        return a.__position - b.__position;\n                    }\n                    if (valueA == null) {\n                        return -1;\n                    }\n                    if (valueB == null) {\n                        return 1;\n                    }\n                    if (valueA.localeCompare) {\n                        return valueA.localeCompare(valueB);\n                    }\n                    return valueA > valueB ? 1 : -1;\n                };\n            },\n            desc: function (field) {\n                var selector = this.selector(field);\n                return function (a, b) {\n                    var valueA = selector(a);\n                    var valueB = selector(b);\n                    if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                        valueA = valueA.getTime();\n                        valueB = valueB.getTime();\n                    }\n                    if (valueA === valueB) {\n                        return a.__position - b.__position;\n                    }\n                    if (valueA == null) {\n                        return 1;\n                    }\n                    if (valueB == null) {\n                        return -1;\n                    }\n                    if (valueB.localeCompare) {\n                        return valueB.localeCompare(valueA);\n                    }\n                    return valueA < valueB ? 1 : -1;\n                };\n            },\n            create: function (sort) {\n                return this[sort.dir](sort.field);\n            }\n        });\n        map = function (array, callback) {\n            var idx, length = array.length, result = new Array(length);\n            for (idx = 0; idx < length; idx++) {\n                result[idx] = callback(array[idx], idx, array);\n            }\n            return result;\n        };\n        var operators = function () {\n            function quote(str) {\n                if (typeof str == 'string') {\n                    str = str.replace(/[\\r\\n]+/g, '');\n                }\n                return JSON.stringify(str);\n            }\n            function textOp(impl) {\n                return function (a, b, ignore) {\n                    b += '';\n                    if (ignore) {\n                        a = '(' + a + ' || \\'\\').toLowerCase()';\n                        b = b.toLowerCase();\n                    }\n                    return impl(a, quote(b), ignore);\n                };\n            }\n            function operator(op, a, b, ignore) {\n                if (b != null) {\n                    if (typeof b === STRING) {\n                        var date = dateRegExp.exec(b);\n                        if (date) {\n                            b = new Date(+date[1]);\n                        } else if (ignore) {\n                            b = quote(b.toLowerCase());\n                            a = '((' + a + ' || \\'\\')+\\'\\').toLowerCase()';\n                        } else {\n                            b = quote(b);\n                        }\n                    }\n                    if (b.getTime) {\n                        a = '(' + a + '&&' + a + '.getTime?' + a + '.getTime():' + a + ')';\n                        b = b.getTime();\n                    }\n                }\n                return a + ' ' + op + ' ' + b;\n            }\n            function getMatchRegexp(pattern) {\n                for (var rx = '/^', esc = false, i = 0; i < pattern.length; ++i) {\n                    var ch = pattern.charAt(i);\n                    if (esc) {\n                        rx += '\\\\' + ch;\n                    } else if (ch == '~') {\n                        esc = true;\n                        continue;\n                    } else if (ch == '*') {\n                        rx += '.*';\n                    } else if (ch == '?') {\n                        rx += '.';\n                    } else if ('.+^$()[]{}|\\\\/\\n\\r\\u2028\\u2029\\xA0'.indexOf(ch) >= 0) {\n                        rx += '\\\\' + ch;\n                    } else {\n                        rx += ch;\n                    }\n                    esc = false;\n                }\n                return rx + '$/';\n            }\n            return {\n                quote: function (value) {\n                    if (value && value.getTime) {\n                        return 'new Date(' + value.getTime() + ')';\n                    }\n                    return quote(value);\n                },\n                eq: function (a, b, ignore) {\n                    return operator('==', a, b, ignore);\n                },\n                neq: function (a, b, ignore) {\n                    return operator('!=', a, b, ignore);\n                },\n                gt: function (a, b, ignore) {\n                    return operator('>', a, b, ignore);\n                },\n                gte: function (a, b, ignore) {\n                    return operator('>=', a, b, ignore);\n                },\n                lt: function (a, b, ignore) {\n                    return operator('<', a, b, ignore);\n                },\n                lte: function (a, b, ignore) {\n                    return operator('<=', a, b, ignore);\n                },\n                startswith: textOp(function (a, b) {\n                    return a + '.lastIndexOf(' + b + ', 0) == 0';\n                }),\n                doesnotstartwith: textOp(function (a, b) {\n                    return a + '.lastIndexOf(' + b + ', 0) == -1';\n                }),\n                endswith: textOp(function (a, b) {\n                    var n = b ? b.length - 2 : 0;\n                    return a + '.indexOf(' + b + ', ' + a + '.length - ' + n + ') >= 0';\n                }),\n                doesnotendwith: textOp(function (a, b) {\n                    var n = b ? b.length - 2 : 0;\n                    return a + '.indexOf(' + b + ', ' + a + '.length - ' + n + ') < 0';\n                }),\n                contains: textOp(function (a, b) {\n                    return a + '.indexOf(' + b + ') >= 0';\n                }),\n                doesnotcontain: textOp(function (a, b) {\n                    return a + '.indexOf(' + b + ') == -1';\n                }),\n                matches: textOp(function (a, b) {\n                    b = b.substring(1, b.length - 1);\n                    return getMatchRegexp(b) + '.test(' + a + ')';\n                }),\n                doesnotmatch: textOp(function (a, b) {\n                    b = b.substring(1, b.length - 1);\n                    return '!' + getMatchRegexp(b) + '.test(' + a + ')';\n                }),\n                isempty: function (a) {\n                    return a + ' === \\'\\'';\n                },\n                isnotempty: function (a) {\n                    return a + ' !== \\'\\'';\n                },\n                isnull: function (a) {\n                    return '(' + a + ' == null)';\n                },\n                isnotnull: function (a) {\n                    return '(' + a + ' != null)';\n                }\n            };\n        }();\n        function Query(data) {\n            this.data = data || [];\n        }\n        Query.filterExpr = function (expression) {\n            var expressions = [], logic = {\n                    and: ' && ',\n                    or: ' || '\n                }, idx, length, filter, expr, fieldFunctions = [], operatorFunctions = [], field, operator, filters = expression.filters;\n            for (idx = 0, length = filters.length; idx < length; idx++) {\n                filter = filters[idx];\n                field = filter.field;\n                operator = filter.operator;\n                if (filter.filters) {\n                    expr = Query.filterExpr(filter);\n                    filter = expr.expression.replace(/__o\\[(\\d+)\\]/g, function (match, index) {\n                        index = +index;\n                        return '__o[' + (operatorFunctions.length + index) + ']';\n                    }).replace(/__f\\[(\\d+)\\]/g, function (match, index) {\n                        index = +index;\n                        return '__f[' + (fieldFunctions.length + index) + ']';\n                    });\n                    operatorFunctions.push.apply(operatorFunctions, expr.operators);\n                    fieldFunctions.push.apply(fieldFunctions, expr.fields);\n                } else {\n                    if (typeof field === FUNCTION) {\n                        expr = '__f[' + fieldFunctions.length + '](d)';\n                        fieldFunctions.push(field);\n                    } else {\n                        expr = kendo.expr(field);\n                    }\n                    if (typeof operator === FUNCTION) {\n                        filter = '__o[' + operatorFunctions.length + '](' + expr + ', ' + operators.quote(filter.value) + ')';\n                        operatorFunctions.push(operator);\n                    } else {\n                        filter = operators[(operator || 'eq').toLowerCase()](expr, filter.value, filter.ignoreCase !== undefined ? filter.ignoreCase : true);\n                    }\n                }\n                expressions.push(filter);\n            }\n            return {\n                expression: '(' + expressions.join(logic[expression.logic]) + ')',\n                fields: fieldFunctions,\n                operators: operatorFunctions\n            };\n        };\n        function normalizeSort(field, dir) {\n            if (field) {\n                var descriptor = typeof field === STRING ? {\n                        field: field,\n                        dir: dir\n                    } : field, descriptors = isArray(descriptor) ? descriptor : descriptor !== undefined ? [descriptor] : [];\n                return grep(descriptors, function (d) {\n                    return !!d.dir;\n                });\n            }\n        }\n        var operatorMap = {\n            '==': 'eq',\n            equals: 'eq',\n            isequalto: 'eq',\n            equalto: 'eq',\n            equal: 'eq',\n            '!=': 'neq',\n            ne: 'neq',\n            notequals: 'neq',\n            isnotequalto: 'neq',\n            notequalto: 'neq',\n            notequal: 'neq',\n            '<': 'lt',\n            islessthan: 'lt',\n            lessthan: 'lt',\n            less: 'lt',\n            '<=': 'lte',\n            le: 'lte',\n            islessthanorequalto: 'lte',\n            lessthanequal: 'lte',\n            '>': 'gt',\n            isgreaterthan: 'gt',\n            greaterthan: 'gt',\n            greater: 'gt',\n            '>=': 'gte',\n            isgreaterthanorequalto: 'gte',\n            greaterthanequal: 'gte',\n            ge: 'gte',\n            notsubstringof: 'doesnotcontain',\n            isnull: 'isnull',\n            isempty: 'isempty',\n            isnotempty: 'isnotempty'\n        };\n        function normalizeOperator(expression) {\n            var idx, length, filter, operator, filters = expression.filters;\n            if (filters) {\n                for (idx = 0, length = filters.length; idx < length; idx++) {\n                    filter = filters[idx];\n                    operator = filter.operator;\n                    if (operator && typeof operator === STRING) {\n                        filter.operator = operatorMap[operator.toLowerCase()] || operator;\n                    }\n                    normalizeOperator(filter);\n                }\n            }\n        }\n        function normalizeFilter(expression) {\n            if (expression && !isEmptyObject(expression)) {\n                if (isArray(expression) || !expression.filters) {\n                    expression = {\n                        logic: 'and',\n                        filters: isArray(expression) ? expression : [expression]\n                    };\n                }\n                normalizeOperator(expression);\n                return expression;\n            }\n        }\n        Query.normalizeFilter = normalizeFilter;\n        function compareDescriptor(f1, f2) {\n            if (f1.logic || f2.logic) {\n                return false;\n            }\n            return f1.field === f2.field && f1.value === f2.value && f1.operator === f2.operator;\n        }\n        function normalizeDescriptor(filter) {\n            filter = filter || {};\n            if (isEmptyObject(filter)) {\n                return {\n                    logic: 'and',\n                    filters: []\n                };\n            }\n            return normalizeFilter(filter);\n        }\n        function fieldComparer(a, b) {\n            if (b.logic || a.field > b.field) {\n                return 1;\n            } else if (a.field < b.field) {\n                return -1;\n            } else {\n                return 0;\n            }\n        }\n        function compareFilters(expr1, expr2) {\n            expr1 = normalizeDescriptor(expr1);\n            expr2 = normalizeDescriptor(expr2);\n            if (expr1.logic !== expr2.logic) {\n                return false;\n            }\n            var f1, f2;\n            var filters1 = (expr1.filters || []).slice();\n            var filters2 = (expr2.filters || []).slice();\n            if (filters1.length !== filters2.length) {\n                return false;\n            }\n            filters1 = filters1.sort(fieldComparer);\n            filters2 = filters2.sort(fieldComparer);\n            for (var idx = 0; idx < filters1.length; idx++) {\n                f1 = filters1[idx];\n                f2 = filters2[idx];\n                if (f1.logic && f2.logic) {\n                    if (!compareFilters(f1, f2)) {\n                        return false;\n                    }\n                } else if (!compareDescriptor(f1, f2)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        Query.compareFilters = compareFilters;\n        function normalizeAggregate(expressions) {\n            return isArray(expressions) ? expressions : [expressions];\n        }\n        function normalizeGroup(field, dir) {\n            var descriptor = typeof field === STRING ? {\n                    field: field,\n                    dir: dir\n                } : field, descriptors = isArray(descriptor) ? descriptor : descriptor !== undefined ? [descriptor] : [];\n            return map(descriptors, function (d) {\n                return {\n                    field: d.field,\n                    dir: d.dir || 'asc',\n                    aggregates: d.aggregates\n                };\n            });\n        }\n        Query.prototype = {\n            toArray: function () {\n                return this.data;\n            },\n            range: function (index, count) {\n                return new Query(this.data.slice(index, index + count));\n            },\n            skip: function (count) {\n                return new Query(this.data.slice(count));\n            },\n            take: function (count) {\n                return new Query(this.data.slice(0, count));\n            },\n            select: function (selector) {\n                return new Query(map(this.data, selector));\n            },\n            order: function (selector, dir, inPlace) {\n                var sort = { dir: dir };\n                if (selector) {\n                    if (selector.compare) {\n                        sort.compare = selector.compare;\n                    } else {\n                        sort.field = selector;\n                    }\n                }\n                if (inPlace) {\n                    return new Query(this.data.sort(Comparer.create(sort)));\n                }\n                return new Query(this.data.slice(0).sort(Comparer.create(sort)));\n            },\n            orderBy: function (selector, inPlace) {\n                return this.order(selector, 'asc', inPlace);\n            },\n            orderByDescending: function (selector, inPlace) {\n                return this.order(selector, 'desc', inPlace);\n            },\n            sort: function (field, dir, comparer, inPlace) {\n                var idx, length, descriptors = normalizeSort(field, dir), comparers = [];\n                comparer = comparer || Comparer;\n                if (descriptors.length) {\n                    for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                        comparers.push(comparer.create(descriptors[idx]));\n                    }\n                    return this.orderBy({ compare: comparer.combine(comparers) }, inPlace);\n                }\n                return this;\n            },\n            filter: function (expressions) {\n                var idx, current, length, compiled, predicate, data = this.data, fields, operators, result = [], filter;\n                expressions = normalizeFilter(expressions);\n                if (!expressions || expressions.filters.length === 0) {\n                    return this;\n                }\n                compiled = Query.filterExpr(expressions);\n                fields = compiled.fields;\n                operators = compiled.operators;\n                predicate = filter = new Function('d, __f, __o', 'return ' + compiled.expression);\n                if (fields.length || operators.length) {\n                    filter = function (d) {\n                        return predicate(d, fields, operators);\n                    };\n                }\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    current = data[idx];\n                    if (filter(current)) {\n                        result.push(current);\n                    }\n                }\n                return new Query(result);\n            },\n            group: function (descriptors, allData) {\n                descriptors = normalizeGroup(descriptors || []);\n                allData = allData || this.data;\n                var that = this, result = new Query(that.data), descriptor;\n                if (descriptors.length > 0) {\n                    descriptor = descriptors[0];\n                    result = result.groupBy(descriptor).select(function (group) {\n                        var data = new Query(allData).filter([{\n                                field: group.field,\n                                operator: 'eq',\n                                value: group.value,\n                                ignoreCase: false\n                            }]);\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            items: descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray()).toArray() : group.items,\n                            hasSubgroups: descriptors.length > 1,\n                            aggregates: data.aggregate(descriptor.aggregates)\n                        };\n                    });\n                }\n                return result;\n            },\n            groupBy: function (descriptor) {\n                if (isEmptyObject(descriptor) || !this.data.length) {\n                    return new Query([]);\n                }\n                var field = descriptor.field, sorted = this._sortForGrouping(field, descriptor.dir || 'asc'), accessor = kendo.accessor(field), item, groupValue = accessor.get(sorted[0], field), group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    }, currentValue, idx, len, result = [group];\n                for (idx = 0, len = sorted.length; idx < len; idx++) {\n                    item = sorted[idx];\n                    currentValue = accessor.get(item, field);\n                    if (!groupValueComparer(groupValue, currentValue)) {\n                        groupValue = currentValue;\n                        group = {\n                            field: field,\n                            value: groupValue,\n                            items: []\n                        };\n                        result.push(group);\n                    }\n                    group.items.push(item);\n                }\n                return new Query(result);\n            },\n            _sortForGrouping: function (field, dir) {\n                var idx, length, data = this.data;\n                if (!stableSort) {\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        data[idx].__position = idx;\n                    }\n                    data = new Query(data).sort(field, dir, StableComparer).toArray();\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        delete data[idx].__position;\n                    }\n                    return data;\n                }\n                return this.sort(field, dir).toArray();\n            },\n            aggregate: function (aggregates) {\n                var idx, len, result = {}, state = {};\n                if (aggregates && aggregates.length) {\n                    for (idx = 0, len = this.data.length; idx < len; idx++) {\n                        calculateAggregate(result, aggregates, this.data[idx], idx, len, state);\n                    }\n                }\n                return result;\n            }\n        };\n        function groupValueComparer(a, b) {\n            if (a && a.getTime && b && b.getTime) {\n                return a.getTime() === b.getTime();\n            }\n            return a === b;\n        }\n        function calculateAggregate(accumulator, aggregates, item, index, length, state) {\n            aggregates = aggregates || [];\n            var idx, aggr, functionName, len = aggregates.length;\n            for (idx = 0; idx < len; idx++) {\n                aggr = aggregates[idx];\n                functionName = aggr.aggregate;\n                var field = aggr.field;\n                accumulator[field] = accumulator[field] || {};\n                state[field] = state[field] || {};\n                state[field][functionName] = state[field][functionName] || {};\n                accumulator[field][functionName] = functions[functionName.toLowerCase()](accumulator[field][functionName], item, kendo.accessor(field), index, length, state[field][functionName]);\n            }\n        }\n        var functions = {\n            sum: function (accumulator, item, accessor) {\n                var value = accessor.get(item);\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n                return accumulator;\n            },\n            count: function (accumulator) {\n                return (accumulator || 0) + 1;\n            },\n            average: function (accumulator, item, accessor, index, length, state) {\n                var value = accessor.get(item);\n                if (state.count === undefined) {\n                    state.count = 0;\n                }\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n                if (isNumber(value)) {\n                    state.count++;\n                }\n                if (index == length - 1 && isNumber(accumulator)) {\n                    accumulator = accumulator / state.count;\n                }\n                return accumulator;\n            },\n            max: function (accumulator, item, accessor) {\n                var value = accessor.get(item);\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n                if (accumulator < value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            },\n            min: function (accumulator, item, accessor) {\n                var value = accessor.get(item);\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n                if (accumulator > value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            }\n        };\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function isDate(val) {\n            return val && val.getTime;\n        }\n        function toJSON(array) {\n            var idx, length = array.length, result = new Array(length);\n            for (idx = 0; idx < length; idx++) {\n                result[idx] = array[idx].toJSON();\n            }\n            return result;\n        }\n        Query.process = function (data, options, inPlace) {\n            options = options || {};\n            var query = new Query(data), group = options.group, sort = normalizeGroup(group || []).concat(normalizeSort(options.sort || [])), total, filterCallback = options.filterCallback, filter = options.filter, skip = options.skip, take = options.take;\n            if (filter) {\n                query = query.filter(filter);\n                if (filterCallback) {\n                    query = filterCallback(query);\n                }\n                total = query.toArray().length;\n            }\n            if (sort) {\n                if (inPlace) {\n                    query = query.sort(sort, undefined, undefined, inPlace);\n                } else {\n                    query = query.sort(sort);\n                }\n                if (group) {\n                    data = query.toArray();\n                }\n            }\n            if (skip !== undefined && take !== undefined) {\n                query = query.range(skip, take);\n            }\n            if (group) {\n                query = query.group(group, data);\n            }\n            return {\n                total: total,\n                data: query.toArray()\n            };\n        };\n        var LocalTransport = Class.extend({\n            init: function (options) {\n                this.data = options.data;\n            },\n            read: function (options) {\n                options.success(this.data);\n            },\n            update: function (options) {\n                options.success(options.data);\n            },\n            create: function (options) {\n                options.success(options.data);\n            },\n            destroy: function (options) {\n                options.success(options.data);\n            }\n        });\n        var RemoteTransport = Class.extend({\n            init: function (options) {\n                var that = this, parameterMap;\n                options = that.options = extend({}, that.options, options);\n                each(crud, function (index, type) {\n                    if (typeof options[type] === STRING) {\n                        options[type] = { url: options[type] };\n                    }\n                });\n                that.cache = options.cache ? Cache.create(options.cache) : {\n                    find: noop,\n                    add: noop\n                };\n                parameterMap = options.parameterMap;\n                if (isFunction(options.push)) {\n                    that.push = options.push;\n                }\n                if (!that.push) {\n                    that.push = identity;\n                }\n                that.parameterMap = isFunction(parameterMap) ? parameterMap : function (options) {\n                    var result = {};\n                    each(options, function (option, value) {\n                        if (option in parameterMap) {\n                            option = parameterMap[option];\n                            if (isPlainObject(option)) {\n                                value = option.value(value);\n                                option = option.key;\n                            }\n                        }\n                        result[option] = value;\n                    });\n                    return result;\n                };\n            },\n            options: { parameterMap: identity },\n            create: function (options) {\n                return ajax(this.setup(options, CREATE));\n            },\n            read: function (options) {\n                var that = this, success, error, result, cache = that.cache;\n                options = that.setup(options, READ);\n                success = options.success || noop;\n                error = options.error || noop;\n                result = cache.find(options.data);\n                if (result !== undefined) {\n                    success(result);\n                } else {\n                    options.success = function (result) {\n                        cache.add(options.data, result);\n                        success(result);\n                    };\n                    $.ajax(options);\n                }\n            },\n            update: function (options) {\n                return ajax(this.setup(options, UPDATE));\n            },\n            destroy: function (options) {\n                return ajax(this.setup(options, DESTROY));\n            },\n            setup: function (options, type) {\n                options = options || {};\n                var that = this, parameters, operation = that.options[type], data = isFunction(operation.data) ? operation.data(options.data) : operation.data;\n                options = extend(true, {}, operation, options);\n                parameters = extend(true, {}, data, options.data);\n                options.data = that.parameterMap(parameters, type);\n                if (isFunction(options.url)) {\n                    options.url = options.url(parameters);\n                }\n                return options;\n            }\n        });\n        var Cache = Class.extend({\n            init: function () {\n                this._store = {};\n            },\n            add: function (key, data) {\n                if (key !== undefined) {\n                    this._store[stringify(key)] = data;\n                }\n            },\n            find: function (key) {\n                return this._store[stringify(key)];\n            },\n            clear: function () {\n                this._store = {};\n            },\n            remove: function (key) {\n                delete this._store[stringify(key)];\n            }\n        });\n        Cache.create = function (options) {\n            var store = {\n                'inmemory': function () {\n                    return new Cache();\n                }\n            };\n            if (isPlainObject(options) && isFunction(options.find)) {\n                return options;\n            }\n            if (options === true) {\n                return new Cache();\n            }\n            return store[options]();\n        };\n        function serializeRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n            var record, getter, originalName, idx, setters = {}, length;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                record = data[idx];\n                for (getter in getters) {\n                    originalName = fieldNames[getter];\n                    if (originalName && originalName !== getter) {\n                        if (!setters[originalName]) {\n                            setters[originalName] = kendo.setter(originalName);\n                        }\n                        setters[originalName](record, getters[getter](record));\n                        delete record[getter];\n                    }\n                }\n            }\n        }\n        function convertRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n            var record, getter, originalName, idx, length;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                record = data[idx];\n                for (getter in getters) {\n                    record[getter] = modelInstance._parse(getter, getters[getter](record));\n                    originalName = fieldNames[getter];\n                    if (originalName && originalName !== getter) {\n                        delete record[originalName];\n                    }\n                }\n            }\n        }\n        function convertGroup(data, getters, modelInstance, originalFieldNames, fieldNames) {\n            var record, idx, fieldName, length;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                record = data[idx];\n                fieldName = originalFieldNames[record.field];\n                if (fieldName && fieldName != record.field) {\n                    record.field = fieldName;\n                }\n                record.value = modelInstance._parse(record.field, record.value);\n                if (record.hasSubgroups) {\n                    convertGroup(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                } else {\n                    convertRecords(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                }\n            }\n        }\n        function wrapDataAccess(originalFunction, model, converter, getters, originalFieldNames, fieldNames) {\n            return function (data) {\n                data = originalFunction(data);\n                if (data && !isEmptyObject(getters)) {\n                    if (toString.call(data) !== '[object Array]' && !(data instanceof ObservableArray)) {\n                        data = [data];\n                    }\n                    converter(data, getters, new model(), originalFieldNames, fieldNames);\n                }\n                return data || [];\n            };\n        }\n        var DataReader = Class.extend({\n            init: function (schema) {\n                var that = this, member, get, model, base;\n                schema = schema || {};\n                for (member in schema) {\n                    get = schema[member];\n                    that[member] = typeof get === STRING ? getter(get) : get;\n                }\n                base = schema.modelBase || Model;\n                if (isPlainObject(that.model)) {\n                    that.model = model = base.define(that.model);\n                }\n                var dataFunction = proxy(that.data, that);\n                that._dataAccessFunction = dataFunction;\n                if (that.model) {\n                    var groupsFunction = proxy(that.groups, that), serializeFunction = proxy(that.serialize, that), originalFieldNames = {}, getters = {}, serializeGetters = {}, fieldNames = {}, shouldSerialize = false, fieldName;\n                    model = that.model;\n                    if (model.fields) {\n                        each(model.fields, function (field, value) {\n                            var fromName;\n                            fieldName = field;\n                            if (isPlainObject(value) && value.field) {\n                                fieldName = value.field;\n                            } else if (typeof value === STRING) {\n                                fieldName = value;\n                            }\n                            if (isPlainObject(value) && value.from) {\n                                fromName = value.from;\n                            }\n                            shouldSerialize = shouldSerialize || fromName && fromName !== field || fieldName !== field;\n                            getters[field] = getter(fromName || fieldName);\n                            serializeGetters[field] = getter(field);\n                            originalFieldNames[fromName || fieldName] = field;\n                            fieldNames[field] = fromName || fieldName;\n                        });\n                        if (!schema.serialize && shouldSerialize) {\n                            that.serialize = wrapDataAccess(serializeFunction, model, serializeRecords, serializeGetters, originalFieldNames, fieldNames);\n                        }\n                    }\n                    that._dataAccessFunction = dataFunction;\n                    that.data = wrapDataAccess(dataFunction, model, convertRecords, getters, originalFieldNames, fieldNames);\n                    that.groups = wrapDataAccess(groupsFunction, model, convertGroup, getters, originalFieldNames, fieldNames);\n                }\n            },\n            errors: function (data) {\n                return data ? data.errors : null;\n            },\n            parse: identity,\n            data: identity,\n            total: function (data) {\n                return data.length;\n            },\n            groups: identity,\n            aggregates: function () {\n                return {};\n            },\n            serialize: function (data) {\n                return data;\n            }\n        });\n        function mergeGroups(target, dest, skip, take) {\n            var group, idx = 0, items;\n            while (dest.length && take) {\n                group = dest[idx];\n                items = group.items;\n                var length = items.length;\n                if (target && target.field === group.field && target.value === group.value) {\n                    if (target.hasSubgroups && target.items.length) {\n                        mergeGroups(target.items[target.items.length - 1], group.items, skip, take);\n                    } else {\n                        items = items.slice(skip, skip + take);\n                        target.items = target.items.concat(items);\n                    }\n                    dest.splice(idx--, 1);\n                } else if (group.hasSubgroups && items.length) {\n                    mergeGroups(group, items, skip, take);\n                    if (!group.items.length) {\n                        dest.splice(idx--, 1);\n                    }\n                } else {\n                    items = items.slice(skip, skip + take);\n                    group.items = items;\n                    if (!group.items.length) {\n                        dest.splice(idx--, 1);\n                    }\n                }\n                if (items.length === 0) {\n                    skip -= length;\n                } else {\n                    skip = 0;\n                    take -= items.length;\n                }\n                if (++idx >= dest.length) {\n                    break;\n                }\n            }\n            if (idx < dest.length) {\n                dest.splice(idx, dest.length - idx);\n            }\n        }\n        function flattenGroups(data) {\n            var idx, result = [], length, items, itemIndex;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                var group = data.at(idx);\n                if (group.hasSubgroups) {\n                    result = result.concat(flattenGroups(group.items));\n                } else {\n                    items = group.items;\n                    for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                        result.push(items.at(itemIndex));\n                    }\n                }\n            }\n            return result;\n        }\n        function wrapGroupItems(data, model) {\n            var idx, length, group;\n            if (model) {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    group = data.at(idx);\n                    if (group.hasSubgroups) {\n                        wrapGroupItems(group.items, model);\n                    } else {\n                        group.items = new LazyObservableArray(group.items, model);\n                    }\n                }\n            }\n        }\n        function eachGroupItems(data, func) {\n            for (var idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].hasSubgroups) {\n                    if (eachGroupItems(data[idx].items, func)) {\n                        return true;\n                    }\n                } else if (func(data[idx].items, data[idx])) {\n                    return true;\n                }\n            }\n        }\n        function replaceInRanges(ranges, data, item, observable) {\n            for (var idx = 0; idx < ranges.length; idx++) {\n                if (ranges[idx].data === data) {\n                    break;\n                }\n                if (replaceInRange(ranges[idx].data, item, observable)) {\n                    break;\n                }\n            }\n        }\n        function replaceInRange(items, item, observable) {\n            for (var idx = 0, length = items.length; idx < length; idx++) {\n                if (items[idx] && items[idx].hasSubgroups) {\n                    return replaceInRange(items[idx].items, item, observable);\n                } else if (items[idx] === item || items[idx] === observable) {\n                    items[idx] = observable;\n                    return true;\n                }\n            }\n        }\n        function replaceWithObservable(view, data, ranges, type, serverGrouping) {\n            for (var viewIndex = 0, length = view.length; viewIndex < length; viewIndex++) {\n                var item = view[viewIndex];\n                if (!item || item instanceof type) {\n                    continue;\n                }\n                if (item.hasSubgroups !== undefined && !serverGrouping) {\n                    replaceWithObservable(item.items, data, ranges, type, serverGrouping);\n                } else {\n                    for (var idx = 0; idx < data.length; idx++) {\n                        if (data[idx] === item) {\n                            view[viewIndex] = data.at(idx);\n                            replaceInRanges(ranges, data, item, view[viewIndex]);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        function removeModel(data, model, skip, take) {\n            var length = data.length;\n            var startIndex = skip || 0;\n            var endIndex = typeof take !== 'undefined' ? math.min(startIndex + take, length) : length;\n            var idx;\n            for (idx = startIndex; idx < endIndex; idx++) {\n                var dataItem = data.at(idx);\n                if (dataItem.uid == model.uid) {\n                    data.splice(idx, 1);\n                    return dataItem;\n                }\n            }\n        }\n        function indexOfPristineModel(data, model) {\n            if (model) {\n                return indexOf(data, function (item) {\n                    return item.uid && item.uid == model.uid || item[model.idField] === model.id && model.id !== model._defaultId;\n                });\n            }\n            return -1;\n        }\n        function indexOfModel(data, model) {\n            if (model) {\n                return indexOf(data, function (item) {\n                    return item.uid == model.uid;\n                });\n            }\n            return -1;\n        }\n        function indexOf(data, comparer) {\n            var idx, length;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (comparer(data[idx])) {\n                    return idx;\n                }\n            }\n            return -1;\n        }\n        function fieldNameFromModel(fields, name) {\n            if (fields && !isEmptyObject(fields)) {\n                var descriptor = fields[name];\n                var fieldName;\n                if (isPlainObject(descriptor)) {\n                    fieldName = descriptor.from || descriptor.field || name;\n                } else {\n                    fieldName = fields[name] || name;\n                }\n                if (isFunction(fieldName)) {\n                    return name;\n                }\n                return fieldName;\n            }\n            return name;\n        }\n        function convertFilterDescriptorsField(descriptor, model) {\n            var idx, length, target = {};\n            for (var field in descriptor) {\n                if (field !== 'filters') {\n                    target[field] = descriptor[field];\n                }\n            }\n            if (descriptor.filters) {\n                target.filters = [];\n                for (idx = 0, length = descriptor.filters.length; idx < length; idx++) {\n                    target.filters[idx] = convertFilterDescriptorsField(descriptor.filters[idx], model);\n                }\n            } else {\n                target.field = fieldNameFromModel(model.fields, target.field);\n            }\n            return target;\n        }\n        function convertDescriptorsField(descriptors, model) {\n            var idx, length, result = [], target, descriptor;\n            for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                target = {};\n                descriptor = descriptors[idx];\n                for (var field in descriptor) {\n                    target[field] = descriptor[field];\n                }\n                target.field = fieldNameFromModel(model.fields, target.field);\n                if (target.aggregates && isArray(target.aggregates)) {\n                    target.aggregates = convertDescriptorsField(target.aggregates, model);\n                }\n                result.push(target);\n            }\n            return result;\n        }\n        var DataSource = Observable.extend({\n            init: function (options) {\n                var that = this, model, data;\n                if (options) {\n                    data = options.data;\n                }\n                options = that.options = extend({}, that.options, options);\n                that._map = {};\n                that._prefetch = {};\n                that._data = [];\n                that._pristineData = [];\n                that._ranges = [];\n                that._view = [];\n                that._pristineTotal = 0;\n                that._destroyed = [];\n                that._pageSize = options.pageSize;\n                that._page = options.page || (options.pageSize ? 1 : undefined);\n                that._sort = normalizeSort(options.sort);\n                that._filter = normalizeFilter(options.filter);\n                that._group = normalizeGroup(options.group);\n                that._aggregate = options.aggregate;\n                that._total = options.total;\n                that._shouldDetachObservableParents = true;\n                Observable.fn.init.call(that);\n                that.transport = Transport.create(options, data, that);\n                if (isFunction(that.transport.push)) {\n                    that.transport.push({\n                        pushCreate: proxy(that._pushCreate, that),\n                        pushUpdate: proxy(that._pushUpdate, that),\n                        pushDestroy: proxy(that._pushDestroy, that)\n                    });\n                }\n                if (options.offlineStorage != null) {\n                    if (typeof options.offlineStorage == 'string') {\n                        var key = options.offlineStorage;\n                        that._storage = {\n                            getItem: function () {\n                                return JSON.parse(localStorage.getItem(key));\n                            },\n                            setItem: function (item) {\n                                localStorage.setItem(key, stringify(that.reader.serialize(item)));\n                            }\n                        };\n                    } else {\n                        that._storage = options.offlineStorage;\n                    }\n                }\n                that.reader = new kendo.data.readers[options.schema.type || 'json'](options.schema);\n                model = that.reader.model || {};\n                that._detachObservableParents();\n                that._data = that._observe(that._data);\n                that._online = true;\n                that.bind([\n                    'push',\n                    ERROR,\n                    CHANGE,\n                    REQUESTSTART,\n                    SYNC,\n                    REQUESTEND,\n                    PROGRESS\n                ], options);\n            },\n            options: {\n                data: null,\n                schema: { modelBase: Model },\n                offlineStorage: null,\n                serverSorting: false,\n                serverPaging: false,\n                serverFiltering: false,\n                serverGrouping: false,\n                serverAggregates: false,\n                batch: false,\n                inPlaceSort: false\n            },\n            clone: function () {\n                return this;\n            },\n            online: function (value) {\n                if (value !== undefined) {\n                    if (this._online != value) {\n                        this._online = value;\n                        if (value) {\n                            return this.sync();\n                        }\n                    }\n                    return $.Deferred().resolve().promise();\n                } else {\n                    return this._online;\n                }\n            },\n            offlineData: function (state) {\n                if (this.options.offlineStorage == null) {\n                    return null;\n                }\n                if (state !== undefined) {\n                    return this._storage.setItem(state);\n                }\n                return this._storage.getItem() || [];\n            },\n            _isServerGrouped: function () {\n                var group = this.group() || [];\n                return this.options.serverGrouping && group.length;\n            },\n            _pushCreate: function (result) {\n                this._push(result, 'pushCreate');\n            },\n            _pushUpdate: function (result) {\n                this._push(result, 'pushUpdate');\n            },\n            _pushDestroy: function (result) {\n                this._push(result, 'pushDestroy');\n            },\n            _push: function (result, operation) {\n                var data = this._readData(result);\n                if (!data) {\n                    data = result;\n                }\n                this[operation](data);\n            },\n            _flatData: function (data, skip) {\n                if (data) {\n                    if (this._isServerGrouped()) {\n                        return flattenGroups(data);\n                    }\n                    if (!skip) {\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data.at(idx);\n                        }\n                    }\n                }\n                return data;\n            },\n            parent: noop,\n            get: function (id) {\n                var idx, length, data = this._flatData(this._data, this.options.useRanges);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].id == id) {\n                        return data[idx];\n                    }\n                }\n            },\n            getByUid: function (id) {\n                return this._getByUid(id, this._data);\n            },\n            _getByUid: function (id, dataItems) {\n                var idx, length, data = this._flatData(dataItems, this.options.useRanges);\n                if (!data) {\n                    return;\n                }\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].uid == id) {\n                        return data[idx];\n                    }\n                }\n            },\n            indexOf: function (model) {\n                return indexOfModel(this._data, model);\n            },\n            at: function (index) {\n                return this._data.at(index);\n            },\n            data: function (value) {\n                var that = this;\n                if (value !== undefined) {\n                    that._detachObservableParents();\n                    that._data = this._observe(value);\n                    that._pristineData = value.slice(0);\n                    that._storeData();\n                    that._ranges = [];\n                    that.trigger('reset');\n                    that._addRange(that._data);\n                    that._total = that._data.length;\n                    that._pristineTotal = that._total;\n                    that._process(that._data);\n                } else {\n                    if (that._data) {\n                        for (var idx = 0; idx < that._data.length; idx++) {\n                            that._data.at(idx);\n                        }\n                    }\n                    return that._data;\n                }\n            },\n            view: function (value) {\n                if (value === undefined) {\n                    return this._view;\n                } else {\n                    this._view = this._observeView(value);\n                }\n            },\n            _observeView: function (data) {\n                var that = this;\n                replaceWithObservable(data, that._data, that._ranges, that.reader.model || ObservableObject, that._isServerGrouped());\n                var view = new LazyObservableArray(data, that.reader.model);\n                view.parent = function () {\n                    return that.parent();\n                };\n                return view;\n            },\n            flatView: function () {\n                var groups = this.group() || [];\n                if (groups.length) {\n                    return flattenGroups(this._view);\n                } else {\n                    return this._view;\n                }\n            },\n            add: function (model) {\n                return this.insert(this._data.length, model);\n            },\n            _createNewModel: function (model) {\n                if (this.reader.model) {\n                    return new this.reader.model(model);\n                }\n                if (model instanceof ObservableObject) {\n                    return model;\n                }\n                return new ObservableObject(model);\n            },\n            insert: function (index, model) {\n                if (!model) {\n                    model = index;\n                    index = 0;\n                }\n                if (!(model instanceof Model)) {\n                    model = this._createNewModel(model);\n                }\n                if (this._isServerGrouped()) {\n                    this._data.splice(index, 0, this._wrapInEmptyGroup(model));\n                } else {\n                    this._data.splice(index, 0, model);\n                }\n                this._insertModelInRange(index, model);\n                return model;\n            },\n            pushInsert: function (index, items) {\n                if (!items) {\n                    items = index;\n                    index = 0;\n                }\n                if (!isArray(items)) {\n                    items = [items];\n                }\n                var pushed = [];\n                var autoSync = this.options.autoSync;\n                this.options.autoSync = false;\n                try {\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items[idx];\n                        var result = this.insert(index, item);\n                        pushed.push(result);\n                        var pristine = result.toJSON();\n                        if (this._isServerGrouped()) {\n                            pristine = this._wrapInEmptyGroup(pristine);\n                        }\n                        this._pristineData.push(pristine);\n                        index++;\n                    }\n                } finally {\n                    this.options.autoSync = autoSync;\n                }\n                if (pushed.length) {\n                    this.trigger('push', {\n                        type: 'create',\n                        items: pushed\n                    });\n                }\n            },\n            pushCreate: function (items) {\n                this.pushInsert(this._data.length, items);\n            },\n            pushUpdate: function (items) {\n                if (!isArray(items)) {\n                    items = [items];\n                }\n                var pushed = [];\n                for (var idx = 0; idx < items.length; idx++) {\n                    var item = items[idx];\n                    var model = this._createNewModel(item);\n                    var target = this.get(model.id);\n                    if (target) {\n                        pushed.push(target);\n                        target.accept(item);\n                        target.trigger(CHANGE);\n                        this._updatePristineForModel(target, item);\n                    } else {\n                        this.pushCreate(item);\n                    }\n                }\n                if (pushed.length) {\n                    this.trigger('push', {\n                        type: 'update',\n                        items: pushed\n                    });\n                }\n            },\n            pushDestroy: function (items) {\n                var pushed = this._removeItems(items);\n                if (pushed.length) {\n                    this.trigger('push', {\n                        type: 'destroy',\n                        items: pushed\n                    });\n                }\n            },\n            _removeItems: function (items) {\n                if (!isArray(items)) {\n                    items = [items];\n                }\n                var destroyed = [];\n                var autoSync = this.options.autoSync;\n                this.options.autoSync = false;\n                try {\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items[idx];\n                        var model = this._createNewModel(item);\n                        var found = false;\n                        this._eachItem(this._data, function (items) {\n                            for (var idx = 0; idx < items.length; idx++) {\n                                var item = items.at(idx);\n                                if (item.id === model.id) {\n                                    destroyed.push(item);\n                                    items.splice(idx, 1);\n                                    found = true;\n                                    break;\n                                }\n                            }\n                        });\n                        if (found) {\n                            this._removePristineForModel(model);\n                            this._destroyed.pop();\n                        }\n                    }\n                } finally {\n                    this.options.autoSync = autoSync;\n                }\n                return destroyed;\n            },\n            remove: function (model) {\n                var result, that = this, hasGroups = that._isServerGrouped();\n                this._eachItem(that._data, function (items) {\n                    if (that.options.useRanges && !that.options.serverPaging) {\n                        result = removeModel(items, model, that.currentRangeStart(), that.take());\n                    } else {\n                        result = removeModel(items, model);\n                    }\n                    if (result && hasGroups) {\n                        if (!result.isNew || !result.isNew()) {\n                            that._destroyed.push(result);\n                        }\n                        return true;\n                    }\n                });\n                this._removeModelFromRanges(model);\n                return model;\n            },\n            destroyed: function () {\n                return this._destroyed;\n            },\n            created: function () {\n                var idx, length, result = [], data = this._flatData(this._data, this.options.useRanges);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].isNew && data[idx].isNew()) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            updated: function () {\n                var idx, length, result = [], data = this._flatData(this._data, this.options.useRanges);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].isNew && !data[idx].isNew() && data[idx].dirty) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            sync: function () {\n                var that = this, created = [], updated = [], destroyed = that._destroyed;\n                var promise = $.Deferred().resolve().promise();\n                if (that.online()) {\n                    if (!that.reader.model) {\n                        return promise;\n                    }\n                    created = that.created();\n                    updated = that.updated();\n                    var promises = [];\n                    if (that.options.batch && that.transport.submit) {\n                        promises = that._sendSubmit(created, updated, destroyed);\n                    } else {\n                        promises.push.apply(promises, that._send('create', created));\n                        promises.push.apply(promises, that._send('update', updated));\n                        promises.push.apply(promises, that._send('destroy', destroyed));\n                    }\n                    promise = $.when.apply(null, promises).then(function () {\n                        var idx, length;\n                        for (idx = 0, length = arguments.length; idx < length; idx++) {\n                            if (arguments[idx]) {\n                                that._accept(arguments[idx]);\n                            }\n                        }\n                        that._storeData(true);\n                        that._change({ action: 'sync' });\n                        that.trigger(SYNC);\n                    });\n                } else {\n                    that._storeData(true);\n                    that._change({ action: 'sync' });\n                }\n                return promise;\n            },\n            cancelChanges: function (model) {\n                var that = this;\n                if (model instanceof kendo.data.Model) {\n                    that._cancelModel(model);\n                } else {\n                    that._destroyed = [];\n                    that._detachObservableParents();\n                    that._data = that._observe(that._pristineData);\n                    if (that.options.serverPaging) {\n                        that._total = that._pristineTotal;\n                    }\n                    that._ranges = [];\n                    that._addRange(that._data, 0);\n                    that._change();\n                    that._markOfflineUpdatesAsDirty();\n                }\n            },\n            _markOfflineUpdatesAsDirty: function () {\n                var that = this;\n                if (that.options.offlineStorage != null) {\n                    that._eachItem(that._data, function (items) {\n                        for (var idx = 0; idx < items.length; idx++) {\n                            var item = items.at(idx);\n                            if (item.__state__ == 'update' || item.__state__ == 'create') {\n                                item.dirty = true;\n                            }\n                        }\n                    });\n                }\n            },\n            hasChanges: function () {\n                var idx, length, data = this._flatData(this._data, this.options.useRanges);\n                if (this._destroyed.length) {\n                    return true;\n                }\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].isNew && data[idx].isNew() || data[idx].dirty) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _accept: function (result) {\n                var that = this, models = result.models, response = result.response, idx = 0, serverGroup = that._isServerGrouped(), pristine = that._pristineData, type = result.type, length;\n                that.trigger(REQUESTEND, {\n                    response: response,\n                    type: type\n                });\n                if (response && !isEmptyObject(response)) {\n                    response = that.reader.parse(response);\n                    if (that._handleCustomErrors(response)) {\n                        return;\n                    }\n                    response = that.reader.data(response);\n                    if (!isArray(response)) {\n                        response = [response];\n                    }\n                } else {\n                    response = $.map(models, function (model) {\n                        return model.toJSON();\n                    });\n                }\n                if (type === 'destroy') {\n                    that._destroyed = [];\n                }\n                for (idx = 0, length = models.length; idx < length; idx++) {\n                    if (type !== 'destroy') {\n                        models[idx].accept(response[idx]);\n                        if (type === 'create') {\n                            pristine.push(serverGroup ? that._wrapInEmptyGroup(models[idx]) : response[idx]);\n                        } else if (type === 'update') {\n                            that._updatePristineForModel(models[idx], response[idx]);\n                        }\n                    } else {\n                        that._removePristineForModel(models[idx]);\n                    }\n                }\n            },\n            _updatePristineForModel: function (model, values) {\n                this._executeOnPristineForModel(model, function (index, items) {\n                    kendo.deepExtend(items[index], values);\n                });\n            },\n            _executeOnPristineForModel: function (model, callback) {\n                this._eachPristineItem(function (items) {\n                    var index = indexOfPristineModel(items, model);\n                    if (index > -1) {\n                        callback(index, items);\n                        return true;\n                    }\n                });\n            },\n            _removePristineForModel: function (model) {\n                this._executeOnPristineForModel(model, function (index, items) {\n                    items.splice(index, 1);\n                });\n            },\n            _readData: function (data) {\n                var read = !this._isServerGrouped() ? this.reader.data : this.reader.groups;\n                return read.call(this.reader, data);\n            },\n            _eachPristineItem: function (callback) {\n                this._eachItem(this._pristineData, callback);\n            },\n            _eachItem: function (data, callback) {\n                if (data && data.length) {\n                    if (this._isServerGrouped()) {\n                        eachGroupItems(data, callback);\n                    } else {\n                        callback(data);\n                    }\n                }\n            },\n            _pristineForModel: function (model) {\n                var pristine, idx, callback = function (items) {\n                        idx = indexOfPristineModel(items, model);\n                        if (idx > -1) {\n                            pristine = items[idx];\n                            return true;\n                        }\n                    };\n                this._eachPristineItem(callback);\n                return pristine;\n            },\n            _cancelModel: function (model) {\n                var that = this;\n                var pristine = this._pristineForModel(model);\n                this._eachItem(this._data, function (items) {\n                    var idx = indexOfModel(items, model);\n                    if (idx >= 0) {\n                        if (pristine && (!model.isNew() || pristine.__state__)) {\n                            items[idx].accept(pristine);\n                            if (pristine.__state__ == 'update') {\n                                items[idx].dirty = true;\n                            }\n                        } else {\n                            items.splice(idx, 1);\n                            that._removeModelFromRanges(model);\n                        }\n                    }\n                });\n            },\n            _submit: function (promises, data) {\n                var that = this;\n                that.trigger(REQUESTSTART, { type: 'submit' });\n                that.trigger(PROGRESS);\n                that.transport.submit(extend({\n                    success: function (response, type) {\n                        var promise = $.grep(promises, function (x) {\n                            return x.type == type;\n                        })[0];\n                        if (promise) {\n                            promise.resolve({\n                                response: response,\n                                models: promise.models,\n                                type: type\n                            });\n                        }\n                    },\n                    error: function (response, status, error) {\n                        for (var idx = 0; idx < promises.length; idx++) {\n                            promises[idx].reject(response);\n                        }\n                        that.error(response, status, error);\n                    }\n                }, data));\n            },\n            _sendSubmit: function (created, updated, destroyed) {\n                var that = this, promises = [];\n                if (that.options.batch) {\n                    if (created.length) {\n                        promises.push($.Deferred(function (deferred) {\n                            deferred.type = 'create';\n                            deferred.models = created;\n                        }));\n                    }\n                    if (updated.length) {\n                        promises.push($.Deferred(function (deferred) {\n                            deferred.type = 'update';\n                            deferred.models = updated;\n                        }));\n                    }\n                    if (destroyed.length) {\n                        promises.push($.Deferred(function (deferred) {\n                            deferred.type = 'destroy';\n                            deferred.models = destroyed;\n                        }));\n                    }\n                    that._submit(promises, {\n                        data: {\n                            created: that.reader.serialize(toJSON(created)),\n                            updated: that.reader.serialize(toJSON(updated)),\n                            destroyed: that.reader.serialize(toJSON(destroyed))\n                        }\n                    });\n                }\n                return promises;\n            },\n            _promise: function (data, models, type) {\n                var that = this;\n                return $.Deferred(function (deferred) {\n                    that.trigger(REQUESTSTART, { type: type });\n                    that.trigger(PROGRESS);\n                    that.transport[type].call(that.transport, extend({\n                        success: function (response) {\n                            deferred.resolve({\n                                response: response,\n                                models: models,\n                                type: type\n                            });\n                        },\n                        error: function (response, status, error) {\n                            deferred.reject(response);\n                            that.error(response, status, error);\n                        }\n                    }, data));\n                }).promise();\n            },\n            _send: function (method, data) {\n                var that = this, idx, length, promises = [], converted = that.reader.serialize(toJSON(data));\n                if (that.options.batch) {\n                    if (data.length) {\n                        promises.push(that._promise({ data: { models: converted } }, data, method));\n                    }\n                } else {\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        promises.push(that._promise({ data: converted[idx] }, [data[idx]], method));\n                    }\n                }\n                return promises;\n            },\n            read: function (data) {\n                var that = this, params = that._params(data);\n                var deferred = $.Deferred();\n                that._queueRequest(params, function () {\n                    var isPrevented = that.trigger(REQUESTSTART, { type: 'read' });\n                    if (!isPrevented) {\n                        that.trigger(PROGRESS);\n                        that._ranges = [];\n                        that.trigger('reset');\n                        if (that.online()) {\n                            that.transport.read({\n                                data: params,\n                                success: function (data) {\n                                    that._ranges = [];\n                                    that.success(data, params);\n                                    deferred.resolve();\n                                },\n                                error: function () {\n                                    var args = slice.call(arguments);\n                                    that.error.apply(that, args);\n                                    deferred.reject.apply(deferred, args);\n                                }\n                            });\n                        } else if (that.options.offlineStorage != null) {\n                            that.success(that.offlineData(), params);\n                            deferred.resolve();\n                        }\n                    } else {\n                        that._dequeueRequest();\n                        deferred.resolve(isPrevented);\n                    }\n                });\n                return deferred.promise();\n            },\n            _readAggregates: function (data) {\n                return this.reader.aggregates(data);\n            },\n            success: function (data) {\n                var that = this, options = that.options;\n                that.trigger(REQUESTEND, {\n                    response: data,\n                    type: 'read'\n                });\n                if (that.online()) {\n                    data = that.reader.parse(data);\n                    if (that._handleCustomErrors(data)) {\n                        that._dequeueRequest();\n                        return;\n                    }\n                    that._total = that.reader.total(data);\n                    if (that._aggregate && options.serverAggregates) {\n                        that._aggregateResult = that._readAggregates(data);\n                    }\n                    data = that._readData(data);\n                    that._destroyed = [];\n                } else {\n                    data = that._readData(data);\n                    var items = [];\n                    var itemIds = {};\n                    var model = that.reader.model;\n                    var idField = model ? model.idField : 'id';\n                    var idx;\n                    for (idx = 0; idx < this._destroyed.length; idx++) {\n                        var id = this._destroyed[idx][idField];\n                        itemIds[id] = id;\n                    }\n                    for (idx = 0; idx < data.length; idx++) {\n                        var item = data[idx];\n                        var state = item.__state__;\n                        if (state == 'destroy') {\n                            if (!itemIds[item[idField]]) {\n                                this._destroyed.push(this._createNewModel(item));\n                            }\n                        } else {\n                            items.push(item);\n                        }\n                    }\n                    data = items;\n                    that._total = data.length;\n                }\n                that._pristineTotal = that._total;\n                that._pristineData = data.slice(0);\n                that._detachObservableParents();\n                if (that.options.endless) {\n                    that._data.unbind(CHANGE, that._changeHandler);\n                    data = that._observe(data);\n                    for (var i = 0; i < data.length; i++) {\n                        that._data.push(data[i]);\n                    }\n                    that._data.bind(CHANGE, that._changeHandler);\n                } else {\n                    that._data = that._observe(data);\n                }\n                that._markOfflineUpdatesAsDirty();\n                that._storeData();\n                that._addRange(that._data);\n                that._process(that._data);\n                that._dequeueRequest();\n            },\n            _detachObservableParents: function () {\n                if (this._data && this._shouldDetachObservableParents) {\n                    for (var idx = 0; idx < this._data.length; idx++) {\n                        if (this._data[idx].parent) {\n                            this._data[idx].parent = noop;\n                        }\n                    }\n                }\n            },\n            _storeData: function (updatePristine) {\n                var serverGrouping = this._isServerGrouped();\n                var model = this.reader.model;\n                function items(data) {\n                    var state = [];\n                    for (var idx = 0; idx < data.length; idx++) {\n                        var dataItem = data.at(idx);\n                        var item = dataItem.toJSON();\n                        if (serverGrouping && dataItem.items) {\n                            item.items = items(dataItem.items);\n                        } else {\n                            item.uid = dataItem.uid;\n                            if (model) {\n                                if (dataItem.isNew()) {\n                                    item.__state__ = 'create';\n                                } else if (dataItem.dirty) {\n                                    item.__state__ = 'update';\n                                }\n                            }\n                        }\n                        state.push(item);\n                    }\n                    return state;\n                }\n                if (this.options.offlineStorage != null) {\n                    var state = items(this._data);\n                    var destroyed = [];\n                    for (var idx = 0; idx < this._destroyed.length; idx++) {\n                        var item = this._destroyed[idx].toJSON();\n                        item.__state__ = 'destroy';\n                        destroyed.push(item);\n                    }\n                    this.offlineData(state.concat(destroyed));\n                    if (updatePristine) {\n                        this._pristineData = this._readData(state);\n                    }\n                }\n            },\n            _addRange: function (data, skip) {\n                var that = this, start = typeof skip !== 'undefined' ? skip : that._skip || 0, end = start + that._flatData(data, true).length;\n                that._ranges.push({\n                    start: start,\n                    end: end,\n                    data: data,\n                    timestamp: new Date().getTime()\n                });\n                that._ranges.sort(function (x, y) {\n                    return x.start - y.start;\n                });\n            },\n            error: function (xhr, status, errorThrown) {\n                this._dequeueRequest();\n                this.trigger(REQUESTEND, {});\n                this.trigger(ERROR, {\n                    xhr: xhr,\n                    status: status,\n                    errorThrown: errorThrown\n                });\n            },\n            _params: function (data) {\n                var that = this, options = extend({\n                        take: that.take(),\n                        skip: that.skip(),\n                        page: that.page(),\n                        pageSize: that.pageSize(),\n                        sort: that._sort,\n                        filter: that._filter,\n                        group: that._group,\n                        aggregate: that._aggregate\n                    }, data);\n                if (!that.options.serverPaging) {\n                    delete options.take;\n                    delete options.skip;\n                    delete options.page;\n                    delete options.pageSize;\n                }\n                if (!that.options.serverGrouping) {\n                    delete options.group;\n                } else if (that.reader.model && options.group) {\n                    options.group = convertDescriptorsField(options.group, that.reader.model);\n                }\n                if (!that.options.serverFiltering) {\n                    delete options.filter;\n                } else if (that.reader.model && options.filter) {\n                    options.filter = convertFilterDescriptorsField(options.filter, that.reader.model);\n                }\n                if (!that.options.serverSorting) {\n                    delete options.sort;\n                } else if (that.reader.model && options.sort) {\n                    options.sort = convertDescriptorsField(options.sort, that.reader.model);\n                }\n                if (!that.options.serverAggregates) {\n                    delete options.aggregate;\n                } else if (that.reader.model && options.aggregate) {\n                    options.aggregate = convertDescriptorsField(options.aggregate, that.reader.model);\n                }\n                return options;\n            },\n            _queueRequest: function (options, callback) {\n                var that = this;\n                if (!that._requestInProgress) {\n                    that._requestInProgress = true;\n                    that._pending = undefined;\n                    callback();\n                } else {\n                    that._pending = {\n                        callback: proxy(callback, that),\n                        options: options\n                    };\n                }\n            },\n            _dequeueRequest: function () {\n                var that = this;\n                that._requestInProgress = false;\n                if (that._pending) {\n                    that._queueRequest(that._pending.options, that._pending.callback);\n                }\n            },\n            _handleCustomErrors: function (response) {\n                if (this.reader.errors) {\n                    var errors = this.reader.errors(response);\n                    if (errors) {\n                        this.trigger(ERROR, {\n                            xhr: null,\n                            status: 'customerror',\n                            errorThrown: 'custom error',\n                            errors: errors\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _shouldWrap: function (data) {\n                var model = this.reader.model;\n                if (model && data.length) {\n                    return !(data[0] instanceof model);\n                }\n                return false;\n            },\n            _observe: function (data) {\n                var that = this, model = that.reader.model;\n                that._shouldDetachObservableParents = true;\n                if (data instanceof ObservableArray) {\n                    that._shouldDetachObservableParents = false;\n                    if (that._shouldWrap(data)) {\n                        data.type = that.reader.model;\n                        data.wrapAll(data, data);\n                    }\n                } else {\n                    var arrayType = that.pageSize() && !that.options.serverPaging ? LazyObservableArray : ObservableArray;\n                    data = new arrayType(data, that.reader.model);\n                    data.parent = function () {\n                        return that.parent();\n                    };\n                }\n                if (that._isServerGrouped()) {\n                    wrapGroupItems(data, model);\n                }\n                if (that._changeHandler && that._data && that._data instanceof ObservableArray) {\n                    that._data.unbind(CHANGE, that._changeHandler);\n                } else {\n                    that._changeHandler = proxy(that._change, that);\n                }\n                return data.bind(CHANGE, that._changeHandler);\n            },\n            _updateTotalForAction: function (action, items) {\n                var that = this;\n                var total = parseInt(that._total, 10);\n                if (!isNumber(that._total)) {\n                    total = parseInt(that._pristineTotal, 10);\n                }\n                if (action === 'add') {\n                    total += items.length;\n                } else if (action === 'remove') {\n                    total -= items.length;\n                } else if (action !== 'itemchange' && action !== 'sync' && !that.options.serverPaging) {\n                    total = that._pristineTotal;\n                } else if (action === 'sync') {\n                    total = that._pristineTotal = parseInt(that._total, 10);\n                }\n                that._total = total;\n            },\n            _change: function (e) {\n                var that = this, idx, length, action = e ? e.action : '';\n                if (action === 'remove') {\n                    for (idx = 0, length = e.items.length; idx < length; idx++) {\n                        if (!e.items[idx].isNew || !e.items[idx].isNew()) {\n                            that._destroyed.push(e.items[idx]);\n                        }\n                    }\n                }\n                if (that.options.autoSync && (action === 'add' || action === 'remove' || action === 'itemchange')) {\n                    var handler = function (args) {\n                        if (args.action === 'sync') {\n                            that.unbind('change', handler);\n                            that._updateTotalForAction(action, e.items);\n                        }\n                    };\n                    that.first('change', handler);\n                    that.sync();\n                } else {\n                    that._updateTotalForAction(action, e ? e.items : []);\n                    that._process(that._data, e);\n                }\n            },\n            _calculateAggregates: function (data, options) {\n                options = options || {};\n                var query = new Query(data), aggregates = options.aggregate, filter = options.filter;\n                if (filter) {\n                    query = query.filter(filter);\n                }\n                return query.aggregate(aggregates);\n            },\n            _process: function (data, e) {\n                var that = this, options = {}, result;\n                if (that.options.serverPaging !== true) {\n                    options.skip = that._skip;\n                    options.take = that._take || that._pageSize;\n                    if (options.skip === undefined && that._page !== undefined && that._pageSize !== undefined) {\n                        options.skip = (that._page - 1) * that._pageSize;\n                    }\n                }\n                if (that.options.serverSorting !== true) {\n                    options.sort = that._sort;\n                }\n                if (that.options.serverFiltering !== true) {\n                    options.filter = that._filter;\n                }\n                if (that.options.serverGrouping !== true) {\n                    options.group = that._group;\n                }\n                if (that.options.serverAggregates !== true) {\n                    options.aggregate = that._aggregate;\n                    that._aggregateResult = that._calculateAggregates(data, options);\n                }\n                result = that._queryProcess(data, options);\n                that.view(result.data);\n                if (result.total !== undefined && !that.options.serverFiltering) {\n                    that._total = result.total;\n                }\n                e = e || {};\n                e.items = e.items || that._view;\n                that.trigger(CHANGE, e);\n            },\n            _queryProcess: function (data, options) {\n                if (this.options.inPlaceSort) {\n                    return Query.process(data, options, this.options.inPlaceSort);\n                } else {\n                    return Query.process(data, options);\n                }\n            },\n            _mergeState: function (options) {\n                var that = this;\n                if (options !== undefined) {\n                    that._pageSize = options.pageSize;\n                    that._page = options.page;\n                    that._sort = options.sort;\n                    that._filter = options.filter;\n                    that._group = options.group;\n                    that._aggregate = options.aggregate;\n                    that._skip = that._currentRangeStart = options.skip;\n                    that._take = options.take;\n                    if (that._skip === undefined) {\n                        that._skip = that._currentRangeStart = that.skip();\n                        options.skip = that.skip();\n                    }\n                    if (that._take === undefined && that._pageSize !== undefined) {\n                        that._take = that._pageSize;\n                        options.take = that._take;\n                    }\n                    if (options.sort) {\n                        that._sort = options.sort = normalizeSort(options.sort);\n                    }\n                    if (options.filter) {\n                        that._filter = options.filter = normalizeFilter(options.filter);\n                    }\n                    if (options.group) {\n                        that._group = options.group = normalizeGroup(options.group);\n                    }\n                    if (options.aggregate) {\n                        that._aggregate = options.aggregate = normalizeAggregate(options.aggregate);\n                    }\n                }\n                return options;\n            },\n            query: function (options) {\n                var result;\n                var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n                if (remote || (this._data === undefined || this._data.length === 0) && !this._destroyed.length) {\n                    if (this.options.endless) {\n                        var moreItemsCount = options.pageSize - this.pageSize();\n                        if (moreItemsCount > 0) {\n                            moreItemsCount = this.pageSize();\n                            options.page = options.pageSize / moreItemsCount;\n                            options.pageSize = moreItemsCount;\n                        } else {\n                            options.page = 1;\n                            this.options.endless = false;\n                        }\n                    }\n                    return this.read(this._mergeState(options));\n                }\n                var isPrevented = this.trigger(REQUESTSTART, { type: 'read' });\n                if (!isPrevented) {\n                    this.trigger(PROGRESS);\n                    result = this._queryProcess(this._data, this._mergeState(options));\n                    if (!this.options.serverFiltering) {\n                        if (result.total !== undefined) {\n                            this._total = result.total;\n                        } else {\n                            this._total = this._data.length;\n                        }\n                    }\n                    this._aggregateResult = this._calculateAggregates(this._data, options);\n                    this.view(result.data);\n                    this.trigger(REQUESTEND, { type: 'read' });\n                    this.trigger(CHANGE, { items: result.data });\n                }\n                return $.Deferred().resolve(isPrevented).promise();\n            },\n            fetch: function (callback) {\n                var that = this;\n                var fn = function (isPrevented) {\n                    if (isPrevented !== true && isFunction(callback)) {\n                        callback.call(that);\n                    }\n                };\n                return this._query().then(fn);\n            },\n            _query: function (options) {\n                var that = this;\n                return that.query(extend({}, {\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that.sort(),\n                    filter: that.filter(),\n                    group: that.group(),\n                    aggregate: that.aggregate()\n                }, options));\n            },\n            next: function (options) {\n                var that = this, page = that.page(), total = that.total();\n                options = options || {};\n                if (!page || total && page + 1 > that.totalPages()) {\n                    return;\n                }\n                that._skip = that._currentRangeStart = page * that.take();\n                page += 1;\n                options.page = page;\n                that._query(options);\n                return page;\n            },\n            prev: function (options) {\n                var that = this, page = that.page();\n                options = options || {};\n                if (!page || page === 1) {\n                    return;\n                }\n                that._skip = that._currentRangeStart = that._skip - that.take();\n                page -= 1;\n                options.page = page;\n                that._query(options);\n                return page;\n            },\n            page: function (val) {\n                var that = this, skip;\n                if (val !== undefined) {\n                    val = math.max(math.min(math.max(val, 1), that.totalPages()), 1);\n                    that._query({ page: val });\n                    return;\n                }\n                skip = that.skip();\n                return skip !== undefined ? math.round((skip || 0) / (that.take() || 1)) + 1 : undefined;\n            },\n            pageSize: function (val) {\n                var that = this;\n                if (val !== undefined) {\n                    if (that.options.inPlaceSort) {\n                        that._query({\n                            pageSize: val,\n                            page: 1,\n                            sort: {}\n                        });\n                    } else {\n                        that._query({\n                            pageSize: val,\n                            page: 1\n                        });\n                    }\n                    return;\n                }\n                return that.take();\n            },\n            sort: function (val) {\n                var that = this;\n                if (val !== undefined) {\n                    that._query({ sort: val });\n                    return;\n                }\n                return that._sort;\n            },\n            filter: function (val) {\n                var that = this;\n                if (val === undefined) {\n                    return that._filter;\n                }\n                that.trigger('reset');\n                that._query({\n                    filter: val,\n                    page: 1\n                });\n            },\n            group: function (val) {\n                var that = this;\n                if (val !== undefined) {\n                    that._query({ group: val });\n                    return;\n                }\n                return that._group;\n            },\n            total: function () {\n                return parseInt(this._total || 0, 10);\n            },\n            aggregate: function (val) {\n                var that = this;\n                if (val !== undefined) {\n                    that._query({ aggregate: val });\n                    return;\n                }\n                return that._aggregate;\n            },\n            aggregates: function () {\n                var result = this._aggregateResult;\n                if (isEmptyObject(result)) {\n                    result = this._emptyAggregates(this.aggregate());\n                }\n                return result;\n            },\n            _emptyAggregates: function (aggregates) {\n                var result = {};\n                if (!isEmptyObject(aggregates)) {\n                    var aggregate = {};\n                    if (!isArray(aggregates)) {\n                        aggregates = [aggregates];\n                    }\n                    for (var idx = 0; idx < aggregates.length; idx++) {\n                        aggregate[aggregates[idx].aggregate] = 0;\n                        result[aggregates[idx].field] = aggregate;\n                    }\n                }\n                return result;\n            },\n            _wrapInEmptyGroup: function (model) {\n                var groups = this.group(), parent, group, idx, length;\n                for (idx = groups.length - 1, length = 0; idx >= length; idx--) {\n                    group = groups[idx];\n                    parent = {\n                        value: model.get(group.field),\n                        field: group.field,\n                        items: parent ? [parent] : [model],\n                        hasSubgroups: !!parent,\n                        aggregates: this._emptyAggregates(group.aggregates)\n                    };\n                }\n                return parent;\n            },\n            totalPages: function () {\n                var that = this, pageSize = that.pageSize() || that.total();\n                return math.ceil((that.total() || 0) / pageSize);\n            },\n            inRange: function (skip, take) {\n                var that = this, end = math.min(skip + take, that.total());\n                if (!that.options.serverPaging && that._data.length > 0) {\n                    return true;\n                }\n                return that._findRange(skip, end).length > 0;\n            },\n            lastRange: function () {\n                var ranges = this._ranges;\n                return ranges[ranges.length - 1] || {\n                    start: 0,\n                    end: 0,\n                    data: []\n                };\n            },\n            firstItemUid: function () {\n                var ranges = this._ranges;\n                return ranges.length && ranges[0].data.length && ranges[0].data[0].uid;\n            },\n            enableRequestsInProgress: function () {\n                this._skipRequestsInProgress = false;\n            },\n            _timeStamp: function () {\n                return new Date().getTime();\n            },\n            range: function (skip, take, callback) {\n                this._currentRequestTimeStamp = this._timeStamp();\n                this._skipRequestsInProgress = true;\n                skip = math.min(skip || 0, this.total());\n                var that = this, pageSkip = math.max(math.floor(skip / take), 0) * take, size = math.min(pageSkip + take, that.total()), data;\n                data = that._findRange(skip, math.min(skip + take, that.total()));\n                if (data.length) {\n                    that._pending = undefined;\n                    that._skip = skip > that.skip() ? math.min(size, (that.totalPages() - 1) * that.take()) : pageSkip;\n                    that._currentRangeStart = skip;\n                    that._take = take;\n                    var paging = that.options.serverPaging;\n                    var sorting = that.options.serverSorting;\n                    var filtering = that.options.serverFiltering;\n                    var aggregates = that.options.serverAggregates;\n                    try {\n                        that.options.serverPaging = true;\n                        if (!that._isServerGrouped() && !(that.group() && that.group().length)) {\n                            that.options.serverSorting = true;\n                        }\n                        that.options.serverFiltering = true;\n                        that.options.serverPaging = true;\n                        that.options.serverAggregates = true;\n                        if (paging) {\n                            that._detachObservableParents();\n                            that._data = data = that._observe(data);\n                        }\n                        that._process(data);\n                    } finally {\n                        that.options.serverPaging = paging;\n                        that.options.serverSorting = sorting;\n                        that.options.serverFiltering = filtering;\n                        that.options.serverAggregates = aggregates;\n                    }\n                    if (isFunction(callback)) {\n                        callback();\n                    }\n                    return;\n                }\n                if (take !== undefined) {\n                    if (!that._rangeExists(pageSkip, size)) {\n                        that.prefetch(pageSkip, take, function () {\n                            if (skip > pageSkip && size < that.total() && !that._rangeExists(size, math.min(size + take, that.total()))) {\n                                that.prefetch(size, take, function () {\n                                    that.range(skip, take, callback);\n                                });\n                            } else {\n                                that.range(skip, take, callback);\n                            }\n                        });\n                    } else if (pageSkip < skip) {\n                        that.prefetch(size, take, function () {\n                            that.range(skip, take, callback);\n                        });\n                    }\n                }\n            },\n            _findRange: function (start, end) {\n                var that = this, ranges = that._ranges, range, data = [], skipIdx, takeIdx, startIndex, endIndex, rangeData, rangeEnd, processed, options = that.options, remote = options.serverSorting || options.serverPaging || options.serverFiltering || options.serverGrouping || options.serverAggregates, flatData, count, length;\n                for (skipIdx = 0, length = ranges.length; skipIdx < length; skipIdx++) {\n                    range = ranges[skipIdx];\n                    if (start >= range.start && start <= range.end) {\n                        count = 0;\n                        for (takeIdx = skipIdx; takeIdx < length; takeIdx++) {\n                            range = ranges[takeIdx];\n                            flatData = that._flatData(range.data, true);\n                            if (flatData.length && start + count >= range.start) {\n                                rangeData = range.data;\n                                rangeEnd = range.end;\n                                if (!remote) {\n                                    if (options.inPlaceSort) {\n                                        processed = that._queryProcess(range.data, { filter: that.filter() });\n                                    } else {\n                                        var sort = normalizeGroup(that.group() || []).concat(normalizeSort(that.sort() || []));\n                                        processed = that._queryProcess(range.data, {\n                                            sort: sort,\n                                            filter: that.filter()\n                                        });\n                                    }\n                                    flatData = rangeData = processed.data;\n                                    if (processed.total !== undefined) {\n                                        rangeEnd = processed.total;\n                                    }\n                                }\n                                startIndex = 0;\n                                if (start + count > range.start) {\n                                    startIndex = start + count - range.start;\n                                }\n                                endIndex = flatData.length;\n                                if (rangeEnd > end) {\n                                    endIndex = endIndex - (rangeEnd - end);\n                                }\n                                count += endIndex - startIndex;\n                                data = that._mergeGroups(data, rangeData, startIndex, endIndex);\n                                if (end <= range.end && count == end - start) {\n                                    return data;\n                                }\n                            }\n                        }\n                        break;\n                    }\n                }\n                return [];\n            },\n            _mergeGroups: function (data, range, skip, take) {\n                if (this._isServerGrouped()) {\n                    var temp = range.toJSON(), prevGroup;\n                    if (data.length) {\n                        prevGroup = data[data.length - 1];\n                    }\n                    mergeGroups(prevGroup, temp, skip, take);\n                    return data.concat(temp);\n                }\n                return data.concat(range.slice(skip, take));\n            },\n            skip: function () {\n                var that = this;\n                if (that._skip === undefined) {\n                    return that._page !== undefined ? (that._page - 1) * (that.take() || 1) : undefined;\n                }\n                return that._skip;\n            },\n            currentRangeStart: function () {\n                return this._currentRangeStart || 0;\n            },\n            take: function () {\n                return this._take || this._pageSize;\n            },\n            _prefetchSuccessHandler: function (skip, size, callback, force) {\n                var that = this;\n                var timestamp = that._timeStamp();\n                return function (data) {\n                    var found = false, range = {\n                            start: skip,\n                            end: size,\n                            data: [],\n                            timestamp: that._timeStamp()\n                        }, idx, length, temp;\n                    that._dequeueRequest();\n                    that.trigger(REQUESTEND, {\n                        response: data,\n                        type: 'read'\n                    });\n                    data = that.reader.parse(data);\n                    temp = that._readData(data);\n                    if (temp.length) {\n                        for (idx = 0, length = that._ranges.length; idx < length; idx++) {\n                            if (that._ranges[idx].start === skip) {\n                                found = true;\n                                range = that._ranges[idx];\n                                break;\n                            }\n                        }\n                        if (!found) {\n                            that._ranges.push(range);\n                        }\n                    }\n                    range.data = that._observe(temp);\n                    range.end = range.start + that._flatData(range.data, true).length;\n                    that._ranges.sort(function (x, y) {\n                        return x.start - y.start;\n                    });\n                    that._total = that.reader.total(data);\n                    if (force || (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress)) {\n                        if (callback && temp.length) {\n                            callback();\n                        } else {\n                            that.trigger(CHANGE, {});\n                        }\n                    }\n                };\n            },\n            prefetch: function (skip, take, callback) {\n                var that = this, size = math.min(skip + take, that.total()), options = {\n                        take: take,\n                        skip: skip,\n                        page: skip / take + 1,\n                        pageSize: take,\n                        sort: that._sort,\n                        filter: that._filter,\n                        group: that._group,\n                        aggregate: that._aggregate\n                    };\n                if (!that._rangeExists(skip, size)) {\n                    clearTimeout(that._timeout);\n                    that._timeout = setTimeout(function () {\n                        that._queueRequest(options, function () {\n                            if (!that.trigger(REQUESTSTART, { type: 'read' })) {\n                                that.transport.read({\n                                    data: that._params(options),\n                                    success: that._prefetchSuccessHandler(skip, size, callback),\n                                    error: function () {\n                                        var args = slice.call(arguments);\n                                        that.error.apply(that, args);\n                                    }\n                                });\n                            } else {\n                                that._dequeueRequest();\n                            }\n                        });\n                    }, 100);\n                } else if (callback) {\n                    callback();\n                }\n            },\n            _multiplePrefetch: function (skip, take, callback) {\n                var that = this, size = math.min(skip + take, that.total()), options = {\n                        take: take,\n                        skip: skip,\n                        page: skip / take + 1,\n                        pageSize: take,\n                        sort: that._sort,\n                        filter: that._filter,\n                        group: that._group,\n                        aggregate: that._aggregate\n                    };\n                if (!that._rangeExists(skip, size)) {\n                    if (!that.trigger(REQUESTSTART, { type: 'read' })) {\n                        that.transport.read({\n                            data: that._params(options),\n                            success: that._prefetchSuccessHandler(skip, size, callback, true)\n                        });\n                    }\n                } else if (callback) {\n                    callback();\n                }\n            },\n            _rangeExists: function (start, end) {\n                var that = this, ranges = that._ranges, idx, length;\n                for (idx = 0, length = ranges.length; idx < length; idx++) {\n                    if (ranges[idx].start <= start && ranges[idx].end >= end) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _removeModelFromRanges: function (model) {\n                var that = this;\n                var result, found, range;\n                for (var idx = 0, length = this._ranges.length; idx < length; idx++) {\n                    range = this._ranges[idx];\n                    this._eachItem(range.data, function (items) {\n                        if (that.options.useRanges && !that.options.serverPaging) {\n                            result = removeModel(items, model, that.currentRangeStart(), that.take());\n                        } else {\n                            result = removeModel(items, model);\n                        }\n                        if (result) {\n                            found = true;\n                        }\n                    });\n                    if (found) {\n                        break;\n                    }\n                }\n                that._updateRangesLength();\n            },\n            _insertModelInRange: function (index, model) {\n                var that = this;\n                var ranges = that._ranges || [];\n                var rangesLength = ranges.length;\n                var range;\n                var i;\n                for (i = 0; i < rangesLength; i++) {\n                    range = ranges[i];\n                    if (range.start <= index && range.end >= index) {\n                        if (!that._getByUid(model.uid, range.data)) {\n                            if (that._isServerGrouped()) {\n                                range.data.splice(index, 0, that._wrapInEmptyGroup(model));\n                            } else {\n                                range.data.splice(index, 0, model);\n                            }\n                        }\n                        break;\n                    }\n                }\n                that._updateRangesLength();\n            },\n            _updateRangesLength: function () {\n                var that = this;\n                var ranges = that._ranges || [];\n                var rangesLength = ranges.length;\n                var mismatchFound = false;\n                var mismatchLength = 0;\n                var lengthDifference = 0;\n                var range;\n                var i;\n                for (i = 0; i < rangesLength; i++) {\n                    range = ranges[i];\n                    lengthDifference = that._flatData(range.data, true).length - math.abs(range.end - range.start);\n                    if (!mismatchFound && lengthDifference !== 0) {\n                        mismatchFound = true;\n                        mismatchLength = lengthDifference;\n                        range.end += mismatchLength;\n                        continue;\n                    }\n                    if (mismatchFound) {\n                        range.start += mismatchLength;\n                        range.end += mismatchLength;\n                    }\n                }\n            }\n        });\n        var Transport = {};\n        Transport.create = function (options, data, dataSource) {\n            var transport, transportOptions = options.transport ? $.extend({}, options.transport) : null;\n            if (transportOptions) {\n                transportOptions.read = typeof transportOptions.read === STRING ? { url: transportOptions.read } : transportOptions.read;\n                if (options.type === 'jsdo') {\n                    transportOptions.dataSource = dataSource;\n                }\n                if (options.type) {\n                    kendo.data.transports = kendo.data.transports || {};\n                    kendo.data.schemas = kendo.data.schemas || {};\n                    if (!kendo.data.transports[options.type]) {\n                        kendo.logToConsole('Unknown DataSource transport type \\'' + options.type + '\\'.\\nVerify that registration scripts for this type are included after Kendo UI on the page.', 'warn');\n                    } else if (!isPlainObject(kendo.data.transports[options.type])) {\n                        transport = new kendo.data.transports[options.type](extend(transportOptions, { data: data }));\n                    } else {\n                        transportOptions = extend(true, {}, kendo.data.transports[options.type], transportOptions);\n                    }\n                    options.schema = extend(true, {}, kendo.data.schemas[options.type], options.schema);\n                }\n                if (!transport) {\n                    transport = isFunction(transportOptions.read) ? transportOptions : new RemoteTransport(transportOptions);\n                }\n            } else {\n                transport = new LocalTransport({ data: options.data || [] });\n            }\n            return transport;\n        };\n        DataSource.create = function (options) {\n            if (isArray(options) || options instanceof ObservableArray) {\n                options = { data: options };\n            }\n            var dataSource = options || {}, data = dataSource.data, fields = dataSource.fields, table = dataSource.table, select = dataSource.select, idx, length, model = {}, field;\n            if (!data && fields && !dataSource.transport) {\n                if (table) {\n                    data = inferTable(table, fields);\n                } else if (select) {\n                    data = inferSelect(select, fields);\n                    if (dataSource.group === undefined && data[0] && data[0].optgroup !== undefined) {\n                        dataSource.group = 'optgroup';\n                    }\n                }\n            }\n            if (kendo.data.Model && fields && (!dataSource.schema || !dataSource.schema.model)) {\n                for (idx = 0, length = fields.length; idx < length; idx++) {\n                    field = fields[idx];\n                    if (field.type) {\n                        model[field.field] = field;\n                    }\n                }\n                if (!isEmptyObject(model)) {\n                    dataSource.schema = extend(true, dataSource.schema, { model: { fields: model } });\n                }\n            }\n            dataSource.data = data;\n            select = null;\n            dataSource.select = null;\n            table = null;\n            dataSource.table = null;\n            return dataSource instanceof DataSource ? dataSource : new DataSource(dataSource);\n        };\n        function inferSelect(select, fields) {\n            select = $(select)[0];\n            var options = select.options;\n            var firstField = fields[0];\n            var secondField = fields[1];\n            var data = [];\n            var idx, length;\n            var optgroup;\n            var option;\n            var record;\n            var value;\n            for (idx = 0, length = options.length; idx < length; idx++) {\n                record = {};\n                option = options[idx];\n                optgroup = option.parentNode;\n                if (optgroup === select) {\n                    optgroup = null;\n                }\n                if (option.disabled || optgroup && optgroup.disabled) {\n                    continue;\n                }\n                if (optgroup) {\n                    record.optgroup = optgroup.label;\n                }\n                record[firstField.field] = option.text;\n                value = option.attributes.value;\n                if (value && value.specified) {\n                    value = option.value;\n                } else {\n                    value = option.text;\n                }\n                record[secondField.field] = value;\n                data.push(record);\n            }\n            return data;\n        }\n        function inferTable(table, fields) {\n            var tbody = $(table)[0].tBodies[0], rows = tbody ? tbody.rows : [], idx, length, fieldIndex, fieldCount = fields.length, data = [], cells, record, cell, empty;\n            for (idx = 0, length = rows.length; idx < length; idx++) {\n                record = {};\n                empty = true;\n                cells = rows[idx].cells;\n                for (fieldIndex = 0; fieldIndex < fieldCount; fieldIndex++) {\n                    cell = cells[fieldIndex];\n                    if (cell.nodeName.toLowerCase() !== 'th') {\n                        empty = false;\n                        record[fields[fieldIndex].field] = cell.innerHTML;\n                    }\n                }\n                if (!empty) {\n                    data.push(record);\n                }\n            }\n            return data;\n        }\n        var Node = Model.define({\n            idField: 'id',\n            init: function (value) {\n                var that = this, hasChildren = that.hasChildren || value && value.hasChildren, childrenField = 'items', childrenOptions = {};\n                kendo.data.Model.fn.init.call(that, value);\n                if (typeof that.children === STRING) {\n                    childrenField = that.children;\n                }\n                childrenOptions = {\n                    schema: {\n                        data: childrenField,\n                        model: {\n                            hasChildren: hasChildren,\n                            id: that.idField,\n                            fields: that.fields\n                        }\n                    }\n                };\n                if (typeof that.children !== STRING) {\n                    extend(childrenOptions, that.children);\n                }\n                childrenOptions.data = value;\n                if (!hasChildren) {\n                    hasChildren = childrenOptions.schema.data;\n                }\n                if (typeof hasChildren === STRING) {\n                    hasChildren = kendo.getter(hasChildren);\n                }\n                if (isFunction(hasChildren)) {\n                    var hasChildrenObject = hasChildren.call(that, that);\n                    if (hasChildrenObject && hasChildrenObject.length === 0) {\n                        that.hasChildren = false;\n                    } else {\n                        that.hasChildren = !!hasChildrenObject;\n                    }\n                }\n                that._childrenOptions = childrenOptions;\n                if (that.hasChildren) {\n                    that._initChildren();\n                }\n                that._loaded = !!(value && value._loaded);\n            },\n            _initChildren: function () {\n                var that = this;\n                var children, transport, parameterMap;\n                if (!(that.children instanceof HierarchicalDataSource)) {\n                    children = that.children = new HierarchicalDataSource(that._childrenOptions);\n                    transport = children.transport;\n                    parameterMap = transport.parameterMap;\n                    transport.parameterMap = function (data, type) {\n                        data[that.idField || 'id'] = that.id;\n                        if (parameterMap) {\n                            data = parameterMap(data, type);\n                        }\n                        return data;\n                    };\n                    children.parent = function () {\n                        return that;\n                    };\n                    children.bind(CHANGE, function (e) {\n                        e.node = e.node || that;\n                        that.trigger(CHANGE, e);\n                    });\n                    children.bind(ERROR, function (e) {\n                        var collection = that.parent();\n                        if (collection) {\n                            e.node = e.node || that;\n                            collection.trigger(ERROR, e);\n                        }\n                    });\n                    that._updateChildrenField();\n                }\n            },\n            append: function (model) {\n                this._initChildren();\n                this.loaded(true);\n                this.children.add(model);\n            },\n            hasChildren: false,\n            level: function () {\n                var parentNode = this.parentNode(), level = 0;\n                while (parentNode && parentNode.parentNode) {\n                    level++;\n                    parentNode = parentNode.parentNode ? parentNode.parentNode() : null;\n                }\n                return level;\n            },\n            _updateChildrenField: function () {\n                var fieldName = this._childrenOptions.schema.data;\n                this[fieldName || 'items'] = this.children.data();\n            },\n            _childrenLoaded: function () {\n                this._loaded = true;\n                this._updateChildrenField();\n            },\n            load: function () {\n                var options = {};\n                var method = '_query';\n                var children, promise;\n                if (this.hasChildren) {\n                    this._initChildren();\n                    children = this.children;\n                    options[this.idField || 'id'] = this.id;\n                    if (!this._loaded) {\n                        children._data = undefined;\n                        method = 'read';\n                    }\n                    children.one(CHANGE, proxy(this._childrenLoaded, this));\n                    if (this._matchFilter) {\n                        options.filter = {\n                            field: '_matchFilter',\n                            operator: 'eq',\n                            value: true\n                        };\n                    }\n                    promise = children[method](options);\n                } else {\n                    this.loaded(true);\n                }\n                return promise || $.Deferred().resolve().promise();\n            },\n            parentNode: function () {\n                var array = this.parent();\n                return array.parent();\n            },\n            loaded: function (value) {\n                if (value !== undefined) {\n                    this._loaded = value;\n                } else {\n                    return this._loaded;\n                }\n            },\n            shouldSerialize: function (field) {\n                return Model.fn.shouldSerialize.call(this, field) && field !== 'children' && field !== '_loaded' && field !== 'hasChildren' && field !== '_childrenOptions';\n            }\n        });\n        function dataMethod(name) {\n            return function () {\n                var data = this._data, result = DataSource.fn[name].apply(this, slice.call(arguments));\n                if (this._data != data) {\n                    this._attachBubbleHandlers();\n                }\n                return result;\n            };\n        }\n        var HierarchicalDataSource = DataSource.extend({\n            init: function (options) {\n                var node = Node.define({ children: options });\n                if (options.filter && !options.serverFiltering) {\n                    this._hierarchicalFilter = options.filter;\n                    options.filter = null;\n                }\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    schema: {\n                        modelBase: node,\n                        model: node\n                    }\n                }, options));\n                this._attachBubbleHandlers();\n            },\n            _attachBubbleHandlers: function () {\n                var that = this;\n                that._data.bind(ERROR, function (e) {\n                    that.trigger(ERROR, e);\n                });\n            },\n            read: function (data) {\n                var result = DataSource.fn.read.call(this, data);\n                if (this._hierarchicalFilter) {\n                    if (this._data && this._data.length > 0) {\n                        this.filter(this._hierarchicalFilter);\n                    } else {\n                        this.options.filter = this._hierarchicalFilter;\n                        this._filter = normalizeFilter(this.options.filter);\n                        this._hierarchicalFilter = null;\n                    }\n                }\n                return result;\n            },\n            remove: function (node) {\n                var parentNode = node.parentNode(), dataSource = this, result;\n                if (parentNode && parentNode._initChildren) {\n                    dataSource = parentNode.children;\n                }\n                result = DataSource.fn.remove.call(dataSource, node);\n                if (parentNode && !dataSource.data().length) {\n                    parentNode.hasChildren = false;\n                }\n                return result;\n            },\n            success: dataMethod('success'),\n            data: dataMethod('data'),\n            insert: function (index, model) {\n                var parentNode = this.parent();\n                if (parentNode && parentNode._initChildren) {\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n                return DataSource.fn.insert.call(this, index, model);\n            },\n            filter: function (val) {\n                if (val === undefined) {\n                    return this._filter;\n                }\n                if (!this.options.serverFiltering && this._markHierarchicalQuery(val)) {\n                    val = {\n                        logic: 'or',\n                        filters: [\n                            val,\n                            {\n                                field: '_matchFilter',\n                                operator: 'equals',\n                                value: true\n                            }\n                        ]\n                    };\n                }\n                this.trigger('reset');\n                this._query({\n                    filter: val,\n                    page: 1\n                });\n            },\n            _markHierarchicalQuery: function (expressions) {\n                var compiled;\n                var predicate;\n                var fields;\n                var operators;\n                var filter;\n                expressions = normalizeFilter(expressions);\n                if (!expressions || expressions.filters.length === 0) {\n                    this._updateHierarchicalFilter(function () {\n                        return true;\n                    });\n                    return false;\n                }\n                compiled = Query.filterExpr(expressions);\n                fields = compiled.fields;\n                operators = compiled.operators;\n                predicate = filter = new Function('d, __f, __o', 'return ' + compiled.expression);\n                if (fields.length || operators.length) {\n                    filter = function (d) {\n                        return predicate(d, fields, operators);\n                    };\n                }\n                this._updateHierarchicalFilter(filter);\n                return true;\n            },\n            _updateHierarchicalFilter: function (filter) {\n                var current;\n                var data = this._data;\n                var result = false;\n                for (var idx = 0; idx < data.length; idx++) {\n                    current = data[idx];\n                    if (current.hasChildren) {\n                        current._matchFilter = current.children._updateHierarchicalFilter(filter);\n                        if (!current._matchFilter) {\n                            current._matchFilter = filter(current);\n                        }\n                    } else {\n                        current._matchFilter = filter(current);\n                    }\n                    if (current._matchFilter) {\n                        result = true;\n                    }\n                }\n                return result;\n            },\n            _find: function (method, value) {\n                var idx, length, node, children;\n                var data = this._data;\n                if (!data) {\n                    return;\n                }\n                node = DataSource.fn[method].call(this, value);\n                if (node) {\n                    return node;\n                }\n                data = this._flatData(this._data);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    children = data[idx].children;\n                    if (!(children instanceof HierarchicalDataSource)) {\n                        continue;\n                    }\n                    node = children[method](value);\n                    if (node) {\n                        return node;\n                    }\n                }\n            },\n            get: function (id) {\n                return this._find('get', id);\n            },\n            getByUid: function (uid) {\n                return this._find('getByUid', uid);\n            }\n        });\n        function inferList(list, fields) {\n            var items = $(list).children(), idx, length, data = [], record, textField = fields[0].field, urlField = fields[1] && fields[1].field, spriteCssClassField = fields[2] && fields[2].field, imageUrlField = fields[3] && fields[3].field, item, id, textChild, className, children;\n            function elements(collection, tagName) {\n                return collection.filter(tagName).add(collection.find(tagName));\n            }\n            for (idx = 0, length = items.length; idx < length; idx++) {\n                record = { _loaded: true };\n                item = items.eq(idx);\n                textChild = item[0].firstChild;\n                children = item.children();\n                list = children.filter('ul');\n                children = children.filter(':not(ul)');\n                id = item.attr('data-id');\n                if (id) {\n                    record.id = id;\n                }\n                if (textChild) {\n                    record[textField] = textChild.nodeType == 3 ? textChild.nodeValue : children.text();\n                }\n                if (urlField) {\n                    record[urlField] = elements(children, 'a').attr('href');\n                }\n                if (imageUrlField) {\n                    record[imageUrlField] = elements(children, 'img').attr('src');\n                }\n                if (spriteCssClassField) {\n                    className = elements(children, '.k-sprite').prop('className');\n                    record[spriteCssClassField] = className && $.trim(className.replace('k-sprite', ''));\n                }\n                if (list.length) {\n                    record.items = inferList(list.eq(0), fields);\n                }\n                if (item.attr('data-hasChildren') == 'true') {\n                    record.hasChildren = true;\n                }\n                data.push(record);\n            }\n            return data;\n        }\n        HierarchicalDataSource.create = function (options) {\n            options = options && options.push ? { data: options } : options;\n            var dataSource = options || {}, data = dataSource.data, fields = dataSource.fields, list = dataSource.list;\n            if (data && data._dataSource) {\n                return data._dataSource;\n            }\n            if (!data && fields && !dataSource.transport) {\n                if (list) {\n                    data = inferList(list, fields);\n                }\n            }\n            dataSource.data = data;\n            return dataSource instanceof HierarchicalDataSource ? dataSource : new HierarchicalDataSource(dataSource);\n        };\n        var Buffer = kendo.Observable.extend({\n            init: function (dataSource, viewSize, disablePrefetch) {\n                kendo.Observable.fn.init.call(this);\n                this._prefetching = false;\n                this.dataSource = dataSource;\n                this.prefetch = !disablePrefetch;\n                var buffer = this;\n                dataSource.bind('change', function () {\n                    buffer._change();\n                });\n                dataSource.bind('reset', function () {\n                    buffer._reset();\n                });\n                this._syncWithDataSource();\n                this.setViewSize(viewSize);\n            },\n            setViewSize: function (viewSize) {\n                this.viewSize = viewSize;\n                this._recalculate();\n            },\n            at: function (index) {\n                var pageSize = this.pageSize, itemPresent = true;\n                if (index >= this.total()) {\n                    this.trigger('endreached', { index: index });\n                    return null;\n                }\n                if (!this.useRanges) {\n                    return this.dataSource.view()[index];\n                }\n                if (this.useRanges) {\n                    if (index < this.dataOffset || index >= this.skip + pageSize) {\n                        itemPresent = this.range(Math.floor(index / pageSize) * pageSize);\n                    }\n                    if (index === this.prefetchThreshold) {\n                        this._prefetch();\n                    }\n                    if (index === this.midPageThreshold) {\n                        this.range(this.nextMidRange, true);\n                    } else if (index === this.nextPageThreshold) {\n                        this.range(this.nextFullRange);\n                    } else if (index === this.pullBackThreshold) {\n                        if (this.offset === this.skip) {\n                            this.range(this.previousMidRange);\n                        } else {\n                            this.range(this.previousFullRange);\n                        }\n                    }\n                    if (itemPresent) {\n                        return this.dataSource.at(index - this.dataOffset);\n                    } else {\n                        this.trigger('endreached', { index: index });\n                        return null;\n                    }\n                }\n            },\n            indexOf: function (item) {\n                return this.dataSource.data().indexOf(item) + this.dataOffset;\n            },\n            total: function () {\n                return parseInt(this.dataSource.total(), 10);\n            },\n            next: function () {\n                var buffer = this, pageSize = buffer.pageSize, offset = buffer.skip - buffer.viewSize + pageSize, pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize;\n                this.offset = offset;\n                this.dataSource.prefetch(pageSkip, pageSize, function () {\n                    buffer._goToRange(offset, true);\n                });\n            },\n            range: function (offset, nextRange) {\n                if (this.offset === offset) {\n                    return true;\n                }\n                var buffer = this, pageSize = this.pageSize, pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize, dataSource = this.dataSource;\n                if (nextRange) {\n                    pageSkip += pageSize;\n                }\n                if (dataSource.inRange(offset, pageSize)) {\n                    this.offset = offset;\n                    this._recalculate();\n                    this._goToRange(offset);\n                    return true;\n                } else if (this.prefetch) {\n                    dataSource.prefetch(pageSkip, pageSize, function () {\n                        buffer.offset = offset;\n                        buffer._recalculate();\n                        buffer._goToRange(offset, true);\n                    });\n                    return false;\n                }\n                return true;\n            },\n            syncDataSource: function () {\n                var offset = this.offset;\n                this.offset = null;\n                this.range(offset);\n            },\n            destroy: function () {\n                this.unbind();\n            },\n            _prefetch: function () {\n                var buffer = this, pageSize = this.pageSize, prefetchOffset = this.skip + pageSize, dataSource = this.dataSource;\n                if (!dataSource.inRange(prefetchOffset, pageSize) && !this._prefetching && this.prefetch) {\n                    this._prefetching = true;\n                    this.trigger('prefetching', {\n                        skip: prefetchOffset,\n                        take: pageSize\n                    });\n                    dataSource.prefetch(prefetchOffset, pageSize, function () {\n                        buffer._prefetching = false;\n                        buffer.trigger('prefetched', {\n                            skip: prefetchOffset,\n                            take: pageSize\n                        });\n                    });\n                }\n            },\n            _goToRange: function (offset, expanding) {\n                if (this.offset !== offset) {\n                    return;\n                }\n                this.dataOffset = offset;\n                this._expanding = expanding;\n                this.dataSource.range(offset, this.pageSize);\n                this.dataSource.enableRequestsInProgress();\n            },\n            _reset: function () {\n                this._syncPending = true;\n            },\n            _change: function () {\n                var dataSource = this.dataSource;\n                this.length = this.useRanges ? dataSource.lastRange().end : dataSource.view().length;\n                if (this._syncPending) {\n                    this._syncWithDataSource();\n                    this._recalculate();\n                    this._syncPending = false;\n                    this.trigger('reset', { offset: this.offset });\n                }\n                this.trigger('resize');\n                if (this._expanding) {\n                    this.trigger('expand');\n                }\n                delete this._expanding;\n            },\n            _syncWithDataSource: function () {\n                var dataSource = this.dataSource;\n                this._firstItemUid = dataSource.firstItemUid();\n                this.dataOffset = this.offset = dataSource.skip() || 0;\n                this.pageSize = dataSource.pageSize();\n                this.useRanges = dataSource.options.serverPaging;\n            },\n            _recalculate: function () {\n                var pageSize = this.pageSize, offset = this.offset, viewSize = this.viewSize, skip = Math.ceil(offset / pageSize) * pageSize;\n                this.skip = skip;\n                this.midPageThreshold = skip + pageSize - 1;\n                this.nextPageThreshold = skip + viewSize - 1;\n                this.prefetchThreshold = skip + Math.floor(pageSize / 3 * 2);\n                this.pullBackThreshold = this.offset - 1;\n                this.nextMidRange = skip + pageSize - viewSize;\n                this.nextFullRange = skip;\n                this.previousMidRange = offset - viewSize;\n                this.previousFullRange = skip - pageSize;\n            }\n        });\n        var BatchBuffer = kendo.Observable.extend({\n            init: function (dataSource, batchSize) {\n                var batchBuffer = this;\n                kendo.Observable.fn.init.call(batchBuffer);\n                this.dataSource = dataSource;\n                this.batchSize = batchSize;\n                this._total = 0;\n                this.buffer = new Buffer(dataSource, batchSize * 3);\n                this.buffer.bind({\n                    'endreached': function (e) {\n                        batchBuffer.trigger('endreached', { index: e.index });\n                    },\n                    'prefetching': function (e) {\n                        batchBuffer.trigger('prefetching', {\n                            skip: e.skip,\n                            take: e.take\n                        });\n                    },\n                    'prefetched': function (e) {\n                        batchBuffer.trigger('prefetched', {\n                            skip: e.skip,\n                            take: e.take\n                        });\n                    },\n                    'reset': function () {\n                        batchBuffer._total = 0;\n                        batchBuffer.trigger('reset');\n                    },\n                    'resize': function () {\n                        batchBuffer._total = Math.ceil(this.length / batchBuffer.batchSize);\n                        batchBuffer.trigger('resize', {\n                            total: batchBuffer.total(),\n                            offset: this.offset\n                        });\n                    }\n                });\n            },\n            syncDataSource: function () {\n                this.buffer.syncDataSource();\n            },\n            at: function (index) {\n                var buffer = this.buffer, skip = index * this.batchSize, take = this.batchSize, view = [], item;\n                if (buffer.offset > skip) {\n                    buffer.at(buffer.offset - 1);\n                }\n                for (var i = 0; i < take; i++) {\n                    item = buffer.at(skip + i);\n                    if (item === null) {\n                        break;\n                    }\n                    view.push(item);\n                }\n                return view;\n            },\n            total: function () {\n                return this._total;\n            },\n            destroy: function () {\n                this.buffer.destroy();\n                this.unbind();\n            }\n        });\n        extend(true, kendo.data, {\n            readers: { json: DataReader },\n            Query: Query,\n            DataSource: DataSource,\n            HierarchicalDataSource: HierarchicalDataSource,\n            Node: Node,\n            ObservableObject: ObservableObject,\n            ObservableArray: ObservableArray,\n            LazyObservableArray: LazyObservableArray,\n            LocalTransport: LocalTransport,\n            RemoteTransport: RemoteTransport,\n            Cache: Cache,\n            DataReader: DataReader,\n            Model: Model,\n            Buffer: Buffer,\n            BatchBuffer: BatchBuffer\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}