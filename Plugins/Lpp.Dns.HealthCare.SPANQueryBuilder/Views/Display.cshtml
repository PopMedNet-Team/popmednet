@model Lpp.Dns.HealthCare.SPANQueryBuilder.Models.SPANQueryBuilderModel
@{  
    this.Stylesheet("Request.min.css");
}

<div @Html.Section(title: "Selection Criteria", minimizable: false)>
    <ul>
        <li>
            @*@if (@Model.IndexVariable == "dx")
            { 
                <text>Index Variable (ICD-9 Dx): @string.Join(" " + @Model.IndexVariableDxSelector.BoolOperator + " ", @Model.IndexVariableDxSelector.Codes.Split(",".ToCharArray()))</text> 
            }
            @if (@Model.IndexVariable == "px")
            {
                <text>Index Variable (CPT/ICD-9 Px): @string.Join(" " + @Model.IndexVariablePxSelector.BoolOperator + " ", @Model.IndexVariablePxSelector.Codes.Split(",".ToCharArray()))</text>
            }
            @if (@Model.IndexVariable == "rx")
            { 
                <text>Index Variable (Drug Rx): @string.Join(" " + @Model.IndexVariableRxSelector.BoolOperator + " ", @Model.IndexVariableRxSelector.Codes.Split(",".ToCharArray()))</text>
            }
            @if (@Model.IndexVariable == "age")
            {
                <text>Index Variable (Age): @Model.IndexVariableAgeSelector.AgeOperator @Model.IndexVariableAgeSelector.Age As Of @Model.IndexVariableAgeSelector.AgeAsOfDate</text>
            }
            @if (@Model.IndexVariable == "bmi")
            {
                <text>Index Variable (BMI): @if (@Model.IndexVariableBMISelector.BMIOption == "1")
                                            { <text>&gt;=</text> } @Model.IndexVariableBMISelector.BMI</text>
            }*@
        </li>
        <li>Observation Period: @Model.ObservationPeriod.StartPeriod.ToString("MM/dd/yyyy") - @Model.ObservationPeriod.EndPeriod.ToString("MM/dd/yyyy")
        </li>
        <li>Enrollment: @if (@Model.EnrollmentSelector.Continuous)
                        { <text>** Continuous **</text> } @Model.EnrollmentSelector.Prior Months Prior, @Model.EnrollmentSelector.After Months After 
        </li>
    </ul>
</div>

<div @Html.Section(title: "Inclusion Criteria", minimizable: false)>
    <ul>
        @*<li>ICD-9 Dx Selector: 
            @if (string.IsNullOrEmpty(@Model.InclusionDxSelector.Codes))
            { <text>None</text> }
            else
            { <text>@string.Join(" " + @Model.InclusionDxSelector.BoolOperator + " ", @Model.InclusionDxSelector.Codes.Split(",".ToCharArray()))</text> }
        </li>
        <li>CPT/ICD-9 Px Selector:
            @if (string.IsNullOrEmpty(@Model.InclusionPxSelector.Codes))
            { <text>None</text> }
            else
            { <text>@string.Join(" " + @Model.InclusionPxSelector.BoolOperator + " ", @Model.InclusionPxSelector.Codes.Split(",".ToCharArray()))</text> }
        </li>
        <li>Drug Rx Selector: 
            @if (string.IsNullOrEmpty(@Model.InclusionRxSelector.Codes))
            { <text>None</text> }
            else
            { <text>@string.Join(" " + @Model.InclusionRxSelector.BoolOperator + " ", @Model.InclusionRxSelector.Codes.Split(",".ToCharArray()))</text> }
        </li>*@
    </ul>
</div>

<div @Html.Section(title: "Exclusion Criteria", minimizable: false)>
    <ul>
        @*<li>ICD-9 Dx Selector: 
            @if (string.IsNullOrEmpty(@Model.ExclusionDxSelector.Codes))
            { <text>None</text> }
            else
            { <text>@string.Join(" " + @Model.ExclusionDxSelector.BoolOperator + " ", @Model.ExclusionDxSelector.Codes.Split(",".ToCharArray()))</text> }
        </li>
        <li>CPT/ICD-9 Px Selector:
            @if (string.IsNullOrEmpty(@Model.ExclusionPxSelector.Codes))
            { <text>None</text> }
            else
            { <text>@string.Join(" " + @Model.ExclusionPxSelector.BoolOperator + " ", @Model.ExclusionPxSelector.Codes.Split(",".ToCharArray()))</text> }
        </li>
        <li>Drug Rx Selector: 
            @if (string.IsNullOrEmpty(@Model.ExclusionRxSelector.Codes))
            { <text>None</text> }
            else
            { <text>@string.Join(" " + @Model.ExclusionRxSelector.BoolOperator + " ", @Model.ExclusionRxSelector.Codes.Split(",".ToCharArray()))</text> }
        </li>
        <li>Age: 
            @if (@Model.ExclusionAgeSelector.Age == 0)
            { <text>None</text> }
            else
            { <text>@Model.ExclusionAgeSelector.AgeOperator @Model.ExclusionAgeSelector.Age As of Index Date</text> }
        </li>*@
    </ul>
</div>

<div @Html.Section(title: "Output Reports", minimizable: false)>
    <ul>
        <li>Report 1: 
            <ul>
                <li>Row: @Model.ReportSelector1.Row</li>
                <li>Column: @Model.ReportSelector1.Column</li>
                <li>Group: @Model.ReportSelector1.Group</li>
                @if (@Model.ReportSelector1.Option != "NA")
                {
                    <text><li>Stratification: @Model.ReportSelector1.Option year ranges</li></text>
                }
            </ul>
        </li>
        <li>Report 2: 
            <ul>
                <li>Row: @Model.ReportSelector2.Row</li>
                <li>Column: @Model.ReportSelector2.Column</li>
                <li>Group: @Model.ReportSelector2.Group</li>
                @if (@Model.ReportSelector2.Option != "NA")
                {
                    <text><li>Stratification: @Model.ReportSelector2.Option year ranges</li></text>
                }
            </ul>
        </li>
        <li>Report 3: 
            <ul>
                <li>Row: @Model.ReportSelector3.Row</li>
                <li>Column: @Model.ReportSelector3.Column</li>
                <li>Group: @Model.ReportSelector3.Group</li>
                @if (@Model.ReportSelector3.Option != "NA")
                {
                    <text><li>Stratification: @Model.ReportSelector3.Option year ranges</li></text>
                }
            </ul>
        </li>
        <li>Report 4: 
            <ul>
                <li>Row: @Model.ReportSelector4.Row</li>
                <li>Column: @Model.ReportSelector4.Column</li>
                <li>Group: @Model.ReportSelector4.Group</li>
                @if (@Model.ReportSelector4.Option != "NA")
                {
                    <text><li>Stratification: @Model.ReportSelector4.Option year ranges</li></text>
                }
            </ul>
        </li>
        <li>Report 5: 
            <ul>
                <li>Row: @Model.ReportSelector5.Row</li>
                <li>Column: @Model.ReportSelector5.Column</li>
                <li>Group: @Model.ReportSelector5.Group</li>
                @if (@Model.ReportSelector5.Option != "NA")
                {
                    <text><li>Stratification: @Model.ReportSelector5.Option year ranges</li></text>
                }
            </ul>
        </li>
    </ul>
</div>
