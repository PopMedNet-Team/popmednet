{"version":3,"sources":["kendo.dataviz.gauge.js"],"names":["f","define","$","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","text","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","textContent","appendChild","body","String","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","undefined","_buildLabel","label","labelBox","textBox","children","border","background","elements","Group","wrapper","Path","fromRect","Rect","x1","y1","stroke","Text","Point","font","fill","color","styleGeometry","_pad","bbox","clone","padding","styleBox","dashType","lineJoin","lineCap","append","getRange","range","min","max","from","defined","MIN_VALUE","to","MAX_VALUE","math","origin","getOrigin","getSize","spacing","getSpacing","setOrigin","x","left","y","top","setSize","right","bottom","_unpad","ArrowLinearPointerAnimation","BarLinearPointerAnimation","Math","Widget","ui","dataviz","autoMajorUnit","ChartElement","NumericAxis","Axis","Box2D","isNumber","interpolateValue","round","geo","geometry","draw","drawing","ANGULAR_SPEED","LINEAR_SPEED","ARROW","ARROW_POINTER","BAR_POINTER","BLACK","CAP_SIZE","COORD_PRECISION","Number","DEFAULT_HEIGHT","DEFAULT_LINE_WIDTH","DEFAULT_WIDTH","DEFAULT_MIN_WIDTH","DEFAULT_MIN_HEIGHT","DEFAULT_MARGIN","DEGREE","PI","GEO_ARC_ADJUST_ANGLE","INSIDE","LINEAR","NEEDLE","OUTSIDE","RADIAL_POINTER","X","Y","Pointer","scale","pointer","scaleOptions","fn","call","newValue","that","arguments","_oldValue","repaint","RadialPointer","shape","cap","arrow","animation","type","duration","setRadius","radius","clear","render","parent","center","setAngle","angle","transform","rotate","oldAngle","slotAngle","newAngle","transitions","RadialPointerAnimation","play","arc","startAngle","reverse","_renderNeedle","_renderCap","_renderArrow","reflow","getRadiusX","capSize","fromPoints","minorTickSize","minorTicks","needleColor","needlePath","moveTo","lineTo","close","capColor","circle","Circle","RadialScale","majorUnit","minorUnit","majorTicks","align","visible","endAngle","labels","position","renderArc","labelElements","renderLabels","ticks","renderTicks","ranges","renderRanges","repositionRanges","result","halfWidth","halfHeight","labelAngle","lp","cx","cy","isInside","lbl","labelPos","prevLabelPos","labelTransform","majorTickSize","tickAngles","count","labelsOptions","rangeDistance","rangeSize","labelsGroup","setRadiusX","setRadiusY","pointAt","cos","sin","translate","union","rangeRadius","newRadius","getRangeRadius","_geometry","segment","rangeGeom","segments","rangeSegments","segmentsCount","Arc","radiusX","radiusY","opacity","rangeSegment","j","gauge","defaultColor","rangePlaceholderColor","r","drawTicks","unit","tickOptions","tickStart","tickEnd","labelsPosition","allTicks","tickArc","majorTickAngles","_tickDifference","minorTickAngles","normalizeTickAngles","angles","skip","splice","ring","stepValue","pos","tickCount","step","positions","repositionTicks","minor","newPoint","xDiff","yDiff","diff","anchor","Transformation","Gauge","element","userOptions","themeOptions","themeName","theme","themes","destroy","empty","_originalOptions","toLowerCase","isArray","addClass","surface","_createSurface","redraw","plotArea","renderAs","gaugeArea","pointers","_setValueOptions","_draw","_visuals","exportVisual","allValues","values","concat","_resize","t","_getSize","_createGaugeArea","css","_createModel","_gaugeAreaMargin","areaGeometry","margin","wrap","appendTo","Surface","create","RadialGauge","radialGauge","notify","name","_initialPlotArea","fitScale","alignScale","_buildVisual","visuals","minDiff","midDiff","maxDiff","mid","oldDiff","plotAreaBox","abs","getDiff","staleFlag","getPlotBox","plotBbox","plotBox","plotBoxCenter","boxCenter","paddingX","paddingY","LinearGauge","linearGauge","vertical","bboxX","bboxY","bbox2D","_getBox","_alignElements","_shrinkElements","scaleElements","currentOptions","LinearScale","ArrowLinearPointer","BarLinearPointer","y2","x2","scaleBox","pointerBox","mirror","line","_alignLines","scaleLine","renderLine","scaleTicks","slot","slotX","slotY","getSlot","lineBox","linePath","tickPositions","skipUnit","tickLineOptions","tickX","tickY","renderAxisTick","getMajorTickPositions","getMinorTickPositions","start","end","tickPath","LinearPointer","track","pointerRangeBox","trackBox","trackSize","pointerHalfSize","space","pad","getElementOptions","_margin","pointerShape","halfSize","sign","setup","elementOptions","p2","p3","p4","dir","minSlot","axis","sizeAxis","p1","pointerPath","oldShape","oldPoints","newPoints","group","Animation","easing","anim","AnimationFactory","register","fromScale","toScale","distanceTo","translateX","translateY","speed","_set","setter","toUpperCase","points","plugin","ExportMixin"],"mappings":"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","file":"kendo.dataviz.gauge.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                measureBox.textContent = text;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (String(text).length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.gauge', [\n        'kendo.dataviz.core',\n        'kendo.drawing',\n        'kendo.dataviz.themes'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.gauge',\n        name: 'Gauge',\n        category: 'dataviz',\n        description: 'Radial and Linear gauges.',\n        depends: [\n            'dataviz.core',\n            'dataviz.themes'\n        ]\n    };\n    (function ($, undefined) {\n        var math = Math, kendo = window.kendo, Widget = kendo.ui.Widget, deepExtend = kendo.deepExtend, dataviz = kendo.dataviz, autoMajorUnit = dataviz.autoMajorUnit, ChartElement = dataviz.ChartElement, NumericAxis = dataviz.NumericAxis, Axis = dataviz.Axis, Box2D = dataviz.Box2D, Class = kendo.Class, defined = dataviz.defined, isNumber = dataviz.isNumber, interpolateValue = dataviz.interpolateValue, getSpacing = dataviz.getSpacing, round = dataviz.round, geo = dataviz.geometry, draw = dataviz.drawing, Point = geo.Point, Group = draw.Group, Path = draw.Path, Rect = geo.Rect, Text = draw.Text;\n        var ANGULAR_SPEED = 150, LINEAR_SPEED = 250, ARROW = 'arrow', ARROW_POINTER = 'arrowPointer', BAR_POINTER = 'barPointer', BLACK = '#000', CAP_SIZE = 0.05, COORD_PRECISION = dataviz.COORD_PRECISION, MAX_VALUE = Number.MAX_VALUE, MIN_VALUE = -Number.MAX_VALUE, DEFAULT_HEIGHT = 200, DEFAULT_LINE_WIDTH = 0.5, DEFAULT_WIDTH = 200, DEFAULT_MIN_WIDTH = 60, DEFAULT_MIN_HEIGHT = 60, DEFAULT_MARGIN = 5, DEGREE = math.PI / 180, GEO_ARC_ADJUST_ANGLE = 180, INSIDE = 'inside', LINEAR = 'linear', NEEDLE = 'needle', OUTSIDE = 'outside', RADIAL_POINTER = 'radialPointer', X = 'x', Y = 'y';\n        var Pointer = Class.extend({\n            init: function (scale, options) {\n                var pointer = this;\n                var scaleOptions = scale.options;\n                ChartElement.fn.init.call(pointer, options);\n                options = pointer.options;\n                options.fill = options.color;\n                pointer.scale = scale;\n                if (defined(options.value)) {\n                    options.value = math.min(math.max(options.value, scaleOptions.min), scaleOptions.max);\n                } else {\n                    options.value = scaleOptions.min;\n                }\n            },\n            options: { color: BLACK },\n            value: function (newValue) {\n                var that = this;\n                var options = that.options;\n                var value = options.value;\n                var scaleOptions = that.scale.options;\n                if (arguments.length === 0) {\n                    return value;\n                }\n                options._oldValue = options._oldValue !== undefined ? options.value : scaleOptions.min;\n                options.value = math.min(math.max(newValue, scaleOptions.min), scaleOptions.max);\n                if (that.elements) {\n                    that.repaint();\n                }\n            }\n        });\n        var RadialPointer = Pointer.extend({\n            options: {\n                shape: NEEDLE,\n                cap: { size: CAP_SIZE },\n                arrow: {\n                    width: 16,\n                    height: 14\n                },\n                animation: {\n                    type: RADIAL_POINTER,\n                    duration: ANGULAR_SPEED\n                }\n            },\n            setRadius: function (radius) {\n                var that = this;\n                if (radius) {\n                    that.elements.clear();\n                    that.render(that.parent, that.center, radius);\n                }\n            },\n            setAngle: function (angle) {\n                this.elements.transform(geo.transform().rotate(angle, this.center));\n            },\n            repaint: function () {\n                var that = this;\n                var scale = that.scale;\n                var options = that.options;\n                var oldAngle = scale.slotAngle(options._oldValue);\n                var newAngle = scale.slotAngle(options.value);\n                if (options.animation.transitions === false) {\n                    that.setAngle(newAngle);\n                } else {\n                    new RadialPointerAnimation(that.elements, deepExtend(options.animation, {\n                        oldAngle: oldAngle,\n                        newAngle: newAngle\n                    })).play();\n                }\n            },\n            render: function () {\n                var that = this;\n                var scale = that.scale;\n                var center = scale.arc.center;\n                var options = that.options;\n                var elements = new Group();\n                if (options.animation !== false) {\n                    deepExtend(options.animation, {\n                        startAngle: 0,\n                        center: center,\n                        reverse: scale.options.reverse\n                    });\n                }\n                if (options.shape === NEEDLE) {\n                    elements.append(that._renderNeedle(), that._renderCap());\n                } else {\n                    elements.append(that._renderArrow());\n                }\n                that.elements = elements;\n                that.setAngle(DEGREE);\n                return elements;\n            },\n            reflow: function (arc) {\n                var that = this;\n                var center = that.center = arc.center;\n                var radius = that.radius = arc.getRadiusX();\n                var capSize = that.capSize = Math.round(radius * that.options.cap.size);\n                that.bbox = Rect.fromPoints(new Point(center.x - capSize, center.y - capSize), new Point(center.x + capSize, center.y + capSize));\n            },\n            _renderNeedle: function () {\n                var that = this;\n                var options = that.options;\n                var minorTickSize = that.scale.options.minorTicks.size;\n                var center = that.center;\n                var needleColor = options.color;\n                var needlePath = new Path({\n                    fill: { color: needleColor },\n                    stroke: {\n                        color: needleColor,\n                        width: DEFAULT_LINE_WIDTH\n                    }\n                });\n                needlePath.moveTo(center.x + that.radius - minorTickSize, center.y).lineTo(center.x, center.y - that.capSize / 2).lineTo(center.x, center.y + that.capSize / 2).close();\n                return needlePath;\n            },\n            _renderCap: function () {\n                var that = this;\n                var options = that.options;\n                var capColor = options.cap.color || options.color;\n                var circle = new geo.Circle(that.center, that.capSize);\n                var cap = new draw.Circle(circle, {\n                    fill: { color: capColor },\n                    stroke: { color: capColor }\n                });\n                return cap;\n            }\n        });\n        var RadialScale = NumericAxis.extend({\n            init: function (options) {\n                var scale = this;\n                scale.options = deepExtend({}, scale.options, options);\n                scale.options.majorUnit = scale.options.majorUnit || autoMajorUnit(scale.options.min, scale.options.max);\n                scale.options.minorUnit = scale.options.minorUnit || scale.options.majorUnit / 10;\n                Axis.fn.init.call(scale, scale.options);\n            },\n            options: {\n                min: 0,\n                max: 100,\n                majorTicks: {\n                    size: 15,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                minorTicks: {\n                    size: 10,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                startAngle: -30,\n                endAngle: 210,\n                labels: {\n                    position: INSIDE,\n                    padding: 2\n                }\n            },\n            render: function (center, radius) {\n                var that = this;\n                var arc = that.renderArc(center, radius);\n                that.bbox = arc.bbox();\n                that.labelElements = that.renderLabels();\n                that.ticks = that.renderTicks();\n                that.ranges = that.renderRanges();\n            },\n            reflow: function (bbox) {\n                var that = this;\n                var center = bbox.center();\n                var radius = math.min(bbox.height(), bbox.width()) / 2;\n                if (that.bbox !== undefined) {\n                    that.bbox = that.arc.bbox();\n                    that.radius(that.arc.getRadiusX());\n                    that.repositionRanges();\n                    that.renderLabels();\n                } else {\n                    return that.render(center, radius);\n                }\n            },\n            slotAngle: function (value) {\n                var options = this.options;\n                var startAngle = options.startAngle;\n                var reverse = options.reverse;\n                var angle = options.endAngle - startAngle;\n                var min = options.min;\n                var max = options.max;\n                var result;\n                if (reverse) {\n                    result = options.endAngle - (value - min) / (max - min) * angle;\n                } else {\n                    result = (value - min) / (max - min) * angle + startAngle;\n                }\n                return result + GEO_ARC_ADJUST_ANGLE;\n            },\n            renderLabels: function () {\n                var that = this;\n                var options = that.options;\n                var majorTickSize = options.majorTicks.size;\n                var arc = that.arc.clone();\n                var radius = arc.getRadiusX();\n                var tickAngles = that.tickAngles(arc, options.majorUnit);\n                var labels = that.labels;\n                var count = labels.length;\n                var labelsOptions = options.labels;\n                var padding = labelsOptions.padding;\n                var rangeDistance = radius * 0.05;\n                var rangeSize = options.rangeSize = options.rangeSize || radius * 0.1;\n                var ranges = options.ranges || [];\n                var halfWidth, halfHeight, labelAngle;\n                var angle, label, lp, i, cx, cy, isInside;\n                var labelsGroup = new Group();\n                var lbl, labelPos, prevLabelPos, labelTransform;\n                if (that.options.rangeDistance !== undefined) {\n                    rangeDistance = that.options.rangeDistance;\n                } else {\n                    that.options.rangeDistance = rangeDistance;\n                }\n                if (labelsOptions.position === INSIDE) {\n                    radius -= majorTickSize;\n                    if (ranges.length && that.labelElements === undefined) {\n                        radius -= rangeSize + rangeDistance;\n                    }\n                    arc.setRadiusX(radius).setRadiusY(radius);\n                }\n                for (i = 0; i < count; i++) {\n                    label = labels[i];\n                    halfWidth = label.box.width() / 2;\n                    halfHeight = label.box.height() / 2;\n                    angle = tickAngles[i];\n                    labelAngle = (angle - GEO_ARC_ADJUST_ANGLE) * DEGREE;\n                    isInside = labelsOptions.position === INSIDE;\n                    lp = arc.pointAt(angle);\n                    cx = lp.x + math.cos(labelAngle) * (halfWidth + padding) * (isInside ? 1 : -1);\n                    cy = lp.y + math.sin(labelAngle) * (halfHeight + padding) * (isInside ? 1 : -1);\n                    label.reflow(new dataviz.Box2D(cx - halfWidth, cy - halfHeight, cx + halfWidth, cy + halfHeight));\n                    labelPos = new Point(label.box.x1, label.box.y1);\n                    if (that.labelElements === undefined) {\n                        lbl = _buildLabel(label, options.labels);\n                        labelsGroup.append(lbl);\n                    } else {\n                        lbl = that.labelElements.children[i];\n                        prevLabelPos = lbl.bbox().origin;\n                        labelTransform = lbl.transform() || geo.transform();\n                        labelTransform.translate(labelPos.x - prevLabelPos.x, labelPos.y - prevLabelPos.y);\n                        lbl.transform(labelTransform);\n                    }\n                    that.bbox = Rect.union(that.bbox, lbl.bbox());\n                }\n                return labelsGroup;\n            },\n            repositionRanges: function () {\n                var that = this;\n                var ranges = that.ranges.children;\n                var rangeSize = that.options.rangeSize;\n                var rangeDistance = that.options.rangeDistance;\n                var rangeRadius, newRadius;\n                if (ranges.length > 0) {\n                    rangeRadius = that.getRangeRadius();\n                    if (that.options.labels.position === INSIDE) {\n                        rangeRadius += rangeSize + rangeDistance;\n                    }\n                    newRadius = rangeRadius + rangeSize / 2;\n                    for (var i = 0; i < ranges.length; i++) {\n                        ranges[i]._geometry.setRadiusX(newRadius).setRadiusY(newRadius);\n                    }\n                    that.bbox = Rect.union(that.bbox, that.ranges.bbox());\n                }\n            },\n            renderRanges: function () {\n                var that = this;\n                var arc = that.arc;\n                var result = new Group();\n                var from, to;\n                var segments = that.rangeSegments();\n                var segmentsCount = segments.length;\n                var reverse = that.options.reverse;\n                var rangeSize = that.options.rangeSize;\n                var rangeDistance = that.options.rangeDistance;\n                var segment, rangeRadius, rangeGeom, i;\n                if (segmentsCount) {\n                    rangeRadius = that.getRangeRadius();\n                    that.radius(that.radius() - rangeSize - rangeDistance);\n                    for (i = 0; i < segmentsCount; i++) {\n                        segment = segments[i];\n                        from = that.slotAngle(segment[reverse ? 'to' : 'from']);\n                        to = that.slotAngle(segment[!reverse ? 'to' : 'from']);\n                        if (to - from !== 0) {\n                            rangeGeom = new geo.Arc(arc.center, {\n                                radiusX: rangeRadius + rangeSize / 2,\n                                radiusY: rangeRadius + rangeSize / 2,\n                                startAngle: from,\n                                endAngle: to\n                            });\n                            result.append(new draw.Arc(rangeGeom, {\n                                stroke: {\n                                    width: rangeSize,\n                                    color: segment.color,\n                                    opacity: segment.opacity\n                                }\n                            }));\n                        }\n                    }\n                }\n                return result;\n            },\n            rangeSegments: function () {\n                var gauge = this;\n                var options = gauge.options;\n                var ranges = options.ranges || [];\n                var count = ranges.length;\n                var range;\n                var segmentsCount;\n                var defaultColor = options.rangePlaceholderColor;\n                var segments = [];\n                var segment;\n                var min = options.min;\n                var max = options.max;\n                var i, j;\n                function rangeSegment(from, to, color, opacity) {\n                    return {\n                        from: from,\n                        to: to,\n                        color: color,\n                        opacity: opacity\n                    };\n                }\n                if (count) {\n                    segments.push(rangeSegment(min, max, defaultColor));\n                    for (i = 0; i < count; i++) {\n                        range = getRange(ranges[i], min, max);\n                        segmentsCount = segments.length;\n                        for (j = 0; j < segmentsCount; j++) {\n                            segment = segments[j];\n                            if (segment.from <= range.from && range.from <= segment.to) {\n                                segments.push(rangeSegment(range.from, range.to, range.color, range.opacity));\n                                if (segment.from <= range.to && range.to <= segment.to) {\n                                    segments.push(rangeSegment(range.to, segment.to, defaultColor, range.opacity));\n                                }\n                                segment.to = range.from;\n                                break;\n                            }\n                        }\n                    }\n                }\n                return segments;\n            },\n            getRangeRadius: function () {\n                var that = this;\n                var options = that.options;\n                var majorTickSize = options.majorTicks.size;\n                var rangeSize = options.rangeSize;\n                var rangeDistance = options.rangeDistance;\n                var arc = that.arc;\n                var r;\n                if (options.labels.position === OUTSIDE) {\n                    r = arc.getRadiusX() - majorTickSize - rangeDistance - rangeSize;\n                } else {\n                    r = arc.getRadiusX() - rangeSize;\n                }\n                return r;\n            },\n            renderArc: function (center, radius) {\n                var that = this;\n                var options = that.options;\n                var arc = that.arc = new geo.Arc(center, {\n                    radiusX: radius,\n                    radiusY: radius,\n                    startAngle: options.startAngle + GEO_ARC_ADJUST_ANGLE,\n                    endAngle: options.endAngle + GEO_ARC_ADJUST_ANGLE\n                });\n                return arc;\n            },\n            renderTicks: function () {\n                var that = this;\n                var arc = that.arc;\n                var options = that.options;\n                var labelsPosition = options.labels.position;\n                var allTicks = new Group();\n                var majorTickSize = options.majorTicks.size;\n                var minorTickSize = options.minorTicks.size;\n                var tickArc = arc.clone();\n                var radius = tickArc.getRadiusX();\n                function drawTicks(arc, tickAngles, unit, tickOptions) {\n                    var ticks = new Group(), center = arc.center, radius = arc.getRadiusX(), i, tickStart, tickEnd, visible = tickOptions.visible;\n                    if (visible) {\n                        for (i = 0; i < tickAngles.length; i++) {\n                            tickStart = arc.pointAt(tickAngles[i]);\n                            tickEnd = new Point(center.x + radius - tickOptions.size, center.y).rotate(tickAngles[i], center);\n                            ticks.append(new Path({\n                                stroke: {\n                                    color: tickOptions.color,\n                                    width: tickOptions.width\n                                }\n                            }).moveTo(tickStart).lineTo(tickEnd));\n                        }\n                    }\n                    return ticks;\n                }\n                that.majorTickAngles = that.tickAngles(arc, options.majorUnit);\n                that.majorTicks = drawTicks(tickArc, that.majorTickAngles, options.majorUnit, options.majorTicks);\n                allTicks.append(that.majorTicks);\n                that._tickDifference = majorTickSize - minorTickSize;\n                if (labelsPosition === OUTSIDE) {\n                    tickArc.setRadiusX(radius - majorTickSize + minorTickSize).setRadiusY(radius - majorTickSize + minorTickSize);\n                }\n                that.minorTickAngles = that.normalizeTickAngles(that.tickAngles(arc, options.minorUnit));\n                that.minorTicks = drawTicks(tickArc, that.minorTickAngles, options.minorUnit, options.minorTicks, options.majorUnit);\n                allTicks.append(that.minorTicks);\n                return allTicks;\n            },\n            normalizeTickAngles: function (angles) {\n                var that = this;\n                var options = that.options;\n                var skip = options.majorUnit / options.minorUnit;\n                for (var i = angles.length - 1; i >= 0; i--) {\n                    if (i % skip === 0) {\n                        angles.splice(i, 1);\n                    }\n                }\n                return angles;\n            },\n            tickAngles: function (ring, stepValue) {\n                var scale = this;\n                var options = scale.options;\n                var reverse = options.reverse;\n                var range = options.max - options.min;\n                var angle = ring.endAngle - ring.startAngle;\n                var pos = ring.startAngle;\n                var tickCount = range / stepValue;\n                var step = angle / tickCount;\n                var positions = [];\n                var i;\n                if (reverse) {\n                    pos += angle;\n                    step = -step;\n                }\n                for (i = 0; i < tickCount; i++) {\n                    positions.push(round(pos, COORD_PRECISION));\n                    pos += step;\n                }\n                if (round(pos) <= ring.endAngle) {\n                    positions.push(pos);\n                }\n                return positions;\n            },\n            radius: function (radius) {\n                var that = this;\n                if (radius) {\n                    that.arc.setRadiusX(radius).setRadiusY(radius);\n                    that.repositionTicks(that.majorTicks.children, that.majorTickAngles);\n                    that.repositionTicks(that.minorTicks.children, that.minorTickAngles, true);\n                } else {\n                    return that.arc.getRadiusX();\n                }\n            },\n            repositionTicks: function (ticks, tickAngles, minor) {\n                var that = this;\n                var diff = minor ? that._tickDifference || 0 : 0;\n                var tickArc = that.arc;\n                var radius = tickArc.getRadiusX();\n                if (minor && that.options.labels.position === OUTSIDE && diff !== 0) {\n                    tickArc = that.arc.clone();\n                    tickArc.setRadiusX(radius - diff).setRadiusY(radius - diff);\n                }\n                for (var i = 0; i < ticks.length; i++) {\n                    var newPoint = tickArc.pointAt(tickAngles[i]);\n                    var segments = ticks[i].segments;\n                    var xDiff = newPoint.x - segments[0].anchor().x;\n                    var yDiff = newPoint.y - segments[0].anchor().y;\n                    ticks[i].transform(new geo.Transformation().translate(xDiff, yDiff));\n                }\n            }\n        });\n        var Gauge = Widget.extend({\n            init: function (element, userOptions) {\n                var gauge = this;\n                var options;\n                var themeOptions;\n                var themeName;\n                var themes = dataviz.ui.themes || {};\n                var theme;\n                kendo.destroy(element);\n                $(element).empty();\n                Widget.fn.init.call(gauge, element);\n                gauge.wrapper = gauge.element;\n                gauge._originalOptions = deepExtend({}, userOptions);\n                options = deepExtend({}, gauge.options, userOptions);\n                themeName = options.theme;\n                theme = themes[themeName] || themes[themeName.toLowerCase()];\n                themeOptions = themeName && theme ? theme.gauge : {};\n                gauge.options = deepExtend({}, themeOptions, options);\n                if ($.isArray(options.pointer)) {\n                    for (var i = 0; i < options.pointer.length; i++) {\n                        gauge.options.pointer[i] = deepExtend({}, themeOptions.pointer, options.pointer[i]);\n                    }\n                }\n                gauge.element.addClass('k-gauge');\n                gauge.surface = gauge._createSurface();\n                gauge.redraw();\n            },\n            options: {\n                plotArea: {},\n                theme: 'default',\n                renderAs: '',\n                pointer: {},\n                scale: {},\n                gaugeArea: {}\n            },\n            destroy: function () {\n                this.surface.destroy();\n                Widget.fn.destroy.call(this);\n            },\n            value: function (value) {\n                var that = this;\n                var pointer = that.pointers[0];\n                if (arguments.length === 0) {\n                    return pointer.value();\n                }\n                pointer.value(value);\n                that._setValueOptions(value);\n            },\n            _draw: function () {\n                var surface = this.surface;\n                surface.clear();\n                surface.draw(this._visuals);\n            },\n            exportVisual: function () {\n                return this._visuals;\n            },\n            allValues: function (values) {\n                var that = this;\n                var pointers = that.pointers;\n                var allValues = [];\n                var i;\n                if (arguments.length === 0) {\n                    for (i = 0; i < pointers.length; i++) {\n                        allValues.push(pointers[i].value());\n                    }\n                    return allValues;\n                }\n                if ($.isArray(values)) {\n                    for (i = 0; i < values.length; i++) {\n                        if (isNumber(values[i])) {\n                            pointers[i].value(values[i]);\n                        }\n                    }\n                }\n                that._setValueOptions(values);\n            },\n            _setValueOptions: function (values) {\n                var pointers = [].concat(this.options.pointer);\n                values = [].concat(values);\n                for (var i = 0; i < values.length; i++) {\n                    pointers[i].value = values[i];\n                }\n            },\n            _resize: function () {\n                var that = this;\n                var t = that.options.transitions;\n                var i;\n                that.options.transitions = false;\n                for (i = 0; i < that.pointers.length; i++) {\n                    that.pointers[i].options.animation.transitions = false;\n                }\n                that.redraw();\n                that.options.transitions = t;\n                for (i = 0; i < that.pointers.length; i++) {\n                    that.pointers[i].options.animation.transitions = t;\n                }\n            },\n            redraw: function () {\n                var that = this;\n                var size = deepExtend(that._getSize(), that.options.gaugeArea);\n                var wrapper = new Rect([\n                    0,\n                    0\n                ], [\n                    size.width,\n                    size.height\n                ]);\n                var bbox;\n                that.surface.clear();\n                that.gaugeArea = that._createGaugeArea();\n                that.surface.element.css({\n                    width: size.width,\n                    height: size.height\n                });\n                that._createModel();\n                bbox = _unpad(wrapper.bbox(), that._gaugeAreaMargin);\n                that.reflow(bbox);\n            },\n            _createGaugeArea: function () {\n                var that = this;\n                var options = that.options.gaugeArea;\n                var size = that.surface.size();\n                var border = options.border || {};\n                var areaGeometry = new Rect([\n                    0,\n                    0\n                ], [\n                    size.width,\n                    size.height\n                ]);\n                that._gaugeAreaMargin = options.margin || DEFAULT_MARGIN;\n                if (border.width > 0) {\n                    areaGeometry = _unpad(areaGeometry, border.width);\n                }\n                var gaugeArea = Path.fromRect(areaGeometry, {\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType,\n                        lineJoin: 'round',\n                        lineCap: 'round'\n                    },\n                    fill: { color: options.background }\n                });\n                return gaugeArea;\n            },\n            _createSurface: function () {\n                var that = this;\n                var options = that.options;\n                var size = that._getSize();\n                size = options.gaugeArea ? deepExtend(size, options.gaugeArea) : size;\n                var wrap = $('<div></div>').appendTo(that.element).css({\n                    width: size.width,\n                    height: size.height\n                });\n                return new draw.Surface.create(wrap, { type: options.renderAs });\n            },\n            getSize: function () {\n                return this._getSize();\n            },\n            _getSize: function () {\n                var that = this;\n                var element = that.element;\n                var width = element.width();\n                var height = element.height();\n                if (!width) {\n                    width = DEFAULT_WIDTH;\n                }\n                if (!height) {\n                    height = DEFAULT_HEIGHT;\n                }\n                return {\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        var RadialGauge = Gauge.extend({\n            init: function (element, options) {\n                var radialGauge = this;\n                Gauge.fn.init.call(radialGauge, element, options);\n                kendo.notify(radialGauge, dataviz.ui);\n            },\n            options: {\n                name: 'RadialGauge',\n                transitions: true,\n                gaugeArea: { background: '' }\n            },\n            reflow: function (bbox) {\n                var that = this;\n                var pointers = that.pointers;\n                that.scale.reflow(bbox);\n                that._initialPlotArea = that.scale.bbox;\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(that.scale.arc);\n                    that._initialPlotArea = Rect.union(that._initialPlotArea, pointers[i].bbox);\n                }\n                that.fitScale(bbox);\n                that.alignScale(bbox);\n                that._buildVisual(that.gaugeArea, pointers, that.scale);\n                that._draw();\n            },\n            _buildVisual: function (gaugeArea, pointers, scale) {\n                var visuals = new Group();\n                var current;\n                visuals.append(gaugeArea);\n                visuals.append(scale.ticks);\n                visuals.append(scale.ranges);\n                for (var i = 0; i < pointers.length; i++) {\n                    current = pointers[i];\n                    current.render();\n                    visuals.append(current.elements);\n                    current.value(current.options.value);\n                }\n                visuals.append(scale.labelElements);\n                this._visuals = visuals;\n            },\n            fitScale: function (bbox) {\n                var that = this;\n                var scale = that.scale;\n                var arc = scale.arc;\n                var plotAreaBox = that._initialPlotArea;\n                var step = math.abs(that.getDiff(plotAreaBox, bbox));\n                var min = round(step, COORD_PRECISION);\n                var max = round(-step, COORD_PRECISION);\n                var minDiff, midDiff, maxDiff, mid, oldDiff;\n                var staleFlag = 0;\n                var i = 0;\n                while (i++ < 100) {\n                    staleFlag = oldDiff === maxDiff ? staleFlag + 1 : 0;\n                    if (staleFlag > 5) {\n                        break;\n                    }\n                    if (min != mid) {\n                        minDiff = that.getPlotBox(min, bbox, arc);\n                        if (0 <= minDiff && minDiff <= 2) {\n                            break;\n                        }\n                    }\n                    if (max != mid) {\n                        maxDiff = that.getPlotBox(max, bbox, arc);\n                        if (0 <= maxDiff && maxDiff <= 2) {\n                            break;\n                        }\n                    }\n                    if (minDiff > 0 && maxDiff > 0) {\n                        mid = min * 2;\n                    } else if (minDiff < 0 && maxDiff < 0) {\n                        mid = max * 2;\n                    } else {\n                        mid = round((min + max) / 2 || 1, COORD_PRECISION);\n                    }\n                    midDiff = that.getPlotBox(mid, bbox, arc);\n                    if (0 <= midDiff && midDiff <= 2) {\n                        break;\n                    }\n                    oldDiff = maxDiff;\n                    if (midDiff > 0) {\n                        max = mid;\n                        maxDiff = midDiff;\n                    } else {\n                        min = mid;\n                        minDiff = midDiff;\n                    }\n                }\n            },\n            getPlotBox: function (step, bbox, arc) {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var radius = arc.getRadiusX();\n                arc = arc.clone();\n                arc.setRadiusX(radius + step).setRadiusY(radius + step);\n                scale.arc = arc;\n                scale.reflow(bbox);\n                that.plotBbox = scale.bbox;\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(arc);\n                    that.plotBbox = Rect.union(that.plotBbox, pointers[i].bbox);\n                }\n                return that.getDiff(that.plotBbox, bbox);\n            },\n            getDiff: function (plotBox, box) {\n                return math.min(box.width() - plotBox.width(), box.height() - plotBox.height());\n            },\n            alignScale: function (bbox) {\n                var that = this;\n                var plotBoxCenter = that.plotBbox.center();\n                var boxCenter = bbox.center();\n                var paddingX = plotBoxCenter.x - boxCenter.x;\n                var paddingY = plotBoxCenter.y - boxCenter.y;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                scale.arc.center.x -= paddingX;\n                scale.arc.center.y -= paddingY;\n                scale.reflow(bbox);\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(scale.arc);\n                    that.plotBbox = Rect.union(scale.bbox, pointers[i].bbox);\n                }\n            },\n            _createModel: function () {\n                var that = this;\n                var options = that.options;\n                var pointers = options.pointer;\n                var scale = that.scale = new RadialScale(options.scale);\n                var current;\n                that.pointers = [];\n                pointers = $.isArray(pointers) ? pointers : [pointers];\n                for (var i = 0; i < pointers.length; i++) {\n                    current = new RadialPointer(scale, deepExtend({}, pointers[i], { animation: { transitions: options.transitions } }));\n                    that.pointers.push(current);\n                }\n            }\n        });\n        var LinearGauge = Gauge.extend({\n            init: function (element, options) {\n                var linearGauge = this;\n                Gauge.fn.init.call(linearGauge, element, options);\n                kendo.notify(linearGauge, dataviz.ui);\n            },\n            options: {\n                name: 'LinearGauge',\n                transitions: true,\n                gaugeArea: { background: '' },\n                scale: { vertical: true }\n            },\n            reflow: function (bbox) {\n                var that = this;\n                var pointers = that.pointers;\n                var bboxX = bbox.origin.x;\n                var bboxY = bbox.origin.y;\n                var bbox2D = new dataviz.Box2D(bboxX, bboxY, bboxX + bbox.width(), bboxY + bbox.height());\n                that.scale.reflow(bbox2D);\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow();\n                }\n                that.bbox = that._getBox(bbox2D);\n                that._alignElements();\n                that._shrinkElements();\n                that._buildVisual();\n                that._draw();\n            },\n            _buildVisual: function () {\n                var that = this;\n                var visuals = new Group();\n                var scaleElements = that.scale.render();\n                var pointers = that.pointers;\n                var current;\n                visuals.append(that.gaugeArea);\n                visuals.append(scaleElements);\n                for (var i = 0; i < pointers.length; i++) {\n                    current = pointers[i];\n                    visuals.append(current.render());\n                    current.value(current.options.value);\n                }\n                that._visuals = visuals;\n            },\n            _createModel: function () {\n                var that = this;\n                var options = that.options;\n                var pointers = options.pointer;\n                var scale = that.scale = new LinearScale(options.scale);\n                var current, currentOptions;\n                that.pointers = [];\n                pointers = $.isArray(pointers) ? pointers : [pointers];\n                for (var i = 0; i < pointers.length; i++) {\n                    currentOptions = deepExtend({}, pointers[i], { animation: { transitions: options.transitions } });\n                    if (currentOptions.shape === ARROW) {\n                        current = new ArrowLinearPointer(scale, currentOptions);\n                    } else {\n                        current = new BarLinearPointer(scale, currentOptions);\n                    }\n                    that.pointers.push(current);\n                }\n            },\n            _getSize: function () {\n                var gauge = this;\n                var element = gauge.element;\n                var width = element.width();\n                var height = element.height();\n                var vertical = gauge.options.scale.vertical;\n                if (!width) {\n                    width = vertical ? DEFAULT_MIN_WIDTH : DEFAULT_WIDTH;\n                }\n                if (!height) {\n                    height = vertical ? DEFAULT_HEIGHT : DEFAULT_MIN_HEIGHT;\n                }\n                return {\n                    width: width,\n                    height: height\n                };\n            },\n            _getBox: function (box) {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var boxCenter = box.center();\n                var plotAreaBox = pointers[0].box.clone().wrap(scale.box);\n                var size;\n                for (var i = 0; i < pointers.length; i++) {\n                    plotAreaBox.wrap(pointers[i].box.clone());\n                }\n                if (scale.options.vertical) {\n                    size = plotAreaBox.width() / 2;\n                    plotAreaBox = new Box2D(boxCenter.x - size, box.y1, boxCenter.x + size, box.y2);\n                } else {\n                    size = plotAreaBox.height() / 2;\n                    plotAreaBox = new Box2D(box.x1, boxCenter.y - size, box.x2, boxCenter.y + size);\n                }\n                return plotAreaBox;\n            },\n            _alignElements: function () {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var scaleBox = scale.box;\n                var box = pointers[0].box.clone().wrap(scale.box);\n                var plotAreaBox = that.bbox;\n                var diff, i;\n                for (i = 0; i < pointers.length; i++) {\n                    box.wrap(pointers[i].box.clone());\n                }\n                if (scale.options.vertical) {\n                    diff = plotAreaBox.center().x - box.center().x;\n                    scale.reflow(new Box2D(scaleBox.x1 + diff, plotAreaBox.y1, scaleBox.x2 + diff, plotAreaBox.y2));\n                } else {\n                    diff = plotAreaBox.center().y - box.center().y;\n                    scale.reflow(new Box2D(plotAreaBox.x1, scaleBox.y1 + diff, plotAreaBox.x2, scaleBox.y2 + diff));\n                }\n                for (i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(that.bbox);\n                }\n            },\n            _shrinkElements: function () {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var scaleBox = scale.box.clone();\n                var pos = scale.options.vertical ? 'y' : 'x';\n                var pointerBox = pointers[0].box;\n                var i;\n                for (i = 0; i < pointers.length; i++) {\n                    pointerBox.wrap(pointers[i].box.clone());\n                }\n                scaleBox[pos + 1] += math.max(scaleBox[pos + 1] - pointerBox[pos + 1], 0);\n                scaleBox[pos + 2] -= math.max(pointerBox[pos + 2] - scaleBox[pos + 2], 0);\n                scale.reflow(scaleBox);\n                for (i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(that.bbox);\n                }\n            }\n        });\n        var LinearScale = NumericAxis.extend({\n            init: function (options) {\n                var scale = this;\n                scale.options = deepExtend({}, scale.options, options);\n                scale.options = deepExtend({}, scale.options, { labels: { mirror: scale.options.mirror } });\n                scale.options.majorUnit = scale.options.majorUnit || autoMajorUnit(scale.options.min, scale.options.max);\n                Axis.fn.init.call(scale, scale.options);\n                scale.options.minorUnit = scale.options.minorUnit || scale.options.majorUnit / 10;\n            },\n            options: {\n                min: 0,\n                max: 50,\n                majorTicks: {\n                    size: 15,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                minorTicks: {\n                    size: 10,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                line: { width: DEFAULT_LINE_WIDTH },\n                labels: {\n                    position: INSIDE,\n                    padding: 2\n                },\n                mirror: false,\n                _alignLines: false\n            },\n            render: function () {\n                var that = this;\n                var elements = that.elements = new Group();\n                var labels = that.renderLabels();\n                var scaleLine = that.renderLine();\n                var scaleTicks = that.renderTicks();\n                var ranges = that.renderRanges();\n                elements.append(scaleLine, labels, scaleTicks, ranges);\n                return elements;\n            },\n            renderRanges: function () {\n                var that = this;\n                var options = that.options;\n                var min = options.min;\n                var max = options.max;\n                var ranges = options.ranges || [];\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var elements = new Group();\n                var count = ranges.length;\n                var rangeSize = options.rangeSize || options.minorTicks.size / 2;\n                var range, slot, slotX, slotY, i;\n                if (count) {\n                    for (i = 0; i < count; i++) {\n                        range = getRange(ranges[i], min, max);\n                        slot = that.getSlot(range.from, range.to);\n                        slotX = vertical ? that.lineBox() : slot;\n                        slotY = vertical ? slot : that.lineBox();\n                        if (vertical) {\n                            slotX.x1 -= rangeSize * (mirror ? -1 : 1);\n                        } else {\n                            slotY.y2 += rangeSize * (mirror ? -1 : 1);\n                        }\n                        elements.append(Path.fromRect(new Rect([\n                            slotX.x1,\n                            slotY.y1\n                        ], [\n                            slotX.x2 - slotX.x1,\n                            slotY.y2 - slotY.y1\n                        ]), {\n                            fill: {\n                                color: range.color,\n                                opacity: range.opacity\n                            },\n                            stroke: {}\n                        }));\n                    }\n                }\n                return elements;\n            },\n            renderLabels: function () {\n                var that = this;\n                var options = that.options;\n                var labels = that.labels;\n                var elements = new Group();\n                for (var i = 0; i < labels.length; i++) {\n                    elements.append(_buildLabel(labels[i], options.labels));\n                }\n                return elements;\n            },\n            renderLine: function () {\n                var that = this;\n                var options = that.options;\n                var line = options.line;\n                var lineBox = that.lineBox();\n                var linePath;\n                var elements = new Group();\n                if (line.width > 0 && line.visible) {\n                    linePath = new Path({\n                        stroke: {\n                            color: line.color,\n                            dashType: line.dashType,\n                            width: line.width\n                        }\n                    });\n                    linePath.moveTo(lineBox.x1, lineBox.y1).lineTo(lineBox.x2, lineBox.y2);\n                    elements.append(linePath);\n                }\n                return elements;\n            },\n            renderTicks: function () {\n                var that = this;\n                var ticks = new Group();\n                var options = that.options;\n                var lineBox = that.lineBox();\n                var mirror = options.labels.mirror;\n                var majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n                var tickLineOptions = {\n                    _alignLines: options._alignLines,\n                    vertical: options.vertical\n                };\n                function render(tickPositions, tickOptions) {\n                    var i, count = tickPositions.length;\n                    if (tickOptions.visible) {\n                        for (i = tickOptions.skip; i < count; i += tickOptions.step) {\n                            if (i % tickOptions.skipUnit === 0) {\n                                continue;\n                            }\n                            tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                            tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                            tickLineOptions.position = tickPositions[i];\n                            ticks.append(that.renderAxisTick(tickLineOptions, tickOptions));\n                        }\n                    }\n                }\n                render(that.getMajorTickPositions(), options.majorTicks);\n                render(that.getMinorTickPositions(), deepExtend({}, { skipUnit: majorUnit / options.minorUnit }, options.minorTicks));\n                return ticks;\n            },\n            renderAxisTick: function (options, tickOptions) {\n                var tickX = options.tickX;\n                var tickY = options.tickY;\n                var position = options.position;\n                var start, end, tickPath;\n                if (options.vertical) {\n                    start = new Point(tickX, position);\n                    end = new Point(tickX + tickOptions.size, position);\n                } else {\n                    start = new Point(position, tickY);\n                    end = new Point(position, tickY + tickOptions.size);\n                }\n                tickPath = new Path({\n                    stroke: {\n                        color: tickOptions.color,\n                        width: tickOptions.width\n                    }\n                }).moveTo(start).lineTo(end);\n                return tickPath;\n            }\n        });\n        var LinearPointer = Pointer.extend({\n            init: function (scale, options) {\n                var pointer = this;\n                Pointer.fn.init.call(pointer, scale, options);\n                pointer.options = deepExtend({ track: { visible: defined(options.track) } }, pointer.options);\n            },\n            options: {\n                shape: BAR_POINTER,\n                track: { border: { width: 1 } },\n                color: BLACK,\n                border: { width: 1 },\n                opacity: 1,\n                margin: getSpacing(3),\n                animation: { type: BAR_POINTER },\n                visible: true\n            },\n            reflow: function () {\n                var pointer = this;\n                var options = pointer.options;\n                var scale = pointer.scale;\n                var scaleLine = scale.lineBox();\n                var trackSize = options.track.size || options.size;\n                var pointerHalfSize = options.size / 2;\n                var mirror = scale.options.mirror;\n                var margin = getSpacing(options.margin);\n                var vertical = scale.options.vertical;\n                var space = vertical ? margin[mirror ? 'left' : 'right'] : margin[mirror ? 'bottom' : 'top'];\n                var pointerBox, pointerRangeBox, trackBox;\n                space = mirror ? -space : space;\n                if (vertical) {\n                    trackBox = new Box2D(scaleLine.x1 + space, scaleLine.y1, scaleLine.x1 + space, scaleLine.y2);\n                    if (mirror) {\n                        trackBox.x1 -= trackSize;\n                    } else {\n                        trackBox.x2 += trackSize;\n                    }\n                    if (options.shape !== BAR_POINTER) {\n                        pointerRangeBox = new Box2D(scaleLine.x2 + space, scaleLine.y1 - pointerHalfSize, scaleLine.x2 + space, scaleLine.y2 + pointerHalfSize);\n                        pointerBox = pointerRangeBox;\n                    }\n                } else {\n                    trackBox = new Box2D(scaleLine.x1, scaleLine.y1 - space, scaleLine.x2, scaleLine.y1 - space);\n                    if (mirror) {\n                        trackBox.y2 += trackSize;\n                    } else {\n                        trackBox.y1 -= trackSize;\n                    }\n                    if (options.shape !== BAR_POINTER) {\n                        pointerRangeBox = new Box2D(scaleLine.x1 - pointerHalfSize, scaleLine.y1 - space, scaleLine.x2 + pointerHalfSize, scaleLine.y1 - space);\n                        pointerBox = pointerRangeBox;\n                    }\n                }\n                pointer.trackBox = trackBox;\n                pointer.pointerRangeBox = pointerRangeBox;\n                pointer.box = pointerBox || trackBox.clone().pad(options.border.width);\n            },\n            getElementOptions: function () {\n                var options = this.options;\n                return {\n                    fill: {\n                        color: options.color,\n                        opacity: options.opacity\n                    },\n                    stroke: defined(options.border) ? {\n                        color: options.border.width ? options.border.color || options.color : '',\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: options.opacity\n                    } : null\n                };\n            },\n            _margin: function () {\n                var pointer = this;\n                var options = pointer.options;\n                var scale = pointer.scale;\n                var mirror = scale.options.mirror;\n                var margin = getSpacing(options.margin);\n                var vertical = scale.options.vertical;\n                var space = vertical ? margin[mirror ? 'left' : 'right'] : margin[mirror ? 'bottom' : 'top'];\n                return space;\n            }\n        });\n        var ArrowLinearPointer = LinearPointer.extend({\n            init: function (scale, options) {\n                LinearPointer.fn.init.call(this, scale, options);\n                if (this.options.size === undefined) {\n                    this.options.size = this.scale.options.majorTicks.size * 0.6;\n                }\n            },\n            pointerShape: function () {\n                var that = this;\n                var options = that.options;\n                var scale = that.scale;\n                var size = options.size;\n                var vertical = scale.options.vertical;\n                var halfSize = size / 2;\n                var sign = scale.options.mirror ? -1 : 1;\n                var reverse = scale.options.reverse;\n                var pos, shape;\n                if (vertical) {\n                    pos = reverse ? 'y2' : 'y1';\n                    shape = [\n                        new Point(0, 0 - halfSize),\n                        new Point(0 - sign * size, 0),\n                        new Point(0, 0 + halfSize)\n                    ];\n                } else {\n                    pos = reverse ? 'x1' : 'x2';\n                    shape = [\n                        new Point(0 - halfSize, 0),\n                        new Point(0, 0 + sign * size),\n                        new Point(0 + halfSize, 0)\n                    ];\n                }\n                return shape;\n            },\n            repaint: function () {\n                var that = this;\n                var scale = that.scale;\n                var options = that.options;\n                var animation = new ArrowLinearPointerAnimation(that.elements, deepExtend(options.animation, {\n                    vertical: scale.options.vertical,\n                    mirror: scale.options.mirror,\n                    margin: that._margin(options.margin),\n                    from: scale.getSlot(options._oldValue),\n                    to: scale.getSlot(options.value)\n                }));\n                if (options.animation.transitions === false) {\n                    animation.options.duration = 0;\n                }\n                animation.setup();\n                animation.play();\n            },\n            render: function () {\n                var that = this;\n                var options = that.options;\n                var elements = new Group();\n                var scale = that.scale;\n                var elementOptions = that.getElementOptions();\n                var shape = that.pointerShape(options.value);\n                options.animation.type = ARROW_POINTER;\n                elements = new Path({\n                    stroke: elementOptions.stroke,\n                    fill: elementOptions.fill\n                }).moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).close();\n                var slot = scale.getSlot(options.value);\n                elements.transform(geo.transform().translate(slot.x1, slot.y1));\n                that.elements = elements;\n                return elements;\n            }\n        });\n        var BarLinearPointer = LinearPointer.extend({\n            init: function (scale, options) {\n                LinearPointer.fn.init.call(this, scale, options);\n                if (this.options.size === undefined) {\n                    this.options.size = this.scale.options.majorTicks.size * 0.3;\n                }\n            },\n            pointerShape: function (value) {\n                var that = this;\n                var options = that.options;\n                var scale = that.scale;\n                var vertical = scale.options.vertical;\n                var mirror = scale.options.mirror;\n                var dir = mirror == vertical ? -1 : 1;\n                var size = options.size * dir;\n                var minSlot = scale.getSlot(scale.options.min);\n                var slot = scale.getSlot(value);\n                var axis = vertical ? Y : X;\n                var sizeAxis = vertical ? X : Y;\n                var margin = that._margin() * dir;\n                var p1 = new Point();\n                p1[axis] = minSlot[axis + '1'];\n                p1[sizeAxis] = minSlot[sizeAxis + '1'];\n                var p2 = new Point();\n                p2[axis] = slot[axis + '1'];\n                p2[sizeAxis] = slot[sizeAxis + '1'];\n                if (vertical) {\n                    p1.translate(margin, 0);\n                    p2.translate(margin, 0);\n                } else {\n                    p1.translate(0, margin);\n                    p2.translate(0, margin);\n                }\n                var p3 = p2.clone();\n                var p4 = p1.clone();\n                if (vertical) {\n                    p3.translate(size, 0);\n                    p4.translate(size, 0);\n                } else {\n                    p3.translate(0, size);\n                    p4.translate(0, size);\n                }\n                return [\n                    p1,\n                    p2,\n                    p3,\n                    p4\n                ];\n            },\n            repaint: function () {\n                var that = this;\n                var scale = that.scale;\n                var options = that.options;\n                var shape = that.pointerShape(options.value);\n                var pointerPath = that.elements.children[0];\n                var oldShape = that.pointerShape(options._oldValue);\n                pointerPath.moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).lineTo(shape[3]).close();\n                var animation = new BarLinearPointerAnimation(pointerPath, deepExtend(options.animation, {\n                    reverse: scale.options.reverse,\n                    vertical: scale.options.vertical,\n                    oldPoints: [\n                        oldShape[1],\n                        oldShape[2]\n                    ],\n                    newPoints: [\n                        shape[1],\n                        shape[2]\n                    ]\n                }));\n                if (options.animation.transitions === false) {\n                    animation.options.duration = 0;\n                }\n                animation.setup();\n                animation.play();\n            },\n            render: function () {\n                var that = this;\n                var group = new Group();\n                var elementOptions = that.getElementOptions();\n                var pointer = new Path({\n                    stroke: elementOptions.stroke,\n                    fill: elementOptions.fill\n                });\n                group.append(pointer);\n                that.elements = group;\n                return group;\n            }\n        });\n        var RadialPointerAnimation = draw.Animation.extend({\n            init: function (element, options) {\n                draw.Animation.fn.init.call(this, element, options);\n                options = this.options;\n                options.duration = math.max(math.abs(options.newAngle - options.oldAngle) / options.duration * 1000, 1);\n            },\n            options: {\n                easing: LINEAR,\n                duration: ANGULAR_SPEED\n            },\n            step: function (pos) {\n                var anim = this;\n                var options = anim.options;\n                var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n                anim.element.transform(geo.transform().rotate(angle, options.center));\n            }\n        });\n        draw.AnimationFactory.current.register(RADIAL_POINTER, RadialPointerAnimation);\n        var ArrowLinearPointerAnimation = draw.Animation.extend({\n            options: {\n                easing: LINEAR,\n                duration: LINEAR_SPEED\n            },\n            setup: function () {\n                var options = this.options;\n                var margin = options.margin;\n                var from = options.from;\n                var to = options.to;\n                var axis = options.vertical ? 'x1' : 'y1';\n                if (options.mirror == options.vertical) {\n                    from[axis] -= margin;\n                    to[axis] -= margin;\n                } else {\n                    from[axis] += margin;\n                    to[axis] += margin;\n                }\n                var fromScale = this.fromScale = new Point(from.x1, from.y1);\n                var toScale = this.toScale = new Point(to.x1, to.y1);\n                if (options.duration !== 0) {\n                    options.duration = math.max(fromScale.distanceTo(toScale) / options.duration * 1000, 1);\n                }\n            },\n            step: function (pos) {\n                var translateX = interpolateValue(this.fromScale.x, this.toScale.x, pos);\n                var translateY = interpolateValue(this.fromScale.y, this.toScale.y, pos);\n                this.element.transform(geo.transform().translate(translateX, translateY));\n            }\n        });\n        draw.AnimationFactory.current.register(ARROW_POINTER, ArrowLinearPointerAnimation);\n        var BarLinearPointerAnimation = draw.Animation.extend({\n            options: {\n                easing: LINEAR,\n                speed: LINEAR_SPEED\n            },\n            setup: function () {\n                var options = this.options;\n                var newPoints = options.newPoints;\n                var oldPoints = options.oldPoints;\n                var axis = this.axis = options.vertical ? Y : X;\n                var to = this.to = newPoints[0][axis];\n                var from = this.from = oldPoints[0][axis];\n                if (options.duration !== 0) {\n                    options.duration = math.max(math.abs(to - from) / options.speed * 1000, 1);\n                }\n                this._set(from);\n            },\n            step: function (pos) {\n                var value = interpolateValue(this.from, this.to, pos);\n                this._set(value);\n            },\n            _set: function (value) {\n                var setter = 'set' + this.axis.toUpperCase();\n                var points = this.options.newPoints;\n                points[0][setter](value);\n                points[1][setter](value);\n            }\n        });\n        draw.AnimationFactory.current.register(BAR_POINTER, BarLinearPointerAnimation);\n        function _buildLabel(label, options) {\n            var labelBox = label.box;\n            var textBox = label.children[0].box;\n            var border = options.border || {};\n            var background = options.background || '';\n            var elements = new Group();\n            var styleBox, styleGeometry, wrapper;\n            wrapper = Path.fromRect(new Rect([\n                labelBox.x1,\n                labelBox.y1\n            ], [\n                labelBox.width(),\n                labelBox.height()\n            ]), { stroke: {} });\n            var text = new Text(label.text, new Point(textBox.x1, textBox.y1), {\n                font: options.font,\n                fill: { color: options.color }\n            });\n            styleGeometry = _pad(text.bbox().clone(), options.padding);\n            styleBox = Path.fromRect(styleGeometry, {\n                stroke: {\n                    color: border.width ? border.color : '',\n                    width: border.width,\n                    dashType: border.dashType,\n                    lineJoin: 'round',\n                    lineCap: 'round'\n                },\n                fill: { color: background }\n            });\n            elements.append(wrapper);\n            elements.append(styleBox);\n            elements.append(text);\n            return elements;\n        }\n        function getRange(range, min, max) {\n            var from = defined(range.from) ? range.from : MIN_VALUE;\n            var to = defined(range.to) ? range.to : MAX_VALUE;\n            range.from = math.max(math.min(to, from), min);\n            range.to = math.min(math.max(to, from), max);\n            return range;\n        }\n        function _pad(bbox, value) {\n            var origin = bbox.getOrigin();\n            var size = bbox.getSize();\n            var spacing = getSpacing(value);\n            bbox.setOrigin([\n                origin.x - spacing.left,\n                origin.y - spacing.top\n            ]);\n            bbox.setSize([\n                size.width + (spacing.left + spacing.right),\n                size.height + (spacing.top + spacing.bottom)\n            ]);\n            return bbox;\n        }\n        function _unpad(bbox, value) {\n            var spacing = getSpacing(value);\n            spacing.left = -spacing.left;\n            spacing.top = -spacing.top;\n            spacing.right = -spacing.right;\n            spacing.bottom = -spacing.bottom;\n            return _pad(bbox, spacing);\n        }\n        dataviz.ui.plugin(RadialGauge);\n        dataviz.ui.plugin(LinearGauge);\n        dataviz.ExportMixin.extend(Gauge.fn);\n        deepExtend(dataviz, {\n            Gauge: Gauge,\n            RadialPointer: RadialPointer,\n            LinearPointer: LinearPointer,\n            ArrowLinearPointer: ArrowLinearPointer,\n            BarLinearPointer: BarLinearPointer,\n            LinearScale: LinearScale,\n            RadialScale: RadialScale,\n            LinearGauge: LinearGauge,\n            RadialGauge: RadialGauge\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}