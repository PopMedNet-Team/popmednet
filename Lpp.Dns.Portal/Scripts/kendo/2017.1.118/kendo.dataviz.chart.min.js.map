{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","$","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","text","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","textContent","appendChild","body","String","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","countNumbers","values","num","count","isNumber","getField","field","row","getter","evalOptions","context","state","dryRun","defaults","depth","needsEval","property","propValue","excluded","MAX_EXPAND_DEPTH","inArray","hasOwnProperty","isFunction","valueOrDefault","isObject","categoriesCount","series","seriesCount","categories","Math","max","data","anyHasZIndex","elements","idx","defined","zIndex","hasGradientOverlay","overlay","gradient","areNumbers","hasValue","wrapData","seriesItem","isArray","paneID","ID","axisGroupBox","axes","axisBox","contentBox","wrap","clone","Box","paneAnchor","pane","anchor","isTransparent","color","setValue","fieldName","target","parentObj","indexOf","split","shift","filterSeriesByType","types","currentSeries","result","seriesTypes","concat","type","equalsIgnoreCase","a","b","toLowerCase","isDateAxis","axisOptions","sampleCategory","dateCategory","Date","DATE","appendIfNotNull","array","element","singleItemOrArray","getDateField","intlService","parseDate","groupSeries","axis","axisIx","grep","s","categoryAxis","preventDefault","_defaultPrevented","acceptKey","e","mouseKey","event","accept","ctrlKey","shiftKey","altKey","toChartAxisRanges","axisRanges","axisRange","ranges","name","min","range","createDiv","className","closestHandle","hasClasses","stopPropagation","tooltipAlignment","angle","horizontal","vertical","radians","dataviz","rad","sine","round","sin","DEFAULT_PRECISION","cosine","cos","abs","RAD_60","CENTER","RIGHT","LEFT","RAD_30","BOTTOM","TOP","segmentVisible","fields","index","pointVisibility","visible","seriesTotal","pointData","sum","SeriesBinder","bindPoint","valueFields","isString","parseFloat","intersection","b1","b2","ua","uat","x","y","ub","Point","xComparer","resolveAxisAliases","alias","aliases","AXIS_NAMES","pointByCategoryName","points","category","applyAxisDefaults","themeOptions","mapAxisOptions","axisColor","axisDefaults","themeAxisDefaults","axisName","line","labels","title","applySeriesDefaults","seriesType","baseOptions","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","tooltip","_defaults","bar","column","rangeColumn","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","last","transpose","rows","rowIx","colCount","colIx","rowCount","clearMissingValues","originalOptions","fieldValue","originalValue","nullValue","datavizConstants","MAX_VALUE","MIN_VALUE","VALUE","WHITE","CIRCLE","Y","X","BLACK","ARC","ChartElement","alignPathToPixel","setDefaultOptions","eventElement","services","TemplateService","TextBox","ShapeElement","getSpacing","limitValue","append","styleValue","CategoryAxis","BoxElement","DateCategoryAxis","elementStyles","bindEvents","unbindEvents","support","drawing","Path","Animation","AnimationFactory","Group","Color","geometry","GeometryPoint","transform","ChartAxis","ChartPlotArea","Aggregates","STD_ERR","STD_DEV","percentRegex","standardDeviationRegex","ErrorRangeCalculator","browser","INITIAL_ANIMATION_DURATION","FADEIN","GLASS","BORDER_BRIGHTNESS","TOOLTIP_OFFSET","START_SCALE","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","LINE_MARKER_SIZE","ZERO","INTERPOLATE","GAP","SMOOTH","STEP","AREA","BAR","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","COLUMN","DONUT","FUNNEL","HORIZONTAL_WATERFALL","LINE","OHLC","PIE","POLAR_AREA","POLAR_LINE","POLAR_SCATTER","RADAR_AREA","RADAR_COLUMN","RADAR_LINE","RANGE_BAR","RANGE_COLUMN","SCATTER","SCATTER_LINE","VERTICAL_AREA","VERTICAL_BOX_PLOT","VERTICAL_BULLET","VERTICAL_LINE","WATERFALL","EQUALLY_SPACED_SERIES","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","SERIES_CLICK","SERIES_HOVER","PLOT_AREA_CLICK","PLOT_AREA_HOVER","DRAG","DRAG_END","DRAG_START","ZOOM_START","ZOOM","ZOOM_END","SELECT_START","SELECT","SELECT_END","RENDER","SHOW_TOOLTIP","HIDE_TOOLTIP","LOGARITHMIC","CATEGORY","INSIDE_END","INSIDE_BASE","OUTSIDE_END","MOUSEWHEEL","MOUSEWHEEL_DELAY","constants","DEFAULT_ERROR_BAR_WIDTH","ErrorBarBase","CategoricalErrorBar","CategoricalChart","PointEventsMixin","NoteMixin","ABOVE","BELOW","LinePoint","LineSegment","StepLineSegment","SplineSegment","LineChartMixin","ClipAnimation","ClipAnimationMixin","LineChart","AreaSegmentMixin","AreaSegment","StepAreaSegment","SplineAreaSegment","AreaChart","AxisGroupRangeTracker","BarLabel","BAR_ALIGN_MIN_WIDTH","Bar","ClusterLayout","StackWrap","BarChart","Candlestick","CandlestickChart","BoxPlot","VerticalBoxPlot","BoxPlotChart","ScatterErrorBar","ScatterChart","Bubble","BubbleChart","Target","Bullet","BulletChart","BaseTooltip","CrosshairTooltip","Crosshair","ChartContainer","Pane","PlotAreaBase","PlotAreaEventsMixin","SeriesAggregator","DefaultAggregates","RangeBar","RangeBarChart","OHLCPoint","OHLCChart","WaterfallSegment","WaterfallChart","CategoricalPlotArea","Highlight","Pannable","ZoomSelection","MousewheelZoom","LegendLayout","LegendItem","HORIZONTAL","POINTER","CUSTOM","Legend","PlotAreaFactory","ZOOM_ACCELERATION","Selection","Tooltip","SharedTooltip","BarChartAnimation","BubbleAnimation","FadeInAnimation","PieAnimation","ScatterLineChart","XYPlotArea","PieSegment","PieChartMixin","PIE_SECTOR_ANIM_DELAY","PieChart","PiePlotArea","DonutSegment","DONUT_SECTOR_ANIM_DELAY","DonutChart","DonutPlotArea","DEFAULT_PADDING","PolarPlotAreaBase","PolarScatterChart","PolarLineChart","SplinePolarAreaSegment","PolarAreaSegment","PolarAreaChart","PolarPlotArea","RadarLineChart","SplineRadarAreaSegment","RadarAreaSegment","RadarAreaChart","RadarSegment","RadarClusterLayout","RadarStackLayout","RadarBarChart","RadarPlotArea","FunnelSegment","FunnelChart","FunnelPlotArea","COLOR","FIRST","FROM","MAX","MIN","NOTE_TEXT","SUMMARY_FIELD","TO","MOUSEMOVE","CONTEXTMENU","MOUSEMOVE_DELAY","Chart","_axis","point","getCategory","getValue","slot","from","to","limit","valueRange","plotArea","_plotArea","visual","backgroundVisual","_bgVisual","sumOrNull","avg","first","_valueFields","_otherFields","_nullValue","_undefinedValue","register","otherFields","this$1","_makeValue","undefined","canonicalFields","pointIx","item","fieldData","srcValueFields","srcPointFields","Array","slice","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","RegExp","errorValue","initGlobalRanges","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","low","high","globalRange","getStandardError","binder","OBJECT","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","total","squareDifferenceSum","pow","msie","isVertical","chart","fn","call","reflow","targetBox","linePoints","endCaps","getAxis","valueBox","getSlot","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","y1","y2","x1","x2","boxSize","floor","createVisual","rect","toRect","sender","getSender","createDefaultVisual","defaultVisual","ref","lineOptions","stroke","dashType","moveTo","lineTo","animation","delay","seriesValueAxis","chartService","seriesCategoryAxis","valueAxisRanges","categoryPoints","seriesPoints","seriesOptions","_evalSeries","render","traverseDataPoints","addValue","bind","pointOptions","seriesIx","pointType","prototype","invertAxes","plotValue","categoryIx","otherValues","categorySum","other","stack","otherStack","isStacked100","group","plotRange","startValue","positive","prevValue","isStackedBar","otherValue","valueAxis","axisCrossingValue","isStacked","STRING","categoryAxisCrossingValue","stackLimits","stackName","pIx","isFinite","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","sparseArrayLimits","addErrorBar","errorBars","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","errorBar","updateRange","createPoint","owner","dataItem","noteText","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","valueSlot","pointSlot","categorySlot","clip","aboveAxis","stackValue","percentage","reflowPoint","reflowCategories","reverse","crossingValues","axisCrossingValues","axisIndex","slotX","slotY","callback","seriesIx$1","currentCategory","seriesIx$2","_outOfRangeCallback","_bindPoint","outOfRangePoint","bindCache","_bindCache","formatPointValue","format","auto","click","trigger","eventArgs","hover","runningTotal","originalEvent","createNote","notes","label","note","Note","tooltipTracking","labelText","labelTemplate","markers","_rendered","createMarker","template","compile","formatValue","align","vAlign","margin","left","right","markerBorder","background","border","brightness","toHex","rotation","opacity","markerBox","_childBox","childBox","noteTargetBox","reflowLabel","position","alignTo","createHighlight","highlight","defaultColor","shadow","getElement","highlightVisual","highlightVisualArgs","halfSize","paddingBox","Rect","tooltipAnchor","horizontalAlign","verticalAlign","clipBox","showTooltip","overlaps","overlapsBox","padding","visualPoints","fromPoints","closed","close","aliasFor","coords","parent","getNearestPoint","calculateStepPoints","prevPoint","prevMarkerBoxCenter","markerBoxCenter","isInterpolate","seriesMissingValues","dir","revDir","justified","curveProcessor","segments","curve","CurveProcessor","process","apply","renderSegments","lastSegment","sortedPoints","pointCount","_segments","sortPoints","createSegment","_addSegment","children","unshift","segment","missingValues","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","setup","_setEnd","step","pos","interpolateValue","topRight","bottomRight","suspend","setX","resume","duration","createAnimation","clipPath","root","getRoot","transitions","fromRect","_setChildrenAnimation","animationPoints","firstPoint","lastPoint","valueAxisLineBox","lineBox","categoryAxisLineBox","stackPoints","_linePoints","end","createArea","createLine","lineCap","fill","prevSegment","strokeSegments","_strokeSegments","createFill","createStroke","prevStrokeSegments","prevAnchor","stackSegments","firstAnchor","fillSegments","Segment","controlOut","controlIn","closeFill","fillPath","_gapStackPoints","stackPoint","_stackPoints","currentSeriesIx","gapStackPoint","startIdx","endIdx","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","update","chartAxisRanges","chartRange","reset","query","content","textBox","noclip","textOptions","labelBox","top","bottom","alignToClipBox","start","parentBox","createLabel","customVisual","rectVisual","createRect","path","strokeOpacity","getBorderColor","lineJoin","createGradientOverlay","baseColor","_brightness","borderColor","gap","spacing","slots","slotSize","currentChild","positionAxis","childrenCount","snapTo","clusterType","stackType","cluster","stackWrap","labelOptions","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","zeroSlot","stackAxis","childrenLength","_setAnimationOptions","pointVisual","origin","mid","ocSlot","open","lhSlot","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","container","set","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","whiskerSlot","boxSlot","medianSlot","meanSlot","q1","q3","reflowBoxSlot","lower","upper","reflowWhiskerSlot","median","mean","meanPoints","calcMeanPoints","whiskerPoints","calcWhiskerPoints","medianPoints","calcMedianPoints","renderOutliers","outlierValue","markersBorder","shape","outliers","outerFence","extremes","reflowOutliers","move","whiskers","CROSS","filterOutliers","items","seriesAxes","_initFields","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","intl","xAxisName","xAxis","yAxisName","yAxis","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","ref$1","radius","highlightGroup","Circle","createGradient","stops","offset","_maxSize","negativeValues","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","PI","targetValueSlot","targetSlotX","targetSlotY","targetSlot","bodyVisual","create","bulletOptions","isNaN","getStyle","pointColor","backgroundColor","font","borderWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","show","tooltipOptions","percBrightness","notify","hide","destroy","crosshair","formatService","initAxisName","showAt","stickyMode","formattedValue","dateFormats","baseUnit","getAnchor","ref_options","bbox","bottomLeft","translate","topLeft","moveLine","lineEnd","getBox","dim","lineStart","pointCategoryIndex","axisLineBox","currentAxis","shouldClip","_clipBox","chartsBox","clipRect","unclipLabels","stackRoot","j","charts","isStackRoot","id","createTitle","chartContainer","titleOptions","Title","buildTitle","appendAxis","appendChart","empty","i$1","removeAxis","removeChart","pop","visualStyle","renderComplete","createGridLines","clipRoot","gridLines","altAxis","allAxes","vGridLines","hGridLines","refresh","clear","renderVisual","axisValueField","length$1","idx$1","axis$1","lineBox$1","shrinkToFit","initFields","initSeries","legend","crosshairs","createPanes","createCrosshairs","setTitle","currentPane","panes","paneOptions","panesLength","paneIndex","currentCrosshair","removeCrosshairs","splice","hideCrosshairs","findPane","matchingPane","findPointPane","containsPoint","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","itemLabelOptions","markerColor","inactiveItems","inactiveItemsLabels","visibleInLegend","active","groupAxes","paneIx","paneAxes","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","reflowAxes","reflowCharts","redraw","panesArray","crossingAxes","valuesToAdd","defaultValue","alignAxisTo","targetAxis","crossingValue","targetCrossingValue","slotEdge","targetEdge","alignAxes","paneId","anchorCrossings","pane$1","paneId$1","anchor$1","anchorCrossings$1","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","COORD_PRECISION","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","shrinked","overflowY","fitAxes","paneBox","offsetY","currentAxis$1","offsetX","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","currentPane$1","i$2","currentPane$2","remainingHeight","remainingPanes","autoHeightPanes","parseInt","backgroundBox","axisA","axisB","axesCount","chartsBoxes","boxes","addBackgroundPaths","multipath","paths","backgroundContainsPoint","bg","MultiPath","appendVisual","pointsByCategoryIndex","categoryIndex","pointsBySeriesIndex","seriesIndex","filterPoints","pointsBySeriesName","findPoint","paneByPoint","_dispatchEvent","defaultAggregates","fieldAggregate","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","aggregatePoints","srcPoints","srcValues","_bindPoints","firstDataItem","dataItems","_bindField","aggregates","fromOptions","toOptions","labelFrom","_createLabel","labelTo","plotLimits","oPoints","cPoints","lhPoints","oSlot","cSlot","fromBox","toBox","createSegments","summary","totalCategories","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","paneSeries","visibleSeries","groups","groupIx","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","dateAxis","srcSeries","processedSeries","categoryField","aggregateSeries","filterSeries","minCategory","srcCategories","totalRangeIndices","outOfRangePoints","ceil","_outOfRangeMinPoint","_outOfRangeMaxPoint","_seriesMax","aggregatorSeries","srcData","outOfRangeMinIdx","outOfRangeMaxIdx","getFn","outOfRangeMinCategory","outOfRangeMaxCategory","aggregator","categoriesToAdd","defaultPaneName","paneName","stackableChartOptions","firstSeries","axisSeries","categoryAxes","unique","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","definitions","isJustified","defaultAxisRange","axisType","tracker","defaultRange","roundToMajorUnit","LogarithmicAxis","NumericAxis","eventType","_eventCoordinates","pointPane","updateAxisOptions","axesOptions","_points","arrayPoints","toggleHighlight","hasHighlight","togglePointHighlight","toggleHandler","toggle","isHighlighted","_active","_panAxes","pan","delta","lock","updatedAxes","limitRange","marqueeColor","marquee","_marquee","removeElement","setStyles","styles","zoomPane","_zoomPane","_elementOffset","_zoomPaneClipBox","pageX","pageY","chartElement","elementOffset","_selectionPosition","elementOffset$$1","selectionPosition","_updateAxisRanges","zoom","pointsRange","startLocation","location","updateRanges","zoomRange","legendItem","Layout","lineSpacing","orientation","clippedBBox","rectToBox","addVisual","createContainer","FloatElement","markerOptions","cursor","eventSink","_itemOverlay","widget","args","_legendItemHover","pointIndex","leave","_unsetActivePoint","renderChildren","createItems","userAlign","getService","innerElement","hasItems","legendBox","containerCustomReflow","containerReflow","alignTarget","containerBox","_registry","registry","match","observer","getValueAxis","_dateAxis","initOptions","createElements","_index","selection","leftHandle","rightHandle","selectionStyles","leftHandleHeight","rightHandleHeight","wrapper","leftMask","rightMask","borderLeftWidth","borderRightWidth","_mousewheelHandler","mousewheel","_mousewheel","obj","_domEvents","DomEventsBuilder","_start","_move","_end","tap","_tap","press","_press","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","clearTimeout","_mwTimeout","_state","_rangeEventArgs","_value","moveTarget","handle","addClass","oldRange","span","scale","removeClass","rightClick","which","mousewheelDelta","expand","setTimeout","p0","_toModelCoordinates","touches","p1","_slot","rightMaskWidth","distance","leftMaskWidth","fromValue","toValue","zDir","_current","tooltipPoints","_slotAnchor","_defaultAnchor","shared","categoryText","categoryFormat","centerPoint","slotCenter","fromScale","abort","scaleX","scaleY","easing","fadeTo","missingValue","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","DateValueAxis","axisPane$1","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","sector","brightnessValue","themeLabels","theme","animationDelay","labelHeight","labelWidth","lp","labelsOptions","labelsDistance","middle","startAngle","innerRadius","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","ShapeBuilder","createRing","midAndle","midPoint","DEFAULT_FONT","createLegendItem","pointVisible","legendOptions","legendItems","colorsCount","anglePerValue","currentAngle","explode","seriesColors","Ring","evalSegmentOptions","segmentOptions","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","boxCenter","leftSideLabels","rightSideLabels","seriesConfig","seriesConfigs","setRadius","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","lr","firstBox","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelsCount","labelDistance","boxY","hAlignLabel","connectorsColor","connectorLine","sr","crossing","connectors","_connectorLines","pointInCircle","reverseValue","second","originalX","direction","sector_center","cx","cy","t","createPieChart","pieChart","totalSize","seriesWithoutSize","holeSize","currentSize","currentSeries$1","createDonutChart","donutChart","createPolarAxis","createValueAxis","polarAxis","axisDefaultRange","valueAxisOptions","RadarLogarithmicAxis","RadarNumericAxis","heightDiff","valueAxisBox","valueRadius","onCircle","_polarAxisCenter","_hasMissingValuesGap","PolarAxis","majorGridLines","minorGridLines","scatterChart","xValue","yValue","slotSector","slotAngle","childSector","RadarCategoryAxis","_hasBarCharts","_isStacked100","chartOptions","chartBox","createPath","labelPadding","dynamicSlopeReflow","totalHeight","lastUpperSide","previousOffset","previousHeight","nextSegment","nextPercentage","firstSegment","maxSegment","dynamicHeight","segmentSpacing","constantSlopeReflow","decreasingWidth","neckRatio","topMostWidth","finalNarrow","dynamicSlope","createFunnelChart","funnelChart","errorLow","errorHigh","userOptions","observers","addObserver","ChartService","_initElement","_originalOptions","_theme","_initTheme","_initSurface","_initHandlers","_bindCategories","FontLoader","preloadFonts","_destroyed","_redraw","_attachEvents","_setElementClass","firstChild","seriesCopies","_applyDefaults","_applySeriesColors","getSize","resize","force","_resize","_noTransitionsRedraw","_model","findAxisByName","filter","seriesName","categoryName","_togglePointsHighlight","_highlight","_sharedTooltip","_tooltip","hideTooltip","surface","_surfaceWrap","chartArea","elementSize","renderAs","Surface","model","_getModel","_destroyView","traverse","draw","play","_createTooltip","_setupSelection","_createPannable","_createZoomSelection","_createMousewheelZoom","_navState","_cancelDomEvents","exportVisual","originalChartArea","pannable","_pannable","zoomable","_zoomSelection","_mousewheelZoom","seriesColor","colors","_createPlotArea","RootElement","_modelOptions","DEFAULT_WIDTH","DEFAULT_HEIGHT","skipSeries","_hasSelection","_selections","selections","select","addDuration","weekStartDay","_selectStart","_select","_selectEnd","_clickHandler","_click","_surfaceMouseenterHandler","_mouseover","_surfaceMouseleaveHandler","_mouseout","_mousemove","throttle","removeObserver","requiresHandlers","eventNames","isDefaultPrevented","_toDocumentCoordinates","obj$1","_shouldAttachMouseMove","domEvents","cancel","_stopDragEvent","_gestureDistance","suspendTracking","_zooming","resumeTracking","previousGestureDistance","scaleDelta","mousewheelZoom","_drawingChartElement","_startNavigation","_suppressHover","ranges$1","translateRange","_endNavigation","prevented","totalDelta","scaleRange","chartEvent","_getChartElement","eventTarget","closest","coordinates","eventCoordinates","_elementPadding","_padding","clientX","clientY","drawingElement","_activePoint","_propagateClick","_startHover","handlingTap","_mouseMoveTrackHandler","_mouseMoveTracking","seriesPoint","_trackCrosshairs","_trackSharedTooltip","pointArgs","hoverArgs","_tooltipCategoryIx","hideElements","_deferRedraw","_clearRedrawTimeout","_redrawTimeout","clearInterval","autoBind","_bindCategoryAxisFromSeries","onAxis","dataLength","dataIx","dataRow","uniqueCategories","_isBindable","transitionsState","updateMouseMoveHandler","applyOptions","setOptions","createProxyMember","instance","_instance","arguments","nameTemplate","seriesClone","legacyTemplate","groupNameTemplate","logToConsole","_slotCount","_groupIx","_groupValue","ChartInstanceObserver","proxyMembers","geom","ChartPane","ChartSeries","NS","outerWidth","_outerWidth","outerHeight","_outerHeight","KendoChart","Widget","ui","DataSource","InstanceObserver","proxy","MOUSELEAVE_NS","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","CHANGE","DATABOUND","LEAVE","Observable","TOOLTIP_ANIMATION_DURATION","TOOLTIP_SHOW_DELAY","TOOLTIP_INVERSE","SHARED_TOOLTIP_CLASS","events","UserEvents","global","multiTouch","fastTap","handlerMap","legendItemClick","dataSource","_initDataSource","_bindSeries","dimensions","_setEvents","_getThemeOptions","_sourceSeries","setDataSource","_hasDataSource","_onDataChanged","unbind","_dataChangeHandler","_hasData","fetch","off","_destroyCrosshairTooltips","findPaneByName","findPaneByIndex","findSeries","findSeriesByName","_createSeries","findSeriesByIndex","_seriesOptions","on","_mouseleave","relatedTarget","themes","themeName","_initChart","_createChart","_initTooltip","tooltips","_crosshairTooltips","_getCrosshairTooltip","_showTooltip","_hideTooltip","_onRender","_copyMembers","names","_events","_tooltipleave","_onLegendItemClick","_legendItemClick","_saveGroupVisibleState","_bindData","view","grouped","_applyGroupVisibleState","visibleState","action","_groupVisibleState","seriesData","categoriesData","_bindCategoryAxis","ExportMixin","PDFMixin","plugin","mobileScrollerSelector","useWithBlock","paramName","attr","_mobileScroller","_clearShowTimeout","remove","sharedTemplate","_offset","css","_ensureElement","stop","animate","showTimeout","_measure","zoomLevel","viewport","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","movable","_fit","toggleClass","_sharedContent","_pointContent","html","_hideElement","appendTo","contains","fadeOut","always","tooltipTemplate","xLow","xHigh","yLow","yHigh","viewPortSize","output","_chart","_pane","chartsVisual","_options","_filterPoints","_clearFields","toggleVisibility","hasFilter","_filterData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,qBAAsB,cAAeD,IAC9C,YACG,SAAUE,GAmDP,QAASC,GAAUC,GAAnB,GAEaC,GADLC,IACJ,KAASD,IAAOD,GACZE,EAAMC,KAAKF,EAAMD,EAAOC,GAE5B,OAAOC,GAAME,OAAOC,KAAK,IAE7B,QAASC,GAAQC,GAAjB,GAEaC,GADLC,EAAO,UACX,KAASD,EAAI,EAAGA,EAAID,EAAIG,SAAUF,EAC9BC,IAASA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IACzEA,GAAQF,EAAII,WAAWH,EAE3B,OAAOC,KAAS,EAEpB,QAASG,KACL,OACIC,MAAO,EACPC,OAAQ,EACRC,SAAU,GAsDlB,QAASC,GAAYC,EAAMC,EAAOC,GAC9B,MAAOC,GAAYC,QAAQC,QAAQL,EAAMC,EAAOC,GA7HvD,GAEOI,GAuEAC,EACAC,EAKAL,CA9EJM,QAAOC,MAAMC,KAAOF,OAAOC,MAAMC,SAC7BL,EAAWI,MAAME,MAAMC,QACvBC,KAAM,SAAUC,GACZC,KAAKC,MAAQF,EACbC,KAAKE,QAAU,EACfF,KAAKG,SAETC,IAAK,SAAUpC,EAAKqC,GAAf,GACGC,GAAMN,KAAKG,KACXI,GACAvC,IAAKA,EACLqC,MAAOA,EAEXC,GAAItC,GAAOuC,EACNP,KAAKQ,OAGNR,KAAKS,MAAMC,MAAQH,EACnBA,EAAMI,MAAQX,KAAKS,MACnBT,KAAKS,MAAQF,GAJbP,KAAKQ,MAAQR,KAAKS,MAAQF,EAM1BP,KAAKE,SAAWF,KAAKC,OACrBK,EAAIN,KAAKQ,MAAMxC,KAAO,KACtBgC,KAAKQ,MAAQR,KAAKQ,MAAME,MACxBV,KAAKQ,MAAMG,MAAQ,MAEnBX,KAAKE,WAGbU,IAAK,SAAU5C,GACX,GAAIuC,GAAQP,KAAKG,KAAKnC,EACtB,IAAIuC,EAeA,MAdIA,KAAUP,KAAKQ,OAASD,IAAUP,KAAKS,QACvCT,KAAKQ,MAAQD,EAAMG,MACnBV,KAAKQ,MAAMG,MAAQ,MAEnBJ,IAAUP,KAAKS,QACXF,EAAMI,QACNJ,EAAMI,MAAMD,MAAQH,EAAMG,MAC1BH,EAAMG,MAAMC,MAAQJ,EAAMI,OAE9BJ,EAAMI,MAAQX,KAAKS,MACnBF,EAAMG,MAAQ,KACdV,KAAKS,MAAMC,MAAQH,EACnBP,KAAKS,MAAQF,GAEVA,EAAMF,SA0BrBd,GAAoBsB,mBAAoB,GAEpB,mBAAbC,YACPtB,EAAoBsB,SAASC,cAAc,OAC3CvB,EAAkBP,MAAM+B,QAAU,2QAElC7B,EAAcO,MAAME,MAAMC,QAC1BC,KAAM,SAAUmB,GACZjB,KAAKkB,OAAS,GAAI5B,GAAS,KAC3BU,KAAKiB,QAAUpD,EAAEgC,UAAWN,EAAiB0B,IAEjD5B,QAAS,SAAUL,EAAMC,EAAOkC,GAAvB,GAIDC,GACAC,EACAC,EAIAvB,EACAb,EACAqC,EACKvD,EACDqC,CAbR,KAAKrB,EACD,MAAOL,IAKX,IAHIyC,EAAWtD,EAAUmB,GACrBoC,EAAWhD,EAAQW,EAAOoC,GAC1BE,EAAetB,KAAKkB,OAAON,IAAIS,GAE/B,MAAOC,EAEPvB,GAAOpB,IACPO,EAAaiC,GAAO3B,EACpB+B,EAAiBvB,KAAKwB,kBAAkBC,WAAU,EACtD,KAASzD,IAAOiB,GACRoB,EAAQpB,EAAMjB,GACG,SAAVqC,IACPnB,EAAWD,MAAMjB,GAAOqC,EAehC,OAZAnB,GAAWwC,YAAc1C,EACzBE,EAAWyC,YAAYJ,GACvBT,SAASc,KAAKD,YAAYzC,IACfF,EAAP6C,IAAapD,SACbsB,EAAKnB,MAAQM,EAAW4C,YAAc9B,KAAKiB,QAAQJ,mBACnDd,EAAKlB,OAASK,EAAW6C,aACzBhC,EAAKjB,SAAWyC,EAAeS,UAAYhC,KAAKiB,QAAQJ,oBAExDd,EAAKnB,MAAQ,GAAKmB,EAAKlB,OAAS,GAChCmB,KAAKkB,OAAOd,IAAIiB,EAAUtB,GAE9Bb,EAAW+C,WAAWC,YAAYhD,GAC3Ba,GAEXyB,gBAAiB,WACb,GAAIW,GAASrB,SAASC,cAAc,MAEpC,OADAoB,GAAOlD,MAAM+B,QAAU,0DAA4DhB,KAAKiB,QAAQJ,mBAAqB,eAAiBb,KAAKiB,QAAQJ,mBAAqB,uBACjKsB,KAGfhD,EAAYC,QAAU,GAAID,GAI1BO,MAAM0C,WAAW1C,MAAMC,MACnBL,SAAUA,EACVH,YAAaA,EACbJ,YAAaA,EACbjB,UAAWA,EACXO,QAASA,KAEfoB,OAAOC,MAAM2C,SACC,kBAAVzE,SAAwBA,OAAO0E,IAAM1E,OAAS,SAAU2E,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAU7E,EAAGC,QACVA,OAAO,6BACH,aACA,cACA,gBACA,sBACDD,IACL,YACG,SAAUE,GAgGP,QAAS6E,GAAaC,GAAtB,GAGapE,GACDqE,EAHJnE,EAASkE,EAAOlE,OAChBoE,EAAQ,CACZ,KAAStE,EAAI,EAAGA,EAAIE,EAAQF,IACpBqE,EAAMD,EAAOpE,GACbuE,EAASF,IACTC,GAGR,OAAOA,GAyEX,QAASE,GAASC,EAAOC,GACrB,GAAY,OAARA,EACA,MAAOA,EAEX,IAAIrC,GAAMsC,GAAOF,GAAO,EACxB,OAAOpC,GAAIqC,GA4ef,QAASE,GAAYlC,EAASmC,EAASC,EAAOC,GAA9C,GAOQC,GACAC,EACAC,EAKKC,EAEGC,CALZ,IAVc,SAAVN,IACAA,MAEW,SAAXC,IACAA,GAAS,GAETC,EAAWF,EAAME,SAAWF,EAAME,aAClCC,EAAQH,EAAMG,MAAQH,EAAMG,OAAS,EACrCC,GAAY,EAChBJ,EAAMO,SAAWP,EAAMO,aACnBJ,EAAQK,GACR,MAAO,KAEX,KAASH,IAAYzC,IACZ6C,GAAQJ,EAAUL,EAAMO,WAAa3C,EAAQ8C,eAAeL,KACzDC,EAAY1C,EAAQyC,GACpBM,GAAWL,IACXF,GAAY,EACPH,IACDrC,EAAQyC,GAAYO,GAAeN,EAAUP,GAAUG,EAASG,MAE7DQ,GAASP,KACXL,IACDD,EAAME,SAAWA,EAASG,IAE9BL,EAAMG,QACNC,EAAYN,EAAYQ,EAAWP,EAASC,EAAOC,IAAWG,EAC9DJ,EAAMG,SAIlB,OAAOC,GAEX,QAASU,GAAgBC,GAAzB,GAGa7F,GAFL8F,EAAcD,EAAO3F,OACrB6F,EAAa,CACjB,KAAS/F,EAAI,EAAGA,EAAI8F,EAAa9F,IAC7B+F,EAAaC,KAAKC,IAAIF,EAAYF,EAAO7F,GAAGkG,KAAKhG,OAErD,OAAO6F,GAs7BX,QAASI,GAAaC,GAClB,IAAK,GAAIC,GAAM,EAAGA,EAAMD,EAASlG,OAAQmG,IACrC,GAAIC,GAAQF,EAASC,GAAKE,QACtB,OAAO,EA+enB,QAASC,GAAmB9D,GACxB,GAAI+D,GAAU/D,EAAQ+D,OACtB,OAAOA,IAAWA,EAAQC,UAAiC,SAArBD,EAAQC,SAimBlD,QAASC,GAAWvC,GAChB,MAAOD,GAAaC,KAAYA,EAAOlE,OA2f3C,QAAS0G,GAAS9E,GACd,MAAOwE,IAAQxE,IAAoB,OAAVA,EA2oB7B,QAAS+E,GAASnE,GAAlB,GAEa1C,GACD8G,EACAZ,EAHJL,EAASnD,EAAQmD,MACrB,KAAS7F,EAAI,EAAGA,EAAI6F,EAAO3F,OAAQF,IAC3B8G,EAAajB,EAAO7F,GACpBkG,EAAOY,EAAWZ,MAClBA,GAASa,GAAQb,EAAK,KAAQP,GAASO,EAAK,MAC5CY,EAAWZ,MAAQA,IAob/B,QAASc,KACL,MAAO,OAASC,KAiqBpB,QAASC,GAAaC,GAAtB,GAEQvE,GAES5C,EACDoH,EAJRlH,EAASiH,EAAKjH,MAElB,IAAIA,EAAS,EACT,IAASF,EAAI,EAAGA,EAAIE,EAAQF,IACpBoH,EAAUD,EAAKnH,GAAGqH,aACjBzE,EAGDA,EAAI0E,KAAKF,GAFTxE,EAAMwE,EAAQG,OAM1B,OAAO3E,IAAO,GAAI4E,IAEtB,QAASC,GAAWN,EAAMO,GAA1B,GACa1H,GACD2H,CADR,KAAS3H,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IAE7B,GADI2H,EAASR,EAAKnH,GACd2H,GAAUA,EAAOD,OAASA,EAC1B,MAAOC,GAInB,QAASC,GAAcC,GACnB,MAAiB,KAAVA,GAA0B,OAAVA,GAA4B,SAAVA,GAA8B,gBAAVA,IAA4BvB,GAAQuB,GAoHrG,QAASC,GAASC,EAAWC,EAAQlG,GAArC,GAIYpC,GAHJuI,EAAYD,EACZvD,EAAQsD,CACZ,IAAIA,EAAUG,QAAQ,QAAW,CAE7B,IADIxI,EAAQqI,EAAUI,MAAM,KACrBzI,EAAMQ,OAAS,GAClBuE,EAAQ/E,EAAM0I,QACT9B,GAAQ2B,EAAUxD,MACnBwD,EAAUxD,OAEdwD,EAAYA,EAAUxD,EAE1BA,GAAQ/E,EAAM0I,QAElBH,EAAUxD,GAAS3C,EAwTvB,QAASuG,GAAmBxC,EAAQyC,GAApC,GAGajC,GACDkC,EAHJC,KACAC,KAAiBC,OAAOJ,EAC5B,KAASjC,EAAM,EAAGA,EAAMR,EAAO3F,OAAQmG,IAC/BkC,EAAgB1C,EAAOQ,GACvBd,GAAQgD,EAAcI,KAAMF,IAC5BD,EAAO7I,KAAK4I,EAGpB,OAAOC,GAEX,QAASI,GAAiBC,EAAGC,GACzB,MAAID,IAAKC,EACED,EAAEE,gBAAkBD,EAAEC,cAE1BF,IAAMC,EAEjB,QAASE,GAAWC,EAAaC,GAAjC,GACQP,GAAOM,EAAYN,KACnBQ,EAAeD,YAA0BE,KAC7C,QAAQT,GAAQQ,GAAgBP,EAAiBD,EAAMU,IAE3D,QAASC,GAAgBC,EAAOC,GACZ,OAAZA,GACAD,EAAM5J,KAAK6J,GAGnB,QAASC,GAAkBF,GACvB,MAAwB,KAAjBA,EAAMrJ,OAAeqJ,EAAM,GAAKA,EAE3C,QAASG,GAAajF,EAAOC,EAAKiF,GAAlC,GAIQlK,GACAqC,CAJJ,OAAY,QAAR4C,EACOA,GAEPjF,EAAM,SAAWgF,EACjB3C,EAAQ4C,EAAIjF,GACXqC,IACDA,EAAQ8H,GAAUD,EAAahF,GAAOF,GAAO,GAAMC,IACnDA,EAAIjF,GAAOqC,GAERA,GAmnBX,QAAS+H,GAAYhE,EAAQiE,EAAMC,GAC/B,MAAOC,IAAKnE,EAAQ,SAAUoE,GAC1B,MAAkB,KAAXF,IAAiBE,EAAEC,cAAgBD,EAAEC,eAAiBJ,IAkErE,QAASK,KACL1I,KAAK2I,mBAAoB,EAE7B,QAASC,GAAUC,EAAGC,GAAtB,GACQ9K,IAAO8K,GAAY,IAAIxB,cACvByB,EAAQF,EAAEE,MACVC,EAAiB,SAARhL,KAAoB+K,EAAME,SAAWF,EAAMG,UAAYH,EAAMI,SAAWJ,EAAM/K,EAAM,MACjG,OAAOgL,GAEX,QAASI,GAAkBC,GAA3B,GAEazE,GACD0E,EAFJC,IACJ,KAAS3E,EAAM,EAAGA,EAAMyE,EAAW5K,OAAQmG,IACnC0E,EAAYD,EAAWzE,GACvB0E,EAAUjB,KAAKpH,QAAQuI,OACvBD,EAAOD,EAAUjB,KAAKpH,QAAQuI,OAC1BC,IAAKH,EAAUI,MAAMD,IACrBjF,IAAK8E,EAAUI,MAAMlF,KAIjC,OAAO+E,GAknBX,QAASI,GAAUC,GACf,GAAI7B,GAAUjH,SAASC,cAAc,MAIrC,OAHI6I,KACA7B,EAAQ6B,UAAYA,GAEjB7B,EAEX,QAAS8B,GAAc9B,GAEnB,IADA,GAAI3I,GAAU2I,EACP3I,IAAY0K,GAAW1K,EAAS,aACnCA,EAAUA,EAAQ6C,UAEtB,OAAO7C,GA6ZX,QAAS2K,GAAgBlB,GACrBA,EAAEkB,kBA2nBN,QAASC,GAAiBC,GAA1B,GAIQC,GAQAC,EAXAC,EAAUC,EAAQC,IAAIL,GACtBM,EAAOC,GAAMjG,KAAKkG,IAAIL,GAAUM,IAChCC,EAASH,GAAMjG,KAAKqG,IAAIR,GAAUM,GAiBtC,OAdIR,GADA3F,KAAKsG,IAAIN,GAAQO,GACJC,EACNJ,EAAS,EACHK,GAEAC,EAIbd,EADA5F,KAAKsG,IAAIN,GAAQW,GACNH,EACJR,EAAO,EACHY,EAEAC,GAGXlB,WAAYA,EACZC,SAAUA,GAkElB,QAASkB,GAAejH,EAAQkH,EAAQC,GAAxC,GAKQC,GAJAC,EAAUH,EAAOG,OACrB,OAAI5G,IAAQ4G,GACDA,GAEPD,EAAkBpH,EAAOoH,gBACzBA,EACOA,EAAgBD,GAD3B,QAIJ,QAASG,GAAYtH,GAArB,GAGa7F,GACDoN,EACAtL,EAIAoL,EARJhH,EAAOL,EAAOK,KACdmH,EAAM,CACV,KAASrN,EAAI,EAAGA,EAAIkG,EAAKhG,OAAQF,IACzBoN,EAAYE,GAAazM,QAAQ0M,UAAU1H,EAAQ7F,GACnD8B,EAAQsL,EAAUI,YAAY1L,MAC9B2L,GAAS3L,KACTA,EAAQ4L,WAAW5L,IAEnBoL,EAAUJ,EAAejH,EAAQuH,EAAUL,OAAQ/M,GACnDuE,EAASzC,IAAUoL,KAAY,IAC/BG,GAAOrH,KAAKsG,IAAIxK,GAGxB,OAAOuL,GAyWX,QAASM,GAAa3J,EAAIC,EAAI2J,EAAIC,GAAlC,GAGQrF,GAEIsF,EAJJC,GAAOF,EAAGG,EAAIJ,EAAGI,IAAMhK,EAAGiK,EAAIL,EAAGK,IAAMJ,EAAGI,EAAIL,EAAGK,IAAMjK,EAAGgK,EAAIJ,EAAGI,GACjEE,GAAML,EAAGI,EAAIL,EAAGK,IAAMhK,EAAG+J,EAAIhK,EAAGgK,IAAMH,EAAGG,EAAIJ,EAAGI,IAAM/J,EAAGgK,EAAIjK,EAAGiK,EAMpE,OAJW,KAAPC,IACIJ,EAAKC,EAAMG,EACf1F,EAAS,GAAI2F,IAAMnK,EAAGgK,EAAIF,GAAM7J,EAAG+J,EAAIhK,EAAGgK,GAAIhK,EAAGiK,EAAIH,GAAM7J,EAAGgK,EAAIjK,EAAGiK,KAElEzF,EA+UX,QAAS4F,GAAUvF,EAAGC,GAClB,MAAOD,GAAE/G,MAAMkM,EAAIlF,EAAEhH,MAAMkM,EAy7D/B,QAASK,GAAmB3L,GAA5B,GAEa2D,GACDiI,EAFJC,EAAUC,EACd,KAASnI,EAAM,EAAGA,EAAMkI,EAAQrO,OAAQmG,IAChCiI,EAAQC,EAAQlI,GAAO,OACvB3D,EAAQ4L,KACR5L,EAAQ6L,EAAQlI,GAAO,QAAU3D,EAAQ4L,SAClC5L,GAAQ4L,IAI3B,QAASG,GAAoBC,EAAQzD,GACjC,GAAIyD,EACA,IAAK,GAAIrI,GAAM,EAAGA,EAAMqI,EAAOxO,OAAQmG,IACnC,GAAIqI,EAAOrI,GAAKsI,WAAa1D,EACzB,OAAQyD,EAAOrI,IAK/B,QAASuI,GAAkBlM,EAASmM,GAGhC,QAASC,GAAe7F,GAAxB,GACQ8F,IAAa9F,OAAmBpB,OAASmH,EAAanH,MACtDW,EAAS3E,MAAeoL,EAAmBA,EAAkBC,GAAWF,EAAcA,EAAaE,IACnGC,MAAQtH,MAAOkH,GACfK,QAAUvH,MAAOkH,GACjBM,OAASxH,MAAOkH,IACjB9F,EAEH,cADOT,GAAO0G,GACP1G,EAXf,GAEQ0G,GAAUF,EAAc7H,EAWnBd,EAZL4I,GAAqBJ,OAAoBG,gBAY7C,KAAS3I,EAAM,EAAGA,EAAMmI,GAAWtO,OAAQmG,IACvC6I,EAAWV,GAAWnI,GAAO,OAC7B2I,EAAetM,EAAQsM,iBACvB7H,KAAUuB,OAAOhG,EAAQwM,IACzB/H,EAAOA,EAAKpF,IAAI+M,GAChBpM,EAAQwM,GAAY/H,EAAKjH,OAAS,EAAIiH,EAAOA,EAAK,GAG1D,QAASmI,GAAoB5M,EAASmM,GAAtC,GASa7O,GACDuP,EACAC,EAVJ3J,EAASnD,EAAQmD,OACjB4J,EAAe5J,EAAO3F,OACtBwP,EAAiBhN,EAAQgN,eACzBC,EAAiB9L,MAAenB,EAAQgN,gBACxCE,EAAsBf,EAAehL,MAAegL,EAAaa,mBACjEG,EAAsBhM,MAAe+L,EAGzC,KAFAE,EAA4BH,GAC5BG,EAA4BD,GACnB7P,EAAI,EAAGA,EAAIyP,EAAczP,IAC1BuP,EAAa1J,EAAO7F,GAAG2I,MAAQjG,EAAQgN,eAAe/G,KACtD6G,EAAc3L,IAAaqC,SAAY2J,EAAqBD,EAAoBL,IAAeQ,QAASrN,EAAQqN,SAAWJ,EAAgBD,EAAeH,IAC9J1J,EAAO7F,GAAGgQ,UAAYR,EACtB3J,EAAO7F,GAAK6D,MAAe2L,EAAa3J,EAAO7F,IAGvD,QAAS8P,GAA4BJ,SAC1BA,GAAeO,UACfP,GAAeQ,aACfR,GAAeS,kBACfT,GAAeP,WACfO,GAAeU,mBACfV,GAAeW,UACfX,GAAeY,YACfZ,GAAea,WACfb,GAAec,mBACfd,GAAee,cACff,GAAegB,kBACfhB,GAAeiB,aACfjB,GAAekB,kBACflB,GAAemB,WACfnB,GAAeoB,cACfpB,GAAeqB,aACfrB,GAAesB,qBACftB,GAAeuB,gBACfvB,GAAewB,gBACfxB,GAAeyB,gBACfzB,GAAe0B,gBACf1B,GAAe2B,UAE1B,QAASvG,GAAW3D,GAApB,GAEanH,GACD8J,EACAoF,EAHJlE,IACJ,KAAShL,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IACzB8J,EAAO3C,EAAKnH,GACZkP,EAAWpF,EAAKpH,QAAQuI,KACxBiE,IACAlE,EAAOkE,GAAYpF,EAAKqB,QAGhC,OAAOH,GAEX,QAASsG,GAAUC,EAAOC,GACL,SAAbA,IACAA,EAAW1F,EAAQ2F,aAEvB,KAAK,GAAIzR,GAAI,EAAGE,EAASqR,EAAMrR,OAAQF,EAAIE,EAAQF,IAC/C,GAAIwR,EAASD,EAAMvR,GAAIuR,EAAMvR,EAAI,IAAM,EAAG,CACtCuR,EAAM3R,KAAK4R,EACX,OAGR,MAAOD,GAEX,QAASG,GAAYC,EAAUH,GAA/B,GAIQD,GACArR,EACAsI,EACKxI,CAAT,KANiB,SAAbwR,IACAA,EAAW1F,EAAQ2F,cAEnBF,EAAQD,EAAUK,EAAUH,GAC5BtR,EAASqR,EAAMrR,OACfsI,EAAStI,EAAS,GAAKqR,EAAM,OACxBvR,EAAI,EAAGA,EAAIE,EAAQF,IACiB,IAArCwR,EAASD,EAAMvR,GAAI4R,GAAKpJ,KACxBA,EAAO7I,KAAK4R,EAAMvR,GAG1B,OAAOwI,GAEX,QAASqJ,GAAUC,GAAnB,GAGaC,GACDrN,EACAsN,EACKC,EALTC,EAAWJ,EAAK5R,OAChBsI,IACJ,KAASuJ,EAAQ,EAAGA,EAAQG,EAAUH,IAGlC,IAFIrN,EAAMoN,EAAKC,GACXC,EAAWtN,EAAIxE,OACV+R,EAAQ,EAAGA,EAAQD,EAAUC,IAClCzJ,EAAOyJ,GAASzJ,EAAOyJ,OACvBzJ,EAAOyJ,GAAOtS,KAAK+E,EAAIuN,GAG/B,OAAOzJ,GAEX,QAAS2J,GAAmBC,EAAiB1P,GAA7C,GACa+B,GACD4N,EACAC,EAEIC,CAJZ,KAAS9N,IAAS/B,GACV2P,EAAa3P,EAAQ+B,GACrB6N,EAAgBF,EAAgB3N,GAChC6B,GAAQgM,KACJC,EAA2B,OAAfF,EACZE,IAAcjM,GAAQ+L,UACfD,GAAgB3N,GACnB8N,SACO7P,GAAQ+B,IAEZ6N,GAAiB3M,GAAS0M,IAC7B1M,GAAS2M,IACTH,EAAmBG,EAAeD,IA/oVzD,GAEOvG,GACAzK,EACAkD,EACAiO,EACAC,EACAC,EACAC,EACAnG,EACAK,EACAD,EACAF,EACAkG,GACAC,GACAC,GACAC,GACAtG,GACAuG,GACA3J,GACA8C,GACA8G,GACA3M,GACA3B,GACAoC,GACAmM,GACA/E,GACA3G,GACA2L,GACAC,GACA7N,GACAE,GACAC,GACAC,GACA9B,GACAwP,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACA/B,GACAgC,GACAnG,GACA7D,GACAiK,GACAC,GACAC,GACA9H,GACAjC,GACAgK,GACAC,GACA1I,GACA2I,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAuBAC,GAkBAC,GA8EA1H,GA+GA2H,GACAC,GACAC,GACAC,GACAC,GA2GAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAaAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GA0EAC,GACAC,GAqGAC,GAMA5U,GA2CA6U,GAybAC,GAuBAC,GAgBAC,GACAC,GACAC,GAiQAC,GA6CAC,GAuDAC,GAuBAC,GAiEAC,GA4BAC,GAuBAC,GA8EAC,GAqEAC,GAOAC,GAOAC,GA2FAC,GAgGAC,GAwBAC,GAoGAC,GACAC,GAiOAC,GA6BAC,GAsBAC,GA4IAC,GAiMAC,GA2GAC,GAkOAC,GA2EAC,GA0FAC,GAUAC,GAgRAC,GA+DAC,GA2GAC,GAEAC,GAiHAC,GAsGAC,GA+CAC,GAmFAC,GAmGAC,GA8DAC,GA4IA3V,GAWA4V,GAisBAC,GAQAC,GA2GAC,GAeAC,GAwDAC,GA4CAC,GAmDAC,GAKAC,GAuDAC,GA8HAC,GA2nBAC,GAgFAC,GAkEAC,GAoKAC,GAwCAC,GAqCAC,GAoGAC,GACAC,GACAC,GACAC,GA2LAC,GA0BAC,GAeAC,GAoaAC,GAsBAC,GA6DAC,GA4BAC,GAWAC,GAcAC,GAaAC,GAoCAC,GAgNAC,GAwOAlS,GACAJ,GA+CAuS,GAoEAC,GACAC,GA6XAC,GAoBAC,GA4BAC,GACAC,GAgFAC,GAeAC,GACAC,GAsEAC,GAQAC,GAGAC,GAuBAC,GAkBAC,GAwDAC,GAsEAC,GAsBAC,GAIAC,GAKAC,GAsBAC,GASAC,GA4BAC,GAgBAC,GAkCAC,GA2GAC,GAyFAC,GAqOAC,GAsBAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GA0OAzS,GAMA0S,GACAC,GACAC,GACAC,EAn9SJngB,QAAOC,MAAM2K,QAAU5K,OAAOC,MAAM2K,YAChCA,EAAU3K,MAAM2K,QAChBzK,EAAQyK,EAAQzK,MAChBkD,EAAWuH,EAAQvH,SACnBiO,EAAmB1G,EAAQiO,UAC3BtH,EAAYD,EAAiBC,UAC7BC,EAAYF,EAAiBE,UAC7BC,EAAQH,EAAiBG,MACzBnG,EAASgG,EAAiBhG,OAC1BK,EAAM2F,EAAiB3F,IACvBD,EAAS4F,EAAiB5F,OAC1BF,EAAO8F,EAAiB9F,KACxBkG,GAAQJ,EAAiBI,MACzBC,GAASL,EAAiBK,OAC1BC,GAAIN,EAAiBM,EACrBC,GAAIP,EAAiBO,EACrBtG,GAAQ+F,EAAiB/F,MACzBuG,GAAQR,EAAiBQ,MACzB3J,GAAOmJ,EAAiBnJ,KACxB8C,GAAoBqG,EAAiBrG,kBACrC8G,GAAMT,EAAiBS,IACvB3M,GAAUwF,EAAQxF,QAClB3B,GAASmH,EAAQnH,OACjBoC,GAAU+E,EAAQ/E,QAClBmM,GAAepH,EAAQoH,aACvB/E,GAAQrC,EAAQqC,MAChB3G,GAAMsE,EAAQtE,IACd2L,GAAmBrH,EAAQqH,iBAC3BC,GAAoBtH,EAAQsH,kBAC5B7N,GAAUuG,EAAQvG,QAClBE,GAAaqG,EAAQrG,WACrBC,GAAiBoG,EAAQpG,eACzBC,GAAWmG,EAAQnG,SACnB9B,GAAaiI,EAAQjI,WACrBwP,GAAevH,EAAQuH,aACvBC,GAAWxH,EAAQwH,SACnBC,GAAkBD,GAASC,gBAC3BC,GAAU1H,EAAQ0H,QAClBC,GAAe3H,EAAQ2H,aACvBC,GAAa5H,EAAQ4H,WACrBC,GAAa7H,EAAQ6H,WACrB/B,GAAO9F,EAAQ8F,KACfgC,GAAS9H,EAAQ8H,OACjBnG,GAAW3B,EAAQ2B,SACnB7D,GAAYkC,EAAQlC,UACpBiK,GAAa/H,EAAQ+H,WACrBC,GAAehI,EAAQgI,aACvBC,GAAajI,EAAQiI,WACrB9H,GAAQH,EAAQG,MAChBjC,GAAO8B,EAAQ9B,KACfgK,GAAmBlI,EAAQkI,iBAC3BC,GAAgBnI,EAAQmI,cACxB1I,GAAaO,EAAQP,WACrB2I,GAAapI,EAAQoI,WACrBC,GAAerI,EAAQqI,aACvBC,GAAUjT,MAAMiT,QAChBC,GAAUlT,MAAMkT,QAChBC,GAAOD,GAAQC,KACfC,GAAYF,GAAQE,UACpBC,GAAmBH,GAAQG,iBAC3BC,GAAQJ,GAAQI,MAChBC,GAAQvT,MAAMuT,MACdC,GAAWxT,MAAMwT,SACjBC,GAAgBD,GAASxG,MACzB0G,GAAYF,GAASE,UACrBC,GAAYzT,EAAMC,QAClBC,KAAM,SAAUuI,GACZrI,KAAK6f,MAAQxX,EACbrI,KAAKiB,QAAUoH,EAAKpH,SAExBZ,MAAO,SAAUyf,GAAV,GACCzX,GAAOrI,KAAK6f,MACZxf,EAAQgI,EAAK0X,YAAc1X,EAAK0X,YAAYD,GAASzX,EAAK2X,SAASF,EACvE,OAAOzf,IAEX4f,KAAM,SAAUC,EAAMC,EAAIC,GAItB,MAHc,UAAVA,IACAA,GAAQ,GAELpgB,KAAK6f,MAAMI,KAAKC,EAAMC,EAAIC,IAErC1W,MAAO,WACH,MAAO1J,MAAK6f,MAAMnW,SAEtB2W,WAAY,WACR,MAAOrgB,MAAK6f,MAAMQ,gBAGtB/M,GAAgB1T,EAAMC,QACtBC,KAAM,SAAUwgB,GACZtgB,KAAKugB,UAAYD,EACjBtgB,KAAKwgB,OAASF,EAASE,OACvBxgB,KAAKygB,iBAAmBH,EAASI,aAcrCnN,IACA9J,IAAK,SAAU9G,GAAV,GAGQpE,GACD8B,EAHJ5B,EAASkE,EAAOlE,OAChBgL,EAAMuH,CACV,KAASzS,EAAI,EAAGA,EAAIE,EAAQF,IACpB8B,EAAQsC,EAAOpE,GACfuE,EAASzC,KACToJ,EAAMlF,KAAKkF,IAAIA,EAAKpJ,GAG5B,OAAOoJ,KAAQuH,EAAYrO,EAAO,GAAK8G,GAE3CjF,IAAK,SAAU7B,GAAV,GAGQpE,GACD8B,EAHJ5B,EAASkE,EAAOlE,OAChB+F,EAAMyM,CACV,KAAS1S,EAAI,EAAGA,EAAIE,EAAQF,IACpB8B,EAAQsC,EAAOpE,GACfuE,EAASzC,KACTmE,EAAMD,KAAKC,IAAIA,EAAKnE,GAG5B,OAAOmE,KAAQyM,EAAYtO,EAAO,GAAK6B,GAE3CoH,IAAK,SAAUjJ,GAAV,GAGQpE,GACD8B,EAHJ5B,EAASkE,EAAOlE,OAChBmN,EAAM,CACV,KAASrN,EAAI,EAAGA,EAAIE,EAAQF,IACpB8B,EAAQsC,EAAOpE,GACfuE,EAASzC,KACTuL,GAAOvL,EAGf,OAAOuL,IAEX+U,UAAW,SAAUhe,GACjB,GAAIoE,GAAS,IAIb,OAHIrE,GAAaC,KACboE,EAASwM,GAAW3H,IAAIjJ,IAErBoE,GAEXlE,MAAO,SAAUF,GAAV,GAGMpE,GACD8B,EAHJ5B,EAASkE,EAAOlE,OAChBoE,EAAQ,CACZ,KAAStE,EAAI,EAAGA,EAAIE,EAAQF,IACpB8B,EAAQsC,EAAOpE,GACL,OAAV8B,GAAkBwE,GAAQxE,IAC1BwC,GAGR,OAAOA,IAEX+d,IAAK,SAAUje,GAAV,GACGE,GAAQH,EAAaC,GACrBoE,EAASpE,EAAO,EAIpB,OAHIE,GAAQ,IACRkE,EAASwM,GAAW3H,IAAIjJ,GAAUE,GAE/BkE,GAEX8Z,MAAO,SAAUle,GAAV,GAEMpE,GACD8B,EAFJ5B,EAASkE,EAAOlE,MACpB,KAASF,EAAI,EAAGA,EAAIE,EAAQF,IAExB,GADI8B,EAAQsC,EAAOpE,GACL,OAAV8B,GAAkBwE,GAAQxE,GAC1B,MAAOA,EAGf,OAAOsC,GAAO,KAUlBkJ,GAAejM,EAAMC,QACrBC,KAAM,WACFE,KAAK8gB,gBACL9gB,KAAK+gB,gBACL/gB,KAAKghB,cACLhhB,KAAKihB,oBAETC,SAAU,SAAUla,EAAa+E,EAAaoV,GAApC,GAQG5iB,GACD2I,EARJka,EAASphB,IAOb,KANoB,SAAhB+L,IACAA,GAAemF,IAEC,SAAhBiQ,IACAA,MAEK5iB,EAAI,EAAGA,EAAIyI,EAAYvI,OAAQF,IAChC2I,EAAOF,EAAYzI,GACvB6iB,EAAON,aAAa5Z,GAAQ6E,EAC5BqV,EAAOL,aAAa7Z,GAAQia,EAC5BC,EAAOJ,WAAW9Z,GAAQka,EAAOC,WAAWtV,EAAa,MACzDqV,EAAOH,gBAAgB/Z,GAAQka,EAAOC,WAAWtV,EAAauV,SAGtEC,gBAAiB,SAAUnd,GACvB,MAAOpE,MAAK+L,YAAY3H,GAAQ6C,OAAOjH,KAAKmhB,YAAY/c,KAE5D2H,YAAa,SAAU3H,GACnB,MAAOpE,MAAK8gB,aAAa1c,EAAO8C,QAAUgK,IAE9CiQ,YAAa,SAAU/c,GACnB,MAAOpE,MAAK+gB,aAAa3c,EAAO8C,QAAUgK,IAE9CpF,UAAW,SAAU1H,EAAQod,EAASC,GAA3B,GAMHnW,GAAQjL,EAMJqhB,EAIAC,EACAC,EAhBJnd,EAAOL,EAAOK,KACdkH,EAAY9G,GAAQ4c,GAAQA,EAAOhd,EAAK+c,GACxCza,GAAWgF,aAAe1L,MAAOsL,IACjCI,EAAc/L,KAAK+L,YAAY3H,GAC/B+c,EAAcnhB,KAAK+gB,aAAa3c,EAAO8C,KAwB3C,OAtBkB,QAAdyE,EACAtL,EAAQL,KAAKghB,WAAW5c,EAAO8C,MACvBrC,GAAQ8G,GAETkW,MAAMvc,QAAQqG,IACjB+V,EAAY/V,EAAUmW,MAAM/V,EAAYtN,QAC5C4B,EAAQL,KAAK+hB,eAAepW,EAAWI,GACvCT,EAAStL,KAAK+hB,eAAeL,EAAWP,IACZ,gBAAdxV,KACVgW,EAAiB3hB,KAAKgiB,aAAa5d,EAAQ2H,GAC3C6V,EAAiB5hB,KAAKgiB,aAAa5d,EAAQ+c,GAC/C9gB,EAAQL,KAAKiiB,gBAAgBtW,EAAWI,EAAa4V,GACrDrW,EAAStL,KAAKiiB,gBAAgBtW,EAAWwV,EAAaS,IATtDvhB,EAAQL,KAAKihB,gBAAgB7c,EAAO8C,MAWpCrC,GAAQxE,KACmB,IAAvB0L,EAAYtN,OACZsI,EAAOgF,YAAY1L,MAAQA,EAAM0L,EAAY,IAE7ChF,EAAOgF,YAAc1L,GAG7B0G,EAAOuE,OAASA,MACTvE,GAEXsa,WAAY,SAAU/V,EAAQ4W,GAAlB,GAGC3jB,GACD+H,EAHJjG,KACA5B,EAAS6M,EAAO7M,MACpB,KAASF,EAAI,EAAGA,EAAIE,EAAQF,IACpB+H,EAAYgF,EAAO/M,GACvB8B,EAAMiG,GAAa4b,CAEvB,OAAO7hB,IAEX0hB,eAAgB,SAAUja,EAAOwD,GAAjB,GAGJ7M,GACKF,EAHT8B,IACJ,IAAIiL,EAEA,IADI7M,EAAS8F,KAAKkF,IAAI6B,EAAO7M,OAAQqJ,EAAMrJ,QAClCF,EAAI,EAAGA,EAAIE,EAAQF,IACxB8B,EAAMiL,EAAO/M,IAAMuJ,EAAMvJ,EAGjC,OAAO8B,IAEX4hB,gBAAiB,SAAUlkB,EAAQuN,EAAQ6W,GAA1B,GAIT9hB,GAEI5B,EACKF,EACD+H,EACA8b,CAJZ,IAJkB,SAAdD,IACAA,EAAY7W,GAEZjL,KACAiL,EAEA,IADI7M,EAAS6M,EAAO7M,OACXF,EAAI,EAAGA,EAAIE,EAAQF,IACpB+H,EAAYgF,EAAO/M,GACnB6jB,EAAeD,EAAU5jB,GAC7B8B,EAAMiG,GAAavD,EAASqf,EAAcrkB,EAGlD,OAAOsC,IAEX2hB,aAAc,SAAU5d,EAAQmd,GAAlB,GAGF9iB,GACKF,EACD+H,EACA+b,EALRL,IACJ,IAAIT,EAEA,IADI9iB,EAAS8iB,EAAgB9iB,OACpBF,EAAI,EAAGA,EAAIE,EAAQF,IACpB+H,EAAYib,EAAgBhjB,GAC5B8jB,EAAkB/b,IAAc4K,EAAQ,QAAU5K,EAAY,QAClE0b,EAAa9jB,KAAKkG,EAAOie,IAAoB/b,EAGrD,OAAO0b,MAGfnW,GAAazM,QAAU,GAAIyM,IACvB2H,GAAU,SACVC,GAAU,SACVC,GAAe,0BACfC,GAA6B2O,OAAO,IAAM7O,GAAU,kCACpDG,GAAuBhU,EAAMC,QAC7BC,KAAM,SAAUyiB,EAAYne,EAAQpB,GAChChD,KAAKwiB,iBAAiBD,EAAYne,EAAQpB,IAE9Cwf,iBAAkB,SAAUD,EAAYne,EAAQpB,GAA9B,GAKNyf,GACAC,EACAC,EACAC,EASAC,EAhBJpe,EAAOL,EAAOK,KACdqe,EAAiBnP,GAAuBoP,KAAKR,EAC7CO,IACA9iB,KAAKgjB,YAAchjB,KAAKijB,kBAAkB7e,EAAQpB,GAC9Cyf,EAAUziB,KAAKkjB,WAAWze,GAC1Bie,EAAY1iB,KAAKmjB,qBAAqB1e,EAAMge,GAAS,GACrDE,EAAWG,EAAe,GAAK7W,WAAW6W,EAAe,IAAM,EAC/DF,GACAQ,IAAKX,EAAQpiB,MAAQqiB,EAAYC,EACjCU,KAAMZ,EAAQpiB,MAAQqiB,EAAYC,GAEtC3iB,KAAKsjB,YAAc,WACf,MAAOV,KAEJL,EAAW9b,SAAW8b,EAAW9b,QAAQ+M,KAAY,IAC5DxT,KAAKgjB,YAAchjB,KAAKijB,kBAAkB7e,EAAQpB,GAC9C6f,EAAgB7iB,KAAKujB,iBAAiB9e,EAAMzE,KAAKkjB,WAAWze,IAChEzE,KAAKsjB,YAAc,SAAUjjB,GACzB,OACI+iB,IAAK/iB,EAAQwiB,EACbQ,KAAMhjB,EAAQwiB,MAK9BI,kBAAmB,SAAU7e,EAAQpB,GAAlB,GAKXggB,GAEIzX,EAKAoW,EAXJld,EAAOL,EAAOK,KACd+e,EAAS3X,GAAazM,QACtB2M,EAAcyX,EAAOzX,YAAY3H,GACjCqd,EAAO5c,GAAQJ,EAAK,IAAMA,EAAK,KAWnC,OATIa,IAAQmc,IACJlW,EAAQvI,EAAQ+I,EAAYtF,QAAQzD,GAAS,EACjDggB,EAAc9f,GAAO,IAAMqI,EAAQ,MAC5BzI,EAAS2e,GAChBuB,EAAc9f,WACAue,KAAS1Q,EAAiB0S,SACpC9B,EAAiB6B,EAAOxB,aAAa5d,EAAQ2H,GACjDiX,EAAc9f,GAAOye,EAAe5V,EAAYtF,QAAQzD,MAErDggB,GAEXU,cAAe,SAAUC,EAAYpB,GAAtB,GACPa,GAAKC,EAAMhjB,EAcPujB,CAbR,KAAK/e,GAAQ0d,GACT,MAAO,KAEX,IAAIviB,KAAKsjB,YACL,MAAOtjB,MAAKsjB,YAAYK,EAE5B,IAAIre,GAAQid,GACRa,EAAMO,EAAapB,EAAW,GAC9Bc,EAAOM,EAAapB,EAAW,OAC5B,IAAIzf,EAASzC,EAAQ4L,WAAWsW,IACnCa,EAAMO,EAAatjB,EACnBgjB,EAAOM,EAAatjB,MACjB,CAAA,KAAIA,EAAQqT,GAAaqP,KAAKR,IAKjC,KAAUsB,OAAM,2BAA6BtB,EAJzCqB,GAAeD,GAAc1X,WAAW5L,EAAM,IAAM,KACxD+iB,EAAMO,EAAapf,KAAKsG,IAAI+Y,GAC5BP,EAAOM,EAAapf,KAAKsG,IAAI+Y,GAIjC,OACIR,IAAKA,EACLC,KAAMA,IAGdE,iBAAkB,SAAU9e,EAAMge,GAC9B,MAAOziB,MAAKmjB,qBAAqB1e,EAAMge,GAAS,GAAQle,KAAKuf,KAAKrB,EAAQ5f,QAE9EsgB,qBAAsB,SAAU1e,EAAMge,EAASsB,GAAzB,GAKTnf,GACDvE,EALJ+gB,EAASphB,KACTvB,EAASgG,EAAKhG,OACdulB,EAAQD,EAAWtB,EAAQ5f,MAAQ,EAAI4f,EAAQ5f,MAC/CohB,EAAsB,CAC1B,KAASrf,EAAM,EAAGA,EAAMnG,EAAQmG,IACxBvE,EAAQ+gB,EAAO4B,YAAYve,EAAKG,IAChC9B,EAASzC,KACT4jB,GAAuB1f,KAAK2f,IAAI7jB,EAAQoiB,EAAQpiB,MAAO,GAG/D,OAAOkE,MAAKuf,KAAKG,EAAsBD,IAE3Cd,WAAY,SAAUze,GAAV,GAKCG,GACDvE,EALJ+gB,EAASphB,KACTvB,EAASgG,EAAKhG,OACdmN,EAAM,EACN/I,EAAQ,CACZ,KAAS+B,EAAM,EAAGA,EAAMnG,EAAQmG,IACxBvE,EAAQ+gB,EAAO4B,YAAYve,EAAKG,IAChC9B,EAASzC,KACTuL,GAAOvL,EACPwC,IAGR,QACIxC,MAAOuL,EAAM/I,EACbA,MAAOA,MAIfgR,GAAUlB,GAAQkB,YAClBC,GAA6B,IAC7BC,GAAS,SACTC,GAAQ,QACRC,GAAoB,GACpBC,GAAiB,EACjBC,GAAcN,GAAQsQ,KAAO,KAAQ,EACrC/P,GAAkB,WAClBC,GAAmB,YACnBC,GAAoB,YACpBC,GAAqB,aACrBC,GAAoB,YACpBC,GAAqB,aACrBC,GAAmB,EACnBC,GAAO,OACPC,GAAc,cACdC,GAAM,MACNC,GAAS,SACTC,GAAO,OACPC,GAAO,OACPC,GAAM,MACNC,GAAW,UACXC,GAAS,SACTC,GAAS,SACTC,GAAc,cACdC,GAAS,SACTC,GAAQ,QACRC,GAAS,SACTC,GAAuB,sBACvBC,GAAO,OACPC,GAAO,OACPC,GAAM,MACNC,GAAa,YACbC,GAAa,YACbC,GAAgB,eAChBC,GAAa,YACbC,GAAe,cACfC,GAAa,YACbC,GAAY,WACZC,GAAe,cACfC,GAAU,UACVC,GAAe,cACfC,GAAgB,eAChBC,GAAoB,kBACpBC,GAAkB,iBAClBC,GAAgB,eAChBC,GAAY,YACZC,IACA3B,GACAK,GACAK,GACAN,GACAH,GACAsB,GACApB,GACAgB,GACAD,GACAQ,GACAlB,IAEAoB,GAAoB,kBACpBC,GAAoB,kBACpBC,GAAe,cACfC,GAAe,cACfC,GAAkB,gBAClBC,GAAkB,gBAClBC,GAAO,OACPC,GAAW,UACXC,GAAa,YACbC,GAAa,YACbC,GAAO,OACPC,GAAW,UACXC,GAAe,cACfC,GAAS,SACTC,GAAa,YACbC,GAAS,SACTC,GAAe,cACfC,GAAe,cACfC,GAAc,MACdC,GAAW,WACXC,GAAa,YACbC,GAAc,aACdC,GAAc,aACdC,GAAa,4BACbC,GAAmB,IACnBC,IACAxE,2BAA4BA,GAC5BC,OAAQA,GACR8C,kBAAmBA,GACnBC,kBAAmBA,GACnBC,aAAcA,GACdC,aAAcA,GACdhD,MAAOA,GACPC,kBAAmBA,GACnBC,eAAgBA,GAChBC,YAAaA,GACbC,gBAAiBA,GACjBC,iBAAkBA,GAClBC,kBAAmBA,GACnBC,mBAAoBA,GACpBC,kBAAmBA,GACnBC,mBAAoBA,GACpBC,iBAAkBA,GAClBE,YAAaA,GACbD,KAAMA,GACNG,OAAQA,GACRC,KAAMA,GACNiD,SAAUA,GACVxC,OAAQA,GACRP,IAAKA,GACLI,YAAaA,GACbO,IAAKA,GACLN,OAAQA,GACRN,KAAMA,GACNyB,gBAAiBA,GACjBvB,SAAUA,GACVS,KAAMA,GACNgB,UAAWA,GACXjB,KAAMA,GACNN,OAAQA,GACRsB,cAAeA,GACfH,cAAeA,GACfH,aAAcA,GACdI,kBAAmBA,GACnBL,UAAWA,GACXV,qBAAsBA,GACtBY,QAASA,GACTC,aAAcA,GACdnB,OAAQA,GACRa,WAAYA,GACZE,WAAYA,GACZD,aAAcA,GACdH,WAAYA,GACZD,WAAYA,GACZE,cAAeA,GACf6B,OAAQA,GACRX,gBAAiBA,GACjBC,gBAAiBA,GACjBa,YAAaA,GACbZ,KAAMA,GACNE,WAAYA,GACZD,SAAUA,GACVE,WAAYA,GACZC,KAAMA,GACNC,SAAUA,GACVC,aAAcA,GACdC,OAAQA,GACRC,WAAYA,GACZ9C,IAAKA,GACLU,MAAOA,GACP0C,WAAYA,GACZC,YAAaA,GACbC,YAAaA,GACbC,WAAYA,GACZC,iBAAkBA,GAClBR,aAAcA,GACdC,aAAcA,GACdlB,sBAAuBA,IAEvB2B,GAA0B,EAC1BC,GAAe/G,GAAa5R,QAC5BC,KAAM,SAAUsjB,EAAKC,EAAMe,EAAYC,EAAOjgB,EAAQnD,GAClDwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKojB,IAAMA,EACXpjB,KAAKqjB,KAAOA,EACZrjB,KAAKokB,WAAaA,EAClBpkB,KAAKqkB,MAAQA,EACbrkB,KAAKoE,OAASA,GAElBogB,OAAQ,SAAUC,GAAV,GAUAC,GATAC,EAAU3kB,KAAKiB,QAAQ0jB,QACvBP,EAAapkB,KAAKokB,WAClB/b,EAAOrI,KAAK4kB,UACZC,EAAWxc,EAAKyc,QAAQ9kB,KAAKojB,IAAKpjB,KAAKqjB,MACvC0B,EAAYN,EAAUO,SACtBC,EAAYjlB,KAAKklB,aAAaT,EAAWL,GACzCe,EAAWf,EAAaW,EAAUxY,EAAIwY,EAAUvY,EAChD4Y,EAAWD,EAAWF,EACtBI,EAASF,EAAWF,CAEpBb,IACAM,GACI,GAAIhY,IAAMqY,EAAUxY,EAAGsY,EAASS,IAChC,GAAI5Y,IAAMqY,EAAUxY,EAAGsY,EAASU,KAEhCZ,GACAD,EAAWxmB,KAAK,GAAIwO,IAAM0Y,EAAUP,EAASS,IAAK,GAAI5Y,IAAM2Y,EAAQR,EAASS,IAAK,GAAI5Y,IAAM0Y,EAAUP,EAASU,IAAK,GAAI7Y,IAAM2Y,EAAQR,EAASU,KAEnJvlB,KAAKmB,IAAM,GAAI4E,IAAIqf,EAAUP,EAASS,GAAID,EAAQR,EAASU,MAE3Db,GACI,GAAIhY,IAAMmY,EAASW,GAAIT,EAAUvY,GACjC,GAAIE,IAAMmY,EAASY,GAAIV,EAAUvY,IAEjCmY,GACAD,EAAWxmB,KAAK,GAAIwO,IAAMmY,EAASW,GAAIJ,GAAW,GAAI1Y,IAAMmY,EAASW,GAAIH,GAAS,GAAI3Y,IAAMmY,EAASY,GAAIL,GAAW,GAAI1Y,IAAMmY,EAASY,GAAIJ,IAE/IrlB,KAAKmB,IAAM,GAAI4E,IAAI8e,EAASW,GAAIJ,EAAUP,EAASY,GAAIJ,IAE3DrlB,KAAK0kB,WAAaA,GAEtBQ,aAAc,SAAU/jB,EAAKijB,GAAf,GACNsB,GAAUtB,EAAajjB,EAAIvC,QAAUuC,EAAItC,SACzComB,EAAY1gB,KAAKkF,IAAIlF,KAAKohB,MAAMD,EAAU,GAAInN,KAA4BA,EAC9E,OAAO0M,IAEXW,aAAc,WAAA,GACNxE,GAASphB,KACTiB,EAAUjB,KAAKiB,QACfuf,EAASvf,EAAQuf,MACjBA,GACAxgB,KAAKwgB,OAASA,GACV4C,IAAKpjB,KAAKojB,IACVC,KAAMrjB,KAAKqjB,KACXwC,KAAM7lB,KAAKmB,IAAI2kB,SACfC,OAAQ/lB,KAAKgmB,YACb/kB,SACI0jB,QAAS1jB,EAAQ0jB,QACjBve,MAAOnF,EAAQmF,MACfsH,KAAMzM,EAAQyM,MAElBkY,aAAc,WACVxE,EAAO6E,qBACP,IAAIC,GAAgB9E,EAAOZ,MAE3B,cADOY,GAAOZ,OACP0F,KAIflmB,KAAKimB,uBAGbA,oBAAqB,WAAA,GAaRrhB,GACD8I,EAbJ0T,EAASphB,KACTmmB,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdyjB,EAAayB,EAAIzB,WACjB0B,GACAC,QACIjgB,MAAOnF,EAAQmF,MACfxH,MAAOqC,EAAQyM,KAAK9O,MACpB0nB,SAAUrlB,EAAQyM,KAAK4Y,UAI/B,KADA7U,GAAa6S,GAAGsB,aAAarB,KAAKvkB,MACzB4E,EAAM,EAAGA,EAAM8f,EAAWjmB,OAAQmG,GAAO,EAC1C8I,EAAO,GAAImF,IAAKuT,GAAaG,OAAO7B,EAAW9f,GAAK2H,EAAGmY,EAAW9f,GAAK4H,GAAGga,OAAO9B,EAAW9f,EAAM,GAAG2H,EAAGmY,EAAW9f,EAAM,GAAG4H,GAChIkF,GAAiBhE,GACjB0T,EAAOZ,OAAOrO,OAAOzE,MAIjCiE,GAAkB6G,IACdiO,WACIvf,KAAM6M,GACN2S,MAAO5S,IAEX6Q,SAAS,EACTjX,MAAQ9O,MAAO,GACfkG,OAAQ,IAER2T,GAAsBD,GAAa3Y,QACnC+kB,QAAS,WACL,GAAIvc,GAAOrI,KAAKqkB,MAAMsC,gBAAgB3mB,KAAKoE,OAC3C,OAAOiE,MAGXxE,GAAmB,EA2CnB6U,GAAmBjH,GAAa5R,QAChCC,KAAM,SAAUwgB,EAAUrf,GACtBwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKsgB,SAAWA,EAChBtgB,KAAK4mB,aAAetG,EAASsG,aAC7B5mB,KAAKyI,aAAe6X,EAASuG,mBAAmB5lB,EAAQmD,OAAO,IAC/DpE,KAAK8mB,mBACL9mB,KAAKiN,UACLjN,KAAK+mB,kBACL/mB,KAAKgnB,gBACLhnB,KAAKinB,iBACLjnB,KAAKknB,eACLlnB,KAAKmnB,UAETA,OAAQ,WACJnnB,KAAKonB,mBAAmBpnB,KAAKqnB,SAASC,KAAKtnB,QAE/CunB,aAAc,SAAUnjB,EAAQojB,GAAlB,GAGFjkB,GAFJtC,EAAUjB,KAAKinB,cAAcO,EAKjC,OAJKvmB,KACGsC,EAAWvD,KAAKynB,YAAYC,UAAUnkB,SAC1CvD,KAAKinB,cAAcO,GAAYvmB,EAAUmB,MAAemB,GAAY4G,UAAWnK,KAAKiB,QAAQ0mB,YAAcvjB,IAEvGnD,GAEX2mB,UAAW,SAAU9H,GAAV,GAKC+H,GACAd,EACAe,EACAC,EACKxpB,EACDypB,EAEIC,EACAC,CAZhB,KAAKpI,EACD,MAAO,EAEX,IAAI9f,KAAKiB,QAAQknB,cAAgBrlB,EAASgd,EAAMzf,OAAQ,CAKpD,IAJIwnB,EAAa/H,EAAM+H,WACnBd,EAAiB/mB,KAAK+mB,eAAec,GACrCC,KACAC,EAAc,EACTxpB,EAAI,EAAGA,EAAIwoB,EAAetoB,OAAQF,IAEvC,GADIypB,EAAQjB,EAAexoB,GAChB,CAGP,GAFI0pB,EAAQnI,EAAM1b,OAAO6jB,MACrBC,EAAaF,EAAM5jB,OAAO6jB,MAC1BA,GAASC,GAAcD,EAAMG,QAAUF,EAAWE,MAClD,QAEAtlB,GAASklB,EAAM3nB,SACf0nB,GAAexjB,KAAKsG,IAAImd,EAAM3nB,OAC9BynB,EAAY5pB,KAAKqG,KAAKsG,IAAImd,EAAM3nB,SAI5C,GAAI0nB,EAAc,EACd,MAAOjI,GAAMzf,MAAQ0nB,EAG7B,MAAOjI,GAAMzf,OAEjBgoB,UAAW,SAAUvI,EAAOwI,GAAjB,GAKHvB,GAEIa,EACAW,EACAC,EACAC,EACKlqB,EACDypB,EAIAC,EACAC,EASAQ,EAkBRtkB,EACAukB,EACAC,EA7CAxH,EAASphB,IAKb,IAJmB,SAAfsoB,IACAA,EAAa,GAEbvB,EAAiB/mB,KAAK+mB,eAAejH,EAAM+H,YAC3C7nB,KAAKiB,QAAQ4nB,UAAW,CAKxB,IAJIjB,EAAY5nB,KAAK4nB,UAAU9H,GAC3ByI,EAAWX,GAAa,EACxBY,EAAYF,EACZG,GAAe,EACVlqB,EAAI,EAAGA,EAAIwoB,EAAetoB,SAC3BupB,EAAQjB,EAAexoB,GACvBuhB,IAAUkI,GAFyBzpB,IAAK,CAO5C,GAFI0pB,EAAQnI,EAAM1b,OAAO6jB,MACrBC,EAAaF,EAAM5jB,OAAO6jB,MAC1BA,GAASC,EAAY,CACrB,SAAWD,KAAUlX,EAAiB+X,QAAUb,IAAUC,EACtD,QAEJ,IAAID,EAAMG,OAASH,EAAMG,QAAUF,EAAWE,MAC1C,SAGJM,EAAatH,EAAOwG,UAAUI,IAC9BU,GAAc,GAAKH,GAAYG,EAAa,IAAMH,KAClDC,GAAaE,EACbd,GAAac,EACbD,GAAe,EACXrH,EAAOngB,QAAQknB,eACfP,EAAYrjB,KAAKkF,IAAIme,EAAW,KAO5C,MAHIa,KACAD,GAAaF,IAGbE,EACAZ,GAMR,MAHIxjB,GAAS0b,EAAM1b,OACfukB,EAAY3oB,KAAK2mB,gBAAgBviB,GACjCwkB,EAAoB5oB,KAAK+oB,0BAA0BJ,IAEnDC,EACA9I,EAAMzf,OAASuoB,IAGvBI,YAAa,SAAUvb,EAAUwb,GAApB,GAIA1qB,GACDwoB,EAIKmC,EACDpJ,EAGQK,EAZhBiB,EAASphB,KACTyJ,EAAMuH,EACNxM,EAAMyM,CACV,KAAS1S,EAAI,EAAGA,EAAIyB,KAAK+mB,eAAetoB,OAAQF,IAE5C,GADIwoB,EAAiB3F,EAAO2F,eAAexoB,GAI3C,IAAS2qB,EAAM,EAAGA,EAAMnC,EAAetoB,OAAQyqB,IACvCpJ,EAAQiH,EAAemC,GACvBpJ,IACIA,EAAM1b,OAAO6jB,QAAUgB,GAAanJ,EAAM1b,OAAOiE,OAASoF,IACtD0S,EAAKiB,EAAOiH,UAAUvI,EAAO,GAAG,GAChCjb,GAAQsb,IAAOgJ,SAAShJ,KACxB3b,EAAMD,KAAKC,IAAIA,EAAK2b,GACpB1W,EAAMlF,KAAKkF,IAAIA,EAAK0W,KAMxC,QACI1W,IAAKA,EACLjF,IAAKA,IAGb4kB,iBAAkB,WAAA,GAOD7qB,GACD6F,EACAqJ,EACAzP,EACAqrB,EAGIC,EAbZlI,EAASphB,KACTmmB,EAAMnmB,KAAKiB,QACX4nB,EAAY1C,EAAI0C,UAChBU,EAAcpD,EAAI/hB,OAClBolB,IACJ,IAAIX,EACA,IAAStqB,EAAI,EAAGA,EAAIgrB,EAAY9qB,OAAQF,IAChC6F,EAASmlB,EAAYhrB,GACrBkP,EAAWrJ,EAAOiE,KAClBrK,EAAMyP,EAAWrJ,EAAO6jB,MACxBoB,EAASG,EAAYxrB,GACpBqrB,IACDA,EAASjI,EAAO4H,YAAYvb,EAAUrJ,EAAO6jB,OACzCqB,EAAclI,EAAOkI,YACrBA,IACIA,EAAYG,SAAShrB,SACrB4qB,EAAO5f,IAAMlF,KAAKkF,IAAI4f,EAAO5f,IAAKY,EAAQqf,kBAAkBJ,EAAYG,UAAUhgB,MAElF6f,EAAYf,SAAS9pB,SACrB4qB,EAAO7kB,IAAMD,KAAKC,IAAI6kB,EAAO7kB,IAAK6F,EAAQqf,kBAAkBJ,EAAYf,UAAU/jB,OAGtF6kB,EAAO5f,MAAQuH,GAAaqY,EAAO7kB,MAAQyM,EAC3CuY,EAAYxrB,GAAOqrB,EAEnBA,EAAS,MAGbA,IACAjI,EAAO0F,gBAAgBrZ,GAAY4b,IAKnDM,YAAa,SAAU7J,EAAOrb,EAAMojB,GAAvB,GAOLjF,GANAviB,EAAQyf,EAAMzf,MACd+D,EAAS0b,EAAM1b,OACfojB,EAAW1H,EAAM0H,SACjBoC,EAAY9J,EAAM7e,QAAQ2oB,UAC1BC,EAAWplB,EAAK6G,OAAO8I,IACvB0V,EAAYrlB,EAAK6G,OAAO+I,GAExBvR,GAAS+mB,IAAa/mB,EAASgnB,GAC/BlH,GACIQ,IAAKyG,EACLxG,KAAMyG,GAEHF,GAAa/kB,GAAQ+kB,EAAUvpB,SACtCL,KAAK+pB,kBAAoB/pB,KAAK+pB,sBAC9B/pB,KAAK+pB,kBAAkBvC,GAAYxnB,KAAK+pB,kBAAkBvC,IAAa,GAAI5T,IAAqBgW,EAAUvpB,MAAO+D,EAAQ8M,GACzH0R,EAAa5iB,KAAK+pB,kBAAkBvC,GAAU9D,cAAcrjB,EAAOupB,EAAUvpB,QAE7EuiB,IACA9C,EAAMsD,IAAMR,EAAWQ,IACvBtD,EAAMuD,KAAOT,EAAWS,KACxBrjB,KAAKgqB,iBAAiBlK,EAAO+H,KAGrCmC,iBAAkB,SAAUlK,EAAO+H,GAAjB,GAONoC,GAIA3e,EAOJ4e,EAjBA9F,GAAcpkB,KAAKiB,QAAQ0mB,WAC3B1mB,EAAU6e,EAAM7e,QAAQ2oB,UACxBxlB,EAAS0b,EAAM1b,OACfgf,EAAMtD,EAAMsD,IACZC,EAAOvD,EAAMuD,IACbrjB,MAAKiB,QAAQ4nB,WACToB,EAAoBjqB,KAAKiqB,kBAAkBnK,EAAO+H,GACtDzE,EAAM6G,EAAkB7G,IACxBC,EAAO4G,EAAkB5G,OAErB/X,GACAuc,WAAYA,EACZzjB,OAAQA,GAEZpE,KAAKmqB,aAAc9pB,MAAO+iB,GAAO9X,GACjCtL,KAAKmqB,aAAc9pB,MAAOgjB,GAAQ/X,IAElC4e,EAAW,GAAIzR,IAAoB2K,EAAKC,EAAMe,EAAYpkB,KAAMoE,EAAQnD,GAC5E6e,EAAM8J,WAAaM,GACnBpK,EAAM3N,OAAO+X,IAEjBD,kBAAmB,SAAUnK,EAAO+H,GAAjB,GACXD,GAAY5nB,KAAKqoB,UAAUvI,EAAO,GAAG,GAAKA,EAAMzf,MAChD+iB,EAAMtD,EAAMsD,IAAMwE,EAClBvE,EAAOvD,EAAMuD,KAAOuE,CAWxB,OAVA5nB,MAAKspB,YAActpB,KAAKspB,cACpBf,YACAkB,aAEArG,EAAM,IACNpjB,KAAKspB,YAAYG,SAAS5B,GAActjB,KAAKkF,IAAIzJ,KAAKspB,YAAYG,SAAS5B,IAAe,EAAGzE,IAE7FC,EAAO,IACPrjB,KAAKspB,YAAYf,SAASV,GAActjB,KAAKC,IAAIxE,KAAKspB,YAAYf,SAASV,IAAe,EAAGxE,KAG7FD,IAAKA,EACLC,KAAMA,IAGdgE,SAAU,SAAU5iB,EAAM6G,GAAhB,GAQF0b,GAIAlH,EAXA+H,EAAavc,EAAOuc,WACpBzjB,EAASkH,EAAOlH,OAChBojB,EAAWlc,EAAOkc,SAClBT,EAAiB/mB,KAAK+mB,eAAec,EACpCd,KACD/mB,KAAK+mB,eAAec,GAAcd,MAElCC,EAAehnB,KAAKgnB,aAAaQ,GAChCR,IACDhnB,KAAKgnB,aAAaQ,GAAYR,MAE9BlH,EAAQ9f,KAAKoqB,YAAY3lB,EAAM6G,GAC/BwU,IACAjiB,EAAEgC,OAAOigB,EAAOxU,GAChBwU,EAAMuK,MAAQrqB,KACd8f,EAAMwK,SAAWlmB,EAAOK,KAAKojB,GAC7B/H,EAAMyK,SAAW9lB,EAAK6G,OAAOif,SAC7BvqB,KAAK2pB,YAAY7J,EAAOrb,EAAMojB,IAElC7nB,KAAKiN,OAAO/O,KAAK4hB,GACjBkH,EAAa9oB,KAAK4hB,GAClBiH,EAAe7oB,KAAK4hB,GACpB9f,KAAKmqB,YAAY1lB,EAAKsH,YAAaT,IAEvCkf,iBAAkB,SAAUvpB,EAASZ,EAAO6M,EAAU2a,EAAYzjB,EAAQojB,GAAxD,GAmBVD,GAlBAlkB,GACAE,SAAUa,EAAOmK,UACjB3K,UACI,OACA,YACA,UACA,UACA,WACA,SACA,SACA,sBACA,wBAGJ6mB,EAASzqB,KAAKknB,YAAYM,EAe9B,OAdK3iB,IAAQ4lB,KACTzqB,KAAKknB,YAAYM,GAAYiD,EAAStnB,EAAYlC,KAAaoC,GAAO,IAEtEkkB,EAAetmB,EACfwpB,IACAlD,EAAenlB,MAAemlB,GAC9BpkB,EAAYokB,GACRlnB,MAAOA,EACP6M,SAAUA,EACV3B,MAAOsc,EACPzjB,OAAQA,EACRkmB,SAAUlmB,EAAOK,KAAKojB,IACvBxkB,IAEAkkB,GAEX4C,YAAa,SAAU1lB,EAAM6G,GAAhB,GACLmC,GAAWnC,EAAOlH,OAAOiE,KACzBhI,EAAQoE,EAAKpE,MACbiJ,EAAYtJ,KAAK8mB,gBAAgBrZ,EACjC0b,UAAS9oB,IAAoB,OAAVA,IACnBiJ,EAAYtJ,KAAK8mB,gBAAgBrZ,GAAYnE,IACzCG,IAAKuH,EACLxM,IAAKyM,GAET3H,EAAUG,IAAMlF,KAAKkF,IAAIH,EAAUG,IAAKpJ,GACxCiJ,EAAU9E,IAAMD,KAAKC,IAAI8E,EAAU9E,IAAKnE,KAGhDsmB,gBAAiB,SAAUviB,GAAV,GACTkc,GAAWtgB,KAAKsgB,SAChB7S,EAAWrJ,EAAOiE,KAClBA,EAAOoF,EAAW6S,EAASoK,eAAejd,GAAY6S,EAASqI,SACnE,KAAKtgB,EACD,KAAUwb,OAAM,yCAA2CpW,EAE/D,OAAOpF,IAEXmc,OAAQ,SAAUC,GAAV,GACArD,GAASphB,KACT2qB,EAAgB3qB,KAAK2qB,iBACrBC,EAAc5qB,KAAKiN,OACnBxE,EAAezI,KAAKyI,aACpB+Y,EAAU,CACdxhB,MAAKonB,mBAAmB,SAAU3iB,EAAM6G,GAAhB,GAUZ+c,GACAwC,EAEIC,EAZRjD,EAAavc,EAAOuc,WACpB/gB,EAAgBwE,EAAOlH,OACvBukB,EAAYvH,EAAOuF,gBAAgB7f,GACnCgZ,EAAQ8K,EAAYpJ,KACpBuJ,EAAeJ,EAAc9C,EAC5BkD,KACDJ,EAAc9C,GAAckD,EAAe3J,EAAO2J,aAAatiB,EAAcof,EAAYc,IAEzF7I,IACIuI,EAAYjH,EAAOiH,UAAUvI,EAAO6I,EAAUL,cAC9CuC,EAAYlC,EAAU7D,QAAQuD,EAAU,GAAIA,EAAU,IAAKjH,EAAOngB,QAAQ+pB,MAC1EH,GACIC,EAAY1J,EAAO0J,UAAUC,EAAcF,GAC/C/K,EAAMmL,UAAY7J,EAAO6J,UAAUnL,EAAO6I,GAC1C7I,EAAMoL,WAAa7C,EAAU,GACzBjH,EAAOngB,QAAQknB,eACfrI,EAAMqL,WAAa/J,EAAOwG,UAAU9H,IAExCsB,EAAOgK,YAAYtL,EAAOgL,IAE1BhL,EAAMrU,SAAU,KAI5BzL,KAAKqrB,iBAAiBV,GACtB3qB,KAAKmB,IAAMsjB,GAEfwG,UAAW,SAAUnL,EAAO6I,GAAjB,GACHC,GAAoB5oB,KAAK+oB,0BAA0BJ,GACnDtoB,EAAQyf,EAAMzf,KAClB,OAAOsoB,GAAU1nB,QAAQqqB,QAAUjrB,EAAQuoB,EAAoBvoB,GAASuoB,GAE5EG,0BAA2B,SAAUJ,GAAV,GACnBlgB,GAAezI,KAAKyI,aACpBxH,EAAU0nB,EAAU1nB,QACpBsqB,KAAoBtkB,OAAOhG,EAAQuqB,oBAAsBvqB,EAAQ2nB,kBACrE,OAAO2C,GAAe9iB,EAAagjB,WAAa,IAAM,GAE1DL,YAAa,SAAUtL,EAAOgL,GAC1BhL,EAAM0E,OAAOsG,IAEjBO,iBAAkB,aAElBP,UAAW,SAAUC,EAAcF,GAAxB,GACH5pB,GAAUjB,KAAKiB,QACf0mB,EAAa1mB,EAAQ0mB,WACrB+D,EAAQ/D,EAAakD,EAAYE,EACjCY,EAAQhE,EAAaoD,EAAeF,CACxC,OAAO,IAAI9kB,IAAI2lB,EAAMlG,GAAImG,EAAMrG,GAAIoG,EAAMjG,GAAIkG,EAAMpG,KAEvDwF,aAAc,SAAUtiB,EAAcof,GAClC,MAAOpf,GAAaqc,QAAQ+C,IAEhCT,mBAAoB,SAAUwE,GAAV,GAMPpE,GAGAK,EACIgE,EACD/kB,EACAglB,EACAngB,EASHogB,EArBL3K,EAASphB,KACToE,EAASpE,KAAKiB,QAAQmD,OACtBE,EAAatE,KAAKyI,aAAaxH,QAAQqD,eACvCzB,EAAQsB,EAAgBC,GACxBC,EAAcD,EAAO3F,MACzB,KAAS+oB,EAAW,EAAGA,EAAWnjB,EAAamjB,IAC3CpG,EAAO4K,oBAAoB5nB,EAAOojB,GAAW,sBAAuBA,EAAUoE,EAElF,KAAS/D,EAAa,EAAGA,EAAahlB,EAAOglB,IACzC,IAASgE,EAAa,EAAGA,EAAaxnB,EAAawnB,IAC3C/kB,EAAgB1C,EAAOynB,GACvBC,EAAkBxnB,EAAWujB,GAC7Blc,EAAYyV,EAAO6K,WAAWnlB,EAAe+kB,EAAYhE,GAC7D+D,EAASjgB,GACLuB,SAAU4e,EACVjE,WAAYA,EACZzjB,OAAQ0C,EACR0gB,SAAUqE,GAItB,KAASE,EAAa,EAAGA,EAAa1nB,EAAa0nB,IAC/C3K,EAAO4K,oBAAoB5nB,EAAO2nB,GAAa,sBAAuBA,EAAYH,IAG1FI,oBAAqB,SAAU5nB,EAAQpB,EAAOwkB,EAAUoE,GAAnC,GAGT/D,GACAlc,EAHJugB,EAAkB9nB,EAAOpB,EACzBkpB,KACIrE,EAAaqE,EAAgBrE,WAC7Blc,EAAY3L,KAAKisB,WAAW7nB,EAAQojB,EAAUK,EAAYqE,EAAgBzK,MAC9EmK,EAASjgB,GACLuB,SAAUgf,EAAgBhf,SAC1B2a,WAAYA,EACZzjB,OAAQA,EACRojB,SAAUA,MAItByE,WAAY,SAAU7nB,EAAQojB,EAAUK,EAAYpG,GAAxC,GAIJ0K,GAIA1nB,CAIJ,OAXKzE,MAAKosB,aACNpsB,KAAKosB,eAELD,EAAYnsB,KAAKosB,WAAW5E,GAC3B2E,IACDA,EAAYnsB,KAAKosB,WAAW5E,OAE5B/iB,EAAO0nB,EAAUtE,GAChBpjB,IACDA,EAAO0nB,EAAUtE,GAAchc,GAAazM,QAAQ0M,UAAU1H,EAAQyjB,EAAYpG,IAE/Ehd,GAEX4nB,iBAAkB,SAAUvM,EAAOwM,GAC/B,MAAoB,QAAhBxM,EAAMzf,MACC,GAEJL,KAAK4mB,aAAa0F,OAAOC,KAAKD,EAAQxM,EAAMzf,QAEvDsjB,WAAY,SAAUlf,GAClB,MAAOA,GAAKsH,YAAY1L,SAGhCsR,GAAkB+G,IACdtU,UACAujB,YAAY,EACZkB,WAAW,EACXmC,MAAM,IAENrS,IACA6T,MAAO,SAAUnI,EAAOxb,GACpB,MAAOwb,GAAMoI,QAAQ1V,GAAc/W,KAAK0sB,UAAU7jB,KAEtD8jB,MAAO,SAAUtI,EAAOxb,GACpB,MAAOwb,GAAMoI,QAAQzV,GAAchX,KAAK0sB,UAAU7jB,KAEtD6jB,UAAW,SAAU7jB,GACjB,OACIxI,MAAOL,KAAKK,MACZ8qB,WAAYnrB,KAAKmrB,WACjBD,WAAYlrB,KAAKkrB,WACjBhe,SAAUlN,KAAKkN,SACf9I,OAAQpE,KAAKoE,OACbkmB,SAAUtqB,KAAKsqB,SACfsC,aAAc5sB,KAAK4sB,aACnB5I,MAAOhkB,KAAKgkB,MACZjc,QAAS6J,GAAa/I,GACtBgkB,cAAehkB,EACfiX,MAAO9f,QAIf4Y,IACAkU,WAAY,WAAA,GACJ7rB,GAAUjB,KAAKiB,QAAQ8rB,MACvB/tB,EAAOgB,KAAKuqB,UAAYtpB,EAAQ+rB,MAAMhuB,IACtCiC,GAAQwK,WAAY,GAAS5G,GAAQ7F,IAAkB,OAATA,IAC9CgB,KAAKitB,KAAO,GAAI5iB,GAAQ6iB,MACpB7sB,MAAOL,KAAKK,MACZrB,KAAMA,EACNsrB,SAAUtqB,KAAKsqB,SACfpd,SAAUlN,KAAKkN,SACf9I,OAAQpE,KAAKoE,QACdpE,KAAKiB,QAAQ8rB,MAAO/sB,KAAKqqB,MAAMzD,cAClC5mB,KAAKmS,OAAOnS,KAAKitB,SAIzBpU,GAAQ,QACRC,GAAQ,QACRC,GAAYtH,GAAa5R,QACzBC,KAAM,SAAUO,EAAOY,GACnBwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,MAC1BA,KAAKK,MAAQA,EACbL,KAAKiB,QAAUA,EACfjB,KAAKirB,UAAYhnB,GAAejE,KAAKiB,QAAQgqB,WAAW,GACxDjrB,KAAKmtB,iBAAkB,GAE3BhG,OAAQ,WAAA,GAaIiG,GAEIC,EAdRlH,EAAMnmB,KAAKiB,QACXqsB,EAAUnH,EAAImH,QACd3f,EAASwY,EAAIxY,MACb3N,MAAKutB,YAGTvtB,KAAKutB,WAAY,EACbD,EAAQ7hB,SAAW6hB,EAAQvtB,OAC3BC,KAAKmC,OAASnC,KAAKwtB,eACnBxtB,KAAKmS,OAAOnS,KAAKmC,SAEjBwL,EAAOlC,UACH2hB,EAAYptB,KAAKK,MACjBsN,EAAO8f,UACHJ,EAAgBvb,GAAgB4b,QAAQ/f,EAAO8f,UACnDL,EAAYC,GACR/C,SAAUtqB,KAAKsqB,SACfpd,SAAUlN,KAAKkN,SACf7M,MAAOL,KAAKK,MACZ8qB,WAAYnrB,KAAKmrB,WACjBD,WAAYlrB,KAAKkrB,WACjB9mB,OAAQpE,KAAKoE,UAEVuJ,EAAO2e,SACdc,EAAYptB,KAAK2tB,YAAYhgB,EAAO2e,SAExCtsB,KAAKgtB,MAAQ,GAAIjb,IAAQqb,EAAWhrB,IAChCwrB,MAAO7iB,EACP8iB,OAAQ9iB,EACR+iB,QACIC,KAAM,EACNC,MAAO,GAEXlpB,OAAQb,GAAe0J,EAAO7I,OAAQ9E,KAAKoE,OAAOU,SACnD6I,IACH3N,KAAKmS,OAAOnS,KAAKgtB,QAErBhtB,KAAK8sB,aACD9sB,KAAKkqB,UACLlqB,KAAKmS,OAAOnS,KAAKkqB,YAGzB+D,aAAc,WAAA,GACNhtB,GAAUjB,KAAKiB,QAAQqsB,QACvBY,EAAajtB,EAAQitB,WACrBC,EAAS/rB,IAAagE,MAAOpG,KAAKoG,OAASnF,EAAQktB,OAIvD,OAHKtpB,IAAQspB,EAAO/nB,SAChB+nB,EAAO/nB,MAAQ,GAAI6M,IAAMib,GAAYE,WAAWna,IAAmBoa,SAEhEF,GAEXvI,aAAc,aAEd4H,aAAc,WAAA,GACNvsB,GAAUjB,KAAKiB,QAAQqsB,QACvBnrB,EAAS,GAAI6P,KACb9K,KAAMjG,EAAQiG,KACdtI,MAAOqC,EAAQlB,KACflB,OAAQoC,EAAQlB,KAChBuuB,SAAUrtB,EAAQqtB,SAClBJ,WAAYjtB,EAAQitB,WACpBC,OAAQnuB,KAAKiuB,eACbM,QAASttB,EAAQstB,QACjBzpB,OAAQb,GAAehD,EAAQ6D,OAAQ9E,KAAKoE,OAAOU,QACnD2hB,UAAWxlB,EAAQwlB,UACnBjG,OAAQvf,EAAQuf,SAEhB8J,SAAUtqB,KAAKsqB,SACfjqB,MAAOL,KAAKK,MACZ+D,OAAQpE,KAAKoE,OACb8I,SAAUlN,KAAKkN,UAEnB,OAAO/K,IAEXqsB,UAAW,WAKP,MAJKxuB,MAAKmC,SACNnC,KAAKmC,OAASnC,KAAKwtB,eACnBxtB,KAAKmC,OAAOqiB,OAAOxkB,KAAKyuB,YAErBzuB,KAAKmC,OAAOhB,KAEvBqjB,OAAQ,SAAUC,GAAV,GAQAiK,GAoBSnwB,EAKLowB,EAEI3J,EAlCR5D,EAASphB,KACTmmB,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdgqB,EAAY9E,EAAI8E,UAChB9gB,EAAWlJ,EAAQkJ,QAsBvB,IArBAnK,KAAKmnB,SACLnnB,KAAKmB,IAAMsjB,EACPiK,EAAWjK,EAAU3e,QACrBqE,EACI8gB,EACAyD,EAASpJ,IAAMoJ,EAAS7vB,SAExB6vB,EAASnJ,IAAMmJ,EAAS7vB,SAGxBosB,EACAyD,EAASlJ,IAAMkJ,EAAS9vB,QAExB8vB,EAASjJ,IAAMiJ,EAAS9vB,QAGhCoB,KAAKyuB,UAAYC,EACb1uB,KAAKmC,QACLnC,KAAKmC,OAAOqiB,OAAOkK,GAEvB1uB,KAAK4uB,YAAYF,GACb1uB,KAAK4pB,UACL,IAASrrB,EAAI,EAAGA,EAAIyB,KAAK4pB,UAAUnrB,OAAQF,IACvC6iB,EAAOwI,UAAUrrB,GAAGimB,OAAOkK,EAG/B1uB,MAAKitB,OACD0B,EAAgB3uB,KAAKwuB,YACnBvtB,EAAQqsB,QAAQ7hB,SAAWxK,EAAQqsB,QAAQvtB,OACzCilB,EAAS2J,EAAc3J,SAC3B2J,EAAgB,GAAI5oB,IAAIif,EAAOzY,EAAGyY,EAAOxY,EAAGwY,EAAOzY,EAAGyY,EAAOxY,IAEjExM,KAAKitB,KAAKzI,OAAOmK,KAGzBC,YAAa,SAAUztB,GAAV,GACLglB,GAAMnmB,KACNiB,EAAUklB,EAAIllB,QACd+rB,EAAQ7G,EAAI6G,MACZ9mB,EAASjF,EAAQ0M,OAAOkhB,QACxB7B,KACA9mB,EAASA,IAAW2S,GAAQzN,EAAMlF,EAClCA,EAASA,IAAW4S,GAAQ3N,EAASjF,EACrC8mB,EAAMxI,OAAOrjB,GACb6rB,EAAM7rB,IAAI2tB,QAAQ9uB,KAAKwuB,YAAatoB,GACpC8mB,EAAMxI,OAAOwI,EAAM7rB,OAG3B4tB,gBAAiB,WAAA,GACTzB,GAAUttB,KAAKiB,QAAQ+tB,UAAU1B,QACjC2B,EAAejvB,KAAKiuB,eAAe7nB,MACnCnF,EAAUjB,KAAKiB,QAAQqsB,QACvBvtB,EAAOkB,EAAQlB,MAAQkB,EAAQktB,OAAOvvB,OAAS,IAAM0uB,EAAQa,OAAOvvB,OAAS,GAC7EswB,EAAS,GAAIld,KACb9K,KAAMjG,EAAQiG,KACdtI,MAAOmB,EACPlB,OAAQkB,EACRuuB,SAAUrtB,EAAQqtB,SAClBJ,WAAYZ,EAAQlnB,OAAS6oB,EAC7Bd,QACI/nB,MAAOknB,EAAQa,OAAO/nB,MACtBxH,MAAO0uB,EAAQa,OAAOvvB,MACtB2vB,QAAStqB,GAAeqpB,EAAQa,OAAOI,QAAS,IAEpDA,QAAStqB,GAAeqpB,EAAQiB,QAAS,IAG7C,OADAW,GAAO1K,OAAOxkB,KAAKyuB,WACZS,EAAOC,cAElBC,gBAAiB,WACb,OAAQpvB,KAAKmC,YAAcqe,QAE/B6O,oBAAqB,WAAA,GAEb7O,GAAQqF,EAKJ9lB,EACAuvB,EACAtK,EARJ7iB,EAASnC,KAAKmC,MAiBlB,OAfIA,IACA0jB,EAAO1jB,EAAOotB,WAAWzJ,SACzBtF,EAASre,EAAOqe,SAEZzgB,EAAOC,KAAKiB,QAAQqsB,QAAQvtB,KAC5BuvB,EAAWvvB,EAAO,EAClBilB,EAAShlB,KAAKmB,IAAI6jB,SACtBa,EAAO,GAAI3S,IAASsc,MAChBxK,EAAOzY,EAAI+iB,EACXtK,EAAOxY,EAAI8iB,IAEXvvB,EACAA,MAIJkB,QAASjB,KAAKiB,QACd4kB,KAAMA,EACNrF,OAAQA,IAGhBiP,cAAe,WAAA,GAKHljB,GACAmjB,EACAljB,EAAGmjB,EANPnB,EAAYxuB,KAAKwuB,YACjBoB,EAAU5vB,KAAKqqB,MAAMpkB,KAAK2pB,UAC1BC,GAAeD,GAAWA,EAAQE,SAAStB,EAC/C,IAAIqB,EAWA,MAVItjB,GAAIiiB,EAAU/I,GAAKvR,GACnBwb,EAAkBzkB,EAElBjL,KAAKirB,WACLze,EAAIgiB,EAAUlJ,GACdqK,EAAgBxkB,IAEhBqB,EAAIgiB,EAAUjJ,GACdoK,EAAgBvkB,IAGhB0U,MAAO,GAAIpT,IAAMH,EAAGC,GACpBohB,OACI1jB,WAAYwlB,EACZvlB,SAAUwlB,KAK1BhC,YAAa,SAAUrB,GACnB,MAAOtsB,MAAKqqB,MAAMgC,iBAAiBrsB,KAAMssB,IAE7CyD,YAAa,SAAU5uB,GACnB,GAAIqtB,GAAYxuB,KAAKwuB,WACrB,OAAOA,GAAUsB,SAAS3uB,MAGlC4X,GAAU2O,UAAUnkB,UAChB4G,UAAU,EACVmjB,SACI7hB,SAAS,EACTyiB,WAAY/c,GACZpR,KAAM2U,GACNxN,KAAMkK,GACN+c,QAAUvvB,MAAO,GACjB2vB,QAAS,GAEb5gB,QACIlC,SAAS,EACTojB,SAAUhW,GACViV,OAAQ7b,GAAW,GACnB+d,QAAS/d,GAAW,GACpBwU,WACIvf,KAAM6M,GACN2S,MAAO5S,KAGfiZ,OAASC,UACTgC,WACI1B,SACIa,QACI/nB,MAAO,OACPxH,MAAO,KAInBgrB,WAAalc,MAAQ9O,MAAO,KAEhCwD,GAAW2W,GAAU2O,UAAW/O,IAChCvW,GAAW2W,GAAU2O,UAAW9O,IAC5BI,GAAcvH,GAAa5R,QAC3BC,KAAM,SAAU4kB,EAAYtgB,EAAQojB,GAChC/V,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,MAC1BA,KAAK0kB,WAAaA,EAClB1kB,KAAKoE,OAASA,EACdpE,KAAKwnB,SAAWA,GAEpBva,OAAQ,SAAUgjB,GAAV,GAGK1xB,GAAOE,EAFZimB,EAAa1kB,KAAK0kB,WAAWzd,OAAOgpB,OACpChjB,IACJ,KAAS1O,EAAI,EAAGE,EAASimB,EAAWjmB,OAAQF,EAAIE,EAAQF,IAChDmmB,EAAWnmB,GAAGkN,WAAY,GAC1BwB,EAAO/O,KAAKwmB,EAAWnmB,GAAGkwB,UAAU3I,SAASd,SAGrD,OAAO/X,IAEX2Y,aAAc,WAAA,GASNlY,GARAyY,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdmD,EAAS+hB,EAAI/hB,OACbgC,EAAQhC,EAAOgC,MACf7C,EAAWa,EAAOmK,SAClBvK,IAAWoC,IAAU7C,IACrB6C,EAAQ7C,EAAS6C,OAEjBsH,EAAOmF,GAAKqd,WAAWlwB,KAAKiN,UAC5BoZ,QACIjgB,MAAOA,EACPxH,MAAOwF,EAAOxF,MACd2vB,QAASnqB,EAAOmqB,QAChBjI,SAAUliB,EAAOkiB,UAErBxhB,OAAQV,EAAOU,SAEf7D,EAAQkvB,QACRziB,EAAK0iB,QAETpwB,KAAKwgB,OAAS9S,GAElB2iB,SAAU,SAAUxnB,EAAGynB,GACnB,MAAOtwB,MAAKuwB,OAAOC,gBAAgBF,EAAO/jB,EAAG+jB,EAAO9jB,EAAGxM,KAAKwnB,aAGpE7V,GAAkBqH,IAAemX,QAAQ,IACrClX,GAAkBD,GAAYnZ,QAC9BoN,OAAQ,SAAUgjB,GACd,GAAIhjB,GAASjN,KAAKywB,oBAAoBzwB,KAAK0kB,WAI3C,OAHIuL,IAAgBA,EAAaxxB,SAC7BwO,EAASA,EAAOhG,OAAOjH,KAAKywB,oBAAoBR,GAAc3E,YAE3Dre,GAEXwjB,oBAAqB,SAAUxjB,GAAV,GAWR1O,GACDmyB,EACA5Q,EACA6Q,EACAC,EAdJvM,EAAQrkB,KAAKuwB,OACbjQ,EAAW+D,EAAM/D,SACjB7X,EAAe6X,EAASuG,mBAAmB7mB,KAAKoE,QAChDysB,EAAgBxM,EAAMyM,oBAAoB9wB,KAAKoE,UAAYwQ,GAC3D0W,EAAU7iB,EAAaxH,QAAQqqB,QAC/BnhB,EAAW1B,EAAaxH,QAAQkJ,SAChC4mB,EAAMzF,EAAU,EAAI,EACpB0F,EAAS1F,EAAU,EAAI,EACvB7sB,EAASwO,EAAOxO,OAChBsI,IACJ,KAASxI,EAAI,EAAGA,EAAIE,EAAQF,IACpBmyB,EAAYzjB,EAAO1O,EAAI,GACvBuhB,EAAQ7S,EAAO1O,GACfoyB,EAAsBD,EAAUlC,YAAYxJ,SAC5C4L,EAAkB9Q,EAAM0O,YAAYxJ,SACpCvc,EAAaxH,QAAQgwB,WACrBlqB,EAAO7I,KAAK,GAAIiV,IAAcwd,EAAoBpkB,EAAGokB,EAAoBnkB,IAErEzF,EAAO7I,KADPiM,EACY,GAAIgJ,IAAcwd,EAAoBpkB,EAAGqkB,EAAgBpkB,GAEzD,GAAI2G,IAAcyd,EAAgBrkB,EAAGokB,EAAoBnkB,IAEzEzF,EAAO7I,KAAK,GAAIiV,IAAcyd,EAAgBrkB,EAAGqkB,EAAgBpkB,KAE7DrC,GACApD,EAAO7I,KAAK,GAAIiV,IAAcwd,EAAoBpkB,EAAGmkB,EAAUvvB,IAAIkQ,GAAI0f,KACvEhqB,EAAO7I,KAAK,GAAIiV,IAAcwd,EAAoBpkB,EAAGmkB,EAAUvvB,IAAIkQ,GAAI2f,KACnEH,GACA9pB,EAAO7I,KAAK,GAAIiV,IAAcwd,EAAoBpkB,EAAGuT,EAAM3e,IAAIkQ,GAAI0f,KAEvEhqB,EAAO7I,KAAK,GAAIiV,IAAcyd,EAAgBrkB,EAAGuT,EAAM3e,IAAIkQ,GAAI0f,KAC/DhqB,EAAO7I,KAAK,GAAIiV,IAAcyd,EAAgBrkB,EAAGuT,EAAM3e,IAAIkQ,GAAI2f,OAE/DjqB,EAAO7I,KAAK,GAAIiV,IAAcud,EAAUvvB,IAAImQ,GAAIyf,GAAMJ,EAAoBnkB,IAC1EzF,EAAO7I,KAAK,GAAIiV,IAAcud,EAAUvvB,IAAImQ,GAAI0f,GAASL,EAAoBnkB,IACzEqkB,GACA9pB,EAAO7I,KAAK,GAAIiV,IAAc2M,EAAM3e,IAAImQ,GAAIyf,GAAMJ,EAAoBnkB,IAE1EzF,EAAO7I,KAAK,GAAIiV,IAAc2M,EAAM3e,IAAImQ,GAAIyf,GAAMH,EAAgBpkB,IAClEzF,EAAO7I,KAAK,GAAIiV,IAAc2M,EAAM3e,IAAImQ,GAAI0f,GAASJ,EAAgBpkB,IAIjF,OAAOzF,UAGXmS,GAAgBF,GAAYnZ,QAC5B+lB,aAAc,WAAA,GAONsL,GACAC,EACAC,EARAhtB,EAASpE,KAAKoE,OACdb,EAAWa,EAAOmK,UAClBnI,EAAQhC,EAAOgC,KACfpC,IAAWoC,IAAU7C,IACrB6C,EAAQ7C,EAAS6C,OAEjB8qB,EAAiB,GAAI7mB,GAAQgnB,eAAerxB,KAAKiB,QAAQkvB,QACzDgB,EAAWD,EAAeI,QAAQtxB,KAAKiN,UACvCmkB,EAAQ,GAAIve,KACZwT,QACIjgB,MAAOA,EACPxH,MAAOwF,EAAOxF,MACd2vB,QAASnqB,EAAOmqB,QAChBjI,SAAUliB,EAAOkiB,UAErBxhB,OAAQV,EAAOU,SAEnBssB,EAAMD,SAASjzB,KAAKqzB,MAAMH,EAAMD,SAAUA,GAC1CnxB,KAAKwgB,OAAS4Q,KAGlBjY,IACAqY,eAAgB,WAAA,GAORC,GAEKjK,EACD1gB,EACA4qB,EACAC,EACAjN,EACKlD,EACD1B,EAdRsB,EAASphB,KACTmmB,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACd+lB,EAAeb,EAAIa,aACnB5iB,EAASnD,EAAQmD,OACjBC,EAAc2iB,EAAavoB,MAG/B,KADAuB,KAAK4xB,aACIpK,EAAW,EAAGA,EAAWnjB,EAAamjB,IAAY,CAKvD,IAJI1gB,EAAgB1C,EAAOojB,GACvBkK,EAAetQ,EAAOyQ,WAAW7K,EAAaQ,IAC9CmK,EAAaD,EAAajzB,OAC1BimB,KACKlD,EAAU,EAAGA,EAAUmQ,EAAYnQ,IACpC1B,EAAQ4R,EAAalQ,GACrB1B,EACA4E,EAAWxmB,KAAK4hB,GACTsB,EAAO0P,oBAAoBhqB,KAAmB8N,KACjD8P,EAAWjmB,OAAS,IACpBgzB,EAAcrQ,EAAO0Q,cAAcpN,EAAY5d,EAAe0gB,EAAUiK,GACxErQ,EAAO2Q,YAAYN,IAEvB/M,KAGJA,GAAWjmB,OAAS,IACpBgzB,EAAcrQ,EAAO0Q,cAAcpN,EAAY5d,EAAe0gB,EAAUiK,GACxErQ,EAAO2Q,YAAYN,IAG3BzxB,KAAKgyB,SAASC,QAAQV,MAAMvxB,KAAKgyB,SAAUhyB,KAAK4xB,YAEpDG,YAAa,SAAUG,GACnBlyB,KAAK4xB,UAAU1zB,KAAKg0B,GACpBA,EAAQ3B,OAASvwB,MAErB6xB,WAAY,SAAU5kB,GAClB,MAAOA,IAEX6jB,oBAAqB,SAAU1sB,GAAV,GACb+tB,GAAgB/tB,EAAO+tB,cACvBC,GAAcD,GAAiBnyB,KAAKiB,QAAQ4nB,SAChD,OAAOuJ,GAAazd,GAAOwd,GAAiBvd,IAEhD4b,gBAAiB,SAAUjkB,EAAGC,EAAGgb,GAAhB,GAIT6K,GACK9zB,EACDuhB,EAEIwS,EACAC,EARRhsB,EAAS,GAAImG,IAAMH,EAAGC,GACtBgmB,EAAYxyB,KAAKgnB,aAAaQ,GAC9BiL,EAAuBzhB,CAE3B,KAASzS,EAAI,EAAGA,EAAIi0B,EAAU/zB,OAAQF,IAC9BuhB,EAAQ0S,EAAUj0B,GAClBuhB,GAASjb,GAAQib,EAAMzf,QAA0B,OAAhByf,EAAMzf,OAAkByf,EAAMrU,WAAY,IACvE6mB,EAAWxS,EAAM3e,IACjBoxB,EAAgBD,EAAStN,SAAS0N,WAAWnsB,GAC7CgsB,EAAgBE,IAChBJ,EAAevS,EACf2S,EAAuBF,GAInC,OAAOF,KAGXjZ,GAAgBtG,GAAUjT,QAC1B8yB,MAAO,WACH3yB,KAAK4yB,QAAQ5yB,KAAKiB,QAAQE,IAAIqkB,KAElCqN,KAAM,SAAUC,GACZ,GAAI3xB,GAAMnB,KAAKiB,QAAQE,GACvBnB,MAAK4yB,QAAQvoB,EAAQ0oB,iBAAiB5xB,EAAIqkB,GAAIrkB,EAAIskB,GAAIqN,KAE1DF,QAAS,SAAUrmB,GAAV,GACDxE,GAAU/H,KAAK+H,QACfopB,EAAWppB,EAAQopB,SACnB6B,EAAW7B,EAAS,GAAGjrB,SACvB+sB,EAAc9B,EAAS,GAAGjrB,QAC9B6B,GAAQmrB,UACRF,EAASG,KAAK5mB,GACdxE,EAAQqrB,SACRH,EAAYE,KAAK5mB,MAGzBoF,GAAkByH,IAAiBia,SAAUvf,KAC7Cf,GAAiB3T,QAAQ8hB,SAAS,OAAQ9H,IAQtCC,IACAia,gBAAiB,WAAA,GAGLnyB,GACAoyB,EAHJC,EAAOxzB,KAAKyzB,SACZD,KAASA,EAAKvyB,aAAeyyB,eAAgB,IACzCvyB,EAAMqyB,EAAKryB,IACXoyB,EAAW1gB,GAAK8gB,SAASxyB,EAAI2kB,UACjC9lB,KAAKwgB,OAAOwK,KAAKuI,GACjBvzB,KAAKymB,UAAY,GAAIrN,IAAcma,GAAYpyB,IAAKA,IAChDuD,EAAa1E,KAAKiB,QAAQmD,SAC1BpE,KAAK4zB,sBAAsBL,KAIvCK,sBAAuB,SAAUL,GAAV,GAEV3uB,GACDkb,EAFJ7S,EAASjN,KAAK6zB,iBAClB,KAASjvB,EAAM,EAAGA,EAAMqI,EAAOxO,OAAQmG,IAC/Bkb,EAAQ7S,EAAOrI,GACfkb,GAASA,EAAMU,QAAU3b,GAAQib,EAAMU,OAAOvf,QAAQ6D,SACtDgb,EAAMU,OAAOwK,KAAKuI,KAK9Bja,GAAYZ,GAAiB7Y,QAC7BsnB,OAAQ,WACJzO,GAAiB4L,GAAG6C,OAAO5C,KAAKvkB,MAChCA,KAAKopB,mBACLppB,KAAKwxB,kBAET/J,UAAW,WACP,MAAO1O,KAEXqR,YAAa,SAAU3lB,EAAM6G,GAAhB,GAcLic,GAEAnhB,EAIA0Z,EAnBA+H,EAAavc,EAAOuc,WACpB3a,EAAW5B,EAAO4B,SAClB9I,EAASkH,EAAOlH,OAChBojB,EAAWlc,EAAOkc,SAClB2K,EAAgBnyB,KAAK8wB,oBAAoB1sB,GACzC/D,EAAQoE,EAAKsH,YAAY1L,KAC7B,KAAKwE,GAAQxE,IAAoB,OAAVA,EAAgB,CACnC,GAAI8xB,IAAkBxd,GAGlB,MAAO,KAFPtU,GAAQ,EAchB,MATIknB,GAAevnB,KAAKunB,aAAanjB,EAAQojB,GAC7CD,EAAevnB,KAAKwqB,iBAAiBjD,EAAclnB,EAAO6M,EAAU2a,EAAYzjB,EAAQojB,GACpFphB,EAAQ3B,EAAK6G,OAAOlF,OAAShC,EAAOgC,MACpCpC,GAAWI,EAAOgC,SAClBA,EAAQmhB,EAAanhB,OAErB0Z,EAAQ,GAAI/G,IAAU1Y,EAAOknB,GACjCzH,EAAM1Z,MAAQA,EACdpG,KAAKmS,OAAO2N,GACLA,GAEXuI,UAAW,SAAUvI,GAAV,GAIC+H,GACAd,EACKxoB,EACDypB,EANR5G,EAASphB,KACT4nB,EAAY5nB,KAAK4nB,UAAU9H,EAC/B,IAAI9f,KAAKiB,QAAQ4nB,UAGb,IAFIhB,EAAa/H,EAAM+H,WACnBd,EAAiB/mB,KAAK+mB,eAAec,GAChCtpB,EAAI,EAAGA,EAAIwoB,EAAetoB,SAC3BupB,EAAQjB,EAAexoB,GACvBuhB,IAAUkI,GAFyBzpB,IAKvCqpB,GAAaxG,EAAOwG,UAAUI,GAC1B5G,EAAOngB,QAAQknB,eACfP,EAAYrjB,KAAKkF,IAAIme,EAAW,GAI5C,QACIA,EACAA,IAGRkK,cAAe,SAAUpN,EAAY5d,EAAe0gB,GAArC,GAEPC,GADAxoB,EAAQ6H,EAAc7H,KAS1B,OAAO,KANHwoB,EADAxoB,IAAU8V,GACEkE,GACLha,IAAU6V,GACLoE,GAEAF,IAEK0L,EAAY5d,EAAe0gB,IAEpDqM,gBAAiB,WAAA,GAGJjvB,GAFLqI,EAASjN,KAAKiN,OACdlG,IACJ,KAASnC,EAAM,EAAGA,EAAMqI,EAAOxO,OAAQmG,IACnCmC,EAAO7I,MAAM+O,EAAOrI,QAAYzC;AAEpC,MAAO4E,GAAOE,OAAOjH,KAAK4xB,cAGlCxvB,GAAWkX,GAAUoO,UAAWvO,GAAgBE,IAC5CE,IACAtM,OAAQ,WAAA,GAcI6mB,GACAC,EAdJ1P,EAAQrkB,KAAKuwB,OACbjQ,EAAW+D,EAAM/D,SACjBqH,EAAatD,EAAMpjB,QAAQ0mB,WAC3BgB,EAAYtE,EAAMsC,gBAAgB3mB,KAAKoE,QACvC4vB,EAAmBrL,EAAUsL,UAC7BxrB,EAAe6X,EAASuG,mBAAmB7mB,KAAKoE,QAChD8vB,EAAsBzrB,EAAawrB,UACnCE,EAAcn0B,KAAKm0B,YACnBlnB,EAASjN,KAAKo0B,YAAYD,GAC1BrB,EAAMnL,EAAarW,GAAID,GACvBgjB,EAAM1M,EAAauM,EAAoB1O,GAAK0O,EAAoB5O,EAapE,OAZA+O,GAAMniB,GAAWmiB,EAAKL,EAAiBlB,EAAM,GAAIkB,EAAiBlB,EAAM,KACnE9yB,KAAKm0B,aAAelnB,EAAOxO,OAAS,IACjCq1B,EAAa7mB,EAAO,GACpB8mB,EAAY5jB,GAAKlD,GACjB0a,GACA1a,EAAOglB,QAAQ,GAAI9e,IAAckhB,EAAKP,EAAWtnB,IACjDS,EAAO/O,KAAK,GAAIiV,IAAckhB,EAAKN,EAAUvnB,MAE7CS,EAAOglB,QAAQ,GAAI9e,IAAc2gB,EAAWvnB,EAAG8nB,IAC/CpnB,EAAO/O,KAAK,GAAIiV,IAAc4gB,EAAUxnB,EAAG8nB,MAG5CpnB,GAEX2Y,aAAc,WAAA,GACNxhB,GAASpE,KAAKoE,OACdb,EAAWa,EAAOmK,UAClBnI,EAAQhC,EAAOgC,KACfpC,IAAWoC,IAAU7C,IACrB6C,EAAQ7C,EAAS6C,OAErBpG,KAAKwgB,OAAS,GAAIxN,KAAQlO,OAAQV,EAAOU,SACzC9E,KAAKs0B,WAAWluB,GAChBpG,KAAKu0B,WAAWnuB,IAEpBmuB,WAAY,SAAUnuB,GAAV,GAOAsH,GANJtJ,EAASpE,KAAKoE,OACdgiB,EAAchkB,IACdgE,MAAOA,EACPmoB,QAASnqB,EAAOmqB,SACjBnqB,EAAOsJ,KACN0Y,GAAY3a,WAAY,GAAS2a,EAAYxnB,MAAQ,IACjD8O,EAAOmF,GAAKqd,WAAWlwB,KAAKo0B,eAC5B/N,QACIjgB,MAAOggB,EAAYhgB,MACnBxH,MAAOwnB,EAAYxnB,MACnB2vB,QAASnI,EAAYmI,QACrBjI,SAAUF,EAAYE,SACtBkO,QAAS,UAGjBx0B,KAAKwgB,OAAOrO,OAAOzE,KAG3B4mB,WAAY,SAAUluB,GAAV,GACJhC,GAASpE,KAAKoE,OACd0K,EAAO+D,GAAKqd,WAAWlwB,KAAKiN,UAC5BwnB,MACIruB,MAAOA,EACPmoB,QAASnqB,EAAOmqB,SAEpBlI,OAAQ,MAEZrmB,MAAKwgB,OAAOrO,OAAOrD,KAGvB0K,GAAcR,GAAYnZ,QAC1BC,KAAM,SAAU4kB,EAAYyP,EAAartB,EAAe0gB,GACpDxO,GAAYsL,GAAGxkB,KAAKykB,KAAKvkB,KAAM0kB,EAAY5d,EAAe0gB,GAC1DxnB,KAAKm0B,YAAcA,KAG3B/xB,GAAWoX,GAAYkO,UAAWnO,IAAoB6a,YAAapb,GAAY0O,UAAUza,SACrFwM,GAAkBR,GAAgBpZ,QAClCC,KAAM,SAAU4kB,EAAYyP,EAAartB,EAAe0gB,GACpDvO,GAAgBqL,GAAGxkB,KAAKykB,KAAKvkB,KAAM0kB,EAAY5d,EAAe0gB,GAC9DxnB,KAAKm0B,YAAcA,KAG3B/xB,GAAWqX,GAAgBiO,UAAWnO,IAAoB6a,YAAanb,GAAgByO,UAAUza,SAC7FyM,GAAoBF,GAAY3Z,QAChCC,KAAM,SAAU4kB,EAAYgQ,EAAa7L,EAAW/hB,EAAe0gB,GAC/DhO,GAAY8K,GAAGxkB,KAAKykB,KAAKvkB,KAAM0kB,KAAgB5d,EAAe0gB,GAC9DxnB,KAAK00B,YAAcA,EACnB10B,KAAK6oB,UAAYA,GAErB8L,eAAgB,WAAA,GAGJzD,GACAxM,EAHJyM,EAAWnxB,KAAK40B,eAMpB,OALKzD,KACGD,EAAiB,GAAI7mB,GAAQgnB,eAAerxB,KAAKiB,QAAQkvB,QACzDzL,EAAa1L,GAAY0O,UAAUza,OAAOsX,KAAKvkB,MACnDmxB,EAAWnxB,KAAK40B,gBAAkB1D,EAAeI,QAAQ5M,IAEtDyM,GAEXvL,aAAc,WAAA,GACNxhB,GAASpE,KAAKoE,OACdb,EAAWa,EAAOmK,UAClBnI,EAAQhC,EAAOgC,KACfpC,IAAWoC,IAAU7C,IACrB6C,EAAQ7C,EAAS6C,OAErBpG,KAAKwgB,OAAS,GAAIxN,KAAQlO,OAAQV,EAAOU,SACzC9E,KAAK60B,YACDJ,MACIruB,MAAOA,EACPmoB,QAASnqB,EAAOmqB,SAEpBlI,OAAQ,OAEZrmB,KAAK80B,cACDzO,OAAQjkB,IACJgE,MAAOA,EACPmoB,QAASnqB,EAAOmqB,QAChBiG,QAAS,QACVpwB,EAAOsJ,SAGlBmnB,WAAY,SAAU51B,GAAV,GAKA81B,GACAC,EAEAC,EACKrwB,EACDstB,EAIJgD,EAGJT,EAhBAE,EAAiB30B,KAAK20B,iBACtBQ,EAAeR,EAAe7S,MAAM,GACpC4S,EAAc10B,KAAK00B,WACvB,IAAI10B,KAAK6oB,WAAa6L,EAAa,CAK/B,IAJIK,EAAqBL,EAAYC,iBACjCK,EAAa7kB,GAAK4kB,GAAoB7uB,SAC1CivB,EAAaj3B,KAAK,GAAIgV,IAASkiB,QAAQJ,EAAYA,EAAY7kB,GAAKwkB,GAAgBzuB,WAChF+uB,KACKrwB,EAAMmwB,EAAmBt2B,OAAS,EAAGmG,GAAO,EAAGA,IAChDstB,EAAU6C,EAAmBnwB,GACjCqwB,EAAc/2B,KAAK,GAAIgV,IAASkiB,QAAQlD,EAAQhsB,SAAUgsB,EAAQmD,aAAcnD,EAAQoD,aAE5FnjB,IAAOgjB,EAAcF,GACjBC,EAAcC,EAAa,GAAGjvB,SAClCivB,EAAaj3B,KAAK,GAAIgV,IAASkiB,QAAQF,EAAaA,EAAa/kB,GAAK8kB,GAAe/uB,WAErFuuB,EAAO,GAAI5hB,IAAK5T,GACpBw1B,EAAKtD,SAASjzB,KAAKqzB,MAAMkD,EAAKtD,SAAUgE,GACxCn1B,KAAKu1B,UAAUd,GACfz0B,KAAKwgB,OAAOrO,OAAOsiB,IAEvBc,UAAW,SAAUC,GAAV,GACHnR,GAAQrkB,KAAKuwB,OACbmE,EAAc10B,KAAK00B,YACnBpU,EAAW+D,EAAM/D,SACjBqH,EAAatD,EAAMpjB,QAAQ0mB,WAC3BgB,EAAYtE,EAAMsC,gBAAgB3mB,KAAKoE,QACvC4vB,EAAmBrL,EAAUsL,UAC7BxrB,EAAe6X,EAASuG,mBAAmB7mB,KAAKoE,QAChD8vB,EAAsBzrB,EAAawrB,UACnCnB,EAAMnL,EAAarW,GAAID,GACvB8f,EAAWnxB,KAAK20B,iBAChBb,EAAa3C,EAAS,GAAGjrB,SACzB6tB,EAAY5jB,GAAKghB,GAAUjrB,SAC3BmuB,EAAM1M,EAAauM,EAAoB1O,GAAK0O,EAAoB5O,EACpE+O,GAAMniB,GAAWmiB,EAAKL,EAAiBlB,EAAM,GAAIkB,EAAiBlB,EAAM,IAClEzO,EAAMpjB,QAAQ4nB,WAAa6L,KAAgBvD,EAAS1yB,OAAS,KAC3DkpB,EACA6N,EAAShP,OAAO6N,EAAKN,EAAUvnB,GAAGga,OAAO6N,EAAKP,EAAWtnB,GAEzDgpB,EAAShP,OAAOuN,EAAUxnB,EAAG8nB,GAAK7N,OAAOsN,EAAWvnB,EAAG8nB,KAInES,aAAc,SAAU71B,GACpB,GAAIA,EAAMonB,OAAOznB,MAAQ,EAAG,CACxB,GAAIynB,GAAS,GAAIxT,IAAK5T,EACtBonB,GAAO8K,SAASjzB,KAAKqzB,MAAMlL,EAAO8K,SAAUnxB,KAAK20B,kBACjD30B,KAAKwgB,OAAOrO,OAAOkU,OAI3B1M,GAAYL,GAAUzZ,QACtBiyB,cAAe,SAAUpN,EAAY5d,EAAe0gB,EAAUkN,GAA/C,GAGPP,GAEIhC,EAaJ1K,EAjBAoB,EAAY7oB,KAAKiB,QAAQ4nB,UACzB5pB,GAAS6H,EAAc4G,UAAYzO,KAavC,OAXI4pB,IAAarB,EAAW,GAAKkN,IACzBvC,EAAgBnyB,KAAK8wB,oBAAoBhqB,GAEzCqtB,EADkB,QAAlBhC,EACcuC,EAAYhQ,WAEZ1kB,KAAKy1B,gBAAgB/Q,EAAY8C,EAAUvoB,GAEzDA,IAAU8V,KACVof,EAAcA,EAAYrS,MAAM,GAAGwJ,YAGvCrsB,IAAU6V,GACH,GAAI4E,IAAkBgL,EAAYgQ,EAAa7L,EAAW/hB,EAAe0gB,GAQ7E,IAJHC,EADAxoB,IAAU8V,GACE0E,GAEAD,IAEKkL,EAAYyP,EAAartB,EAAe0gB,IAEjEhD,OAAQ,SAAUC,GAAV,GAGA0P,GAESvvB,EACD8wB,EACA5K,EANR1J,EAASphB,IAGb,IAFAsZ,GAAUgL,GAAGE,OAAOD,KAAKvkB,KAAMykB,GAC3B0P,EAAcn0B,KAAK21B,aAEnB,IAAS/wB,EAAM,EAAGA,EAAMuvB,EAAY11B,OAAQmG,IACpC8wB,EAAavB,EAAYvvB,GACzBkmB,EAAY1J,EAAO3Y,aAAaqc,QAAQ4Q,EAAW7N,YACvD6N,EAAWlR,OAAOsG,IAI9B2K,gBAAiB,SAAU/Q,EAAY8C,EAAUvoB,GAAhC,GAOJ2F,GACDgxB,EACA9V,EAcI+V,EAtBRzU,EAASphB,KACTgnB,EAAehnB,KAAKgnB,aACpB8O,EAAWpR,EAAW,GAAGmD,WACzBkO,EAASD,EAAWpR,EAAWjmB,OAC/B01B,IAEJ,KADAn0B,KAAK21B,aAAe31B,KAAK21B,iBAChB/wB,EAAMkxB,EAAUlxB,EAAMmxB,EAAQnxB,IAAO,CACtCgxB,EAAkBpO,EAClB1H,EAAQ,MACZ,GACI8V,KACA9V,EAAQkH,EAAa4O,GAAiBhxB,SACjCgxB,EAAkB,IAAM9V,EAC7BA,IACI7gB,IAAU8V,IAAQnQ,EAAMkxB,IAAa9O,EAAa4O,GAAiBhxB,EAAM,IACzEuvB,EAAYj2B,KAAKkjB,EAAO4U,sBAAsBpxB,EAAKA,EAAM,EAAGgxB,IAEhEzB,EAAYj2B,KAAK4hB,GACb7gB,IAAU8V,IAAQnQ,EAAM,EAAImxB,IAAW/O,EAAa4O,GAAiBhxB,EAAM,IAC3EuvB,EAAYj2B,KAAKkjB,EAAO4U,sBAAsBpxB,EAAKA,EAAM,EAAGgxB,MAG5DC,EAAgBzU,EAAO6U,qBAAqBrxB,GAChDwc,EAAOuU,aAAaz3B,KAAK23B,GACzB1B,EAAYj2B,KAAK23B,IAGzB,MAAO1B,IAEX6B,sBAAuB,SAAUnO,EAAYqO,EAAWC,GAIpD,IAJmB,GAGfrW,GAFAkH,EAAehnB,KAAKgnB,aACpBzb,EAAQ4qB,EAEL5qB,EAAQ,IAAMuU,GACjBvU,IACAuU,EAAQkH,EAAazb,GAAO2qB,EAQhC,OANKpW,GAIDA,EAAQkH,EAAazb,GAAOsc,IAH5B/H,EAAQ9f,KAAKi2B,qBAAqBpO,GAClC7nB,KAAK21B,aAAaz3B,KAAK4hB,IAIpBA,GAEXmW,qBAAsB,SAAUpO,GAAV,GACd5mB,GAAUjB,KAAKunB,gBAAiB,GAChCzH,EAAQ,GAAI/G,IAAU,EAAG9X,EAG7B,OAFA6e,GAAM+H,WAAaA,EACnB/H,EAAM1b,UACC0b,GAEXgR,oBAAqB,SAAU1sB,GAC3B,MAAOA,GAAO+tB,eAAiBxd,MAGnCiF,GAAwBha,EAAMC,QAC9BC,KAAM,WACFE,KAAKqJ,eAET+sB,OAAQ,SAAUC,GAAV,GAEK5oB,GACD6oB,EACA5sB,EAHJL,EAAarJ,KAAKqJ,UACtB,KAASoE,IAAY4oB,GACbC,EAAaD,EAAgB5oB,GAC7B/D,EAAQL,EAAWoE,GACvBpE,EAAWoE,GAAY/D,EAAQA,IAC3BD,IAAKuH,EACLxM,IAAKyM,GAETvH,EAAMD,IAAMlF,KAAKkF,IAAIC,EAAMD,IAAK6sB,EAAW7sB,KAC3CC,EAAMlF,IAAMD,KAAKC,IAAIkF,EAAMlF,IAAK8xB,EAAW9xB,MAGnD+xB,MAAO,SAAU9oB,GACbzN,KAAKqJ,WAAWoE,GAAY6T,QAEhCkV,MAAO,SAAU/oB,GACb,MAAOzN,MAAKqJ,WAAWoE,MAG3BoM,GAAWpI,GAAa5R,QACxBC,KAAM,SAAU22B,EAASx1B,GACrBwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAK02B,QAAU,GAAI3kB,IAAQ0kB,EAASz2B,KAAKiB,SACzCjB,KAAKmS,OAAOnS,KAAK02B,UAErB9Q,aAAc,WACV5lB,KAAK02B,QAAQz1B,QAAQ01B,OAAS32B,KAAKiB,QAAQ01B,QAE/CnS,OAAQ,SAAUC,GAAV,GACAxjB,GAAUjB,KAAKiB,QACfkJ,EAAWlJ,EAAQkJ,SACnB8gB,EAAYhqB,EAAQgqB,UACpBjsB,EAAOgB,KAAKgyB,SAAS,GACrB4E,EAAc53B,EAAKiC,QACnBE,EAAMnC,EAAKmC,IACX6uB,EAAUhxB,EAAKiC,QAAQ+uB,QACvB6G,EAAWpS,CACfmS,GAAYhJ,MAAQzjB,EAAWY,EAASE,EACxC2rB,EAAY/I,OAAS1jB,EAAWiB,EAAML,EAClC9J,EAAQ4tB,WAAa5W,GACjB9N,GACAysB,EAAY/I,OAASziB,GAChB6f,GAAa9pB,EAAItC,SAAW4lB,EAAU5lB,WACvC+3B,EAAY/I,OAAS1iB,IAGzByrB,EAAYhJ,MAAQ3C,EAAYjgB,GAAQC,EAErChK,EAAQ4tB,WAAa9jB,GAC5B6rB,EAAY/I,OAAS9iB,EACrB6rB,EAAYhJ,MAAQ7iB,GACb9J,EAAQ4tB,WAAa3W,GACxB/N,EACAysB,EAAY/I,OAAS5C,EAAY9f,EAASC,EAE1CwrB,EAAYhJ,MAAQ3C,EAAYhgB,EAAOD,GAEpC/J,EAAQ4tB,WAAa1W,KACxBhO,EAEI0sB,EADA5L,EACW,GAAIllB,IAAI0e,EAAUe,GAAIf,EAAUa,GAAKnkB,EAAItC,SAAU4lB,EAAUgB,GAAIhB,EAAUa,IAE3E,GAAIvf,IAAI0e,EAAUe,GAAIf,EAAUc,GAAId,EAAUgB,GAAIhB,EAAUc,GAAKpkB,EAAItC,WAGpF+3B,EAAYhJ,MAAQ7iB,EAEhB8rB,EADA5L,EACW,GAAIllB,IAAI0e,EAAUgB,GAAIhB,EAAUa,GAAIb,EAAUgB,GAAKtkB,EAAIvC,QAAS6lB,EAAUc,IAE1E,GAAIxf,IAAI0e,EAAUe,GAAKrkB,EAAIvC,QAAS6lB,EAAUa,GAAIb,EAAUe,GAAIf,EAAUc,MAI5FtkB,EAAQqtB,WACLnkB,EACA6lB,EAAQjC,KAAOiC,EAAQhC,OAAS6I,EAASj4B,QAAUI,EAAK4G,WAAWhH,SAAW,EAE9EoxB,EAAQ8G,IAAM9G,EAAQ+G,QAAUF,EAASh4B,SAAWG,EAAK4G,WAAW/G,UAAY,GAGxFG,EAAKwlB,OAAOqS,IAEhBG,eAAgB,SAAUpH,GAAV,GAQJnL,GAPJta,EAAWnK,KAAKiB,QAAQkJ,SACxBnH,EAAQmH,EAAWkH,GAAIC,GACvB2lB,EAAQj0B,EAAQ,IAChBqxB,EAAMrxB,EAAQ,IACdhE,EAAOgB,KAAKgyB,SAAS,GACrBkF,EAAYl3B,KAAKuwB,OAAOpvB,KACxB+1B,EAAUD,GAASrH,EAAQqH,IAAUrH,EAAQyE,GAAO6C,EAAU7C,MAC1D5P,EAAYzlB,EAAKuwB,WAAWzpB,QAChC2e,EAAUwS,GAAS1yB,KAAKC,IAAI0yB,EAAUD,GAAQrH,EAAQqH,IACtDxS,EAAU4P,GAAO9vB,KAAKkF,IAAIytB,EAAU7C,GAAMzE,EAAQyE,IAClDr0B,KAAKwkB,OAAOC,OAIxB9S,GAAkBkI,IACdgV,SAAU1W,GACV2V,OAAQ7b,GAAW,GACnB+d,QAAS/d,GAAW,GACpB7L,MAAOmL,GACP2c,WAAY,GACZC,QACIvvB,MAAO,EACPwH,MAAO,IAEX6kB,WAAW,EACX9gB,UAAU,EACVsc,WACIvf,KAAM6M,GACN2S,MAAO5S,IAEXhP,OAAQ,IAMRgV,GAAsB,EACtBC,GAAMtI,GAAa5R,QACnBC,KAAM,SAAUO,EAAOY,GACnBwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,MAC1BA,KAAKiB,QAAUA,EACfjB,KAAKoG,MAAQnF,EAAQmF,OAAS+K,GAC9BnR,KAAKirB,UAAYhnB,GAAejE,KAAKiB,QAAQgqB,WAAW,GACxDjrB,KAAKK,MAAQA,GAEjB8mB,OAAQ,WACAnnB,KAAKutB,YAGTvtB,KAAKutB,WAAY,EACjBvtB,KAAKm3B,cACLn3B,KAAK8sB,aACD9sB,KAAKkqB,UACLlqB,KAAKmS,OAAOnS,KAAKkqB,YAGzBiN,YAAa,WAAA,GAID/J,GAEIC,EALRpsB,EAAUjB,KAAKiB,QACf0M,EAAS1M,EAAQ0M,MACjBA,GAAOlC,UAEHkC,EAAO8f,UACHJ,EAAgBvb,GAAgB4b,QAAQ/f,EAAO8f,UACnDL,EAAYC,GACR/C,SAAUtqB,KAAKsqB,SACfpd,SAAUlN,KAAKkN,SACf7M,MAAOL,KAAKK,MACZ8qB,WAAYnrB,KAAKmrB,WACjBD,WAAYlrB,KAAKkrB,WACjB0B,aAAc5sB,KAAK4sB,aACnB5I,MAAOhkB,KAAKgkB,MACZ5f,OAAQpE,KAAKoE,UAGjBgpB,EAAYptB,KAAK2tB,YAAYhgB,EAAO2e,QAExCtsB,KAAKgtB,MAAQ,GAAInT,IAASuT,EAAWhrB,IAAa+H,SAAUlJ,EAAQkJ,UAAYwD,IAChF3N,KAAKmS,OAAOnS,KAAKgtB,SAGzBW,YAAa,SAAUrB,GACnB,MAAOtsB,MAAKqqB,MAAMgC,iBAAiBrsB,KAAMssB,IAE7C9H,OAAQ,SAAUC,GAAV,GAGAuI,GAUSzuB,EAZT6iB,EAASphB,IAWb,IAVAA,KAAKmnB,SACD6F,EAAQhtB,KAAKgtB,MACjBhtB,KAAKmB,IAAMsjB,EACPuI,IACAA,EAAM/rB,QAAQgqB,UAAYjrB,KAAKirB,UAC/B+B,EAAMxI,OAAOC,IAEbzkB,KAAKitB,MACLjtB,KAAKitB,KAAKzI,OAAOC,GAEjBzkB,KAAK4pB,UACL,IAASrrB,EAAI,EAAGA,EAAIyB,KAAK4pB,UAAUnrB,OAAQF,IACvC6iB,EAAOwI,UAAUrrB,GAAGimB,OAAOC,IAIvCmB,aAAc,WAAA,GASEpF,GARRY,EAASphB,KACTmmB,EAAMnmB,KACNmB,EAAMglB,EAAIhlB,IACVF,EAAUklB,EAAIllB,QACdm2B,EAAen2B,EAAQuf,MACvBxgB,MAAKyL,WAAY,IACjBgG,GAAa6S,GAAGsB,aAAarB,KAAKvkB,MAC9Bo3B,GACI5W,EAASxgB,KAAKq3B,WAAaD,GAC3BlqB,SAAUlN,KAAKkN,SACfod,SAAUtqB,KAAKsqB,SACfjqB,MAAOL,KAAKK,MACZ0lB,OAAQ/lB,KAAKgmB,YACb5hB,OAAQpE,KAAKoE,OACb+mB,WAAYnrB,KAAKmrB,WACjBD,WAAYlrB,KAAKkrB,WACjB0B,aAAc5sB,KAAK4sB,aACnB5I,MAAOhkB,KAAKgkB,MACZ6B,KAAM1kB,EAAI2kB,SACVF,aAAc,WACV,GAAIwC,GAAQ,GAAIpV,GAEhB,OADAoO,GAAOkW,WAAWlP,GACXA,GAEXnnB,QAASA,IAETuf,GACAxgB,KAAKwgB,OAAOrO,OAAOqO,IAEhBrf,EAAIvC,QAAU,GAAKuC,EAAItC,SAAW,GACzCmB,KAAKs3B,WAAWt3B,KAAKwgB,UAIjC8W,WAAY,SAAU9W,GAAV,GAMJ+W,GAYA34B,EACAC,EACAkB,EASIiF,EA5BJ/D,EAAUjB,KAAKiB,QACfktB,EAASltB,EAAQktB,OACjBqJ,EAAgB3yB,GAAQspB,EAAOI,SAAWJ,EAAOI,QAAUttB,EAAQstB,QACnE1I,EAAO7lB,KAAKmB,IAAI2kB,QACpBD,GAAK9lB,KAAKnB,MAAQ2F,KAAKiG,MAAMqb,EAAK9lB,KAAKnB,OACnC24B,EAAOv3B,KAAKq3B,WAAaxkB,GAAK8gB,SAAS9N,GACvC4O,MACIruB,MAAOpG,KAAKoG,MACZmoB,QAASttB,EAAQstB,SAErBlI,QACIjgB,MAAOpG,KAAKy3B,iBACZ74B,MAAOuvB,EAAOvvB,MACd2vB,QAASiJ,EACTlR,SAAU6H,EAAO7H,YAGrB1nB,EAAQoB,KAAKmB,IAAIvC,QACjBC,EAASmB,KAAKmB,IAAItC,SAClBkB,EAAOkB,EAAQkJ,SAAWvL,EAAQC,EAClCkB,EAAO+Z,KACPpI,GAAiB6lB,IACb34B,EAAQ,GAAKC,EAAS,KACtB04B,EAAKt2B,QAAQolB,OAAOqR,SAAW,UAGvClX,EAAOrO,OAAOolB,GACVxyB,EAAmB9D,KACf+D,EAAUhF,KAAK23B,sBAAsBJ,GAAQK,UAAW53B,KAAKoG,OAAShE,IACtEiyB,IAAMpzB,EAAQkJ,SAGVmX,QAFA,EACA,IAELrgB,EAAQ+D,UACXwb,EAAOrO,OAAOnN,KAGtB+pB,gBAAiB,SAAU9vB,GACvB,GAAI+vB,GAAYnc,GAAK8gB,SAAS3zB,KAAKmB,IAAI2kB,SAAU7mB,EACjD,OAAOyS,IAAiBsd,IAE5BI,gBAAiB,WACb,MAAOpvB,MAAKq3B,YAEhBhI,oBAAqB,WACjB,OACIpuB,QAASjB,KAAKiB,QACd4kB,KAAM7lB,KAAKmB,IAAI2kB,SACftF,OAAQxgB,KAAKq3B,aAGrBI,eAAgB,WAAA,GACRrxB,GAAQpG,KAAKoG,MACb+nB,EAASnuB,KAAKiB,QAAQktB,OACtBC,EAAaD,EAAO0J,aAAe5jB,GACnC6jB,EAAc3J,EAAO/nB,KAIzB,OAHKvB,IAAQizB,KACTA,EAAc,GAAI7kB,IAAM7M,GAAOgoB,WAAWA,GAAYC,SAEnDyJ,GAEXrI,cAAe,WAAA,GAQPljB,GAAGC,EAUCgZ,EACAC,EAlBJU,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdE,EAAMglB,EAAIhlB,IACV8pB,EAAY9E,EAAI8E,UAChB2E,EAAU5vB,KAAKqqB,MAAMpkB,KAAK2pB,WAAazuB,EACvCuuB,EAAkBzkB,EAClB0kB,EAAgBvkB,CAgCpB,OA9BInK,GAAQkJ,UACRoC,EAAIhI,KAAKkF,IAAItI,EAAIskB,GAAImK,EAAQnK,IAAMvR,GAC/B+W,EACAze,EAAIjI,KAAKC,IAAIrD,EAAImkB,GAAIsK,EAAQtK,KAE7B9Y,EAAIjI,KAAKkF,IAAItI,EAAIokB,GAAIqK,EAAQrK,IAC7BoK,EAAgBxkB,KAGhBqa,EAAKjhB,KAAKC,IAAIrD,EAAIqkB,GAAIoK,EAAQpK,IAC9BC,EAAKlhB,KAAKkF,IAAItI,EAAIskB,GAAImK,EAAQnK,IAC9BxkB,EAAQ4nB,WACR8G,EAAgBxkB,EACZ8f,GACAyE,EAAkB1kB,GAClBuB,EAAIkZ,GAEJlZ,EAAIiZ,EAERhZ,EAAIjI,KAAKC,IAAIrD,EAAImkB,GAAIsK,EAAQtK,IAAMpR,KAE/B+W,EACA1e,EAAIkZ,EAAKvR,IAET3H,EAAIiZ,EAAKtR,GACTwb,EAAkB1kB,IAEtBwB,EAAIjI,KAAKC,IAAIrD,EAAImkB,GAAIsK,EAAQtK,OAIjCxF,MAAO,GAAIpT,IAAMH,EAAGC,GACpBohB,OACI1jB,WAAYwlB,EACZvlB,SAAUwlB,KAItBI,YAAa,SAAU5uB,GACnB,MAAOnB,MAAKmB,IAAI2uB,SAAS3uB,MAGjCiB,GAAW2X,GAAI2N,UAAW/O,IAC1BvW,GAAW2X,GAAI2N,UAAW9O,IAC1BmB,GAAI2N,UAAUnkB,UACV4qB,QAAUvvB,MAAO,GACjBuL,UAAU,EACVnF,SAAWC,SAAU,SACrB0I,QACIlC,SAAS,EACT6gB,OAAQ,OAEZiC,QAAS,EACTxB,OAASC,WAEThT,GAAgBvI,GAAa5R,QAC7B2kB,OAAQ,SAAUrjB,GAAV,GAWK5C,GACDmwB,EAXJvI,EAAMnmB,KAAKiB,QACXkJ,EAAWgc,EAAIhc,SACf4tB,EAAM5R,EAAI4R,IACVC,EAAU7R,EAAI6R,QACdhG,EAAWhyB,KAAKgyB,SAChBnvB,EAAQmvB,EAASvzB,OACjB4J,EAAO8B,EAAWkH,GAAIC,GACtB2mB,EAAQp1B,EAAQk1B,EAAMC,GAAWn1B,EAAQ,GACzCq1B,GAAY/tB,EAAWhJ,EAAItC,SAAWsC,EAAIvC,SAAWq5B,EACrDpJ,EAAW1tB,EAAIkH,EAAO,GAAK6vB,GAAYH,EAAM,EACjD,KAASx5B,EAAI,EAAGA,EAAIsE,EAAOtE,IACnBmwB,GAAYsD,EAASzzB,GAAG4C,KAAOA,GAAK2E,QACxC4oB,EAASrmB,EAAO,GAAKwmB,EACrBH,EAASrmB,EAAO,GAAKwmB,EAAWqJ,EAChClG,EAASzzB,GAAGimB,OAAOkK,GACfnwB,EAAIsE,EAAQ,IACZgsB,GAAYqJ,EAAWF,GAE3BnJ,GAAYqJ,KAIxBvmB,GAAkBqI,IACd7P,UAAU,EACV4tB,IAAK,EACLC,QAAS,IAET/d,GAAYxI,GAAa5R,QACzB2kB,OAAQ,SAAUC,GAAV,GAMKlmB,GACD45B,EAEIzJ,EARRtN,EAASphB,KACTo4B,EAAep4B,KAAKiB,QAAQkJ,SAAWmH,GAAID,GAC3C2gB,EAAWhyB,KAAKgyB,SAChBqG,EAAgBrG,EAASvzB,OACzB0C,EAAMnB,KAAKmB,IAAM,GAAI4E,GACzB,KAASxH,EAAI,EAAGA,EAAI85B,EAAe95B,IAC3B45B,EAAenG,EAASzzB,GACxB45B,EAAa1sB,WAAY,IACrBijB,EAAWyJ,EAAah3B,IAAI2E,QAChC4oB,EAAS4J,OAAO7T,EAAW2T,GACjB,IAAN75B,IACA4C,EAAMigB,EAAOjgB,IAAMutB,EAAS5oB,SAEhCqyB,EAAa3T,OAAOkK,GACpBvtB,EAAI0E,KAAK6oB,OAKzB/c,GAAkBsI,IAAa9P,UAAU,IACrC+P,GAAWxB,GAAiB7Y,QAC5BsnB,OAAQ,WACJzO,GAAiB4L,GAAG6C,OAAO5C,KAAKvkB,MAChCA,KAAKopB,oBAET3B,UAAW,WACP,MAAO1N,KAEXwe,YAAa,WACT,MAAOve,KAEXwe,UAAW,WACP,MAAOve,KAEX+O,YAAa,SAAUvb,EAAUwb,GAC7B,GAAII,GAAS3Q,GAAiB4L,GAAG0E,YAAYzE,KAAKvkB,KAAMyN,EAAUwb,EAClE,OAAOI,IAEXe,YAAa,SAAU3lB,EAAM6G,GAAhB,GAkBLlF,GAQAqhB,EACA3H,EAEA2Y,EAEIF,EASAG,EAvCJ7Q,EAAavc,EAAOuc,WACpB3a,EAAW5B,EAAO4B,SAClB9I,EAASkH,EAAOlH,OAChBojB,EAAWlc,EAAOkc,SAClBrB,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACd+wB,EAAW7L,EAAI6L,SACfnJ,EAAY5nB,EAAQ4nB,UACpBxoB,EAAQL,KAAK2jB,WAAWlf,GACxB8iB,EAAevnB,KAAKunB,aAAanjB,EAAQojB,GACzCmR,EAAepR,EAAa5Z,MAkChC,OAjCIkb,IACI8P,EAAa9J,WAAa1W,KAC1BwgB,EAAa9J,SAAW5W,IAGhCsP,EAAasB,UAAYA,EACrBziB,EAAQ3B,EAAK6G,OAAOlF,OAAShC,EAAOgC,MACpC/F,EAAQ,GAAKknB,EAAaqR,gBAC1BxyB,EAAQmhB,EAAaqR,eAEzBrR,EAAevnB,KAAKwqB,iBAAiBjD,EAAclnB,EAAO6M,EAAU2a,EAAYzjB,EAAQojB,GACpFxjB,GAAWI,EAAOgC,SAClBA,EAAQmhB,EAAanhB,OAErBqhB,EAAYznB,KAAKynB,YACjB3H,EAAQ,GAAI2H,GAAUpnB,EAAOknB,GACjCzH,EAAM1Z,MAAQA,EACVqyB,EAAUzG,EAASnK,GAClB4Q,IACGF,EAAcv4B,KAAKu4B,cACvBE,EAAU,GAAIF,IACVpuB,SAAUlJ,EAAQ0mB,WAClBoQ,IAAK92B,EAAQ82B,IACbC,QAAS/2B,EAAQ+2B,UAErBh4B,KAAKmS,OAAOsmB,IAEZ5P,GACI6P,EAAY14B,KAAK64B,aAAaz0B,EAAQq0B,GAC1CC,EAAUvmB,OAAO2N,IAEjB2Y,EAAQtmB,OAAO2N,GAEZA,GAEX+Y,aAAc,SAAUz0B,EAAQq0B,GAAlB,GAINC,GAESn6B,EAULi6B,EAfJvQ,EAAQ7jB,EAAO6jB,MACf6Q,EAAa7Q,EAAQA,EAAMG,OAASH,EAAQA,EAC5C8Q,EAAQN,EAAQzG,QAEpB,UAAW8G,KAAe/nB,EAAiB+X,QACvC,IAASvqB,EAAI,EAAGA,EAAIw6B,EAAMt6B,OAAQF,IAC9B,GAAIw6B,EAAMx6B,GAAGy6B,cAAgBF,EAAY,CACrCJ,EAAYK,EAAMx6B,EAClB,YAIRm6B,GAAYK,EAAM,EAQtB,OANKL,KACGF,EAAYx4B,KAAKw4B,YACrBE,EAAY,GAAIF,IAAYruB,UAAWnK,KAAKiB,QAAQ0mB,aACpD+Q,EAAUM,YAAcF,EACxBL,EAAQtmB,OAAOumB,IAEZA,GAEX3N,aAAc,SAAUtiB,EAAcof,EAAYc,GAApC,GAKFsQ,GACAC,EALJj4B,EAAUjB,KAAKiB,QACf8pB,EAAetiB,EAAaqc,QAAQ+C,GACpCS,EAAaK,EAAUL,YAM3B,OALIrnB,GAAQ4nB,YACJoQ,EAAWtQ,EAAU7D,QAAQwD,EAAYA,GAAY,GACrD4Q,EAAYj4B,EAAQ0mB,WAAarW,GAAID,GACzC0Z,EAAamO,EAAY,GAAKnO,EAAamO,EAAY,GAAKD,EAASC,EAAY,IAE9EnO,GAEXM,iBAAkB,SAAUV,GAAV,GAGLpsB,GAFLyzB,EAAWhyB,KAAKgyB,SAChBmH,EAAiBnH,EAASvzB,MAC9B,KAASF,EAAI,EAAGA,EAAI46B,EAAgB56B,IAChCyzB,EAASzzB,GAAGimB,OAAOmG,EAAcpsB,KAGzC+0B,gBAAiB,WACbtzB,KAAKo5B,uBACL1gB,GAAiB4L,GAAGgP,gBAAgB/O,KAAKvkB,MACrC0E,EAAa1E,KAAKiB,QAAQmD,SAC1BpE,KAAK4zB,yBAGbA,sBAAuB,WAAA,GAGVhvB,GACDkb,EACAuZ,EAJJjY,EAASphB,KACTiN,EAASjN,KAAKiN,MAClB,KAASrI,EAAM,EAAGA,EAAMqI,EAAOxO,OAAQmG,IAC/Bkb,EAAQ7S,EAAOrI,GACfy0B,EAAcvZ,EAAMU,OACpB6Y,GAAex0B,GAAQw0B,EAAYp4B,QAAQ6D,UAC3Cgb,EAAM7e,QAAQwlB,UAAYrF,EAAOngB,QAAQwlB,UACzC3G,EAAMwT,oBAIlB8F,qBAAsB,WAAA,GAGdE,GAEI3Q,EAJJ1nB,EAAUjB,KAAKiB,QACfwlB,EAAYxlB,EAAQwlB,aAEpBxlB,GAAQ4nB,WACJF,EAAY3oB,KAAK2mB,gBAAgB1lB,EAAQmD,OAAO,IACpDk1B,EAAS3Q,EAAU7D,QAAQ6D,EAAUL,eAErCgR,EAASt5B,KAAKyI,aAAaqc,QAAQ,GAEvC2B,EAAU6S,OAAS,GAAInmB,IAAcmmB,EAAO9T,GAAI8T,EAAOhU,IACvDmB,EAAUtc,UAAYlJ,EAAQ0mB,cAGtChW,GAAkBuI,IAAYuM,WAAavf,KAAM+N,MAC7CkF,GAAc1I,GAAa5R,QAC3BC,KAAM,SAAUO,EAAOY,GACnBwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKK,MAAQA,GAEjBmkB,OAAQ,SAAUrjB,GAAV,GAWAo4B,GACAtsB,EAXAkZ,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdZ,EAAQ8lB,EAAI9lB,MACZgkB,EAAQ8B,EAAIkE,MACZ1B,EAAYtE,EAAMsC,gBAAgB1lB,GAClCu4B,EAAS7Q,EAAU7D,QAAQzkB,EAAMo5B,KAAMp5B,EAAM+vB,OAC7CsJ,EAAS/Q,EAAU7D,QAAQzkB,EAAM+iB,IAAK/iB,EAAMgjB,KAChDmW,GAAOhU,GAAKkU,EAAOlU,GAAKrkB,EAAIqkB,GAC5BgU,EAAO/T,GAAKiU,EAAOjU,GAAKtkB,EAAIskB,GAC5BzlB,KAAK25B,SAAWH,EACZD,EAAMG,EAAO1U,SAASzY,EACtBU,KACJA,EAAO/O,OAECq7B,EACAG,EAAOpU,KAGPiU,EACAC,EAAOlU,MAGfrY,EAAO/O,OAECq7B,EACAC,EAAOjU,KAGPgU,EACAG,EAAOnU,MAGfvlB,KAAK45B,MAAQ3sB,EACbjN,KAAKmB,IAAMu4B,EAAO5zB,QAAQD,KAAK2zB,GAC1Bx5B,KAAKutB,YACNvtB,KAAKutB,WAAY,EACjBvtB,KAAK8sB,cAET9sB,KAAK65B,cAETA,WAAY,WACJ75B,KAAKitB,MACLjtB,KAAKitB,KAAKzI,OAAOxkB,KAAKmB,MAG9BykB,aAAc,WACVnU,GAAa6S,GAAGsB,aAAarB,KAAKvkB,MAClCA,KAAK85B,YAAc95B,KAAK+5B,WAAW/5B,KAAKiB,SACxCjB,KAAKwgB,OAAOrO,OAAOnS,KAAK85B,aACxB95B,KAAKg6B,iBAETD,WAAY,SAAU94B,GAClB,GAAImnB,GAAQ,GAAIpV,GAGhB,OAFAhT,MAAKi6B,WAAW7R,EAAOnnB,GACvBjB,KAAKk6B,YAAY9R,EAAOnnB,GACjBmnB,GAEX6R,WAAY,SAAUE,EAAWl5B,GAC7B,GAAIW,GAAOiR,GAAK8gB,SAAS3zB,KAAK25B,SAAS7T,UACnC2O,MACIruB,MAAOpG,KAAKoG,MACZmoB,QAASttB,EAAQstB,SAErBlI,OAAQ,MAERplB,GAAQktB,OAAOvvB,MAAQ,GACvBgD,EAAKX,QAAQm5B,IAAI,UACbh0B,MAAOpG,KAAKy3B,iBACZ74B,MAAOqC,EAAQktB,OAAOvvB,MACtB0nB,SAAUrlB,EAAQktB,OAAO7H,SACzBiI,QAAStqB,GAAehD,EAAQktB,OAAOI,QAASttB,EAAQstB,WAGhE7c,GAAiB9P,GACjBu4B,EAAUhoB,OAAOvQ,GACbmD,EAAmB9D,IACnBk5B,EAAUhoB,OAAOnS,KAAK23B,sBAAsB/1B,GAAQg2B,UAAW53B,KAAKoG,OAAShE,IACzEiyB,IAAMpzB,EAAQkJ,SAGVmX,QAFA,EACA,IAELrgB,EAAQ+D,YAGnBk1B,YAAa,SAAUC,EAAWl5B,GAC9BjB,KAAKq6B,UAAUF,EAAWl5B,EAASjB,KAAK45B,MAAO34B,EAAQyM,OAE3D2sB,UAAW,SAAUF,EAAWl5B,EAAS24B,EAAOxT,GAArC,GAIHkU,GASK/7B,EACDmP,CAbR,IAAKksB,EAYL,IATIU,GACAjU,QACIjgB,MAAOggB,EAAYhgB,OAASpG,KAAKoG,MACjCmoB,QAAStqB,GAAemiB,EAAYmI,QAASttB,EAAQstB,SACrD3vB,MAAOwnB,EAAYxnB,MACnB0nB,SAAUF,EAAYE,SACtBkO,QAAS,SAGRj2B,EAAI,EAAGA,EAAIq7B,EAAMn7B,OAAQF,IAC1BmP,EAAOmF,GAAKqd,WAAW0J,EAAMr7B,GAAI+7B,GACrC5oB,GAAiBhE,GACjBysB,EAAUhoB,OAAOzE,IAGzB+pB,eAAgB,WAAA,GACRtJ,GAASnuB,KAAKiB,QAAQktB,OACtB2J,EAAc3J,EAAO/nB,KAIzB,OAHKvB,IAAQizB,KACTA,EAAc,GAAI7kB,IAAMjT,KAAKoG,OAAOgoB,WAAWD,EAAO0J,aAAaxJ,SAEhEyJ,GAEXkC,cAAe,WACX,GAAIh1B,GAAU6N,GAAK8gB,SAAS3zB,KAAKmB,IAAI2kB,UACjC2O,MACIruB,MAAO+K,GACPod,QAAS,GAEblI,OAAQ,MAEZrmB,MAAKwgB,OAAOrO,OAAOnN,IAEvB+pB,gBAAiB,WAAA,GAIT/pB,GAHAgqB,EAAYhvB,KAAKiB,QAAQ+tB,UACzBuL,EAAcv6B,KAAKoG,KAIvB,OAHApG,MAAKoG,MAAQ4oB,EAAU5oB,OAASpG,KAAKoG,MACjCpB,EAAUhF,KAAK+5B,WAAW33B,MAAepC,KAAKiB,SAAWyM,MAAQtH,MAAOpG,KAAKy3B,mBAAsBzI,IACvGhvB,KAAKoG,MAAQm0B,EACNv1B,GAEXoqB,gBAAiB,WACb,MAAOpvB,MAAK85B,aAEhBzK,oBAAqB,WACjB,OACIpuB,QAASjB,KAAKiB,QACd4kB,KAAM7lB,KAAKmB,IAAI2kB,SACftF,OAAQxgB,KAAK85B,cAGrBrK,cAAe,WAAA,GACPtuB,GAAMnB,KAAKmB,IACXyuB,EAAU5vB,KAAKqqB,MAAMpkB,KAAK2pB,WAAazuB,CAC3C,QACI2e,MAAO,GAAIpT,IAAMvL,EAAIskB,GAAKvR,GAAgB3P,KAAKC,IAAIrD,EAAImkB,GAAIsK,EAAQtK,IAAMpR,IACzE0Z,OACI1jB,WAAYe,EACZd,SAAUiB,KAItBuiB,YAAa,SAAUrB,GACnB,MAAOtsB,MAAKqqB,MAAMgC,iBAAiBrsB,KAAMssB,IAE7CyD,YAAa,SAAU5uB,GACnB,MAAOnB,MAAKmB,IAAI2uB,SAAS3uB,MAGjCwQ,GAAkBwI,IACdhQ,UAAU,EACVgkB,QAAU0J,YAAa,IACvBnqB,MAAQ9O,MAAO,GACfoG,SAAWC,SAAU,SACrBqJ,SAAWge,OAAQ,0MACnB0C,WACIT,QAAS,EACTJ,QACIvvB,MAAO,EACP2vB,QAAS,GAEb7gB,MACI9O,MAAO,EACP2vB,QAAS,IAGjBxB,OACIthB,SAAS,EACTuhB,YAGR5qB,GAAW+X,GAAYuN,UAAW/O,IAClCvW,GAAW+X,GAAYuN,UAAW9O,IAI9BwB,GAAmB1B,GAAiB7Y,QACpCwrB,iBAAkB,SAAUV,GAAV,GAGLpsB,GAFLyzB,EAAWhyB,KAAKgyB,SAChBmH,EAAiBnH,EAASvzB,MAC9B,KAASF,EAAI,EAAGA,EAAI46B,EAAgB56B,IAChCyzB,EAASzzB,GAAGimB,OAAOmG,EAAcpsB,KAGzC8oB,SAAU,SAAU5iB,EAAM6G,GAAhB,GAaFwU,GAOA2Y,EAnBA5Q,EAAavc,EAAOuc,WACpB3a,EAAW5B,EAAO4B,SAClB9I,EAASkH,EAAOlH,OAChBojB,EAAWlc,EAAOkc,SAClBrB,EAAMnmB,KACNgyB,EAAW7L,EAAI6L,SACf/wB,EAAUklB,EAAIllB,QACdZ,EAAQoE,EAAKsH,YACbyuB,EAAax6B,KAAKy6B,WAAWp6B,GAC7B8E,EAAWD,EAAWs1B,GACtBlQ,EAAWlmB,EAAOK,KAAKojB,GACvBd,EAAiB/mB,KAAK+mB,eAAec,EAEpCd,KACD/mB,KAAK+mB,eAAec,GAAcd,MAElC5hB,IACA2a,EAAQ9f,KAAKoqB,YAAY3lB,EAAM6G,IAE/BmtB,EAAUzG,EAASnK,GAClB4Q,IACDA,EAAU,GAAIze,KACV7P,SAAUlJ,EAAQ0mB,WAClBoQ,IAAK92B,EAAQ82B,IACbC,QAAS/2B,EAAQ+2B,UAErBh4B,KAAKmS,OAAOsmB,IAEZ3Y,IACA9f,KAAKmqB,YAAY9pB,EAAOiL,GACxBmtB,EAAQtmB,OAAO2N,GACfA,EAAM+H,WAAaA,EACnB/H,EAAM5S,SAAWA,EACjB4S,EAAM1b,OAASA,EACf0b,EAAM0H,SAAWA,EACjB1H,EAAMuK,MAAQrqB,KACd8f,EAAMwK,SAAWA,EACjBxK,EAAMyK,SAAW9lB,EAAK6G,OAAOif,UAEjCvqB,KAAKiN,OAAO/O,KAAK4hB,GACjBiH,EAAe7oB,KAAK4hB,IAExB2H,UAAW,WACP,MAAOtN,KAEXiQ,YAAa,SAAU3lB,EAAM6G,GAAhB,GAmBLwU,GAlBA+H,EAAavc,EAAOuc,WACpB3a,EAAW5B,EAAO4B,SAClB9I,EAASkH,EAAOlH,OAChBojB,EAAWlc,EAAOkc,SAClBC,EAAYznB,KAAKynB,YACjBpnB,EAAQoE,EAAKsH,YACbwb,EAAenlB,MAAegC,GAC9BgC,EAAQ3B,EAAK6G,OAAOlF,OAAShC,EAAOgC,KAaxC,OAZAmhB,GAAevnB,KAAKwqB,iBAAiBjD,EAAclnB,EAAO6M,EAAU2a,EAAYzjB,EAAQojB,GACpFpjB,EAAO8C,OAASmO,IACZhV,EAAMo5B,KAAOp5B,EAAM+vB,QACnBhqB,EAAQ3B,EAAK6G,OAAOovB,WAAat2B,EAAOs2B,WAAat2B,EAAOgC,OAGhEpC,GAAWI,EAAOgC,SAClBA,EAAQmhB,EAAanhB,OAEzBmhB,EAAapd,UAAYnK,KAAKiB,QAAQ0mB,WAClC7H,EAAQ,GAAI2H,GAAUpnB,EAAOknB,GACjCzH,EAAM1Z,MAAQA,EACP0Z,GAEX2a,WAAY,SAAUp6B,GAClB,OACIA,EAAM+iB,IACN/iB,EAAMo5B,KACNp5B,EAAM+vB,MACN/vB,EAAMgjB,OAGd8G,YAAa,SAAU9pB,EAAOiL,GAAjB,GACLmC,GAAWnC,EAAOlH,OAAOiE,KACzBpK,EAAQ+B,KAAKy6B,WAAWp6B,GACxBiJ,EAAYtJ,KAAK8mB,gBAAgBrZ,EACrCnE,GAAYtJ,KAAK8mB,gBAAgBrZ,GAAYnE,IACzCG,IAAKuH,EACLxM,IAAKyM,GAET3H,EAAYtJ,KAAK8mB,gBAAgBrZ,IAC7BhE,IAAKlF,KAAKkF,IAAI8nB,MAAMhtB,KAAMtG,EAAMgJ,QAAQqC,EAAUG,OAClDjF,IAAKD,KAAKC,IAAI+sB,MAAMhtB,KAAMtG,EAAMgJ,QAAQqC,EAAU9E,SAG1D6nB,iBAAkB,SAAUvM,EAAOwM,GAC/B,GAAIjsB,GAAQyf,EAAMzf,KAClB,OAAOL,MAAK4mB,aAAa0F,OAAOC,KAAKD,EAAQjsB,EAAMo5B,KAAMp5B,EAAMgjB,KAAMhjB,EAAM+iB,IAAK/iB,EAAM+vB,MAAOtQ,EAAM5S,WAEvG2mB,gBAAiB,WACb,MAAO7zB,MAAKiN,UAGpB7K,GAAWgY,GAAiBsN,UAAWrO,IACnCgB,GAAUF,GAAYta,QACtBC,KAAM,SAAUO,EAAOY,GACnBkZ,GAAYmK,GAAGxkB,KAAKykB,KAAKvkB,KAAMK,EAAOY,GACtCjB,KAAK8sB,cAETtI,OAAQ,SAAUrjB,GAAV,GAMAw5B,GAAaC,EAMbC,EAEIC,EAbJ3U,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdZ,EAAQ8lB,EAAI9lB,MACZgkB,EAAQ8B,EAAIkE,MACZ1B,EAAYtE,EAAMsC,gBAAgB1lB,EAEtCjB,MAAK46B,QAAUA,EAAUjS,EAAU7D,QAAQzkB,EAAM06B,GAAI16B,EAAM26B,IAC3Dh7B,KAAK25B,SAAWiB,EAChB56B,KAAKi7B,cAAc95B,GACnBnB,KAAK26B,YAAcA,EAAchS,EAAU7D,QAAQzkB,EAAM66B,MAAO76B,EAAM86B,OACtEn7B,KAAKo7B,kBAAkBj6B,GACnB05B,EAAalS,EAAU7D,QAAQzkB,EAAMg7B,QACrCh7B,EAAMi7B,OACFR,EAAWnS,EAAU7D,QAAQzkB,EAAMi7B,MACvCt7B,KAAKu7B,WAAav7B,KAAKw7B,eAAer6B,EAAK25B,IAE/C96B,KAAKy7B,cAAgBz7B,KAAK07B,kBAAkBd,EAASD,GACrD36B,KAAK27B,aAAe37B,KAAK47B,iBAAiBz6B,EAAK05B,GAC/C76B,KAAKmB,IAAMw5B,EAAY70B,QAAQD,KAAK+0B,GACpC56B,KAAK65B,cAEToB,cAAe,SAAU95B,GACrBnB,KAAK46B,QAAQpV,GAAKrkB,EAAIqkB,GACtBxlB,KAAK46B,QAAQnV,GAAKtkB,EAAIskB,IAE1B2V,kBAAmB,SAAUj6B,GACzBnB,KAAK26B,YAAYnV,GAAKrkB,EAAIqkB,GAC1BxlB,KAAK26B,YAAYlV,GAAKtkB,EAAIskB,IAE9B+V,eAAgB,SAAUr6B,EAAK25B,GAC3B,SAEY35B,EAAIqkB,GACJsV,EAASxV,KAGTnkB,EAAIskB,GACJqV,EAASxV,OAIzBoW,kBAAmB,SAAUd,EAASD,GAClC,GAAIpB,GAAMoB,EAAY3V,SAASzY,CAC/B,UAGYgtB,EAAM,EACNoB,EAAYrV,KAGZiU,EAAM,EACNoB,EAAYrV,KAGZiU,EACAoB,EAAYrV,KAGZiU,EACAqB,EAAQtV,OAKRiU,EAAM,EACNoB,EAAYpV,KAGZgU,EAAM,EACNoB,EAAYpV,KAGZgU,EACAoB,EAAYpV,KAGZgU,EACAqB,EAAQrV,OAKxBqW,iBAAkB,SAAUz6B,EAAK05B,GAC7B,SAEY15B,EAAIqkB,GACJqV,EAAWvV,KAGXnkB,EAAIskB,GACJoV,EAAWvV,OAI3BuW,eAAgB,SAAU56B,GAAV,GAOH1C,GACDu9B,EAMAC,EAQAC,EArBJ5a,EAASphB,KACTK,EAAQL,KAAKK,MACb47B,EAAW57B,EAAM47B,aACjBC,EAA6C,EAAhC33B,KAAKsG,IAAIxK,EAAM26B,GAAK36B,EAAM06B,IACvCp2B,KACA2oB,EAAUrsB,EAAQqsB,WACtB,KAAS/uB,EAAI,EAAGA,EAAI09B,EAASx9B,OAAQF,IAC7Bu9B,EAAeG,EAAS19B,GAExB+uB,EADAwO,EAAez7B,EAAM26B,GAAKkB,GAAcJ,EAAez7B,EAAM06B,GAAKmB,EACxDj7B,EAAQg7B,SAERh7B,EAAQk7B,SAElBJ,EAAgB35B,MAAekrB,EAAQa,QACtCtpB,GAAQk3B,EAAc31B,SAEnB21B,EAAc31B,MADdvB,GAAQuc,EAAOhb,OACOgb,EAAOhb,MAEP,GAAI6M,IAAMqa,EAAQY,YAAYE,WAAWna,IAAmBoa,SAGtF2N,EAAQ,GAAIhqB,KACZ9K,KAAMomB,EAAQpmB,KACdtI,MAAO0uB,EAAQvtB,KACflB,OAAQyuB,EAAQvtB,KAChBuuB,SAAUhB,EAAQgB,SAClBJ,WAAYZ,EAAQY,WACpBC,OAAQ4N,EACRxN,QAASjB,EAAQiB,UAErByN,EAAM37B,MAAQy7B,EACdn3B,EAASzG,KAAK89B,EAGlB,OADAh8B,MAAKo8B,eAAez3B,GACbA,GAEXy3B,eAAgB,SAAUH,GAAV,GAIH19B,GACDu9B,EACAtN,EALJpN,EAASphB,KACT2oB,EAAY3oB,KAAKqqB,MAAM1D,gBAAgB3mB,KAAKiB,SAC5C+jB,EAAShlB,KAAKmB,IAAI6jB,QACtB,KAASzmB,EAAI,EAAGA,EAAI09B,EAASx9B,OAAQF,IAC7Bu9B,EAAeG,EAAS19B,GAAG8B,MAC3BmuB,EAAY7F,EAAU7D,QAAQgX,GAC9B1a,EAAOngB,QAAQkJ,SACfqkB,EAAU6N,KAAKrX,EAAOzY,GAEtBiiB,EAAU6N,KAAK/a,OAAW0D,EAAOxY,GAErC4U,EAAOjgB,IAAMigB,EAAOjgB,IAAI0E,KAAK2oB,GAC7ByN,EAAS19B,GAAGimB,OAAOgK,IAG3BuL,WAAY,SAAU94B,GAAV,GAGC1C,GACDwJ,EAHJqgB,EAAQjO,GAAYmK,GAAGyV,WAAWxV,KAAKvkB,KAAMiB,GAC7Cg7B,EAAWj8B,KAAK67B,eAAe56B,EACnC,KAAS1C,EAAI,EAAGA,EAAI09B,EAASx9B,OAAQF,IAC7BwJ,EAAUk0B,EAAS19B,GAAG4wB,aACtBpnB,GACAqgB,EAAMjW,OAAOpK,EAGrB,OAAOqgB,IAEX8R,YAAa,SAAUC,EAAWl5B,GAC9BjB,KAAKq6B,UAAUF,EAAWl5B,EAASjB,KAAKy7B,cAAex6B,EAAQq7B,UAC/Dt8B,KAAKq6B,UAAUF,EAAWl5B,EAASjB,KAAK27B,aAAc16B,EAAQo6B,QAC9Dr7B,KAAKq6B,UAAUF,EAAWl5B,EAASjB,KAAKu7B,WAAYt6B,EAAQq6B,OAEhE7D,eAAgB,WACZ,MAAIz3B,MAAKoG,MACEpG,KAAKoG,MAET+T,GAAYmK,GAAGmT,eAAelT,KAAKvkB,SAGlD2R,GAAkB0I,IACd8T,QAAU0J,YAAa,IACvBnqB,MAAQ9O,MAAO,GACfy8B,QAAUj1B,MAAO,WACjBk1B,MACI18B,MAAO,EACP0nB,SAAU,OACVlgB,MAAO,WAEXpB,SAAWC,SAAU,SACrBqJ,SAAWge,OAAQ,oRACnB0C,WACIT,QAAS,EACTJ,QACIvvB,MAAO,EACP2vB,QAAS,GAEb7gB,MACI9O,MAAO,EACP2vB,QAAS,IAGjBxB,OACIthB,SAAS,EACTuhB,UAEJiP,UACIxwB,SAAS,EACT1L,KAAM2U,GACNxN,KAAM6J,EAAiBwrB,MACvBrO,WAAY/c,GACZgd,QACIvvB,MAAO,EACP2vB,QAAS,GAEbA,QAAS,GAEb4N,UACI1wB,SAAS,EACT1L,KAAM2U,GACNxN,KAAMkK,GACN8c,WAAY/c,GACZgd,QACIvvB,MAAO,EACP2vB,QAAS,GAEbA,QAAS,KAGjBnsB,GAAWiY,GAAQqN,UAAW/O,IAC1B2B,GAAkBD,GAAQxa,QAC1Bo7B,cAAe,SAAU95B,GACrBnB,KAAK46B,QAAQtV,GAAKnkB,EAAImkB,GACtBtlB,KAAK46B,QAAQrV,GAAKpkB,EAAIokB,IAE1B6V,kBAAmB,SAAUj6B,GACzBnB,KAAK26B,YAAYrV,GAAKnkB,EAAImkB,GAC1BtlB,KAAK26B,YAAYpV,GAAKpkB,EAAIokB,IAE9BiW,eAAgB,SAAUr6B,EAAK25B,GAC3B,SAEYA,EAAStV,GACTrkB,EAAImkB,KAGJwV,EAAStV,GACTrkB,EAAIokB,OAIpBmW,kBAAmB,SAAUd,EAASD,GAClC,GAAIpB,GAAMoB,EAAY3V,SAASxY,CAC/B,UAGYmuB,EAAYnV,GACZ+T,EAAM,IAGNoB,EAAYnV,GACZ+T,EAAM,IAGNoB,EAAYnV,GACZ+T,IAGAqB,EAAQpV,GACR+T,MAKAoB,EAAYlV,GACZ8T,EAAM,IAGNoB,EAAYlV,GACZ8T,EAAM,IAGNoB,EAAYlV,GACZ8T,IAGAqB,EAAQnV,GACR8T,MAKhBqC,iBAAkB,SAAUz6B,EAAK05B,GAC7B,SAEYA,EAAWrV,GACXrkB,EAAImkB,KAGJuV,EAAWrV,GACXrkB,EAAIokB,SAKpBhL,GAAeH,GAAiBva,QAChCwnB,SAAU,SAAU5iB,EAAM6G,GAAhB,GAaFwU,GAOA2Y,EAnBA5Q,EAAavc,EAAOuc,WACpB3a,EAAW5B,EAAO4B,SAClB9I,EAASkH,EAAOlH,OAChBojB,EAAWlc,EAAOkc,SAClBrB,EAAMnmB,KACNgyB,EAAW7L,EAAI6L,SACf/wB,EAAUklB,EAAIllB,QACdZ,EAAQoE,EAAKsH,YACbyuB,EAAax6B,KAAKy6B,WAAWp6B,GAC7B8E,EAAWD,EAAWs1B,GACtBlQ,EAAWlmB,EAAOK,KAAKojB,GACvBd,EAAiB/mB,KAAK+mB,eAAec,EAEpCd,KACD/mB,KAAK+mB,eAAec,GAAcd,MAElC5hB,IACA2a,EAAQ9f,KAAKoqB,YAAY3lB,EAAM6G,IAE/BmtB,EAAUzG,EAASnK,GAClB4Q,IACDA,EAAU,GAAIze,KACV7P,SAAUlJ,EAAQ0mB,WAClBoQ,IAAK92B,EAAQ82B,IACbC,QAAS/2B,EAAQ+2B,UAErBh4B,KAAKmS,OAAOsmB,IAEZ3Y,IACA9f,KAAKmqB,YAAY9pB,EAAOiL,GACxBmtB,EAAQtmB,OAAO2N,GACfA,EAAM+H,WAAaA,EACnB/H,EAAM5S,SAAWA,EACjB4S,EAAM1b,OAASA,EACf0b,EAAM0H,SAAWA,EACjB1H,EAAMuK,MAAQrqB,KACd8f,EAAMwK,SAAWA,GAErBtqB,KAAKiN,OAAO/O,KAAK4hB,GACjBiH,EAAe7oB,KAAK4hB,IAExB2H,UAAW,WACP,MAAIznB,MAAKiB,QAAQ0mB,WACNrN,GAEJD,IAEXogB,WAAY,SAAUp6B,GAClB,OACIA,EAAM66B,MACN76B,EAAM06B,GACN16B,EAAMg7B,OACNh7B,EAAM26B,GACN36B,EAAM86B,QAGdhR,YAAa,SAAU9pB,EAAOiL,GAAjB,GACLmC,GAAWnC,EAAOlH,OAAOiE,KACzBiB,EAAYtJ,KAAK8mB,gBAAgBrZ,GACjCxP,EAAQ+B,KAAKy6B,WAAWp6B,GAAO4G,OAAOjH,KAAKw8B,eAAen8B,EAAM47B,UAChEp3B,IAAQxE,EAAMi7B,QACdr9B,EAAQA,EAAMgJ,OAAO5G,EAAMi7B,OAE/BhyB,EAAYtJ,KAAK8mB,gBAAgBrZ,GAAYnE,IACzCG,IAAKuH,EACLxM,IAAKyM,GAET3H,EAAYtJ,KAAK8mB,gBAAgBrZ,IAC7BhE,IAAKlF,KAAKkF,IAAI8nB,MAAMhtB,KAAMtG,EAAMgJ,QAAQqC,EAAUG,OAClDjF,IAAKD,KAAKC,IAAI+sB,MAAMhtB,KAAMtG,EAAMgJ,QAAQqC,EAAU9E,SAG1D6nB,iBAAkB,SAAUvM,EAAOwM,GAC/B,GAAIjsB,GAAQyf,EAAMzf,KAClB,OAAOL,MAAK4mB,aAAa0F,OAAOC,KAAKD,EAAQjsB,EAAM66B,MAAO76B,EAAM06B,GAAI16B,EAAMg7B,OAAQh7B,EAAM26B,GAAI36B,EAAM86B,MAAO96B,EAAMi7B,KAAMxb,EAAM5S,WAE/HsvB,eAAgB,SAAUC,GAAV,GAGHl+B,GACDkjB,EAHJhjB,GAAUg+B,OAAah+B,OACvBsI,IACJ,KAASxI,EAAI,EAAGA,EAAIE,EAAQF,IACpBkjB,EAAOgb,EAAMl+B,GACbsG,GAAQ4c,IAAkB,OAATA,GACjB1a,EAAO7I,KAAKujB,EAGpB,OAAO1a,MAGXyT,GAAkBhC,GAAa3Y,QAC/B+kB,QAAS,WAAA,GACDlf,GAAO1F,KAAKqkB,MAAMqY,WAAW18B,KAAKoE,QAClCiE,EAAOrI,KAAKokB,WAAa1e,EAAK8G,EAAI9G,EAAK6G,CAC3C,OAAOlE,MAMXoS,GAAehJ,GAAa5R,QAC5BC,KAAM,SAAUwgB,EAAUrf,GACtBwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKsgB,SAAWA,EAChBtgB,KAAK4mB,aAAetG,EAASsG,aAC7B5mB,KAAK28B,cACL38B,KAAKmnB,UAETwV,YAAa,WACT38B,KAAK48B,eACL58B,KAAK68B,eACL78B,KAAKiN,UACLjN,KAAKgnB,gBACLhnB,KAAKinB,iBACLjnB,KAAKknB,gBAETC,OAAQ,WACJnnB,KAAKonB,mBAAmBpnB,KAAKqnB,SAASC,KAAKtnB,QAE/C2pB,YAAa,SAAU7J,EAAO9c,EAAOsI,GAAxB,GAWDsX,GAVJviB,EAAQyf,EAAMzf,MAAM2C,GACpB85B,EAAkB95B,EAAQ,QAC1B+5B,EAAW/5B,EAAQ,WACnBg6B,EAAYh6B,EAAQ,YACpBwkB,EAAWlc,EAAOkc,SAClBpjB,EAASkH,EAAOlH,OAChBwlB,EAAY9J,EAAM7e,QAAQ2oB,UAC1BC,EAAWve,EAAOyxB,GAClBjT,EAAYxe,EAAO0xB,EACnBl6B,GAASzC,KAELyC,EAAS+mB,IAAa/mB,EAASgnB,KAC/BlH,GACIQ,IAAKyG,EACLxG,KAAMyG,IAGVF,GAAa/kB,GAAQ+kB,EAAUkT,MAC/B98B,KAAK+pB,kBAAoB/pB,KAAK+pB,oBAC1Bxd,KACAC,MAEJxM,KAAK+pB,kBAAkB/mB,GAAOwkB,GAAYxnB,KAAK+pB,kBAAkB/mB,GAAOwkB,IAAa,GAAI5T,IAAqBgW,EAAUkT,GAAkB14B,EAAQpB,GAClJ4f,EAAa5iB,KAAK+pB,kBAAkB/mB,GAAOwkB,GAAU9D,cAAcrjB,EAAOupB,EAAUkT,KAEpFla,GACA5iB,KAAKgqB,iBAAiBpH,EAAY9C,EAAO9c,KAIrDgnB,iBAAkB,SAAUpH,EAAY9C,EAAO9c,GAA7B,GAUVknB,GATA9G,EAAMR,EAAWQ,IACjBC,EAAOT,EAAWS,KAClBjf,EAAS0b,EAAM1b,OACfnD,EAAU6e,EAAM7e,QAAQ2oB,UACxBxF,EAAaphB,IAAUqO,GACvBoQ,IACJ3B,GAAM9c,EAAQ,OAASogB,EACvBtD,EAAM9c,EAAQ,QAAUqgB,EACxBvD,EAAM8J,UAAY9J,EAAM8J,cACpBM,EAAW,GAAI1P,IAAgB4I,EAAKC,EAAMe,EAAYpkB,KAAMoE,EAAQnD,GACxE6e,EAAM8J,UAAU1rB,KAAKgsB,GACrBpK,EAAM3N,OAAO+X,GACbzI,EAAKze,GAASogB,EACdpjB,KAAKmqB,YAAY1I,EAAMrd,GACvBqd,EAAKze,GAASqgB,EACdrjB,KAAKmqB,YAAY1I,EAAMrd,IAE3BijB,SAAU,SAAUhnB,EAAOiL,GAAjB,GAWFwU,GAVAvT,EAAIlM,EAAMkM,EACVC,EAAInM,EAAMmM,EACVgb,EAAWlc,EAAOkc,SAClBpjB,EAASpE,KAAKiB,QAAQmD,OAAOojB,GAC7B2K,EAAgBnyB,KAAK8wB,oBAAoB1sB,GACzC4iB,EAAehnB,KAAKgnB,aAAaQ,GACjC7D,EAAatjB,CACX8E,GAASoH,IAAMpH,EAASqH,KAC1BmX,EAAa3jB,KAAKi9B,mBAAmBtZ,EAAYwO,IAGjDxO,IACA7D,EAAQ9f,KAAKoqB,YAAYzG,EAAYrY,GACjCwU,IACAjiB,EAAEgC,OAAOigB,EAAOxU,GAChBtL,KAAK2pB,YAAY7J,EAAOxO,GAAGhG,GAC3BtL,KAAK2pB,YAAY7J,EAAOzO,GAAG/F,IAE/BtL,KAAKmqB,YAAYxG,EAAYrY,EAAOlH,SAExCpE,KAAKiN,OAAO/O,KAAK4hB,GACjBkH,EAAa9oB,KAAK4hB,IAEtBgR,oBAAqB,SAAU1sB,GAC3B,MAAOA,GAAO+tB,eAElB8K,mBAAoB,aAEpB9S,YAAa,SAAU9pB,EAAO+D,GAAjB,GACL8D,GAAclI,KAAK4mB,aAAasW,KAChCC,EAAY/4B,EAAOg5B,MACnBC,EAAYj5B,EAAOk5B,MACnB/wB,EAAIlM,EAAMkM,EACVC,EAAInM,EAAMmM,EACV+wB,EAAav9B,KAAK48B,YAAYO,GAC9BK,EAAax9B,KAAK68B,YAAYQ,EAC9Bl4B,GAASoH,KACTgxB,EAAav9B,KAAK48B,YAAYO,GAAaI,IACvC9zB,IAAKuH,EACLxM,IAAKyM,GAELjF,GAASO,KACTA,EAAIpE,GAAUD,EAAaqE,IAE/BgxB,EAAW9zB,IAAMlF,KAAKkF,IAAI8zB,EAAW9zB,IAAK8C,GAC1CgxB,EAAW/4B,IAAMD,KAAKC,IAAI+4B,EAAW/4B,IAAK+H,IAE1CpH,EAASqH,KACTgxB,EAAax9B,KAAK68B,YAAYQ,GAAaG,IACvC/zB,IAAKuH,EACLxM,IAAKyM,GAELjF,GAASQ,KACTA,EAAIrE,GAAUD,EAAasE,IAE/BgxB,EAAW/zB,IAAMlF,KAAKkF,IAAI+zB,EAAW/zB,IAAK+C,GAC1CgxB,EAAWh5B,IAAMD,KAAKC,IAAIg5B,EAAWh5B,IAAKgI,KAGlDge,iBAAkB,SAAUvpB,EAASZ,EAAOiL,GAA1B,GAmBVic,GAlBAnjB,EAASkH,EAAOlH,OAChBojB,EAAWlc,EAAOkc,SAClBnkB,GACAE,SAAUa,EAAOmK,UACjB3K,UACI,OACA,UACA,WACA,SACA,SACA,sBACA,wBAGJ6mB,EAASzqB,KAAKknB,YAAYM,EAa9B,OAZK3iB,IAAQ4lB,KACTzqB,KAAKknB,YAAYM,GAAYiD,EAAStnB,EAAYlC,KAAaoC,GAAO,IAEtEkkB,EAAetmB,EACfwpB,IACAlD,EAAenlB,MAAenB,GAC9BkC,EAAYokB,GACRlnB,MAAOA,EACP+D,OAAQA,EACRkmB,SAAUhf,EAAOgf,UAClBjnB,IAEAkkB,GAEXE,UAAW,WACP,MAAO1O,KAEXwO,aAAc,SAAUnjB,EAAQojB,GAAlB,GAGFjkB,GAFJtC,EAAUjB,KAAKinB,cAAcO,EASjC,OARKvmB,KACGsC,EAAWvD,KAAKynB,YAAYC,UAAUnkB,SAC1CvD,KAAKinB,cAAcO,GAAYvmB,EAAUmB,MAAemB,GACpD+pB,SAAWiB,QAASnqB,EAAOmqB,SAC3BjgB,SAAWge,OAAQtsB,KAAKiB,QAAQqN,QAAQge,QACxC3e,QAAU2e,OAAQtsB,KAAKiB,QAAQ0M,OAAO2e,SACvCloB,IAEAnD,GAEXmpB,YAAa,SAAU/pB,EAAOiL,GAAjB,GAQLwU,GAPA1b,EAASkH,EAAOlH,OAChBmjB,EAAevnB,KAAKunB,aAAanjB,EAAQkH,EAAOkc,UAChDphB,EAAQkF,EAAOlF,OAAShC,EAAOgC,KAQnC,OAPAmhB,GAAevnB,KAAKwqB,iBAAiBjD,EAAclnB,EAAOiL,GACtDtH,GAAWI,EAAOgC,SAClBA,EAAQmhB,EAAanhB,OAErB0Z,EAAQ,GAAI/G,IAAU1Y,EAAOknB,GACjCzH,EAAM1Z,MAAQA,EACdpG,KAAKmS,OAAO2N,GACLA,GAEX4c,WAAY,SAAUt4B,GAAV,GACJ+4B,GAAY/4B,EAAOg5B,MACnBC,EAAYj5B,EAAOk5B,MACnBhd,EAAWtgB,KAAKsgB,SAChB8c,EAAQD,EAAY7c,EAASmd,WAAWN,GAAa7c,EAASod,MAC9DJ,EAAQD,EAAY/c,EAASqd,WAAWN,GAAa/c,EAASsd,KAClE,KAAKR,EACD,KAAUvZ,OAAM,qCAAuCsZ,EAE3D,KAAKG,EACD,KAAUzZ,OAAM,qCAAuCwZ,EAE3D,QACI9wB,EAAG6wB,EACH5wB,EAAG8wB,IAGX9Y,OAAQ,SAAUC,GAAV,GACArD,GAASphB,KACT4qB,EAAc5qB,KAAKiN,OACnBmT,GAASpgB,KAAKiB,QAAQ+pB,KACtBxJ,EAAU,CACdxhB,MAAKonB,mBAAmB,SAAU/mB,EAAOiL,GAAjB,GAORwf,GANRhL,EAAQ8K,EAAYpJ,KACpBkb,EAAatb,EAAOsb,WAAWpxB,EAAOlH,QACtCsnB,EAAQgR,EAAWnwB,EAAEuY,QAAQzkB,EAAMkM,EAAGlM,EAAMkM,EAAG6T,GAC/CuL,EAAQ+Q,EAAWlwB,EAAEsY,QAAQzkB,EAAMmM,EAAGnM,EAAMmM,EAAG4T,EAC/CN,KACI4L,GAASC,GACLb,EAAY1J,EAAO0J,UAAUY,EAAOC,GACxC7L,EAAM0E,OAAOsG,IAEbhL,EAAMrU,SAAU,KAI5BzL,KAAKmB,IAAMsjB,GAEfqG,UAAW,SAAUY,EAAOC,GACxB,MAAO,IAAI5lB,IAAI2lB,EAAMlG,GAAImG,EAAMrG,GAAIoG,EAAMjG,GAAIkG,EAAMpG,KAEvD6B,mBAAoB,SAAUwE,GAAV,GAKPpE,GACD1gB,EACA+2B,EAIKrc,EACDsc,EACAz9B,EACAiL,EAbR8V,EAASphB,KACTmmB,EAAMnmB,KACNoE,EAAS+hB,EAAIllB,QAAQmD,OACrB4iB,EAAeb,EAAIa,YACvB,KAASQ,EAAW,EAAGA,EAAWpjB,EAAO3F,OAAQ+oB,IAM7C,IALI1gB,EAAgB1C,EAAOojB,GACvBqW,EAAsB7W,EAAaQ,GAClCqW,IACD7W,EAAaQ,OAERhG,EAAU,EAAGA,EAAU1a,EAAcrC,KAAKhG,OAAQ+iB,IACnDsc,EAAQ1c,EAAO6K,WAAWnlB,EAAe0gB,EAAUhG,GACnDnhB,EAAQy9B,EAAM/xB,YACdT,EAASwyB,EAAMxyB,OACnBsgB,EAASvrB,EAAO+B,IACZof,QAASA,EACTpd,OAAQ0C,EACR0gB,SAAUA,EACV8C,SAAUxjB,EAAcrC,KAAK+c,GAC7B6I,MAAOjJ,GACR9V,KAIf+gB,iBAAkB,SAAUvM,EAAOwM,GAC/B,GAAIjsB,GAAQyf,EAAMzf,KAClB,OAAOL,MAAK4mB,aAAa0F,OAAOC,KAAKD,EAAQjsB,EAAMkM,EAAGlM,EAAMmM,IAEhEqnB,gBAAiB,WAAA,GAGJjvB,GAFLqI,EAASjN,KAAKiN,OACdlG,IACJ,KAASnC,EAAM,EAAGA,EAAMqI,EAAOxO,OAAQmG,IACnCmC,EAAO7I,MAAM+O,EAAOrI,QAAYzC,OAEpC,OAAO4E,MAGf4K,GAAkB8I,IACdrW,UACAkK,SAAWge,OAAQ,YACnB3e,QAAU2e,OAAQ,YAClBtB,MAAM,IAEV5oB,GAAWqY,GAAaiN,UAAWrO,IAAsB4S,WAAYvT,GAAiBgP,UAAUuE,aAC5FvR,GAAS3B,GAAUlZ,QACnBC,KAAM,SAAUO,EAAOY,GACnB8X,GAAUuL,GAAGxkB,KAAKykB,KAAKvkB,KAAMK,EAAOY,GACpCjB,KAAKkN,SAAW7M,EAAM6M,UAE1B6hB,gBAAiB,WAAA,GACTC,GAAYhvB,KAAKiB,QAAQ+tB,UACzBb,EAASa,EAAUb,OACnBb,EAAUttB,KAAKiB,QAAQqsB,QACvBtI,EAAShlB,KAAKmB,IAAI6jB,SAClB+Y,GAAUzQ,EAAQvtB,KAAOutB,EAAQa,OAAOvvB,MAAQuvB,EAAOvvB,OAAS,EAChEo/B,EAAiB,GAAIhrB,IACrBkc,EAAS,GAAItc,IAAQqrB,OAAO,GAAI/qB,IAAS+qB,QACzCjZ,EAAOzY,EACPyY,EAAOxY,EAAIuxB,EAAS,EAAI5P,EAAOvvB,MAAQ,GACxCm/B,EAAS5P,EAAOvvB,MAAQ,IACvBynB,QAAUjgB,MAAO,QACjBquB,KAAMz0B,KAAKk+B,gBACPj5B,SAAU,eACVmB,MAAOknB,EAAQY,WACfiQ,QAEQC,OAAQ,EACRh4B,MAAOknB,EAAQY,WACfK,QAAS,KAGT6P,OAAQ,EACRh4B,MAAOknB,EAAQY,WACfK,QAAS,QAKrBvpB,EAAU,GAAI4N,IAAQqrB,OAAO,GAAI/qB,IAAS+qB,QAC1CjZ,EAAOzY,EACPyY,EAAOxY,GACRuxB,IACC1X,QACIjgB,MAAO+nB,EAAO/nB,OAAS,GAAI6M,IAAMqa,EAAQY,YAAYE,WAAWna,IAAmBoa,QACnFzvB,MAAOuvB,EAAOvvB,MACd2vB,QAASJ,EAAOI,SAEpBkG,MACIruB,MAAOknB,EAAQY,WACfK,QAASS,EAAUT,UAI3B,OADAyP,GAAe7rB,OAAO+c,EAAQlqB,GACvBg5B,KAGftjB,GAAOgN,UAAUnkB,SAAWnB,MAAesY,GAAOgN,UAAUnkB,UACxDoK,QAAUkhB,SAAU9jB,GACpBikB,WACIT,QAAS,EACTJ,QACI/nB,MAAO,OACPxH,MAAO,EACP2vB,QAAS,MAIjB5T,GAAcF,GAAa5a,QAC3B88B,YAAa,WACT38B,KAAKq+B,SAAWptB,EAChBwJ,GAAa6J,GAAGqY,YAAYpY,KAAKvkB,OAErCqnB,SAAU,SAAUhnB,EAAOiL,GACJ,OAAfjL,EAAMN,OAAkBM,EAAMN,KAAO,GAAKM,EAAMN,KAAO,GAAKuL,EAAOlH,OAAOk6B,eAAe7yB,UACzFzL,KAAKq+B,SAAW95B,KAAKC,IAAIxE,KAAKq+B,SAAU95B,KAAKsG,IAAIxK,EAAMN,OACvD0a,GAAa6J,GAAG+C,SAAS9C,KAAKvkB,KAAMK,EAAOiL,KAE3CtL,KAAKiN,OAAO/O,KAAK,MACjB8B,KAAKgnB,aAAa1b,EAAOkc,UAAUtpB,KAAK,QAGhDsmB,OAAQ,SAAUrjB,GACdnB,KAAKu+B,kBAAkBp9B,GACvBsZ,GAAa6J,GAAGE,OAAOD,KAAKvkB,KAAMmB,IAEtCsmB,UAAW,WACP,MAAO/M,KAEX0P,YAAa,SAAU/pB,EAAOiL,GAAjB,GAaLic,GAoBAzH,EAhCA1b,EAASkH,EAAOlH,OAChBo6B,EAAcp6B,EAAOK,KAAKhG,OAC1BioB,EAAQpb,EAAOkW,SAAW1N,GAA6B0qB,GACvDC,GACA/X,MAAOA,EACP2M,SAAUvf,GAA6B4S,EACvCxf,KAAMiO,IAEN/O,EAAQkF,EAAOlF,OAAShC,EAAOgC,KA2BnC,OA1BI/F,GAAMN,KAAO,GAAKqE,EAAOk6B,eAAe7yB,UACxCrF,EAAQnC,GAAeG,EAAOk6B,eAAel4B,MAAOA,IAEpDmhB,EAAenlB,IACfuL,QACI8Y,WACIC,MAAOA,EACP2M,SAAUvf,GAA6B4S,KAGhD1mB,KAAKunB,aAAanjB,EAAQkH,EAAOkc,WAChC8F,SACIpmB,KAAMkK,GACN+c,OAAQ/pB,EAAO+pB,OACfI,QAASnqB,EAAOmqB,QAChB9H,UAAWgY,KAGnBlX,EAAevnB,KAAKwqB,iBAAiBjD,EAAclnB,EAAOiL,GACtDtH,GAAWI,EAAOgC,SAClBA,EAAQmhB,EAAanhB,OAEzBmhB,EAAa+F,QAAQY,WAAa9nB,EAC9B0Z,EAAQ,GAAIpF,IAAOra,EAAOknB,GAC9BzH,EAAM1Z,MAAQA,EACdpG,KAAKmS,OAAO2N,GACLA,GAEXye,kBAAmB,SAAUp9B,GAAV,GAKNqmB,GACD1gB,EACAkgB,EACA0X,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACKzd,EACD1B,EAEIhR,EACAivB,EACAmB,EACAp6B,EArBZsc,EAASphB,KACTmmB,EAAMnmB,KACNoE,EAAS+hB,EAAIllB,QAAQmD,OACrBshB,EAAUnhB,KAAKkF,IAAItI,EAAIvC,QAASuC,EAAItC,SACxC,KAAS2oB,EAAW,EAAGA,EAAWpjB,EAAO3F,OAAQ+oB,IAW7C,IAVI1gB,EAAgB1C,EAAOojB,GACvBR,EAAe5F,EAAO4F,aAAaQ,GACnCkX,EAAU53B,EAAc43B,SAAWn6B,KAAKC,IAAc,IAAVkhB,EAAgB,IAC5DiZ,EAAU73B,EAAc63B,SAAqB,GAAVjZ,EACnCkZ,EAAOF,EAAU,EACjBG,EAAOF,EAAU,EACjBG,EAAUv6B,KAAK46B,GAAKP,EAAOA,EAC3BG,EAAUx6B,KAAK46B,GAAKN,EAAOA,EAC3BG,EAAYD,EAAUD,EACtBG,EAAYD,EAAY5d,EAAOid,SAC1B7c,EAAU,EAAGA,EAAUwF,EAAavoB,OAAQ+iB,IAC7C1B,EAAQkH,EAAaxF,GACrB1B,IACIhR,EAAOvK,KAAKsG,IAAIiV,EAAMzf,MAAMN,MAAQk/B,EACpClB,EAASx5B,KAAKuf,MAAMgb,EAAUhwB,GAAQvK,KAAK46B,IAC3CD,EAAaj7B,GAAe6b,EAAM7e,QAAQ6D,OAAQ,GAClDA,EAASo6B,GAAc,EAAInB,EAASc,GACxCz8B,GAAW0d,EAAM7e,SACb6D,OAAQA,EACRwoB,SACIvtB,KAAe,EAATg+B,EACNj5B,OAAQA,GAEZ6I,QAAU7I,OAAQA,EAAS,OAM/CunB,iBAAkB,SAAUvM,EAAOwM,GAC/B,GAAIjsB,GAAQyf,EAAMzf,KAClB,OAAOL,MAAK4mB,aAAa0F,OAAOC,KAAKD,EAAQjsB,EAAMkM,EAAGlM,EAAMmM,EAAGnM,EAAMN,KAAM+f,EAAM5S,WAErFomB,gBAAiB,aAEjB1N,aAAc,eAGlBjU,GAAkBgJ,IACdrM,SAAWge,OAAQ,OACnB3e,QAAU2e,OAAQ,SAElB1R,GAAS5I,GAAanS,WAC1BuC,GAAWwY,GAAO8M,UAAW/O,IACzBkC,GAASpJ,GAAa5R,QACtBC,KAAM,SAAUO,EAAOY,GACnBwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKirB,UAAYjrB,KAAKiB,QAAQgqB,UAC9BjrB,KAAKoG,MAAQnF,EAAQmF,OAAS+K,GAC9BnR,KAAKK,MAAQA,GAEjB8mB,OAAQ,WACJ,GAAIlmB,GAAUjB,KAAKiB,OACdjB,MAAKutB,YACNvtB,KAAKutB,WAAY,EACb1oB,GAAQ7E,KAAKK,MAAMkG,UACnBvG,KAAKuG,OAAS,GAAIqU,KACd1T,KAAMjG,EAAQsF,OAAOy1B,MACrB9N,WAAYjtB,EAAQsF,OAAOH,OAASpG,KAAKoG,MACzCmoB,QAASttB,EAAQstB,QACjBzpB,OAAQ7D,EAAQ6D,OAChBqpB,OAAQltB,EAAQsF,OAAO4nB,OACvBN,OAAQziB,EACRwiB,MAAO5iB,KAEXhL,KAAKuG,OAAOlG,MAAQL,KAAKK,MACzBL,KAAKuG,OAAO+jB,SAAWtqB,KAAKsqB,SAC5BtqB,KAAKuG,OAAOnC,OAASpE,KAAKoE,OAC1BpE,KAAKmS,OAAOnS,KAAKuG,SAErBvG,KAAK8sB,eAGbtI,OAAQ,SAAUrjB,GAAV,GAEAglB,GACAllB,EACAsF,EACA8d,EACAsD,EACAgB,EACAoC,EACAqU,EACAC,EACAC,EAEIC,CAZRv/B,MAAKmnB,SACDhB,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdsF,EAAS4f,EAAI5f,OACb8d,EAAQ8B,EAAIkE,MACZ1C,EAAa1mB,EAAQ0mB,WACrBgB,EAAYtE,EAAMsC,gBAAgB3mB,KAAKiB,SACvC8pB,EAAe1G,EAAM0G,aAAa1G,EAAM5b,aAAcxH,EAAQ4mB,WAAYc,GAC1EyW,EAAkBzW,EAAU7D,QAAQ9kB,KAAKK,MAAMkG,QAC/C84B,EAAc1X,EAAayX,EAAkBrU,EAC7CuU,EAAc3X,EAAaoD,EAAeqU,EAC1C74B,IACIg5B,EAAa,GAAIx5B,IAAIs5B,EAAY7Z,GAAI8Z,EAAYha,GAAI+Z,EAAY5Z,GAAI6Z,EAAY/Z,IACrFhf,EAAOtF,QAAQpC,OAAS8oB,EAAa4X,EAAW1gC,SAAWoC,EAAQsF,OAAOmH,KAAK9O,MAC/E2H,EAAOtF,QAAQrC,MAAQ+oB,EAAa1mB,EAAQsF,OAAOmH,KAAK9O,MAAQ2gC,EAAW3gC,QAC3E2H,EAAOie,OAAO+a,IAEdv/B,KAAKitB,MACLjtB,KAAKitB,KAAKzI,OAAOrjB,GAErBnB,KAAKmB,IAAMA,GAEfykB,aAAc,WAAA,GAEN3kB,GACAW,CAFJ6P,IAAa6S,GAAGsB,aAAarB,KAAKvkB,MAC9BiB,EAAUjB,KAAKiB,QACfW,EAAOiR,GAAK8gB,SAAS3zB,KAAKmB,IAAI2kB,UAC9B2O,MACIruB,MAAOpG,KAAKoG,MACZmoB,QAASttB,EAAQstB,SAErBlI,OAAQ,OAERplB,EAAQktB,OAAOvvB,MAAQ,GACvBgD,EAAKX,QAAQm5B,IAAI,UACbh0B,MAAOnF,EAAQktB,OAAO/nB,OAASpG,KAAKoG,MACpCxH,MAAOqC,EAAQktB,OAAOvvB,MACtB0nB,SAAUrlB,EAAQktB,OAAO7H,SACzBiI,QAAStqB,GAAehD,EAAQktB,OAAOI,QAASttB,EAAQstB,WAGhEvuB,KAAKw/B,WAAa59B,EAClB8P,GAAiB9P,GACjB5B,KAAKwgB,OAAOrO,OAAOvQ,IAEvB0xB,gBAAiB,WACTtzB,KAAKw/B,aACLx/B,KAAKymB,UAAY3T,GAAU2sB,OAAOz/B,KAAKw/B,WAAYx/B,KAAKiB,QAAQwlB,aAGxEsI,gBAAiB,SAAU9vB,GACvB,MAAO4T,IAAK8gB,SAAS3zB,KAAKmB,IAAI2kB,SAAU7mB,IAE5CmwB,gBAAiB,WACb,MAAOpvB,MAAKw/B,YAEhBnQ,oBAAqB,WACjB,OACIxJ,KAAM7lB,KAAKmB,IAAI2kB,SACftF,OAAQxgB,KAAKw/B,WACbv+B,QAASjB,KAAKiB,UAGtB0sB,YAAa,SAAUrB,GACnB,MAAOtsB,MAAKqqB,MAAMgC,iBAAiBrsB,KAAMssB,MAGjDzR,GAAO6M,UAAU+H,cAAgB1V,GAAI2N,UAAU+H,cAC/C9d,GAAkBkJ,IACdsT,QAAUvvB,MAAO,GACjBuL,UAAU,EACVokB,QAAS,EACThoB,QACIy1B,MAAO,GACP7N,QACIvvB,MAAO,EACPwH,MAAO,SAEXsH,MAAQ9O,MAAO,IAEnB0P,SAAWge,OAAQ,mCAEvBlqB,GAAWyY,GAAO6M,UAAW/O,IAC7BvW,GAAWyY,GAAO6M,UAAW9O,IACzBkC,GAAcpC,GAAiB7Y,QAC/BC,KAAM,SAAUwgB,EAAUrf,GACtBmE,EAASnE,GACTyX,GAAiB4L,GAAGxkB,KAAKykB,KAAKvkB,KAAMsgB,EAAUrf,IAElDoqB,iBAAkB,SAAUV,GAAV,GAGLpsB,GAFLyzB,EAAWhyB,KAAKgyB,SAChBmH,EAAiBnH,EAASvzB,MAC9B,KAASF,EAAI,EAAGA,EAAI46B,EAAgB56B,IAChCyzB,EAASzzB,GAAGimB,OAAOmG,EAAcpsB,KAGzC8pB,UAAW,SAAUvI,GAAV,GACH1b,GAAS0b,EAAM1b,OACfukB,EAAY3oB,KAAK2mB,gBAAgBviB,GACjCwkB,EAAoB5oB,KAAK+oB,0BAA0BJ,EACvD,QACIC,EACA9I,EAAMzf,MAAMjB,SAAWwpB,IAG/BwB,YAAa,SAAU3lB,EAAM6G,GAAhB,GAoBLgE,GAEAmpB,EArBA5Q,EAAavc,EAAOuc,WACpB3a,EAAW5B,EAAO4B,SAClB9I,EAASkH,EAAOlH,OAChBojB,EAAWlc,EAAOkc,SAClBrB,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACd+wB,EAAW7L,EAAI6L,SACf3xB,EAAQoE,EAAKsH,YACb2zB,EAAgBt9B,IAChB+H,UAAWlJ,EAAQ0mB,WACnB3iB,QAASZ,EAAOY,QAChB6iB,WAAYA,EACZF,WAAY1mB,EAAQ0mB,YACrBvjB,GACCgC,EAAQ3B,EAAK6G,OAAOlF,OAAShC,EAAOgC,KAiBxC,OAhBAs5B,GAAgB1/B,KAAKwqB,iBAAiBkV,EAAer/B,EAAO6M,EAAU2a,EAAYzjB,EAAQojB,GACtFxjB,GAAWI,EAAOgC,SAClBA,EAAQs5B,EAAct5B,OAEtBkJ,EAAS,GAAIuL,IAAOxa,EAAOq/B,GAC/BpwB,EAAOlJ,MAAQA,EACXqyB,EAAUzG,EAASnK,GAClB4Q,IACDA,EAAU,GAAIze,KACV7P,SAAUlJ,EAAQ0mB,WAClBoQ,IAAK92B,EAAQ82B,IACbC,QAAS/2B,EAAQ+2B,UAErBh4B,KAAKmS,OAAOsmB,IAEhBA,EAAQtmB,OAAO7C,GACRA,GAEX6a,YAAa,SAAU9pB,EAAOiL,GAAjB,GACLlM,GAAUiB,EAAMjB,QAChBmH,EAASlG,EAAMkG,OACfkH,EAAWnC,EAAOlH,OAAOiE,KACzBiB,EAAYtJ,KAAK8mB,gBAAgBrZ,EACjC5I,IAAQzF,KAAaugC,MAAMvgC,IAAYyF,GAAQ0B,IAAWo5B,MAAMp5B,MAChE+C,EAAYtJ,KAAK8mB,gBAAgBrZ,GAAYnE,IACzCG,IAAKuH,EACLxM,IAAKyM,GAET3H,EAAUG,IAAMlF,KAAKkF,IAAIH,EAAUG,IAAKrK,EAASmH,GACjD+C,EAAU9E,IAAMD,KAAKC,IAAI8E,EAAU9E,IAAKpF,EAASmH,KAGzD8lB,iBAAkB,SAAUvM,EAAOwM,GAC/B,MAAOtsB,MAAK4mB,aAAa0F,OAAOC,KAAKD,EAAQxM,EAAMzf,MAAMjB,QAAS0gB,EAAMzf,MAAMkG,SAElFod,WAAY,SAAUlf,GAClB,MAAOA,GAAKsH,YAAY3M,SAE5B6rB,UAAW,SAAUnL,GACjB,GAAIzf,GAAQyf,EAAMzf,MAAMjB,OACxB,OAAOiB,GAAQ,GAEnBizB,gBAAiB,WAAA,GAIJ1uB,GACDkb,EAJJsB,EAASphB,KACTiN,EAASjN,KAAKiN,MAElB,KADAjN,KAAKo5B,uBACIx0B,EAAM,EAAGA,EAAMqI,EAAOxO,OAAQmG,IAC/Bkb,EAAQ7S,EAAOrI,GACnBkb,EAAM7e,QAAQwlB,UAAYrF,EAAOngB,QAAQwlB,UACzC3G,EAAMwT,qBAIlBxY,GAAY4M,UAAU0R,qBAAuBlf,GAASwN,UAAU0R,qBAChEznB,GAAkBmJ,IAAe2L,WAAavf,KAAM+N,MAWhD8F,GAAcnb,EAAMC,QACpBC,KAAM,SAAU8mB,EAAc3lB,GAC1BjB,KAAK4mB,aAAeA,EACpB5mB,KAAKiB,QAAUmB,MAAepC,KAAKiB,QAASA,IAEhD2+B,SAAU,SAAU3+B,EAAS6e,GAAnB,GAIE+f,GAIJ7P,EAPA9B,EAAajtB,EAAQitB,WACrBC,EAASltB,EAAQktB,OAAO/nB,KAO5B,OANI0Z,KACI+f,EAAa/f,EAAM1Z,OAAS0Z,EAAM7e,QAAQmF,MAC9C8nB,EAAajqB,GAAeiqB,EAAY2R,GACxC1R,EAASlqB,GAAekqB,EAAQ0R,IAEhC7P,EAAU/d,GAAWhR,EAAQ+uB,YAAe,SAE5C8P,gBAAiB5R,EACjB4J,YAAa3J,EACb4R,KAAM9+B,EAAQ8+B,KACd35B,MAAOnF,EAAQmF,MACfmoB,QAASttB,EAAQstB,QACjByR,YAAa5tB,GAAWnR,EAAQktB,OAAOvvB,OACvCqhC,WAAY7tB,GAAW4d,EAAQ8G,KAC/BoJ,cAAe9tB,GAAW4d,EAAQ+G,QAClCoJ,YAAa/tB,GAAW4d,EAAQjC,MAChCqS,aAAchuB,GAAW4d,EAAQhC,SAGzCqS,KAAM,SAAUp/B,EAASq/B,EAAgBxgB,GACrC7e,EAAQqrB,OAASgU,EAAehU,MAChC,IAAIrtB,GAAQe,KAAK4/B,SAASU,EAAgBxgB,EAC1C7e,GAAQhC,MAAQA,GACX4F,GAAQy7B,EAAel6B,QAAU,GAAI6M,IAAMhU,EAAM6gC,iBAAiBS,iBAAmB,MACtFt/B,EAAQ2I,UAAY,2BAExB5J,KAAK4mB,aAAa4Z,OAAO3oB,GAAc5W,IAE3Cw/B,KAAM,WACFzgC,KAAK4mB,aAAa4Z,OAAO1oB,KAE7B4oB,QAAS,iBACE1gC,MAAK4mB,gBAGpBjV,GAAkBoJ,IACdoT,QAAUvvB,MAAO,GACjB2vB,QAAS,IAETvT,GAAmBD,GAAYlb,QAC/BC,KAAM,SAAU8mB,EAAc+Z,EAAW1/B,GACrC8Z,GAAYuJ,GAAGxkB,KAAKykB,KAAKvkB,KAAM4mB,EAAc3lB,GAC7CjB,KAAK2gC,UAAYA,EACjB3gC,KAAK4gC,cAAgBha,EAAa0F,OAClCtsB,KAAK6gC,gBAETA,aAAc,WAAA,GAGNr3B,GAFAnB,EAAOrI,KAAK2gC,UAAUt4B,KACtBiY,EAAWjY,EAAKiY,QAGhB9W,GADA8W,EAAS7X,aACFJ,EAAK0X,YAAc,eAAiB,YAEpC1X,EAAKpH,QAAQkJ,SAAW,QAAU,QAE7CnK,KAAKyN,SAAWjE,GAEpBs3B,OAAQ,SAAUhhB,GAAV,GACAqG,GAAMnmB,KACNqI,EAAO8d,EAAIwa,UAAUt4B,KACrBpH,EAAUklB,EAAIllB,QACdZ,EAAQgI,EAAKpH,EAAQ8/B,WAAa,cAAgB,YAAYjhB,GAC9DkhB,EAAiB3gC,CACjBY,GAAQqrB,OACR0U,EAAiBhhC,KAAK4gC,cAAcrU,KAAKtrB,EAAQqrB,OAAQjsB,GAClDgI,EAAKpH,QAAQiG,OAASU,KAC7Bo5B,EAAiBhhC,KAAK4gC,cAAcrU,KAAKlkB,EAAKpH,QAAQ0M,OAAOszB,YAAY54B,EAAKpH,QAAQigC,UAAW7gC,IAErGL,KAAKqgC,MACDvgB,MAAOA,EACP5Z,OAAQlG,KAAKmhC,YACbR,UAAW3gC,KAAK2gC,UAChBtgC,MAAO2gC,EACPvzB,SAAUzN,KAAKyN,SACfge,UAAWzrB,KAAK2gC,UAAUt4B,KAAKojB,WAChCzrB,KAAKiB,UAEZw/B,KAAM,WACFzgC,KAAK4mB,aAAa4Z,OAAO1oB,IACrB6oB,UAAW3gC,KAAK2gC,UAChBlzB,SAAUzN,KAAKyN,SACfge,UAAWzrB,KAAK2gC,UAAUt4B,KAAKojB,aAGvC0V,UAAW,WAAA,GAQHzR,GAAiBC,EAAe7P,EAPhCqG,EAAMnmB,KACN2gC,EAAYxa,EAAIwa,UAChBS,EAAcjb,EAAIllB,QAClB4tB,EAAWuS,EAAYvS,SACvBmB,EAAUoR,EAAYpR,QACtB7lB,GAAYw2B,EAAUt4B,KAAKpH,QAAQkJ,SACnC8pB,EAAU0M,EAAUjzB,KAAK2zB,MAqB7B,OAnBIl3B,IACAulB,EAAkB3kB,EACd8jB,IAAa1jB,GACbwkB,EAAgBvkB;AAChB0U,EAAQmU,EAAQqN,aAAaC,UAAU,EAAGvR,KAE1CL,EAAgBxkB,EAChB2U,EAAQmU,EAAQuN,UAAUD,UAAU,GAAIvR,MAG5CL,EAAgB5kB,EACZ8jB,IAAa5jB,GACbykB,EAAkB1kB,GAClB8U,EAAQmU,EAAQuN,UAAUD,WAAWvR,EAAS,KAE9CN,EAAkBzkB,EAClB6U,EAAQmU,EAAQjB,WAAWuO,UAAUvR,EAAS,MAIlDlQ,MAAOA,EACP8N,OACI1jB,WAAYwlB,EACZvlB,SAAUwlB,OAK1Bhe,GAAkBqJ,IAAoBgV,QAAS,KAC3C/U,GAAYxJ,GAAa5R,QACzBC,KAAM,SAAU8mB,EAAcve,EAAMpH,GAChCwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKqI,KAAOA,EACZrI,KAAK+gC,WAAa14B,YAAgBgK,GAClC,IAAIiuB,GAAiBtgC,KAAKiB,QAAQqN,OAC9BgyB,GAAe70B,UACfzL,KAAKsO,QAAU,GAAI0M,IAAiB4L,EAAc5mB,KAAMoC,MAAek+B,GAAkBS,WAAY/gC,KAAK+gC,gBAGlHD,OAAQ,SAAUhhB,GACd9f,KAAK8f,MAAQA,EACb9f,KAAKyhC,WACLzhC,KAAK0N,KAAKjC,SAAQ,GACdzL,KAAKsO,SACLtO,KAAKsO,QAAQwyB,OAAOhhB,IAG5B2gB,KAAM,WACFzgC,KAAK0N,KAAKjC,SAAQ,GACdzL,KAAKsO,SACLtO,KAAKsO,QAAQmyB,QAGrBgB,SAAU,WAAA,GAQFC,GAQQzhB,EAfRkG,EAAMnmB,KACNqI,EAAO8d,EAAI9d,KACXyX,EAAQqG,EAAIrG,MACZ3V,EAAW9B,EAAKpH,QAAQkJ,SACxBhJ,EAAMnB,KAAK2hC,SACXC,EAAMz3B,EAAWkH,GAAIC,GACrBuwB,EAAY,GAAI1uB,IAAchS,EAAIqkB,GAAIrkB,EAAImkB,GAG1Coc,GADAv3B,EACU,GAAIgJ,IAAchS,EAAIskB,GAAItkB,EAAImkB,IAE9B,GAAInS,IAAchS,EAAIqkB,GAAIrkB,EAAIokB,IAExCzF,IACI9f,KAAK+gC,YACD9gB,EAAO5X,EAAKyc,QAAQzc,EAAKy5B,mBAAmBhiB,IAChD+hB,EAAUD,GAAOF,EAAQE,GAAO3hB,EAAK+E,SAAS4c,IAE9CC,EAAUD,GAAOF,EAAQE,GAAO9hB,EAAM8hB,IAG9C5hC,KAAKmB,IAAMA,EACXnB,KAAK0N,KAAK6Y,OAAOsb,GAAWrb,OAAOkb,IAEvCC,OAAQ,WAAA,GAOAI,GACKxjC,EACDyjC,EARJ35B,EAAOrI,KAAKqI,KACZ3C,EAAO2C,EAAKpC,KAAKP,KACjBjH,EAASiH,EAAKjH,OACd0L,EAAW9B,EAAKpH,QAAQkJ,SACxBhJ,EAAMkH,EAAK4rB,UAAUnuB,QACrB87B,EAAMz3B,EAAWmH,GAAID,EAEzB,KAAS9S,EAAI,EAAGA,EAAIE,EAAQF,IACpByjC,EAAct8B,EAAKnH,GACnByjC,EAAY/gC,QAAQkJ,WAAaA,IAC5B43B,EAGDA,EAAYl8B,KAAKm8B,EAAY/N,WAF7B8N,EAAcC,EAAY/N,UAAUnuB,QAQhD,OAFA3E,GAAIygC,EAAM,GAAKG,EAAYH,EAAM,GACjCzgC,EAAIygC,EAAM,GAAKG,EAAYH,EAAM,GAC1BzgC,GAEXykB,aAAc,WACVnU,GAAa6S,GAAGsB,aAAarB,KAAKvkB,KAClC,IAAIiB,GAAUjB,KAAKiB,OACnBjB,MAAK0N,KAAO,GAAImF,KACZwT,QACIjgB,MAAOnF,EAAQmF,MACfxH,MAAOqC,EAAQrC,MACf2vB,QAASttB,EAAQstB,QACjBjI,SAAUrlB,EAAQqlB,UAEtB7a,SAAS,IAEbzL,KAAKyhC,WACLzhC,KAAKwgB,OAAOrO,OAAOnS,KAAK0N,OAE5BgzB,QAAS,WACD1gC,KAAKsO,SACLtO,KAAKsO,QAAQoyB,UAEjBjvB,GAAa6S,GAAGoc,QAAQnc,KAAKvkB,SAGrC2R,GAAkBsJ,IACd7U,MAAOmL,GACP3S,MAAO,EACPkG,UACAwJ,SAAW7C,SAAS,KAEpByP,GAAiBzJ,GAAa5R,QAC9BC,KAAM,SAAUmB,EAASgF,GACrBwL,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKiG,KAAOA,GAEhBg8B,WAAY,WAAA,GAGC1jC,GAFLyzB,EAAWhyB,KAAKgyB,SAChBvzB,EAASuzB,EAASvzB,MACtB,KAASF,EAAI,EAAGA,EAAIE,EAAQF,IACxB,GAAIyzB,EAASzzB,GAAG0C,QAAQ+pB,QAAS,EAC7B,OAAO,CAGf,QAAO,GAEXkX,SAAU,WACN,MAAOliC,MAAKiG,KAAKk8B,aAErBvc,aAAc,WAAA,GAGFgK,GACAwS,EACA7O,CAJRvzB,MAAKwgB,OAAS,GAAIxN,KAAQlO,OAAQ,IAC9B9E,KAAKiiC,eACDrS,EAAU5vB,KAAK4vB,QAAU5vB,KAAKkiC,WAC9BE,EAAWxS,EAAQ9J,SACnByN,EAAW1gB,GAAK8gB,SAASyO,GAC7BpiC,KAAKwgB,OAAOwK,KAAKuI,GACjBvzB,KAAKqiC,iBAGbC,UAAW,WACP,MAAOtiC,OAEXqiC,aAAc,WAAA,GAID9jC,GACD0O,EACAxO,EACK8jC,EACDziB,EAEIkN,EACAC,EAVZ9G,EAAMnmB,KACNwiC,EAASrc,EAAI6L,SACbpC,EAAUzJ,EAAIyJ,OAClB,KAASrxB,EAAI,EAAGA,EAAIikC,EAAO/jC,OAAQF,IAG/B,IAFI0O,EAASu1B,EAAOjkC,GAAG0O,WACnBxO,EAASwO,EAAOxO,OACX8jC,EAAI,EAAGA,EAAI9jC,EAAQ8jC,IACpBziB,EAAQ7S,EAAOs1B,GACfziB,GAASA,EAAMiQ,aAAejQ,EAAMiQ,YAAYH,KAC5C5C,EAAQlN,EAAMkN,MACdC,EAAOnN,EAAMmN,KACbD,GAASA,EAAM/rB,QAAQwK,UACnBuhB,EAAMgK,gBACNhK,EAAMgK,eAAepH,GAEzB5C,EAAM/rB,QAAQ01B,QAAS,GAEvB1J,GAAQA,EAAKhsB,QAAQwK,UACrBwhB,EAAKhsB,QAAQ01B,QAAS,KAM1C+J,QAAS,WACLjvB,GAAa6S,GAAGoc,QAAQnc,KAAKvkB,YACtBA,MAAKuwB,UAGpBrV,GAAewM,UAAU+a,aAAc,EACnCtnB,GAAO7I,GAAWzS,QAClBC,KAAM,SAAUmB,GACZqR,GAAWgS,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAC9BjB,KAAK0iC,GAAKn9B,IACVvF,KAAK2iC,cACL3iC,KAAKy2B,QAAU,GAAIhlB,IACnBzR,KAAK4iC,eAAiB,GAAI1nB,OAAmBlb,MAC7CA,KAAKmS,OAAOnS,KAAKy2B,SACjBz2B,KAAK0F,QACL1F,KAAKwiC,WAETG,YAAa,WACT,GAAIE,GAAe7iC,KAAKiB,QAAQ2M,KAC5B1J,IAAS2+B,KACTA,EAAezgC,MAAeygC,GAC1BjV,MAAOiV,EAAahU,SACpBA,SAAUzjB,KAGlBpL,KAAK4N,MAAQvD,EAAQy4B,MAAMC,WAAWF,EAAc7iC,KAAMmb,GAAKuM,UAAUzmB,QAAQ2M,QAErFo1B,WAAY,SAAU36B,GAClBrI,KAAKy2B,QAAQtkB,OAAO9J,GACpBrI,KAAK0F,KAAKxH,KAAKmK,GACfA,EAAKpC,KAAOjG,MAEhBijC,YAAa,SAAU5e,GACfrkB,KAAK4iC,eAAerS,SAAWvwB,KAAKy2B,SACpCz2B,KAAKy2B,QAAQtkB,OAAOnS,KAAK4iC,gBAE7B5iC,KAAKwiC,OAAOtkC,KAAKmmB,GACjBrkB,KAAK4iC,eAAezwB,OAAOkS,GAC3BA,EAAMpe,KAAOjG,MAEjBkjC,MAAO,WAAA,GAIU3kC,GAGA4kC,EANT/hB,EAASphB,KACTsgB,EAAWtgB,KAAKuwB,MACpB,IAAIjQ,EAAU,CACV,IAAS/hB,EAAI,EAAGA,EAAIyB,KAAK0F,KAAKjH,OAAQF,IAClC+hB,EAAS8iB,WAAWhiB,EAAO1b,KAAKnH,GAEpC,KAAS4kC,EAAM,EAAGA,EAAMnjC,KAAKwiC,OAAO/jC,OAAQ0kC,IACxC7iB,EAAS+iB,YAAYjiB,EAAOohB,OAAOW,IAG3CnjC,KAAK0F,QACL1F,KAAKwiC,UACLxiC,KAAKy2B,QAAQiK,UACb1gC,KAAKy2B,QAAQzE,YACbhyB,KAAK4iC,eAAe5Q,aAExBxN,OAAQ,SAAUC,GACd,GAAIgS,EACAtmB,IAAKnQ,KAAKgyB,YAAchyB,KAAKy2B,UAC7BA,EAAUz2B,KAAKgyB,SAASsR,OAE5BhxB,GAAWgS,GAAGE,OAAOD,KAAKvkB,KAAMykB,GAC5BgS,GACAz2B,KAAKgyB,SAAS9zB,KAAKu4B,GAEnBz2B,KAAK4N,QACL5N,KAAK4F,WAAW0f,IAAMtlB,KAAK4N,MAAMzM,IAAItC,WAG7C0kC,YAAa,WACT,GAAItkC,GAAQqT,GAAWgS,GAAGif,YAAYhf,KAAKvkB,KAE3C,OADAf,GAAM6F,WACC7F,GAEXukC,eAAgB,WACRxjC,KAAKiB,QAAQwK,SACbzL,KAAKyjC,mBAGbnB,UAAW,WACP,MAAOtiC,OAEX0jC,SAAU,WACN,MAAO1jC,OAEXyjC,gBAAiB,WAAA,GAKJllC,GACD8J,EACA8B,EACAw5B,EACKpB,EAEGqB,EAVZl+B,EAAO1F,KAAK0F,KACZm+B,EAAUn+B,EAAKuB,OAAOjH,KAAKuwB,OAAO7qB,MAClCo+B,KACAC,IACJ,KAASxlC,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IAI7B,IAHI8J,EAAO3C,EAAKnH,GACZ4L,EAAW9B,EAAKpH,QAAQkJ,SACxBw5B,EAAYx5B,EAAW25B,EAAaC,EAC/BxB,EAAI,EAAGA,EAAIsB,EAAQplC,OAAQ8jC,IACP,IAArBoB,EAAUllC,SACNmlC,EAAUC,EAAQtB,GAClBp4B,IAAay5B,EAAQ3iC,QAAQkJ,UAC7BgI,GAAOwxB,EAAWt7B,EAAKo7B,gBAAgBG,MAM3DI,QAAS,WACLhkC,KAAKwgB,OAAOyjB,QACZjkC,KAAKy2B,QAAQlG,OAAS,KACtBvwB,KAAKy2B,QAAQyH,eAAiBl+B,KAAKk+B,eAAe5W,KAAKtnB,MACvDA,KAAKy2B,QAAQyN,eACblkC,KAAKy2B,QAAQlG,OAASvwB,KAClBA,KAAK4N,OACL5N,KAAKwgB,OAAOrO,OAAOnS,KAAK4N,MAAM4S,QAElCxgB,KAAKwgB,OAAOrO,OAAOnS,KAAKy2B,QAAQjW,QAChCxgB,KAAKwjC,kBAETrB,UAAW,WAAA,GAIEv9B,GACDyD,EACA87B,EACAlQ,EAKA4P,EACAO,EACKC,EACDC,EAEIC,EAhBZ7+B,EAAO1F,KAAK0F,KACZjH,EAASiH,EAAKjH,OACd0jC,EAAY,GAAIp8B,GACpB,KAASnB,EAAM,EAAGA,EAAMnG,EAAQmG,IACxByD,EAAO3C,EAAKd,GACZu/B,EAAiB97B,EAAKpH,QAAQkJ,SAAWkH,GAAIC,GAC7C2iB,EAAU5rB,EAAK4rB,UACnBkO,EAAUgC,EAAiB,GAAKlQ,EAAQkQ,EAAiB,GACzDhC,EAAUgC,EAAiB,GAAKlQ,EAAQkQ,EAAiB,EAE7D,IAAqB,IAAjBhC,EAAU1c,GAGV,IAFIoe,EAAU7jC,KAAKuwB,OAAO7qB,KACtB0+B,EAAWP,EAAQplC,OACd4lC,EAAQ,EAAGA,EAAQD,EAAUC,IAC9BC,EAAST,EAAQQ,GAChBC,EAAOrjC,QAAQkJ,WACZo6B,EAAYD,EAAOrQ,UACvBkO,EAAU3c,GAAK+e,EAAU/e,GACzB2c,EAAU1c,GAAK8e,EAAU9e,GAIrC,OAAO0c,IAEXvS,QAAS,WACL,MAAO5vB,MAAK4iC,eAAehT,WAG/BpqB,GAAK,EAIT2V,GAAKuM,UAAU+a,aAAc,EAC7B9wB,GAAkBwJ,IACdrW,UACA0/B,aAAa,EACb52B,OAASggB,MAAO3iB,GAChBQ,SAAS,IAET2P,GAAe3J,GAAa5R,QAC5BC,KAAM,SAAUsE,EAAQnD,EAAS2lB,GAC7BnV,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKykC,WAAWrgC,EAAQnD,GACxBjB,KAAKoE,OAASA,EACdpE,KAAK0kC,aACL1kC,KAAKwiC,UACLxiC,KAAKiB,QAAQ0jC,OAAOlI,SACpBz8B,KAAK0F,QACL1F,KAAK4kC,cACL5kC,KAAK4mB,aAAeA,EACpB5mB,KAAK6kC,cACL7kC,KAAKmnB,SACLnnB,KAAK8kC,oBAETL,WAAY,aAEZC,WAAY,WAAA,GAECnmC,GADL6F,EAASpE,KAAKoE,MAClB,KAAS7F,EAAI,EAAGA,EAAI6F,EAAO3F,OAAQF,IAC/B6F,EAAO7F,GAAGgN,MAAQhN,GAG1BsmC,YAAa,WAMT,QAASE,GAAS9jC,EAASsC,GACnByI,GAAS/K,EAAQ2M,SACjB3M,EAAQ2M,OAAU5O,KAAMiC,EAAQ2M,QAEpC3M,EAAQ2M,MAAQxL,MAAemB,EAASqK,MAAO3M,EAAQ2M,OAVlD,GAYArP,GACD0C,EAEA+jC,EAdJ5jB,EAASphB,KACTuD,GAAaqK,OAASxH,OAAQpG,KAAKiB,QAAQ2M,WAAaxH,QACxD6+B,KACAC,EAAcllC,KAAKiB,QAAQgkC,UAC3BE,EAAc5gC,KAAKC,IAAI0gC,EAAYzmC,OAAQ,EAO/C,KAASF,EAAI,EAAGA,EAAI4mC,EAAa5mC,IACzB0C,EAAUikC,EAAY3mC,OAC1BwmC,EAAS9jC,EAASsC,GACdyhC,EAAc,GAAI7pB,IAAKla,GAC3B+jC,EAAYI,UAAY7mC,EACxB0mC,EAAM/mC,KAAK8mC,GACX5jB,EAAOjP,OAAO6yB,EAElBhlC,MAAKilC,MAAQA,GAEjBH,iBAAkB,SAAUG,GAAV,GAKL1mC,GACD0H,EACKs8B,EACDl6B,EAEIg9B,EATZjkB,EAASphB,IAIb,KAHc,SAAVilC,IACAA,EAAQjlC,KAAKilC,OAER1mC,EAAI,EAAGA,EAAI0mC,EAAMxmC,OAAQF,IAE9B,IADI0H,EAAOg/B,EAAM1mC,GACRgkC,EAAI,EAAGA,EAAIt8B,EAAKP,KAAKjH,OAAQ8jC,IAC9Bl6B,EAAOpC,EAAKP,KAAK68B,GACjBl6B,EAAKpH,QAAQ0/B,WAAat4B,EAAKpH,QAAQ0/B,UAAUl1B,UAC7C45B,EAAmB,GAAIpqB,IAAUmG,EAAOwF,aAAcve,EAAMA,EAAKpH,QAAQ0/B,WAC7Evf,EAAOwjB,WAAW1mC,KAAKmnC,GACvBp/B,EAAKwwB,QAAQtkB,OAAOkzB,KAKpCC,iBAAkB,SAAUr/B,GAAV,GAGL1H,GACIgkC,EAHTqC,EAAa5kC,KAAK4kC,WAClBl/B,EAAOO,EAAKP,IAChB,KAASnH,EAAIqmC,EAAWnmC,OAAS,EAAGF,GAAK,EAAGA,IACxC,IAASgkC,EAAI,EAAGA,EAAI78B,EAAKjH,OAAQ8jC,IAC7B,GAAIqC,EAAWrmC,GAAG8J,OAAS3C,EAAK68B,GAAI,CAChCqC,EAAWW,OAAOhnC,EAAG,EACrB,SAKhBinC,eAAgB,WAAA,GAEH5gC,GADLggC,EAAa5kC,KAAK4kC,UACtB,KAAShgC,EAAM,EAAGA,EAAMggC,EAAWnmC,OAAQmG,IACvCggC,EAAWhgC,GAAK67B,QAGxBgF,SAAU,SAAUj8B,GAAV,GAEFk8B,GACKnnC,EAFL0mC,EAAQjlC,KAAKilC,KAEjB,KAAS1mC,EAAI,EAAGA,EAAI0mC,EAAMxmC,OAAQF,IAC9B,GAAI0mC,EAAM1mC,GAAG0C,QAAQuI,OAASA,EAAM,CAChCk8B,EAAeT,EAAM1mC,EACrB,OAGR,MAAOmnC,IAAgBT,EAAM,IAEjCU,cAAe,SAAU7lB,GAAV,GAEP4lB,GACKnnC,EAFL0mC,EAAQjlC,KAAKilC,KAEjB,KAAS1mC,EAAI,EAAGA,EAAI0mC,EAAMxmC,OAAQF,IAC9B,GAAI0mC,EAAM1mC,GAAG4C,IAAIykC,cAAc9lB,GAAQ,CACnC4lB,EAAeT,EAAM1mC,EACrB,OAGR,MAAOmnC,IAEX1C,WAAY,SAAU36B,GAClB,GAAIpC,GAAOjG,KAAKylC,SAASp9B,EAAKpH,QAAQgF,KACtCA,GAAK+8B,WAAW36B,GAChBrI,KAAK0F,KAAKxH,KAAKmK,GACfA,EAAKiY,SAAWtgB,MAEpBojC,WAAY,SAAUyC,GAAV,GAGCtnC,GACD8J,EAHJ+Y,EAASphB,KACT8lC,IACJ,KAASvnC,EAAI,EAAGA,EAAIyB,KAAK0F,KAAKjH,OAAQF,IAC9B8J,EAAO+Y,EAAO1b,KAAKnH,GACnBsnC,IAAiBx9B,EACjBy9B,EAAa5nC,KAAKmK,GAElBA,EAAKq4B,SAGb1gC,MAAK0F,KAAOogC,GAEhB7C,YAAa,SAAU5e,EAAOpe,GAC1BjG,KAAKwiC,OAAOtkC,KAAKmmB,GACbpe,EACAA,EAAKg9B,YAAY5e,GAEjBrkB,KAAKmS,OAAOkS,IAGpBgf,YAAa,SAAU0C,GAAV,GAGAxnC,GACD8lB,EAHJjD,EAASphB,KACTgmC,IACJ,KAASznC,EAAI,EAAGA,EAAIyB,KAAKwiC,OAAO/jC,OAAQF,IAChC8lB,EAAQjD,EAAOohB,OAAOjkC,GACtB8lB,IAAU0hB,EACVC,EAAe9nC,KAAKmmB,GAEpBA,EAAMqc,SAGd1gC,MAAKwiC,OAASwD,GAElBC,YAAa,SAAU7hC,GAAV,GAOA7F,GACDuI,EACAo/B,EAIAlnC,EACAquB,EAOA9pB,EACA6C,EAIA+/B,EAA2BC,EAzB/BvjC,EAAQuB,EAAO3F,OACfkmC,EAAS3kC,KAAKiB,QAAQ0jC,OACtBh3B,EAASg3B,EAAOh3B,WAChB04B,EAAgB1B,EAAO0B,kBACvBC,EAAsBD,EAAc14B,WACpClJ,IACJ,KAASlG,EAAI,EAAGA,EAAIsE,EAAOtE,IACnBuI,EAAgB1C,EAAO7F,GACvB2nC,EAAgBp/B,EAAc2E,WAAY,EAC1C3E,EAAcy/B,mBAAoB,IAGlCvnC,EAAO8H,EAAc0C,MAAQ,GAC7B6jB,EAAgB6Y,EAAgBv4B,EAAO8f,SAAW6Y,EAAoB7Y,UAAY9f,EAAO8f,SACzFJ,IACAruB,EAAO8S,GAAgB4b,QAAQL,IAC3BruB,KAAMA,EACNoF,OAAQ0C,KAGZvD,EAAWuD,EAAcyH,UACzBnI,EAAQU,EAAcV,MACtBpC,GAAWoC,IAAU7C,IACrB6C,EAAQ7C,EAAS6C,OAEjB+/B,EAAmB,OAAQC,EAAc,OACzCF,GACAC,KACAC,EAAchgC,IAEd+/B,GACI//B,MAAOkgC,EAAoBlgC,MAC3B25B,KAAMuG,EAAoBvG,MAE9BqG,EAAcC,EAAc/Y,QAAQlnB,OAEpCpH,GACAyF,EAAKvG,MACDc,KAAMA,EACN2O,OAAQw4B,EACRC,YAAaA,EACbhiC,OAAQ0C,EACR0/B,OAAQN,IAIpB/zB,IAAOwyB,EAAOlI,MAAOh4B,IAEzBgiC,UAAW,SAAUxB,GAAV,GAGEyB,GACDC,EACKr+B,EACDD,EALRu+B,KACAC,IACJ,KAASH,EAAS,EAAGA,EAASzB,EAAMxmC,OAAQioC,IAExC,IADIC,EAAW1B,EAAMyB,GAAQhhC,KACpB4C,EAAS,EAAGA,EAASq+B,EAASloC,OAAQ6J,IACvCD,EAAOs+B,EAASr+B,GAChBD,EAAKpH,QAAQkJ,SACb08B,EAAM3oC,KAAKmK,GAEXu+B,EAAM1oC,KAAKmK,EAIvB,QACIkE,EAAGq6B,EACHp6B,EAAGq6B,EACHC,IAAKF,EAAM3/B,OAAO4/B,KAG1BE,kBAAmB,WAAA,GAINxoC,GACDuI,EACAb,EALJmb,EAASphB,KACToE,EAASpE,KAAKoE,OACd4iC,IACJ,KAASzoC,EAAI,EAAGA,EAAI6F,EAAO3F,OAAQF,IAC3BuI,EAAgB1C,EAAO7F,GACvB0H,EAAOmb,EAAO6lB,eAAengC,GAC7BkgC,EAAa/gC,GACb+gC,EAAa/gC,GAAM/H,KAAK4I,GAExBkgC,EAAa/gC,IAASa,EAG9B,OAAOkgC,IAEXE,oBAAqB,SAAU9iC,GAAV,GAER7F,GACDuI,EAFJC,IACJ,KAASxI,EAAI,EAAGA,EAAI6F,EAAO3F,OAAQF,IAC3BuI,EAAgB1C,EAAO7F,GACvBuI,EAAc2E,WAAY,GAC1B1E,EAAO7I,KAAK4I,EAGpB,OAAOC,IAEXyd,OAAQ,SAAUC,GAAV,GACAxjB,GAAUjB,KAAKiB,QAAQqf,SACvB2kB,EAAQjlC,KAAKilC,MACbnX,EAAS7b,GAAWhR,EAAQ6sB,OAChC9tB,MAAKmB,IAAMsjB,EAAU3e,QAAQqhC,MAAMrZ,GACnC9tB,KAAKonC,cACLpnC,KAAKqnC,WAAWpC,GAChBjlC,KAAKsnC,aAAarC,IAEtBsC,OAAQ,SAAUtC,GAAV,GAIK1mC,GAQA4kC,EAXL/hB,EAASphB,KACTwnC,KAAgBvgC,OAAOg+B,EAE3B,KADAjlC,KAAK0kC,aACInmC,EAAI,EAAGA,EAAIipC,EAAW/oC,OAAQF,IACnC6iB,EAAOkkB,iBAAiBkC,EAAWjpC,IACnCipC,EAAWjpC,GAAG2kC,OAMlB,KAJAljC,KAAKmnB,OAAOqgB,GACZxnC,KAAKqnC,WAAWrnC,KAAKilC,OACrBjlC,KAAKsnC,aAAaE,GAClBxnC,KAAK8kC,iBAAiB0C,GACbrE,EAAM,EAAGA,EAAMqE,EAAW/oC,OAAQ0kC,IACvCqE,EAAWrE,GAAKa,WAGxBxY,mBAAoB,SAAUnjB,EAAMo/B,GAAhB,GAKPlpC,GAJL0C,EAAUoH,EAAKpH,QACfsqB,KAAoBtkB,OAAOhG,EAAQuqB,oBAAsBvqB,EAAQ2nB,mBACjE8e,EAAcD,EAAahpC,OAAS8sB,EAAe9sB,OACnDkpC,EAAepc,EAAe,IAAM,CACxC,KAAShtB,EAAI,EAAGA,EAAImpC,EAAanpC,IAC7BgtB,EAAertB,KAAKypC,EAExB,OAAOpc,IAEXqc,YAAa,SAAUv/B,EAAMw/B,EAAYC,EAAeC,GAA3C,GACL9nB,GAAO5X,EAAKyc,QAAQgjB,EAAeA,GAAe,GAClDE,EAAW3/B,EAAKpH,QAAQqqB,QAAU,EAAI,EACtCiU,EAAasI,EAAW/iB,QAAQijB,EAAqBA,GAAqB,GAC1EE,EAAaJ,EAAW5mC,QAAQqqB,QAAU,EAAI,EAC9C3lB,EAAU0C,EAAKlH,IAAIogC,UAAUhC,EAAWjuB,GAAI22B,GAAchoB,EAAK3O,GAAI02B,GAAWzI,EAAWluB,GAAI42B,GAAchoB,EAAK5O,GAAI22B,GACpH3/B,GAAKpC,OAAS4hC,EAAW5hC,MACzBN,EAAQ47B,UAAU,EAAGl5B,EAAKpC,KAAK9E,IAAImkB,GAAKuiB,EAAW5hC,KAAK9E,IAAImkB,IAEhEjd,EAAKmc,OAAO7e,IAEhBuiC,UAAW,SAAUtB,EAAOC,GAAjB,GAUEtoC,GACD8J,EACApC,EACAkiC,EACAjiC,EACAkiC,EA8BCjF,EACDmB,EACA+D,EACAC,EACAC,EACAC,EAjDJpnB,EAASphB,KACTyoC,EAAU7B,EAAM,GAChB8B,EAAU7B,EAAM,GAChB8B,EAAmB3oC,KAAKwrB,mBAAmBid,EAAS5B,GACpD+B,EAAmB5oC,KAAKwrB,mBAAmBkd,EAAS9B,GACpDiC,KACAC,KACAC,KACAC,IACJ,KAASzqC,EAAI,EAAGA,EAAIsoC,EAAMpoC,OAAQF,IAC1B8J,EAAOw+B,EAAMtoC,GACb0H,EAAOoC,EAAKpC,KACZkiC,EAASliC,EAAKy8B,GACdx8B,EAASF,EAAW4gC,EAAO3gC,IAASwiC,EACpCL,EAAkBO,EAClBziC,IAAWuiC,IACXL,EAAkBhnB,EAAOoK,mBAAmBtlB,EAAQ2gC,IAExDzlB,EAAOwmB,YAAYv/B,EAAMnC,EAAQ0iC,EAAiBrqC,GAAI6pC,EAAgB7pC,IAClE8J,EAAKpH,QAAQgoC,WAGbz+B,GAAMnC,EAAK4rB,UAAUzO,MAAQhb,GAAMtE,EAAO+tB,UAAUzO,MAChDqjB,EAAYV,IACZ9/B,EAAKmc,OAAOnc,EAAKlH,IAAI2tB,QAAQ+Z,EAAYV,GAAQhnC,IAAK8J,GAAMs2B,WAAWl5B,EAAKpH,QAAQ6sB,OAAQ,IAEhG+a,EAAYV,GAAU9/B,GAEtBmC,GAAMnC,EAAK4rB,UAAUxO,MAAQjb,GAAMtE,EAAO+tB,UAAUxO,MAC/Cpd,EAAK6gC,YACN7gC,EAAKpH,QAAQ0M,OAAOw7B,QAAU9gC,EAAKpH,QAAQ0M,OAAOw7B,OAClD9gC,EAAK6gC,WAAY,GAErB9nB,EAAOwmB,YAAYv/B,EAAMnC,EAAQ0iC,EAAiBrqC,GAAI6pC,EAAgB7pC,IAClEuqC,EAAaX,IACb9/B,EAAKmc,OAAOnc,EAAKlH,IAAI2tB,QAAQga,EAAaX,GAAQhnC,IAAK6J,IAAOu2B,UAAUl5B,EAAKpH,QAAQ6sB,OAAQ,IAEjGgb,EAAaX,GAAU9/B,GAEjB,IAAN9J,GAAWmqC,EAAQziC,OAASoC,EAAKpC,OACjCoC,EAAKymB,QAAQ4Z,GACbrgC,EAAKmc,OAAOnc,EAAKlH,MAGzB,KAASgiC,EAAM,EAAGA,EAAMyD,EAAMnoC,OAAQ0kC,IAC9BmB,EAASsC,EAAMzD,GACfkF,EAAS/D,EAAOr+B,KAChBqiC,EAAWD,EAAO3F,GAClB6F,EAAWviC,EAAW6gC,EAAOwB,IAAWK,EACxCF,EAAoBI,EACpBL,IAAaG,IACbF,EAAoBpnB,EAAOoK,mBAAmB+c,EAAU3B,IAE5DxlB,EAAOwmB,YAAYtD,EAAQiE,EAAUI,EAAiBxF,GAAMqF,EAAkBrF,IAC1EmB,EAAOrjC,QAAQgoC,WAGfz+B,GAAM85B,EAAOrQ,UAAU3O,MAAQ9a,GAAM+9B,EAAStU,UAAU3O,MACnDgf,EAAO4E,YACR5E,EAAOrjC,QAAQ0M,OAAOw7B,QAAU7E,EAAOrjC,QAAQ0M,OAAOw7B,OACtD7E,EAAO4E,WAAY,GAEvB9nB,EAAOwmB,YAAYtD,EAAQiE,EAAUI,EAAiBxF,GAAMqF,EAAkBrF,IAC1E4F,EAAWT,IACXhE,EAAO9f,OAAO8f,EAAOnjC,IAAI2tB,QAAQia,EAAWT,GAAUnnC,IAAKiK,GAAKm2B,UAAU,GAAI+C,EAAOrjC,QAAQ6sB,SAEjGib,EAAWT,GAAYhE,GAEvB95B,GAAM85B,EAAOrQ,UAAU1O,GAAIxU,EAAiBq4B,mBAAqB5+B,GAAM+9B,EAAStU,UAAU1O,GAAIxU,EAAiBq4B,mBAC3GJ,EAAcV,IACdhE,EAAO9f,OAAO8f,EAAOnjC,IAAI2tB,QAAQka,EAAcV,GAAUnnC,IAAKgK,GAAQo2B,UAAU,EAAG+C,EAAOrjC,QAAQ6sB,SAEtGkb,EAAcV,GAAYhE,GAElB,IAARnB,IACAmB,EAAOxV,QAAQ2Z,GACfnE,EAAO9f,OAAO8f,EAAOnjC,QAIjCkoC,gBAAiB,SAAUpE,GAAV,GAIJ1mC,GACDymC,EAMK7B,EACDnB,EAXRt8B,EAAO1F,KAAKymC,UAAUxB,GAAO6B,IAC7BnhC,EAAUF,EAAaC,GACvB4jC,EAAY,CAChB,KAAS/qC,EAAI,EAAGA,EAAI0mC,EAAMxmC,OAAQF,IAC1BymC,EAAcC,EAAM1mC,GACpBymC,EAAYt/B,KAAKjH,OAAS,IAC1B6qC,EAAY/kC,KAAKC,IAAI8kC,EAAW3jC,EAAQ/G,QAAUomC,EAAYp/B,WAAWhH,SAGjF,IAAkB,IAAd0qC,EACA,IAASnG,EAAM,EAAGA,EAAMz9B,EAAKjH,OAAQ0kC,IAC7BnB,EAAct8B,EAAKy9B,GAClBnB,EAAY/gC,QAAQkJ,UACrB63B,EAAYxd,OAAOwd,EAAY7gC,IAAIooC,OAAOD,EAAW,KAKrEE,iBAAkB,SAAUvE,GAAV,GACVwE,GACKlrC,EACDymC,EACAt/B,EACAgkC,EAESnH,EACDP,CANhB,KAASzjC,EAAI,EAAGA,EAAI0mC,EAAMxmC,OAAQF,IAI9B,GAHIymC,EAAcC,EAAM1mC,GACpBmH,EAAOs/B,EAAYt/B,KACnBgkC,EAAYnlC,KAAKC,IAAI,EAAGiB,EAAaC,GAAM7G,SAAWmmC,EAAYp/B,WAAW/G,UAC/D,IAAd6qC,EAAiB,CACjB,IAASnH,EAAI,EAAGA,EAAI78B,EAAKjH,OAAQ8jC,IACzBP,EAAct8B,EAAK68B,GACnBP,EAAY/gC,QAAQkJ,UACpB63B,EAAYxd,OAAOwd,EAAY7gC,IAAIooC,OAAO,EAAGG,GAGrDD,IAAW,EAGnB,MAAOA,IAEXE,QAAS,SAAU1E,GAAV,GAGI1mC,GACDymC,EACA2B,EACAiD,EAEIjkC,EACAkkC,EAEKtH,EACDP,EAKPmB,EACD2G,EAjBJpkC,EAAO1F,KAAKymC,UAAUxB,GAAO6B,IAC7BiD,EAAU,CACd,KAASxrC,EAAI,EAAGA,EAAI0mC,EAAMxmC,OAAQF,IAI9B,GAHIymC,EAAcC,EAAM1mC,GACpBooC,EAAW3B,EAAYt/B,KACvBkkC,EAAU5E,EAAYp/B,WACtB+gC,EAASloC,OAAS,EAIlB,IAHIkH,EAAUF,EAAakhC,GACvBkD,EAAUtlC,KAAKC,IAAIolC,EAAQtkB,GAAK3f,EAAQ2f,GAAIskB,EAAQrkB,GAAK5f,EAAQ4f,IACrEwkB,EAAUxlC,KAAKC,IAAIulC,EAASH,EAAQpkB,GAAK7f,EAAQ6f,IACxC+c,EAAI,EAAGA,EAAIoE,EAASloC,OAAQ8jC,IAC7BP,EAAc2E,EAASpE,GAC3BP,EAAYxd,OAAOwd,EAAY7gC,IAAIogC,UAAU,EAAGsI,GAI5D,KAAS1G,EAAM,EAAGA,EAAMz9B,EAAKjH,OAAQ0kC,IAC7B2G,EAAgBpkC,EAAKy9B,GACzB2G,EAActlB,OAAOslB,EAAc3oC,IAAIogC,UAAUwI,EAAS,KAGlE1C,WAAY,SAAUpC,GAAV,GAGC1mC,GAFL6iB,EAASphB,KACT0F,EAAO1F,KAAKymC,UAAUxB,EAC1B,KAAS1mC,EAAI,EAAGA,EAAI0mC,EAAMxmC,OAAQF,IAC9B6iB,EAAO4oB,eAAe/E,EAAM1mC,GAE5BmH,GAAK6G,EAAE9N,OAAS,GAAKiH,EAAK8G,EAAE/N,OAAS,IACrCuB,KAAKkoC,UAAUxiC,EAAK6G,EAAG7G,EAAK8G,GAC5BxM,KAAKqpC,gBAAgBpE,GACrBjlC,KAAKiqC,qBAAqBvkC,GAC1B1F,KAAKkoC,UAAUxiC,EAAK6G,EAAG7G,EAAK8G,GACxBxM,KAAKqpC,gBAAgBpE,IACrBjlC,KAAKkoC,UAAUxiC,EAAK6G,EAAG7G,EAAK8G,GAEhCxM,KAAKwpC,iBAAiBvE,GACtBjlC,KAAKkoC,UAAUxiC,EAAK6G,EAAG7G,EAAK8G,GACxBxM,KAAKwpC,iBAAiBvE,IACtBjlC,KAAKkoC,UAAUxiC,EAAK6G,EAAG7G,EAAK8G,GAEhCxM,KAAK2pC,QAAQ1E,KAGrBgF,qBAAsB,SAAUC,GAAV,GAKdC,GACKvlC,EACDyD,EAMKg8B,EAZTjjB,EAASphB,KACTmmB,EAAMnmB,KACN0F,EAAOygB,EAAIzgB,KACXu/B,EAAQ9e,EAAI8e,KAEhB,KAASrgC,EAAM,EAAGA,EAAMc,EAAKjH,OAAQmG,IAC7ByD,EAAO3C,EAAKd,GACZyD,EAAK+hC,qBACLD,GAAU,EAGlB,IAAIA,EAAS,CACT,IAAS9F,EAAQ,EAAGA,EAAQY,EAAMxmC,OAAQ4lC,IACtCjjB,EAAO4oB,eAAe/E,EAAMZ,GAE5B6F,GAAY39B,EAAE9N,OAAS,GAAKyrC,EAAY19B,EAAE/N,OAAS,IACnDuB,KAAKkoC,UAAUgC,EAAY39B,EAAG29B,EAAY19B,GAC1CxM,KAAKqpC,gBAAgBpE,MAIjC+E,eAAgB,SAAU/jC,GAAV,GAIC1H,GAHTmH,EAAOO,EAAKP,KACZjH,EAASiH,EAAKjH,MAClB,IAAIA,EAAS,EACT,IAASF,EAAI,EAAGA,EAAIE,EAAQF,IACxBmH,EAAKnH,GAAGimB,OAAOve,EAAKL,aAIhC0hC,aAAc,SAAUrC,GAAV,GAID1mC,GACD8rC,EAJJ7H,EAASxiC,KAAKwiC,OACd3/B,EAAQ2/B,EAAO/jC,OACf0C,EAAMnB,KAAKmB,GACf,KAAS5C,EAAI,EAAGA,EAAIsE,EAAOtE,IACnB8rC,EAAY7H,EAAOjkC,GAAG0H,KACrBokC,IAAavmC,GAAQumC,EAAWpF,IACjCzC,EAAOjkC,GAAGimB,OAAOrjB,IAI7BimC,YAAa,WAAA,GASA7oC,GACDymC,EACAnmC,EAMQyrC,EAOPnH,EACDoH,EAKCC,EACDC,EACAb,EA/BJzjB,EAAMnmB,KACNmB,EAAMglB,EAAIhlB,IACV8jC,EAAQ9e,EAAI8e,MACZE,EAAcF,EAAMxmC,OACpBisC,EAAkBvpC,EAAItC,SACtB8rC,EAAiBxF,EACjByF,EAAkB,EAClB9T,EAAM31B,EAAImkB,EACd,KAAS/mB,EAAI,EAAGA,EAAI4mC,EAAa5mC,IACzBymC,EAAcC,EAAM1mC,GACpBM,EAASmmC,EAAY/jC,QAAQpC,OACjCmmC,EAAY/jC,QAAQrC,MAAQuC,EAAIvC,QAC3BomC,EAAY/jC,QAAQpC,QAGjBA,EAAO4H,SAAW5H,EAAO4H,QAAQ,OAC7B6jC,EAAWO,SAAShsC,EAAQ,IAAM,IACtCmmC,EAAY/jC,QAAQpC,OAASyrC,EAAWnpC,EAAItC,UAEhDmmC,EAAYxgB,OAAOrjB,EAAI2E,SACvB4kC,GAAmB1F,EAAY/jC,QAAQpC,QAPvC+rC,GAUR,KAASzH,EAAM,EAAGA,EAAMgC,EAAahC,IAC7BoH,EAAgBtF,EAAM9B,GACrBoH,EAActpC,QAAQpC,SACvB0rC,EAActpC,QAAQpC,OAAS6rC,EAAkBE,EAGzD,KAASJ,EAAM,EAAGA,EAAMrF,EAAaqF,IAC7BC,EAAgBxF,EAAMuF,GACtBZ,EAAUzoC,EAAI2E,QAAQu2B,KAAKl7B,EAAIqkB,GAAIsR,GACvC2T,EAAcjmB,OAAOolB,GACrBe,IACA7T,GAAO2T,EAAcxpC,QAAQpC,QAGrCisC,cAAe,WAAA,GAGP3pC,GACK5C,EACDwsC,EACKxI,EACDyI,EAEI/W,EARZvuB,EAAO1F,KAAK0F,KACZulC,EAAYvlC,EAAKjH,MAErB,KAASF,EAAI,EAAGA,EAAI0sC,EAAW1sC,IAE3B,IADIwsC,EAAQrlC,EAAKnH,GACRgkC,EAAI,EAAGA,EAAI0I,EAAW1I,IACvByI,EAAQtlC,EAAK68B,GACbwI,EAAM9pC,QAAQkJ,WAAa6gC,EAAM/pC,QAAQkJ,WACrC8pB,EAAU8W,EAAM9W,UAAUnuB,QAAQD,KAAKmlC,EAAM/W,WAI7C9yB,EAHCA,EAGKA,EAAI0E,KAAKouB,GAFTA,EAOtB,OAAO9yB,IAAOnB,KAAKmB,KAEvB+pC,YAAa,WAAA,GAGAtmC,GAFLqgC,EAAQjlC,KAAKilC,MACbkG,IACJ,KAASvmC,EAAM,EAAGA,EAAMqgC,EAAMxmC,OAAQmG,IAClCumC,EAAMjtC,KAAK+mC,EAAMrgC,GAAKu9B,YAE1B,OAAOgJ,IAEXC,mBAAoB,SAAUC,GAAV,GAEPzmC,GADLumC,EAAQnrC,KAAKkrC,aACjB,KAAStmC,EAAM,EAAGA,EAAMumC,EAAM1sC,OAAQmG,IAClCymC,EAAUC,MAAMptC,KAAK2U,GAAK8gB,SAASwX,EAAMvmC,GAAKkhB,YAGtDylB,wBAAyB,SAAUzrB,GAAV,GAEZlb,GADLumC,EAAQnrC,KAAKkrC,aACjB,KAAStmC,EAAM,EAAGA,EAAMumC,EAAM1sC,OAAQmG,IAClC,GAAIumC,EAAMvmC,GAAKghC,cAAc9lB,GACzB,OAAO,GAInB8F,aAAc,WAAA,GAEN3kB,GACAstB,EACAL,EACAC,EAQAqd,CAZJ/5B,IAAa6S,GAAGsB,aAAarB,KAAKvkB,MAC9BiB,EAAUjB,KAAKiB,QAAQqf,SACvBiO,EAAUttB,EAAQstB,QAClBL,EAAajtB,EAAQitB,WACrBC,EAASltB,EAAQktB,OACN,SAAXA,IACAA,MAEAhoB,EAAc+nB,KACdA,EAAa/c,GACbod,EAAU,GAEVid,EAAKxrC,KAAK0gB,UAAY,GAAI9N,IAAQ64B,WAClChX,MACIruB,MAAO8nB,EACPK,QAASA,GAEblI,QACIjgB,MAAO+nB,EAAOvvB,MAAQuvB,EAAO/nB,MAAQ,GACrCxH,MAAOuvB,EAAOvvB,MACd0nB,SAAU6H,EAAO7H,UAErBxhB,YAEJ9E,KAAKorC,mBAAmBI,GACxBxrC,KAAK0rC,aAAaF,IAEtBG,sBAAuB,SAAUC,GAAV,GAINrtC,GACD8lB,EAIApX,EAESs1B,EACDziB,EAXhB0iB,EAASxiC,KAAKwiC,OACdz7B,IACJ,IAAsB,OAAlB6kC,EACA,IAASrtC,EAAI,EAAGA,EAAIikC,EAAO/jC,OAAQF,IAE/B,GADI8lB,EAAQme,EAAOjkC,GACa,eAA5B8lB,EAAMpe,KAAKhF,QAAQuI,OAGnByD,EAASu1B,EAAOjkC,GAAGwoB,eAAe6kB,GAClC3+B,GAAUA,EAAOxO,QACjB,IAAS8jC,EAAI,EAAGA,EAAIt1B,EAAOxO,OAAQ8jC,IAC3BziB,EAAQ7S,EAAOs1B,GACfziB,GAASjb,GAAQib,EAAMzf,QAA0B,OAAhByf,EAAMzf,OACvC0G,EAAO7I,KAAK4hB,EAMhC,OAAO/Y,IAEX8kC,oBAAqB,SAAUC,GAC3B,MAAO9rC,MAAK+rC,aAAa,SAAUjsB,GAC/B,MAAOA,GAAM1b,OAAOmH,QAAUugC,KAGtCE,mBAAoB,SAAUxiC,GAC1B,MAAOxJ,MAAK+rC,aAAa,SAAUjsB,GAC/B,MAAOA,GAAM1b,OAAOoF,OAASA,KAGrCuiC,aAAc,SAAUngB,GAAV,GAGDrtB,GACD8lB,EACApX,EACKs1B,EACDziB,EANR0iB,EAASxiC,KAAKwiC,OACdz7B,IACJ,KAASxI,EAAI,EAAGA,EAAIikC,EAAO/jC,OAAQF,IAG/B,IAFI8lB,EAAQme,EAAOjkC,GACf0O,EAASoX,EAAMpX,OACVs1B,EAAI,EAAGA,EAAIt1B,EAAOxO,OAAQ8jC,IAC3BziB,EAAQ7S,EAAOs1B,GACfziB,GAAS8L,EAAS9L,IAClB/Y,EAAO7I,KAAK4hB,EAIxB,OAAO/Y,IAEXklC,UAAW,SAAUrgB,GAAV,GAEErtB,GACD8lB,EACApX,EACKs1B,EACDziB,EALR0iB,EAASxiC,KAAKwiC,MAClB,KAASjkC,EAAI,EAAGA,EAAIikC,EAAO/jC,OAAQF,IAG/B,IAFI8lB,EAAQme,EAAOjkC,GACf0O,EAASoX,EAAMpX,OACVs1B,EAAI,EAAGA,EAAIt1B,EAAOxO,OAAQ8jC,IAE/B,GADIziB,EAAQ7S,EAAOs1B,GACfziB,GAAS8L,EAAS9L,GAClB,MAAOA,IAKvBosB,YAAa,SAAUpsB,GAAV,GAEAvhB,GACD0H,EAFJg/B,EAAQjlC,KAAKilC,KACjB,KAAS1mC,EAAI,EAAGA,EAAI0mC,EAAMxmC,OAAQF,IAE9B,GADI0H,EAAOg/B,EAAM1mC,GACb0H,EAAK9E,IAAIykC,cAAc9lB,GACvB,MAAO7Z,MA+BvB0L,GAAkByJ,IACdhX,UACAkc,UAAYwN,WACZI,WAAY,GACZC,QACI/nB,MAAOmL,GACP3S,MAAO,GAEX+lC,QACI0B,eACI14B,QAAUvH,MAAO,WACjBknB,SAAWlnB,MAAO,eAI1BiV,IACAsR,MAAO,SAAUtI,EAAOxb,GACpB7I,KAAKmsC,eAAe9nB,EAAOxb,EAAGqO,KAElCsV,MAAO,SAAUnI,EAAOxb,GACpB7I,KAAKmsC,eAAe9nB,EAAOxb,EAAGoO,MAGlCqE,GAAmB1b,EAAMC,QACzBC,KAAM,SAAUsE,EAAQof,EAAQ4oB,GAA1B,GASO7tC,GACDyE,EACAqpC,EAVJ9qB,EAAkBiC,EAAOjC,gBAAgBnd,GACzC2H,EAAcyX,EAAOzX,YAAY3H,GACjC4d,EAAewB,EAAOxB,aAAa5d,EAAQmd,GAC3C+qB,EAAetsC,KAAKusC,iBACpBhpC,EAAW6oC,EAAkB5V,MAAMpyB,EAAO8C,MAC1CslC,EAAgBpoC,EAAOqoC,WAAalpC,CAGxC,KAFAvD,KAAK0sC,QAAUtoC,EACfpE,KAAK2sC,QAAUnpB,EACNjlB,EAAI,EAAGA,EAAIgjB,EAAgB9iB,OAAQF,IAAK,CAG7C,GAFIyE,EAAQue,EAAgBhjB,GACxB8tC,EAAiB,OACjBnoC,GAASsoC,GACTH,EAAiBG,EAAcxpC,OAC5B,CAAA,GAAU,IAANzE,IAAWuF,GAAQd,EAAO+I,GAGjC,KAFAsgC,GAAiBG,EAIjBH,GACAC,EAAapuC,MACT0uC,cAAe5pC,EACfwG,KAAMwY,EAAazjB,GACnB6U,UAAWpP,GAAWqoC,GAAkBA,EAAiB94B,GAAW84B,OAKpFQ,gBAAiB,SAAUC,EAAW1kB,GAArB,GASL9D,GAKC/lB,EACDyE,EACA+pC,EACA1sC,EAhBJ+gB,EAASphB,KACTmmB,EAAMnmB,KACNoE,EAAS+hB,EAAIumB,QACbJ,EAAenmB,EAAIomB,cACnB9nC,EAAOzE,KAAKgtC,YAAYF,OACxBG,EAAgBxoC,EAAKyoC,UAAU,GAC/BnmC,IAOJ,MANIkmC,GAAkBnqC,EAASmqC,IAAmB3nC,GAAQ2nC,KAClD3oB,EAAK,aAETA,EAAGoD,UAAYulB,EACflmC,EAAS,GAAIud,IAER/lB,EAAI,EAAGA,EAAI+tC,EAAa7tC,OAAQF,IAAK,CAI1C,GAHIyE,EAAQspC,EAAa/tC,GACrBwuC,EAAY3rB,EAAO+rB,WAAW1oC,EAAK9B,OAAQK,EAAM4pC,eACjDvsC,EAAQ2C,EAAMoQ,UAAU25B,EAAW3oC,EAAQK,EAAKyoC,UAAW9kB,KACjD,OAAV/nB,IAAkB6D,GAAS7D,IAAWwE,GAAQxE,EAAM5B,SAAa4B,YAAiBsH,OAAO,CACzFZ,EAAS1G,CACT,OAEIwE,GAAQxE,IACRgG,EAASrD,EAAMwG,KAAMzC,EAAQ1G,GAIzC,MAAO0G,IAEXimC,YAAa,SAAU//B,GAAV,GAMA1O,GACDijB,EANJ2E,EAAMnmB,KACNwjB,EAAS2C,EAAIwmB,QACbvoC,EAAS+hB,EAAIumB,QACb/pC,KACAuqC,IACJ,KAAS3uC,EAAI,EAAGA,EAAI0O,EAAOxO,OAAQF,IAC3BijB,EAAUvU,EAAO1O,GACrBoE,EAAOzE,KAAKslB,EAAO1X,UAAU1H,EAAQod,IACrC0rB,EAAUhvC,KAAKkG,EAAOK,KAAK+c,GAE/B,QACI7e,OAAQA,EACRuqC,UAAWA,IAGnBC,WAAY,SAAU1oC,EAAMzB,GAAhB,GAGCzE,GACDkjB,EACA1V,EACA1L,EALJsC,KACAE,EAAQ4B,EAAKhG,MACjB,KAASF,EAAI,EAAGA,EAAIsE,EAAOtE,IACnBkjB,EAAOhd,EAAKlG,GACZwN,EAAc0V,EAAK1V,YACnB1L,EAAQ,OAERA,EADAwE,GAAQkH,EAAY/I,IACZ+I,EAAY/I,GAEZye,EAAKnW,OAAOtI,GAExBL,EAAOzE,KAAKmC,EAEhB,OAAOsC,MAmBX4Y,GAAoB3b,EAAMC,QAC1BC,KAAM,WACFE,KAAKuO,cAET2S,SAAU,SAAUla,EAAaomC,GAAvB,GAEG7uC,GADL6iB,EAASphB,IACb,KAASzB,EAAI,EAAGA,EAAIyI,EAAYvI,OAAQF,IACpC6iB,EAAO7S,UAAUvH,EAAYzI,IAAM6uC,GAG3C5W,MAAO,SAAU1oB,GACb,MAAO9N,MAAKuO,UAAUT,MAG9ByN,GAAkBnc,QAAU,GAAImc,IAC5BC,GAAWzB,GAAIla,QACfs3B,YAAa,WAAA,GACLxpB,GAAS3N,KAAKiB,QAAQ0M,OACtB0/B,EAAcjrC,MAAeuL,EAAQA,EAAOuS,MAC5CotB,EAAYlrC,MAAeuL,EAAQA,EAAOwS,GAC1CktB,GAAY5hC,UACZzL,KAAKutC,UAAYvtC,KAAKwtC,aAAaH,GACnCrtC,KAAKmS,OAAOnS,KAAKutC,YAEjBD,EAAU7hC,UACVzL,KAAKytC,QAAUztC,KAAKwtC,aAAaF,GACjCttC,KAAKmS,OAAOnS,KAAKytC,WAGzBD,aAAc,SAAUvsC,GAAV,GACNmsB,GAEIC,CAaR,OAdIpsB,GAAQwsB,UACJJ,EAAgBvb,GAAgB4b,QAAQzsB,EAAQwsB,UACpDL,EAAYC,GACR/C,SAAUtqB,KAAKsqB,SACfpd,SAAUlN,KAAKkN,SACf7M,MAAOL,KAAKK,MACZ8qB,WAAYnrB,KAAKmrB,WACjByB,aAAc5sB,KAAK4sB,aACnB5I,MAAOhkB,KAAKgkB,MACZ5f,OAAQpE,KAAKoE,UAGjBgpB,EAAYptB,KAAK2tB,YAAY1sB,EAAQqrB,QAElC,GAAIzS,IAASuT,EAAWhrB,IAAa+H,SAAUnK,KAAKiB,QAAQkJ,UAAYlJ,KAEnFujB,OAAQ,SAAUC,GAAV,GAEA0B,GACAonB,EACAE,EACAptC,CAJJL,MAAKmnB,SACDhB,EAAMnmB,KACNutC,EAAYpnB,EAAIonB,UAChBE,EAAUtnB,EAAIsnB,QACdptC,EAAQ8lB,EAAI9lB,MAChBL,KAAKmB,IAAMsjB,EACP8oB,IACAA,EAAUtsC,QAAQgqB,UAAY5qB,EAAM6f,KAAO7f,EAAM8f,GACjDotB,EAAU/oB,OAAOC,IAEjBgpB,IACAA,EAAQxsC,QAAQgqB,UAAY5qB,EAAM8f,GAAK9f,EAAM6f,KAC7CutB,EAAQjpB,OAAOC,IAEfzkB,KAAKitB,MACLjtB,KAAKitB,KAAKzI,OAAOC,MAI7BjJ,GAASkM,UAAUnkB,SAAWnB,MAAeoZ,GAASkM,UAAUnkB,UAC5DoK,QAAU2e,OAAQ,aAClBhe,SAAWge,OAAQ,SAEnB7Q,GAAgBvB,GAASra,QACzB4nB,UAAW,WACP,MAAOjM,KAEXmI,WAAY,SAAUlf,GAClB,MAAOA,GAAKsH,aAEhBsgB,iBAAkB,SAAUvM,EAAOwM,GAC/B,MAAyB,QAArBxM,EAAMzf,MAAM6f,MAAoC,OAAnBJ,EAAMzf,MAAM8f,GAClC,GAEJngB,KAAK4mB,aAAa0F,OAAOC,KAAKD,EAAQxM,EAAMzf,MAAM6f,KAAMJ,EAAMzf,MAAM8f,KAE/EkI,UAAW,SAAUvI,GACjB,MAAKA,IAIDA,EAAMzf,MAAM6f,KACZJ,EAAMzf,MAAM8f,IAJL,GAOfgK,YAAa,SAAU9pB,EAAOiL,GAAjB,GACLmC,GAAWnC,EAAOlH,OAAOiE,KACzB6X,EAAO7f,EAAM6f,KACbC,EAAK9f,EAAM8f,GACX7W,EAAYtJ,KAAK8mB,gBAAgBrZ,EACvB,QAAVpN,GAAkByC,EAASod,IAASpd,EAASqd,KAC7C7W,EAAYtJ,KAAK8mB,gBAAgBrZ,GAAYnE,IACzCG,IAAKuH,EACLxM,IAAKyM,GAET3H,EAAUG,IAAMlF,KAAKkF,IAAIH,EAAUG,IAAKyW,GACxC5W,EAAU9E,IAAMD,KAAKC,IAAI8E,EAAU9E,IAAK0b,GACxC5W,EAAUG,IAAMlF,KAAKkF,IAAIH,EAAUG,IAAK0W,GACxC7W,EAAU9E,IAAMD,KAAKC,IAAI8E,EAAU9E,IAAK2b,KAGhD8K,UAAW,SAAUnL,GACjB,GAAIzf,GAAQyf,EAAMzf,KAClB,OAAOA,GAAM6f,KAAO7f,EAAM8f,MAGlC1E,GAAciM,UAAUgmB,WAAah1B,GAAiBgP,UAAUgmB,WAC5DhyB,GAAYvB,GAAYta,QACxB2kB,OAAQ,SAAUrjB,GAAV,GAcAo4B,GAbApT,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdZ,EAAQ8lB,EAAI9lB,MACZgkB,EAAQ8B,EAAIkE,MACZ1B,EAAYtE,EAAMsC,gBAAgB1lB,GAClC0sC,KACAC,KACAC,KACAnU,EAAS/Q,EAAU7D,QAAQzkB,EAAM+iB,IAAK/iB,EAAMgjB,MAC5CyqB,EAAQnlB,EAAU7D,QAAQzkB,EAAMo5B,KAAMp5B,EAAMo5B,MAC5CsU,EAAQplB,EAAU7D,QAAQzkB,EAAM+vB,MAAO/vB,EAAM+vB,MACjD0d,GAAMtoB,GAAKuoB,EAAMvoB,GAAKkU,EAAOlU,GAAKrkB,EAAIqkB,GACtCsoB,EAAMroB,GAAKsoB,EAAMtoB,GAAKiU,EAAOjU,GAAKtkB,EAAIskB,GAClC8T,EAAMG,EAAO1U,SAASzY,EAC1BohC,EAAQzvC,MACJ4vC,EAAMtoB,GACNsoB,EAAMxoB,KAEVqoB,EAAQzvC,MACJq7B,EACAuU,EAAMxoB,KAEVsoB,EAAQ1vC,MACJq7B,EACAwU,EAAMzoB,KAEVsoB,EAAQ1vC,MACJ6vC,EAAMtoB,GACNsoB,EAAMzoB,KAEVuoB,EAAS3vC,MACLq7B,EACAG,EAAOpU,KAEXuoB,EAAS3vC,MACLq7B,EACAG,EAAOnU,KAEXvlB,KAAK45B,OACD+T,EACAC,EACAC,GAEJ7tC,KAAKmB,IAAMu4B,EAAO5zB,QAAQD,KAAKioC,EAAMhoC,QAAQD,KAAKkoC,IAClD/tC,KAAK65B,cAETI,WAAY,eAGZte,GAAYvB,GAAiBva,QAC7B4nB,UAAW,WACP,MAAO/L,OAGXE,GAAmBnK,GAAa5R,QAChCC,KAAM,SAAUogB,EAAMC,EAAI/b,GACtBqN,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,MAC1BA,KAAKkgB,KAAOA,EACZlgB,KAAKmgB,GAAKA,EACVngB,KAAKoE,OAASA,GAElBsgB,WAAY,WAAA,GAOAlY,GASAD,EAfJ2T,EAAOlgB,KAAKkgB,KACZiG,EAAMnmB,KACNguC,EAAU7nB,EAAIjG,KAAK/e,IACnB8sC,EAAQ9nB,EAAIhG,GAAGhf,IACf8L,IAoBJ,OAnBIiT,GAAKkE,YACD5X,EAAI0T,EAAK+K,UAAY+iB,EAAQ1oB,GAAK0oB,EAAQzoB,GAC9CtY,EAAO/O,MACH8vC,EAAQxoB,GACRhZ,IAEAyhC,EAAMxoB,GACNjZ,MAGAD,EAAI2T,EAAK+K,UAAY+iB,EAAQvoB,GAAKuoB,EAAQxoB,GAC9CvY,EAAO/O,MACHqO,EACAyhC,EAAQ1oB,KAER/Y,EACA0hC,EAAM1oB,MAGPtY,GAEX2Y,aAAc,WAAA,GAENlY,GACA6pB,CAFJ9lB,IAAa6S,GAAGsB,aAAarB,KAAKvkB,MAC9B0N,EAAO1N,KAAKoE,OAAOsJ,SACnB6pB,EAAO1kB,GAAKqd,WAAWlwB,KAAK0kB,cAC5B2B,QACIjgB,MAAOsH,EAAKtH,MACZxH,MAAO8O,EAAK9O,MACZ2vB,QAAS7gB,EAAK6gB,QACdjI,SAAU5Y,EAAK4Y,YAGvB5U,GAAiB6lB,GACjBv3B,KAAKwgB,OAAOrO,OAAOolB,MAG3B5lB,GAAkBiK,IACd6K,WACIvf,KAAM6M,GACN2S,MAAO5S,MAGX+H,GAAiB3B,GAASra,QAC1BsnB,OAAQ,WACJjN,GAASoK,GAAG6C,OAAO5C,KAAKvkB,MACxBA,KAAKkuC,kBAET9mB,mBAAoB,SAAUwE,GAAV,GAKPpE,GACD1gB,EACAkd,EACA4I,EACK/E,EACDpjB,EACApE,EACA8tC,EACAjuB,EACAC,EAbR/b,EAASpE,KAAKiB,QAAQmD,OACtBE,EAAatE,KAAKyI,aAAaxH,QAAQqD,eACvC8pC,EAAkBjqC,EAAgBC,GAClCggB,GAAcpkB,KAAKiB,QAAQ0mB,UAC/B,KAASH,EAAW,EAAGA,EAAWpjB,EAAO3F,OAAQ+oB,IAI7C,IAHI1gB,EAAgB1C,EAAOojB,GACvBxD,EAAQ,EACR4I,EAAe,EACV/E,EAAa,EAAGA,EAAaumB,EAAiBvmB,IAC/CpjB,EAAOoH,GAAazM,QAAQ0M,UAAUhF,EAAe+gB,GACrDxnB,EAAQoE,EAAKsH,YAAY1L,MACzB8tC,EAAU1pC,EAAK6G,OAAO6iC,QACtBjuB,EAAO8D,EACP7D,EAAK,OACLguB,EAC8B,UAA1BA,EAAQ7mC,eACR7C,EAAKsH,YAAY1L,MAAQ2jB,EACzB9D,EAAO,EACPC,EAAK6D,IAELvf,EAAKsH,YAAY1L,MAAQusB,EACzBzM,EAAKD,EAAO0M,EACZA,EAAe,GAEZ9pB,EAASzC,KAChBusB,GAAgBvsB,EAChB2jB,GAAS3jB,EACT8f,EAAK6D,GAET4H,EAASnnB,GACLyI,SAAU5I,EAAWujB,GACrBA,WAAYA,EACZzjB,OAAQ0C,EACR0gB,SAAUA,EACVxD,MAAOA,EACP4I,aAAcA,EACd1M,KAAMA,EACNC,GAAIA,EACJiE,WAAYA,KAK5B+F,YAAa,SAAU9pB,EAAOiL,GAC1B4O,GAASoK,GAAG6F,YAAY5F,KAAKvkB,MAAQK,MAAOiL,EAAO6U,IAAM7U,IAE7D2f,UAAW,SAAUnL,GACjB,MAAOA,GAAMzf,OAAS,GAE1BgoB,UAAW,SAAUvI,GACjB,OACIA,EAAMI,KACNJ,EAAMK,KAGd+tB,eAAgB,WAAA,GAKH1mB,GACD1gB,EACAmG,EAEIyjB,EACKlP,EACD1B,EAEIoS,EAZhB9Q,EAASphB,KACToE,EAASpE,KAAKiB,QAAQmD,OACtB4iB,EAAehnB,KAAKgnB,aACpBmK,EAAWnxB,KAAKmxB,WACpB,KAAS3J,EAAW,EAAGA,EAAWpjB,EAAO3F,OAAQ+oB,IAG7C,GAFI1gB,EAAgB1C,EAAOojB,GACvBva,EAAS+Z,EAAaQ,GAGtB,IADIkJ,EAAY,OACPlP,EAAU,EAAGA,EAAUvU,EAAOxO,OAAQ+iB,IACvC1B,EAAQ7S,EAAOuU,GACf1B,GAAS4Q,IACLwB,EAAU,GAAItW,IAAiB8U,EAAW5Q,EAAOhZ,GACrDqqB,EAASjzB,KAAKg0B,GACd9Q,EAAOjP,OAAO+f,IAElBxB,EAAY5Q,KAgD5BhE,GAAsBV,GAAavb,QACnC4kC,WAAY,SAAUrgC,GAAV,GAeK7F,GACD0pB,EAfR7G,EAASphB,IAIb,IAHAA,KAAKquC,qBACLruC,KAAK0qB,kBACL1qB,KAAKsuC,sBAAwB,GAAI10B,IAC7BxV,EAAO3F,OAAS,EAUhB,IATAuB,KAAK2nB,WAAa7jB,GAAQM,EAAO,GAAG8C,MAChC+N,GACAG,GACAsB,GACAH,GACAJ,GACAV,GACAe,KAEKjY,EAAI,EAAGA,EAAI6F,EAAO3F,OAAQF,IAE/B,GADI0pB,EAAQ7jB,EAAO7F,GAAG0pB,MAClBA,GAAwB,SAAfA,EAAM/gB,KAAiB,CAChCka,EAAOmtB,UAAW,CAClB,SAKhBpnB,OAAQ,SAAU8d,GACA,SAAVA,IACAA,EAAQjlC,KAAKilC,OAEjBjlC,KAAKwuC,mBAAmBvJ,GACxBjlC,KAAKyuC,oBAAoBxJ,GACzBjlC,KAAK0uC,yBAAyBzJ,GAC9BjlC,KAAK2uC,aAAa1J,GAClBjlC,KAAK4uC,gBAAgB3J,IAEzB7B,WAAY,SAAU/6B,GAClB,GAAIoF,GAAWpF,EAAKpH,QAAQuI,IAC5B4R,IAAakJ,GAAG8e,WAAW7e,KAAKvkB,KAAMqI,GAClCA,YAAgBgK,UACTrS,MAAKquC,kBAAkB5gC,IAE9BzN,KAAKsuC,sBAAsB/X,MAAM9oB,SAC1BzN,MAAK0qB,eAAejd,IAE3BpF,IAASrI,KAAKyI,oBACPzI,MAAKyI,aAEZJ,IAASrI,KAAK2oB,iBACP3oB,MAAK2oB,WAGpBgmB,aAAc,SAAU1J,GAAV,GAGD1mC,GACD0H,EACA4oC,EAEAC,EAIAC,EACKC,EAXT5tB,EAASphB,KACTgnC,EAAehnC,KAAK+mC,mBACxB,KAASxoC,EAAI,EAAGA,EAAI0mC,EAAMxmC,OAAQF,IAK9B,GAJI0H,EAAOg/B,EAAM1mC,GACbswC,EAAa7H,EAAa/gC,EAAKhF,QAAQuI,MAAQ,eACnD4X,EAAO6kB,YAAY4I,GACfC,EAAgB1tB,EAAO8lB,oBAAoB2H,GAK/C,IADIE,EAAS3tB,EAAO6tB,0BAA0BH,GACrCE,EAAU,EAAGA,EAAUD,EAAOtwC,OAAQuwC,IAC3C5tB,EAAO8tB,iBAAiBH,EAAOC,GAAU/oC,IAIrDipC,iBAAkB,SAAU9qC,EAAQ6B,GAChCjG,KAAKmvC,gBAAgBvoC,EAAmBxC,GACpC4Q,GACAuB,KACAtQ,GACJjG,KAAKovC,eAAexoC,EAAmBxC,GACnCkR,GACAL,KACAhP,GACJjG,KAAKqvC,oBAAoBzoC,EAAmBxC,GACxCgS,GACAD,KACAlQ,GACJjG,KAAKsvC,kBAAkB1oC,EAAmBxC,GACtCgR,GACAqB,KACAxQ,GACJjG,KAAKuvC,uBAAuB3oC,EAAmBxC,EAAQiR,IAAcpP,GACrEjG,KAAKwvC,mBAAmB5oC,EAAmBxC,GACvC8Q,GACAsB,KACAvQ,GACJjG,KAAKyvC,gBAAgB7oC,EAAmBxC,EAAQuR,IAAO1P,GACvDjG,KAAK0vC,qBAAqB9oC,EAAmBxC,GACzCuS,GACAlB,KACAxP,GACJjG,KAAK2vC,gBAAgB/oC,EAAmBxC,GACpCsR,GACAgB,KACAzQ,IAERwoC,oBAAqB,SAAUxJ,GAAV,GAIR1mC,GACDuI,EACA2B,EACAmnC,EACAC,EAPJzuB,EAASphB,KACToE,EAASpE,KAAK8vC,WAAa9vC,KAAKoE,OAChC2rC,IACJ,KAASxxC,EAAI,EAAGA,EAAI6F,EAAO3F,OAAQF,IAC3BuI,EAAgB1C,EAAO7F,GACvBkK,EAAe2Y,EAAOyF,mBAAmB/f,GACzC8oC,EAAWxuB,EAAOqkB,SAASh9B,EAAaxH,QAAQgF,MAChD4pC,EAAW1oC,EAAiBsB,EAAaxH,QAAQiG,KAAMU,KACtDioC,GAAY/oC,EAAckpC,gBAAkBlsC,GAAQ8rC,EAAU3K,GAC/Dn+B,EAAgBsa,EAAO6uB,gBAAgBnpC,EAAe2B,IAC/C3F,EAAS2F,EAAaxH,QAAQwI,MAAQ3G,EAAS2F,EAAaxH,QAAQuD,QAC3EsC,EAAgBsa,EAAO8uB,aAAappC,EAAe2B,IAEvDsnC,EAAgB7xC,KAAK4I,EAEzB9G,MAAK8vC,UAAY1rC,EACjBpE,KAAKoE,OAAS2rC,GAElBG,aAAc,SAAU9rC,EAAQqE,GAAlB,GAeN3B,GAEIqpC,EACAC,EAjBJ1mC,EAAQjB,EAAa4nC,oBACrBpf,EAAYxoB,EAAaxH,QAAQgwB,UACjCqf,EAAmBxsC,GAAQM,EAAO8C,MAClCwO,GACAgB,GACA1B,GACAuB,IA6BJ,OA3BA7M,GAAMD,IAAM3G,EAAS2F,EAAaxH,QAAQwI,KAAOlF,KAAKohB,MAAMjc,EAAMD,KAAO,EAErEC,EAAMlF,IADN1B,EAAS2F,EAAaxH,QAAQuD,KAClBysB,EAAY1sB,KAAKohB,MAAMjc,EAAMlF,KAAO,EAAID,KAAKgsC,KAAK7mC,EAAMlF,KAExDJ,EAAOK,KAAKhG,OAExBqI,EAAgB1E,MAAegC,GAC/BksC,IACIH,EAAczmC,EAAMD,IAAM,EAC1B2mC,EAAgB3nC,EAAaxH,QAAQmvC,kBACrCD,GAAe,GAAKA,EAAcrpC,EAAcrC,KAAKhG,SACrDqI,EAAc0pC,qBACV/uB,KAAM3a,EAAcrC,KAAK0rC,GACzBjjC,SAAUkjC,EAAcD,GACxBtoB,gBAGJne,EAAMlF,IAAMsC,EAAcrC,KAAKhG,SAC/BqI,EAAc2pC,qBACVhvB,KAAM3a,EAAcrC,KAAKiF,EAAMlF,KAC/B0I,SAAUkjC,EAAc1mC,EAAMlF,KAC9BqjB,WAAYne,EAAMlF,IAAMkF,EAAMD,OAI1ChB,EAAaioC,WAAansC,KAAKC,IAAIiE,EAAaioC,YAAc,EAAG5pC,EAAcrC,KAAKhG,QACpFqI,EAAcrC,MAAQqC,EAAcrC,UAAYqd,MAAMpY,EAAMD,IAAKC,EAAMlF,KAChEsC,GAEXmpC,gBAAiB,SAAU7rC,EAAQqE,GAAlB,GAcTykC,GAIA2C,EACAc,EACA5pC,EACA6pC,EACA9D,EACA+D,EACAC,EACAC,EACAC,EAAuBC,EAIlB1yC,EACD2O,EAOI2a,EA6BRqpB,EACAzsC,EACK0+B,EApEL/hB,EAASphB,KACTswC,EAAmBxsC,GAAQM,EAAO8C,MAClCwO,GACAgB,GACA1B,GACAuB,KAEA4P,EAAM1d,EAAaxH,QACnBqD,EAAa6hB,EAAI7hB,WACjB8rC,EAAgBjqB,EAAIiqB,aAoBxB,KAnBsB,SAAlBA,IACAA,EAAgB9rC,GAEhB4oC,EAAY/mB,EAAI+mB,UACF,SAAdA,IACAA,MAEA2C,EAAW1oC,EAAiBsB,EAAaxH,QAAQiG,KAAMU,IACvD+oC,EAAmBvuC,MAAegC,GAClC2C,EAAS3E,MAAegC,GACxBwsC,EAAUxsC,EAAOK,KACjBqoC,KACA+D,EAAmB5/B,EACnB6/B,EAAmB9/B,EACnB+/B,EAAQhuC,EAER8sC,IACAkB,EAAQ9oC,GAEH1J,EAAI,EAAGA,EAAIqyC,EAAQnyC,OAAQF,IAC5B2O,EAAW,OAEXA,EADA9I,EAAO4rC,cACIe,EAAM3sC,EAAO4rC,cAAeY,EAAQryC,GAAI6iB,EAAOwF,aAAasW,MAE5DkT,EAAc7xC,GAEzBsG,GAAQqI,KACJ2a,EAAapf,EAAamjC,cAAc1+B,GACxC,GAAK2a,GAAcA,EAAavjB,EAAW7F,QAC3CquC,EAAUjlB,GAAcilB,EAAUjlB,OAClCilB,EAAUjlB,GAAY3pB,KAAKK,IACpB+xC,IACHzoB,EAAa,EACTA,IAAegpB,EACfG,EAAsB/jC,OAAO/O,KAAKK,GAC3BspB,EAAagpB,IACpBA,EAAmBhpB,EACnBmpB,GACI9jC,SAAUA,EACVD,QAAS1O,KAGVspB,GAAcvjB,EAAW7F,SAC5BopB,IAAeipB,EACfG,EAAsBhkC,OAAO/O,KAAKK,GAC3BspB,EAAaipB,IACpBA,EAAmBjpB,EACnBopB,GACI/jC,SAAUA,EACVD,QAAS1O,OASjC,KAFI2yC,EAAa,GAAI51B,IAAiBq1B,EAAkB9kC,GAAazM,QAASmc,GAAkBnc,SAC5FqF,EAAOsC,EAAOtC,QACT0+B,EAAM,EAAGA,EAAM7+B,EAAW7F,OAAQ0kC,IACvC1+B,EAAK0+B,GAAO+N,EAAWrE,gBAAgBC,EAAU3J,GAAM7+B,EAAW6+B,IAC9D2J,EAAU3J,KACV+J,EAAU/J,GAAO1+B,EAAK0+B,GAkB9B,OAfI6N,IAAyBvsC,EAAKhG,SAC9BsI,EAAOypC,qBACH/uB,KAAMyvB,EAAWrE,gBAAgBmE,EAAsB/jC,OAAQ+jC,EAAsB9jC,UACrF2a,WAAYgpB,EACZ3jC,SAAU8jC,EAAsB9jC,WAGpC+jC,GAAyBxsC,EAAKhG,SAC9BsI,EAAO0pC,qBACHhvB,KAAMyvB,EAAWrE,gBAAgBoE,EAAsBhkC,OAAQgkC,EAAsB/jC,UACrF2a,WAAYipB,EACZ5jC,SAAU+jC,EAAsB/jC,WAGxCzE,EAAaxH,QAAQisC,UAAYA,EAC1BnmC,GAEXk8B,YAAa,SAAU5e,EAAOpe,GAK1B,IALS,GACL7B,GAASigB,EAAMpjB,QAAQmD,OACvBqE,EAAezI,KAAK6mB,mBAAmBziB,EAAO,IAC9CE,EAAamE,EAAaxH,QAAQqD,WAClC6sC,EAAkB5sC,KAAKC,IAAI,EAAGL,EAAgBC,GAAUE,EAAW7F,QAChE0yC,KACH7sC,EAAWpG,KAAK,GAEpB8B,MAAKsuC,sBAAsBlY,OAAO/R,EAAMyC,iBACxC1L,GAAakJ,GAAG2e,YAAY1e,KAAKvkB,KAAMqkB,EAAOpe,IAElDghC,eAAgB,SAAU7iC,GAAV,GACRnD,GAAUjB,KAAKiB,QACfwM,EAAWrJ,EAAOiE,KAClBb,KAAiBP,OAAOhG,EAAQ0nB,WAChCtgB,EAAOE,GAAKf,EAAa,SAAUJ,GACnC,MAAOA,GAAEoC,OAASiE,IACnB,GACCw3B,EAAQhkC,EAAQgkC,YAChBmM,GAAmBnM,EAAM,QAAUz7B,MAAQ,UAC3C6nC,GAAYhpC,OAAYpC,MAAQmrC,CACpC,OAAOC,IAEXxqB,mBAAoB,SAAUziB,GAAV,GACZqJ,GAAWrJ,EAAOqE,aAClBJ,EAAOoF,EAAWzN,KAAKquC,kBAAkB5gC,GAAYzN,KAAKyI,YAC9D,KAAKJ,EACD,KAAUwb,OAAM,4CAA8CpW,EAElE,OAAOpF,IAEXipC,sBAAuB,SAAUC,EAAatrC,GAAvB,GACfgiB,GAAQspB,EAAYtpB,MACpBE,EAAeF,GAAwB,SAAfA,EAAM/gB,KAC9B8jB,EAAO/kB,EAAKhF,QAAQ+pB,IACxB,QACInC,UAAWZ,EACXE,aAAcA,EACd6C,KAAMA,IAGdikB,0BAA2B,SAAU7qC,GAAV,GAGdQ,GACD4E,EAMJulC,EACKzmC,EACDD,EACAmpC,EAZJC,KACAC,IACJ,KAAS9sC,EAAM,EAAGA,EAAMR,EAAO3F,OAAQmG,IAC/B4E,EAAOpF,EAAOQ,GAAK6D,cAAgB,cAClCipC,EAAO3tC,eAAeyF,KACvBkoC,EAAOloC,IAAQ,EACfioC,EAAavzC,KAAKsL,GAI1B,KADIulC,KACKzmC,EAAS,EAAGA,EAASmpC,EAAahzC,OAAQ6J,IAC3CD,EAAOopC,EAAanpC,GACpBkpC,EAAappC,EAAYhE,EAAQiE,EAAMC,GACjB,IAAtBkpC,EAAW/yC,QAGfswC,EAAO7wC,KAAKszC,EAEhB,OAAOzC,IAEXK,eAAgB,SAAUhrC,EAAQ6B,GAAlB,GAIRsrC,GACAI,CAJkB,KAAlBvtC,EAAO3F,SAGP8yC,EAAcntC,EAAO,GACrButC,EAAW,GAAIz3B,IAASla,KAAMnC,EAAEgC,QAChCuE,OAAQA,EACRujB,WAAY3nB,KAAK2nB,WACjBoQ,IAAKwZ,EAAYxZ,IACjBC,QAASuZ,EAAYvZ,SACtBh4B,KAAKsxC,sBAAsBC,EAAatrC,KAC3CjG,KAAKijC,YAAY0O,EAAU1rC,KAE/BopC,oBAAqB,SAAUjrC,EAAQ6B,GAAlB,GAIbsrC,GACAK,CAJkB,KAAlBxtC,EAAO3F,SAGP8yC,EAAcntC,EAAO,GACrBwtC,EAAmB,GAAIn2B,IAAczb,MACrCoE,OAAQA,EACRujB,WAAY3nB,KAAK2nB,WACjBoQ,IAAKwZ,EAAYxZ,IACjBC,QAASuZ,EAAYvZ,UAEzBh4B,KAAKijC,YAAY2O,EAAkB3rC,KAEvCqpC,kBAAmB,SAAUlrC,EAAQ6B,GAAlB,GAIXsrC,GACAM,CAJkB,KAAlBztC,EAAO3F,SAGP8yC,EAAcntC,EAAO,GACrBytC,EAAc,GAAI/2B,IAAY9a,MAC9BoE,OAAQA,EACRujB,WAAY3nB,KAAK2nB,WACjBoQ,IAAKwZ,EAAYxZ,IACjBC,QAASuZ,EAAYvZ,QACrBhN,KAAM/kB,EAAKhF,QAAQ+pB,OAEvBhrB,KAAKijC,YAAY4O,EAAa5rC,KAElC0pC,gBAAiB,SAAUvrC,EAAQ6B,GAAlB,GAITsrC,GACAO,CAJkB,KAAlB1tC,EAAO3F,SAGP8yC,EAAcntC,EAAO,GACrB0tC,EAAY,GAAIx4B,IAAUtZ,KAAMnC,EAAEgC,QAClC8nB,WAAY3nB,KAAK2nB,WACjBvjB,OAAQA,GACTpE,KAAKsxC,sBAAsBC,EAAatrC,KAC3CjG,KAAKijC,YAAY6O,EAAW7rC,KAEhCkpC,gBAAiB,SAAU/qC,EAAQ6B,GAAlB,GAITsrC,GACAQ,CAJkB,KAAlB3tC,EAAO3F,SAGP8yC,EAAcntC,EAAO,GACrB2tC,EAAY,GAAIp4B,IAAU3Z,KAAMnC,EAAEgC,QAClC8nB,WAAY3nB,KAAK2nB,WACjBvjB,OAAQA,GACTpE,KAAKsxC,sBAAsBC,EAAatrC,KAC3CjG,KAAKijC,YAAY8O,EAAW9rC,KAEhCwpC,gBAAiB,SAAUrrC,EAAQ6B,GAAlB,GAITsrC,GACAltB,CAJkB,KAAlBjgB,EAAO3F,SAGP8yC,EAAcntC,EAAO,GACrBigB,EAAQ,GAAI1I,IAAU3b,MACtB2nB,WAAY3nB,KAAK2nB,WACjBoQ,IAAKwZ,EAAYxZ,IACjB3zB,OAAQA,EACR4zB,QAASuZ,EAAYvZ,QACrBhN,KAAM/kB,EAAKhF,QAAQ+pB,OAEvBhrB,KAAKijC,YAAY5e,EAAOpe,KAE5BspC,uBAAwB,SAAUnrC,EAAQ6B,GAAlB,GAIhBsrC,GACAltB,CAJkB,KAAlBjgB,EAAO3F,SAGP8yC,EAAcntC,EAAO,GACrBigB,EAAQ,GAAIjK,IAAiBpa,MAC7B2nB,WAAY3nB,KAAK2nB,WACjBoQ,IAAKwZ,EAAYxZ,IACjB3zB,OAAQA,EACR4zB,QAASuZ,EAAYvZ,QACrBhN,KAAM/kB,EAAKhF,QAAQ+pB,OAEvBhrB,KAAKijC,YAAY5e,EAAOpe,KAE5BupC,mBAAoB,SAAUprC,EAAQ6B,GAAlB,GAIZsrC,GACAltB,CAJkB,KAAlBjgB,EAAO3F,SAGP8yC,EAAcntC,EAAO,GACrBigB,EAAQ,GAAI9J,IAAava,MACzB2nB,WAAY3nB,KAAK2nB,WACjBoQ,IAAKwZ,EAAYxZ,IACjB3zB,OAAQA,EACR4zB,QAASuZ,EAAYvZ,QACrBhN,KAAM/kB,EAAKhF,QAAQ+pB,OAEvBhrB,KAAKijC,YAAY5e,EAAOpe,KAE5BypC,qBAAsB,SAAUtrC,EAAQ6B,GAAlB,GAIdsrC,GACAS,CAJkB,KAAlB5tC,EAAO3F,SAGP8yC,EAAcntC,EAAO,GACrB4tC,EAAiB,GAAIn2B,IAAe7b,MACpCoE,OAAQA,EACRujB,WAAY3nB,KAAK2nB,WACjBoQ,IAAKwZ,EAAYxZ,IACjBC,QAASuZ,EAAYvZ,UAEzBh4B,KAAKijC,YAAY+O,EAAgB/rC,KAErCgsC,qBAAsB,SAAUC,EAAkBC,GAA5B,GAGT3qB,GACD1gB,EAEI4G,EAMHme,EACDumB,EAZJhxB,EAASphB,KACTqyC,EAAiBzrC,EAAmB5G,KAAKoE,OAAQwS,GACrD,KAAS4Q,EAAW,EAAGA,EAAWxnB,KAAKoE,OAAO3F,OAAQ+oB,IAC9C1gB,EAAgBsa,EAAOhd,OAAOojB,GAC9B1gB,EAAcI,OAASwO,IAAQ5O,EAAcI,OAAS8N,KAClDtH,EAAO5G,EAAc4G,KACrBA,GAAQA,EAAKzO,QAAU8V,IACvBs9B,EAAen0C,KAAK4I,GAIhC,KAAS+kB,EAAa,EAAGA,EAAawmB,EAAe5zC,OAAQotB,IAEzD,GADIumB,EAAaC,EAAexmB,GAAYpjB,cAAgB,GACxD2pC,IAAeF,IAAqBE,GAAoC,IAAtBD,EAClD,OAAO,GAInBG,eAAgB,SAAUJ,EAAkBC,GAA5B,GAEH3qB,GACD4qB,EAFJhuC,EAASpE,KAAKoE,MAClB,KAASojB,EAAW,EAAGA,EAAWpjB,EAAO3F,OAAQ+oB,IAE7C,GADI4qB,EAAahuC,EAAOojB,GAAU/e,cAAgB,IAC7C2pC,IAAeF,IAAqBE,GAAoC,IAAtBD,IAA4B/tC,EAAOojB,GAAUwoB,cAChG,OAAO,GAInBtB,yBAA0B,WAAA,GAEbnwC,GADLmH,EAAO1F,KAAK0F,IAChB,KAASnH,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IACzBmH,EAAKnH,YAAc8T,KACnB3M,EAAKnH,GAAGg0C,gBAIpB/D,mBAAoB,SAAUvJ,GAAV,GAKP1mC,GACDiJ,EACAooC,EAEIpmC,EACAlF,EAcAmE,EAiBR+pC,EAxCApxB,EAASphB,KACT2nB,EAAa3nB,KAAK2nB,WAClB8qB,KAAiBxrC,OAAOjH,KAAKiB,QAAQwH,cACrC/C,IACJ,KAASnH,EAAI,EAAGA,EAAIk0C,EAAYh0C,OAAQF,IAGpC,GAFIiJ,EAAcirC,EAAYl0C,GAC1BqxC,EAAWxuB,EAAOqkB,SAASj+B,EAAYvB,MACvCnC,GAAQ8rC,EAAU3K,GAAQ,CAsB1B,GArBIz7B,EAAOhC,EAAYgC,KACnBlF,EAAakD,EAAYlD,WACV,SAAfA,IACAA,MAEJkD,EAAcpF,IACV+H,SAAUwd,EACViB,kBAAmBjB,EAAa3W,EAAY,GAC7CxJ,GACE3C,GAAQ2C,EAAYypB,aACrBzpB,EAAYypB,UAAY7P,EAAOsxB,eAE/BtxB,EAAO6wB,qBAAqBzoC,EAAMjL,KAClCiJ,EAAYypB,WAAY,GAExBxoB,EAAe,OAEfA,EADAlB,EAAWC,EAAalD,EAAW,IACpB,GAAIiO,IAAiB/K,EAAa4Z,EAAOwF,cAEzC,GAAIvU,IAAa7K,EAAa4Z,EAAOwF,cAEpDpd,EAAM,CACN,GAAI4X,EAAOitB,kBAAkB7kC,GACzB,KAAUqa,OAAM,2BAA6Bra,EAAO,sBAExD4X,GAAOitB,kBAAkB7kC,GAAQf,EAErCA,EAAagjB,UAAYltB,EACzBmH,EAAKxH,KAAKuK,GACV2Y,EAAO4hB,WAAWv6B,GAGtB+pC,EAAcxyC,KAAKyI,cAAgB/C,EAAK,GAC5C1F,KAAKyI,aAAe+pC,EAChB7qB,EACA3nB,KAAK49B,MAAQ4U,EAEbxyC,KAAK09B,MAAQ8U,GAGrBE,YAAa,WAAA,GAEAn0C,GACDuI,EAFJ1C,EAASpE,KAAKoE,MAClB,KAAS7F,EAAI,EAAGA,EAAI6F,EAAO3F,OAAQF,IAE/B,GADIuI,EAAgB1C,EAAO7F,IACtBuF,GAAQgD,EAAcI,MACnB8N,GACAuB,KAEJ,OAAO,CAGf,QAAO,GAEXq4B,gBAAiB,SAAU3J,GAAV,GAYJ1mC,GACDiJ,EACAooC,EAEIpmC,EACAmpC,EAOAjpC,EAKAkpC,EAMAjqB,EAYR6pB,EA9CApxB,EAASphB,KACT6yC,EAAU7yC,KAAKsuC,sBACfwE,EAAeD,EAAQrc,QACvBic,KAAiBxrC,OAAOjH,KAAKiB,QAAQ0nB,WACrChB,EAAa3nB,KAAK2nB,WAClB5Z,GAAgB5D,UAAWwd,GAC3BjiB,IAKJ,KAJI1F,KAAKuuC,WACLxgC,EAAYglC,kBAAmB,EAC/BhlC,EAAYJ,QAAW2e,OAAQ,OAE1B/tB,EAAI,EAAGA,EAAIk0C,EAAYh0C,OAAQF,IAGpC,GAFIiJ,EAAcirC,EAAYl0C,GAC1BqxC,EAAWxuB,EAAOqkB,SAASj+B,EAAYvB,MACvCnC,GAAQ8rC,EAAU3K,GAAQ,CAqB1B,GApBIz7B,EAAOhC,EAAYgC,KACnBmpC,EAAmBxrC,EAAiBK,EAAYN,KAAM6Q,KACtDtO,IAAK,GACLjF,IAAK,IAELiF,IAAK,EACLjF,IAAK,GAELkF,EAAQmpC,EAAQrc,MAAMhtB,IAASspC,GAAgBH,EACzC,IAANp0C,GAAWmL,GAASopC,IACpBppC,EAAMD,IAAMlF,KAAKkF,IAAIC,EAAMD,IAAKqpC,EAAarpC,KAC7CC,EAAMlF,IAAMD,KAAKC,IAAIkF,EAAMlF,IAAKsuC,EAAatuC,MAE7CouC,EAAW,OAEXA,EADAzrC,EAAiBK,EAAYN,KAAM6Q,IACxB1N,EAAQ2oC,gBAER3oC,EAAQ4oC,YAEnBtqB,EAAY,GAAIiqB,GAASlpC,EAAMD,IAAKC,EAAMlF,IAAKpC,MAAe2L,EAAavG,GAAc4Z,EAAOwF,cAChGpd,EAAM,CACN,GAAI4X,EAAOsJ,eAAelhB,GACtB,KAAUqa,OAAM,wBAA0Bra,EAAO,sBAErD4X,GAAOsJ,eAAelhB,GAAQmf,EAElCA,EAAU8C,UAAYltB,EACtBmH,EAAKxH,KAAKyqB,GACVvH,EAAO4hB,WAAWra,GAGtB6pB,EAAcxyC,KAAK2oB,WAAajjB,EAAK,GACzC1F,KAAK2oB,UAAY6pB,EACb7qB,EACA3nB,KAAK09B,MAAQ8U,EAEbxyC,KAAK49B,MAAQ4U,GAGrBrG,eAAgB,SAAU9nB,EAAOxb,EAAGqqC,GAApB,GASRrP,GACKtlC,EACD8J,EAVJioB,EAASjM,EAAM8uB,kBAAkBtqC,GACjCiX,EAAQ,GAAIpT,IAAM4jB,EAAO/jB,EAAG+jB,EAAO9jB,GACnCvG,EAAOjG,KAAKozC,UAAUtzB,GACtBxb,KACA3B,IACJ,IAAKsD,EAAL,CAIA,IADI49B,EAAU59B,EAAKP,KACVnH,EAAI,EAAGA,EAAIslC,EAAQplC,OAAQF,IAC5B8J,EAAOw7B,EAAQtlC,GACf8J,EAAK2X,SACLnY,EAAgBlF,EAAQ0F,EAAK2X,SAASF,IAEtCjY,EAAgBvD,EAAY+D,EAAK0X,YAAYD,GAG3B,KAAtBxb,EAAW7F,QACXoJ,EAAgBvD,EAAYtE,KAAKyI,aAAasX,YAAYD,IAE1Dxb,EAAW7F,OAAS,GAAKkE,EAAOlE,OAAS,GACzC4lB,EAAMoI,QAAQymB,GACVnrC,QAAS6J,GAAa/I,GACtBgkB,cAAehkB,EACfqE,SAAUlF,EAAkB1D,GAC5BjE,MAAO2H,EAAkBrF,OAIrCywC,UAAW,SAAUtzB,GAAV,GAEEvhB,GACDymC,EAFJC,EAAQjlC,KAAKilC,KACjB,KAAS1mC,EAAI,EAAGA,EAAI0mC,EAAMxmC,OAAQF,IAE9B,GADIymC,EAAcC,EAAM1mC,GACpBymC,EAAYp/B,WAAWggC,cAAc9lB,GACrC,MAAOklB,IAInBqO,kBAAmB,SAAUhrC,EAAMpH,GAC/B,GAAIqyC,MAAgDrsC,OAAlCoB,YAAgBgK,IAAyBrS,KAAKiB,QAAQwH,aAA0BzI,KAAKiB,QAAQ0nB,UAC/GvmB,IAAWkxC,EAAYjrC,EAAKojB,WAAYxqB,MAQhD0Q,GAAkBmK,IACdrT,cAAgBnE,eAChBqkB,eAEJvmB,GAAW0Z,GAAoB4L,UAAWrM,IACtCU,GAAYnc,EAAMC,QAClBC,KAAM,WACFE,KAAKuzC,YAET7S,QAAS,WACL1gC,KAAKuzC,YAETlT,KAAM,SAAUpzB,GAAV,GAIO1O,GACDuhB,EAJJsB,EAASphB,KACTwzC,KAAiBvsC,OAAOgG,EAE5B,KADAjN,KAAKygC,OACIliC,EAAI,EAAGA,EAAIi1C,EAAY/0C,OAAQF,IAChCuhB,EAAQ0zB,EAAYj1C,GACpBuhB,GAASA,EAAM2zB,iBAAmB3zB,EAAM4zB,iBACxCtyB,EAAOuyB,qBAAqB7zB,GAAO,GACnCsB,EAAOmyB,QAAQr1C,KAAK4hB,KAIhC6zB,qBAAsB,SAAU7zB,EAAOugB,GAAjB,GAGV3T,GAFJknB,GAAiB9zB,EAAM7e,QAAQ+tB,eAAiB6kB,MAChDD,IACIlnB,GACAxf,SAAU4S,EAAM5S,SAChB9I,OAAQ0b,EAAM1b,OACdkmB,SAAUxK,EAAMwK,SAChBjqB,MAAOyf,EAAMzf,MACb6qB,WAAYpL,EAAMoL,WAClBxiB,eAAgBA,EAChB8X,OAAQV,EAAMsP,kBACdiR,KAAMA,GAEVuT,EAAclnB,GACTA,EAAU/jB,mBACXmX,EAAM2zB,gBAAgBpT,IAG1BvgB,EAAM2zB,gBAAgBpT,IAG9BI,KAAM,WAGF,IAHE,GACErf,GAASphB,KACTiN,EAASjN,KAAKuzC,QACXtmC,EAAOxO,QACV2iB,EAAOuyB,qBAAqB1mC,EAAOq2B,OAAO,IAGlDwQ,cAAe,SAAU/rC,GAAV,GAEFxJ,GACDuhB,EAFJ7S,EAASjN,KAAKuzC,OAClB,KAASh1C,EAAI,EAAGA,EAAI0O,EAAOxO,OAAQF,IAE/B,GADIuhB,EAAQ7S,EAAO1O,GACfwJ,IAAY+X,EACZ,OAAO,CAGf,QAAO,KAyBX9D,GAAWpc,EAAMC,QACjBC,KAAM,SAAUwgB,EAAUrf,GACtBjB,KAAKsgB,SAAWA,EAChBtgB,KAAKiB,QAAUmB,MAAepC,KAAKiB,QAASA,IAEhDg2B,MAAO,SAAUpuB,GAEb,MADA7I,MAAK+zC,QAAUnrC,EAAUC,EAAG7I,KAAKiB,QAAQjD,MAG7Cq+B,KAAM,SAAUxzB,GACZ,GAAI7I,KAAK+zC,QAAS,CACd,GAAI1qC,GAAarJ,KAAKqJ,WAAarJ,KAAKg0C,SAASnrC,EAAGyI,IAAGrK,OAAOjH,KAAKg0C,SAASnrC,EAAGwI,IAC/E,IAAIhI,EAAW5K,OAEX,MADAuB,MAAKqJ,WAAaA,EACXD,EAAkBC,KAIrCgrB,IAAK,WACD,GAAImS,GAASxmC,KAAK+zC,OAElB,OADA/zC,MAAK+zC,SAAU,EACRvN,GAEXyN,IAAK,WAAA,GAKYrvC,GACD8E,EALRyc,EAAMnmB,KACNsgB,EAAW6F,EAAI7F,SACfjX,EAAa8c,EAAI9c,UACrB,IAAIA,EAAW5K,OAAQ,CACnB,IAASmG,EAAM,EAAGA,EAAMyE,EAAW5K,OAAQmG,IACnC8E,EAAQL,EAAWzE,GACvB0b,EAAS+yB,kBAAkB3pC,EAAMrB,KAAMqB,EAAMA,MAEjD4W,GAASinB,OAAOjnB,EAAS2kB,SAGjCvE,QAAS,iBACE1gC,MAAKsgB,UAEhB0zB,SAAU,SAAUnrC,EAAGgmB,GAAb,GAMEnpB,GACKd,EACDyD,EAEIqB,EATZ4W,EAAWtgB,KAAKsgB,SAChB4zB,GAASrrC,EAAEgmB,GAAUqlB,MACrBC,GAAQn0C,KAAKiB,QAAQkzC,MAAQ,IAAI7sC,cACjC8sC,IACJ,IAAc,IAAVF,IAAgBC,GAAQ,IAAI7sC,gBAAkBunB,EAE9C,IADInpB,EAAO4a,EAAS5a,KACXd,EAAM,EAAGA,EAAMc,EAAKjH,OAAQmG,IAC7ByD,EAAO3C,EAAKd,IACZiqB,IAAavd,KAAMjJ,EAAKpH,QAAQkJ,UAAY0kB,IAAaxd,IAAKhJ,EAAKpH,QAAQkJ,YACvET,EAAQrB,EAAK4rC,IAAIC,GACjBxqC,IACAA,EAAM2qC,YAAa,EACnBD,EAAYl2C,MACRmK,KAAMA,EACNqB,MAAOA,KAM3B,OAAO0qC,MAGfp4B,GAAS0L,UAAUzmB,SACfjD,IAAK,OACLm2C,KAAM,QAENl4B,GAAgBrc,EAAMC,QACtBC,KAAM,SAAUukB,EAAOpjB,GACnBjB,KAAKqkB,MAAQA,EACbrkB,KAAKiB,QAAUmB,MAAepC,KAAKiB,QAASA,GAC5CjB,KAAKe,iBAETA,cAAe,WAAA,GAGPuzC,GAFAC,EAAUv0C,KAAKw0C,SAAW1zC,SAASC,cAAc,MACrDwzC,GAAQ3qC,UAAY,YAChB0qC,EAAexzC,SAASC,cAAc,OAC1CuzC,EAAa1qC,UAAY,kBACzB2qC,EAAQ5yC,YAAY2yC,IAExBG,cAAe,WACPz0C,KAAKw0C,SAASvyC,YACdjC,KAAKw0C,SAASvyC,WAAWC,YAAYlC,KAAKw0C,WAGlDE,UAAW,SAAUC,GACjBniC,GAAcxS,KAAKw0C,SAAUG,IAEjC1d,MAAO,SAAUpuB,GAAV,GAEKwb,GACAvE,EACA80B,EAEIhlB,EACAwO,CANZ,UAAIx1B,EAAUC,EAAG7I,KAAKiB,QAAQjD,OACtBqmB,EAAQrkB,KAAKqkB,MACbvE,EAAQuE,EAAM8uB,kBAAkBtqC,GAChC+rC,EAAW50C,KAAK60C,UAAYxwB,EAAM9D,UAAU2rB,YAAYpsB,GACxD80B,GAAYA,EAAShlB,cACjBA,EAAUglB,EAAShlB,UAAU9pB,QAC7Bs4B,EAASp+B,KAAK80C,iBAClBllB,EAAQ2R,UAAUnD,EAAOrQ,KAAMqQ,EAAOtH,KACtC92B,KAAK+0C,iBAAmBnlB,EACxB9uB,SAASc,KAAKD,YAAY3B,KAAKw0C,UAC/Bx0C,KAAK00C,WACD3mB,KAAMllB,EAAEmsC,MAAQ,EAChBle,IAAKjuB,EAAEosC,MAAQ,EACfr2C,MAAO,EACPC,OAAQ,KAEL,IAKnBi2C,eAAgB,WAAA,GACRI,GAAel1C,KAAKqkB,MAAMtc,QAC1Boe,EAAM3T,GAAc0iC,GACpB,cACA,eAEA/U,EAAcha,EAAIga,YAClBF,EAAa9Z,EAAI8Z,WACjB7B,EAAS/zB,EAAQ8qC,cAAcD,EACnC,QACInnB,KAAMoS,EAAc/B,EAAOrQ,KAC3B+I,IAAKmJ,EAAa7B,EAAOtH,MAGjCuF,KAAM,SAAUxzB,GACZ,GAAI+rC,GAAW50C,KAAK60C,SAChBD,IACA50C,KAAK00C,UAAU10C,KAAKo1C,mBAAmBvsC,KAG/CwrB,IAAK,SAAUxrB,GAAV,GAGOwsC,GACAC,EAGAre,EAIA5C,EAVJugB,EAAW50C,KAAK60C,SACpB,IAAID,EAgBA,MAfIS,GAAmBr1C,KAAK80C,iBACxBQ,EAAoBt1C,KAAKo1C,mBAAmBvsC,GAChDysC,EAAkBvnB,MAAQsnB,EAAiBtnB,KAC3CunB,EAAkBxe,KAAOue,EAAiBve,IACtCG,GACA1qB,EAAG+oC,EAAkBvnB,KACrBvhB,EAAG8oC,EAAkBxe,KAErBzC,GACA9nB,EAAG+oC,EAAkBvnB,KAAOunB,EAAkB12C,MAC9C4N,EAAG8oC,EAAkBxe,IAAMwe,EAAkBz2C,QAEjDmB,KAAKu1C,kBAAkBte,EAAO5C,GAC9Br0B,KAAKy0C,sBACEz0C,MAAK60C,UACLzrC,EAAkBpJ,KAAKqJ,aAGtCmsC,KAAM,WAAA,GAGMl1B,GACK1b,EACD0E,EAJRD,EAAarJ,KAAKqJ,UACtB,IAAIA,GAAcA,EAAW5K,OAAQ,CAEjC,IADI6hB,EAAWtgB,KAAKqkB,MAAM9D,UACjB3b,EAAM,EAAGA,EAAMyE,EAAW5K,OAAQmG,IACnC0E,EAAYD,EAAWzE,GAC3B0b,EAAS+yB,kBAAkB/pC,EAAUjB,KAAMiB,EAAUI,MAEzD4W,GAASinB,OAAOjnB,EAAS2kB,SAGjCvE,QAAS,WACL1gC,KAAKy0C,sBACEz0C,MAAKw0C,eACLx0C,MAAKqkB,OAEhBkxB,kBAAmB,SAAUte,EAAO5C,GAAjB,GAINzvB,GACDyD,EACA8B,EAEIT,EAPRyqC,GAAQn0C,KAAKiB,QAAQkzC,MAAQ,IAAI7sC,cACjC+B,KACA3D,EAAO1F,KAAK60C,UAAUnvC,IAC1B,KAASd,EAAM,EAAGA,EAAMc,EAAKjH,OAAQmG,IAC7ByD,EAAO3C,EAAKd,GACZuF,EAAW9B,EAAKpH,QAAQkJ,SACtBgqC,IAAS7iC,KAAMnH,GAAegqC,IAAS9iC,IAAKlH,IAC1CT,EAAQrB,EAAKotC,YAAYxe,EAAO5C,GAChC3qB,GACAL,EAAWnL,MACPmK,KAAMA,EACNqB,MAAOA,IAKvB1J,MAAKqJ,WAAaA,GAEtB+rC,mBAAoB,SAAUvsC,GAAV,GACZ+mB,GAAU5vB,KAAK+0C,iBACfW,GACAnpC,EAAG1D,EAAE0D,EAAEmpC,cACPlpC,EAAG3D,EAAE2D,EAAEkpC,eAEPV,EAAQnsC,EAAE0D,EAAEopC,SACZV,EAAQpsC,EAAE2D,EAAEmpC,SACZxB,GAAQn0C,KAAKiB,QAAQkzC,MAAQ,IAAI7sC,cACjCymB,EAAOxpB,KAAKkF,IAAIisC,EAAcnpC,EAAGyoC,GACjCle,EAAMvyB,KAAKkF,IAAIisC,EAAclpC,EAAGyoC,GAChCr2C,EAAQ2F,KAAKsG,IAAI6qC,EAAcnpC,EAAIyoC,GACnCn2C,EAAS0F,KAAKsG,IAAI6qC,EAAclpC,EAAIyoC,EAqBxC,OApBId,KAAS7iC,KACTyc,EAAO6B,EAAQpK,GACf5mB,EAAQgxB,EAAQhxB,SAEhBu1C,IAAS9iC,KACTylB,EAAMlH,EAAQtK,GACdzmB,EAAS+wB,EAAQ/wB,UAEjBm2C,EAAQplB,EAAQnK,KAChB7mB,EAAQgxB,EAAQnK,GAAKiwB,EAAcnpC,GAEnCyoC,EAAQplB,EAAQpK,KAChB5mB,EAAQ82C,EAAcnpC,EAAIqjB,EAAQpK,IAElCyvB,EAAQrlB,EAAQrK,KAChB1mB,EAAS+wB,EAAQrK,GAAKmwB,EAAclpC,GAEpCyoC,EAAQrlB,EAAQtK,KAChBzmB,EAAS62C,EAAclpC,EAAIojB,EAAQtK,KAGnCyI,KAAMxpB,KAAKC,IAAIupB,EAAM6B,EAAQpK,IAC7BsR,IAAKvyB,KAAKC,IAAIsyB,EAAKlH,EAAQtK,IAC3B1mB,MAAOA,EACPC,OAAQA,MAIpBod,GAAcyL,UAAUzmB,SACpBjD,IAAK,QACLm2C,KAAM,QAENj4B,GAAiBtc,EAAMC,QACvBC,KAAM,SAAUukB,EAAOpjB,GACnBjB,KAAKqkB,MAAQA,EACbrkB,KAAKiB,QAAUmB,MAAepC,KAAKiB,QAASA,IAEhD20C,aAAc,SAAU1B,GAAV,GAIDtvC,GACDyD,EACA8B,EAEIT,EAPRyqC,GAAQn0C,KAAKiB,QAAQkzC,MAAQ,IAAI7sC,cACjC+B,KACA3D,EAAO1F,KAAKqkB,MAAM9D,UAAU7a,IAChC,KAASd,EAAM,EAAGA,EAAMc,EAAKjH,OAAQmG,IAC7ByD,EAAO3C,EAAKd,GACZuF,EAAW9B,EAAKpH,QAAQkJ,SACtBgqC,IAAS7iC,KAAMnH,GAAegqC,IAAS9iC,IAAKlH,IAC1CT,EAAQrB,EAAKwtC,WAAW3B,GACxBxqC,GACAL,EAAWnL,MACPmK,KAAMA,EACNqB,MAAOA,IAMvB,OADA1J,MAAKqJ,WAAaA,EACXD,EAAkBC,IAE7BmsC,KAAM,WAAA,GAGMl1B,GACK1b,EACD0E,EAJRD,EAAarJ,KAAKqJ,UACtB,IAAIA,GAAcA,EAAW5K,OAAQ,CAEjC,IADI6hB,EAAWtgB,KAAKqkB,MAAM9D;AACjB3b,EAAM,EAAGA,EAAMyE,EAAW5K,OAAQmG,IACnC0E,EAAYD,EAAWzE,GAC3B0b,EAAS+yB,kBAAkB/pC,EAAUjB,KAAMiB,EAAUI,MAEzD4W,GAASinB,OAAOjnB,EAAS2kB,SAGjCvE,QAAS,iBACE1gC,MAAKqkB,SAGhBlI,GAAe1K,GAAa5R,QAC5BC,KAAM,SAAUmB,EAAS2lB,GACrBnV,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAK4mB,aAAeA,GAExBO,OAAQ,WAAA,GAUKviB,GACDkxC,EAVJ3vB,EAAMnmB,KACNgyB,EAAW7L,EAAI6L,SACf/wB,EAAUklB,EAAIllB,QACdkJ,EAAWlJ,EAAQkJ,QAMvB,KALAnK,KAAKwgB,OAAS,GAAI5N,IAAQmjC,OAAO,MAC7B/d,QAAS7tB,EAAW,EAAIlJ,EAAQ+2B,QAChCge,YAAa7rC,EAAWlJ,EAAQ+2B,QAAU,EAC1Cie,YAAa9rC,EAAW,WAAa,eAEhCvF,EAAM,EAAGA,EAAMotB,EAASvzB,OAAQmG,IACjCkxC,EAAa9jB,EAASptB,GAC1BkxC,EAAWtxB,OAAO,GAAIze,KACtB+vC,EAAW5R,gBAGnB1f,OAAQ,SAAUrjB,GACdnB,KAAKwgB,OAAOqF,KAAK1kB,EAAI2kB,UACrB9lB,KAAKwgB,OAAOgE,QACZ,IAAI6c,GAAOrhC,KAAKwgB,OAAO01B,aAEnBl2C,MAAKmB,IADLkgC,EACWh3B,EAAQ8rC,UAAU9U,GAElB,GAAIt7B,KAGvBm+B,aAAc,WACVlkC,KAAKo2C,aAETxwB,aAAc,eAGdxJ,GAAa9J,GAAWzS,QACxBC,KAAM,SAAUmB,GACZqR,GAAWgS,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAC9BjB,KAAKq2C,kBACLr2C,KAAKwtB,eACLxtB,KAAKm3B,eAETkf,gBAAiB,WACbr2C,KAAKm6B,UAAY,GAAI9vB,GAAQisC,cACzBnsC,UAAU,EACVtE,MAAM,EACN+nB,MAAO7iB,IAEX/K,KAAKmS,OAAOnS,KAAKm6B,YAErB3M,aAAc,WACVxtB,KAAKm6B,UAAUhoB,OAAO,GAAIH,IAAahS,KAAKu2C,mBAEhDA,cAAe,WAAA,GACPt1C,GAAUjB,KAAKiB,QACfmlC,EAAcnlC,EAAQmlC,WAC1B,OAAOhkC,OAAenB,EAAQqsB,SAC1BY,WAAYkY,EACZjY,QAAU/nB,MAAOggC,MAGzBjP,YAAa,WAAA,GACLl2B,GAAUjB,KAAKiB,QACf03B,EAAev2B,MAAenB,EAAQ0M,OAC1C3N,MAAKm6B,UAAUhoB,OAAO,GAAIJ,IAAQ9Q,EAAQjC,KAAM25B,KAEpD6K,eAAgB,WAAA,GAERgT,GACAC,CAFJnkC,IAAWgS,GAAGkf,eAAejf,KAAKvkB,MAC9Bw2C,EAASx2C,KAAKiB,QAAQu1C,WACtBC,EAAYz2C,KAAK02C,aAAe7jC,GAAK8gB,SAAS3zB,KAAKm6B,UAAUh5B,IAAI2kB,UACjE2O,MACIruB,MAAO+K,GACPod,QAAS,GAEblI,OAAQ,KACRmwB,OAAQA,EAAOv3C,OAASu3C,IAE5Bx2C,KAAK0rC,aAAa+K,IAEtBjqB,MAAO,SAAUmqB,EAAQ9tC,GACrB,GAAI+tC,GAAO52C,KAAK0sB,UAAU7jB,EACrB8tC,GAAOlqB,QAAQ5V,GAAmB+/B,IACnC/tC,EAAEH,kBAGVikB,MAAO,SAAUgqB,EAAQ9tC,GACrB,GAAI+tC,GAAO52C,KAAK0sB,UAAU7jB,EAK1B,OAJK8tC,GAAOlqB,QAAQ3V,GAAmB8/B,KACnC/tC,EAAEH,iBACFiuC,EAAOE,iBAAiBD,EAAK9K,YAAa8K,EAAKE,cAE5C,GAEXC,MAAO,SAAUJ,GACbA,EAAOK,qBAEXtqB,UAAW,SAAU7jB,GACjB,GAAI5H,GAAUjB,KAAKiB,OACnB,QACI8G,QAAS6J,GAAa/I,GACtB7J,KAAMiC,EAAQjC,KACdoF,OAAQnD,EAAQmD,OAChB0nC,YAAa7qC,EAAQmD,OAAOmH,MAC5BurC,WAAY71C,EAAQ61C,aAG5B5S,aAAc,WAAA,GACN9iB,GAASphB,KACTiB,EAAUjB,KAAKiB,QACfm2B,EAAen2B,EAAQuf,MACvB4W,IACAp3B,KAAKwgB,OAAS4W,GACVoP,OAAQvlC,EAAQulC,OAChBpiC,OAAQnD,EAAQmD,OAChB2hB,OAAQ/lB,KAAKgmB,YACb8wB,WAAY71C,EAAQ61C,WACpB71C,SACIqsB,QAASttB,KAAKu2C,gBACd5oC,OAAQ1M,EAAQ0M,QAEpBiY,aAAc,WACVxE,EAAOwE,eACPxE,EAAO61B,iBACP71B,EAAOoiB,gBACP,IAAItd,GAAgB9E,EAAOZ,MAE3B,cADOY,GAAOZ,OACP0F,KAGflmB,KAAKo2C,aAEL9jC,GAAWgS,GAAG4f,aAAa3f,KAAKvkB,SAIxCqc,GAAa,aACbC,GAAU,UACVC,GAAS,SACTC,GAAS/K,GAAa5R,QACtBC,KAAM,SAAUmB,EAAS2lB,GACrBnV,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAK4mB,aAAeA,EACf9iB,GAAQ9D,KAAKiB,QAAQ4tB,UAClBzjB,EACAJ,GACAG,EACAF,EACAsR,OAEJvc,KAAKiB,QAAQ4tB,SAAW7jB,IAE5BhL,KAAKq2C,kBACLr2C,KAAKk3C,eAETb,gBAAiB,WAAA,GACTp1C,GAAUjB,KAAKiB,QACf4tB,EAAW5tB,EAAQ4tB,SACnBsoB,EAAYl2C,EAAQ2sB,MACpBA,EAAQiB,EACRhB,EAAS9iB,CACT8jB,KAAatS,GACbqR,EAAQ3iB,EACDnH,GAAQ+qB,GACXzjB,EACAD,KAGAyiB,EADc,UAAdupB,EACQlsC,EACa,QAAdksC,EACCnsC,GAEAD,EAEZ8iB,EAASgB,GACFsoB,IACW,UAAdA,EACAtpB,EAASziB,EACY,QAAd+rC,IACPtpB,EAAS1iB,IAGjBnL,KAAKm6B,UAAY,GAAI7nB,KACjBwb,OAAQ7sB,EAAQ6sB,OAChBkC,QAAS/uB,EAAQ+uB,QACjB9B,WAAYjtB,EAAQitB,WACpBC,OAAQltB,EAAQktB,OAChBN,OAAQA,EACRD,MAAOA,EACP9oB,OAAQ7D,EAAQ6D,OAChB0/B,aAAa,IAEjBxkC,KAAKmS,OAAOnS,KAAKm6B,YAErB+c,YAAa,WAAA,GAYLr0C,GACKtE,EACDkjB,EAbJmF,EAAe5mB,KAAKo3C,aACpBn2C,EAAUjB,KAAKiB,QACfkJ,EAAWnK,KAAKokB,aAChBizB,EAAe,GAAIl7B,KACnBhS,SAAUA,EACV6tB,QAAS/2B,EAAQ+2B,SAClBpR,GACC6V,EAAQx7B,EAAQw7B,KAKpB,KAJIx7B,EAAQqqB,UACRmR,EAAQA,EAAM3a,MAAM,GAAGwJ,WAEvBzoB,EAAQ45B,EAAMh+B,OACTF,EAAI,EAAGA,EAAIsE,EAAOtE,IACnBkjB,EAAOgb,EAAMl+B,GACjB84C,EAAallC,OAAO,GAAIiK,IAAWha,OAC/BkrB,QAASrsB,EAAQqsB,QACjB3f,OAAQ1M,EAAQ0M,QACjB1M,EAAQwgB,KAAMA,IAErB41B,GAAalwB,SACbnnB,KAAKm6B,UAAUhoB,OAAOklC,IAE1BjzB,WAAY,WAAA,GACJ+B,GAAMnmB,KAAKiB,QACXg1C,EAAc9vB,EAAI8vB,YAClBpnB,EAAW1I,EAAI0I,SACf1kB,EAAW0kB,IAAatS,IAAU05B,IAAgB55B,KAAexX,GAAQoxC,GAAeA,IAAgB55B,GAAavY,GAAQ+qB,GAC7H5jB,EACAD,KAEJ,OAAOb,IAEXmtC,SAAU,WACN,MAAOt3C,MAAKm6B,UAAUnI,SAAS,GAAGA,SAASvzB,OAAS,GAExD+lB,OAAQ,SAAUC,GAAV,GACAxjB,GAAUjB,KAAKiB,QACfs2C,EAAY9yB,EAAU3e,OAC1B,OAAK9F,MAAKs3C,gBAINr2C,EAAQ4tB,WAAatS,IACrBvc,KAAKw3C,sBAAsBD,GAC3Bv3C,KAAKmB,IAAMo2C,GAEXv3C,KAAKy3C,gBAAgBF,SAPrBv3C,KAAKmB,IAAMo2C,IAUnBE,gBAAiB,SAAUhzB,GAAV,GAuBTtjB,GAtBAglB,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdk5B,EAAYhU,EAAIgU,UAChBtL,EAAW5tB,EAAQ4tB,SACnBjwB,EAAQqC,EAAQrC,MAChBC,EAASoC,EAAQpC,OACjBi0B,EAAMjE,IAAazjB,GAAOyjB,IAAa1jB,EAASmG,GAAID,GACpDlH,EAAWnK,KAAKokB,aAChBszB,EAAcjzB,EAAU3e,QACxB6xC,EAAelzB,EAAU3e,OACzB+oB,KAAa5jB,GAAQ4jB,IAAa7jB,KAClC2sC,EAAaryB,GAAKoyB,EAAYpyB,GAAK,GAEnCnb,GAAYtL,GACZ84C,EAAapyB,GAAKoyB,EAAaryB,GAAKzmB,EACpC84C,EAAa/pB,MAAM8pB,EAAarmC,GAAG8oB,EAAUl5B,QAAQ4sB,UAC7C1jB,GAAYvL,IACpB+4C,EAAalyB,GAAKkyB,EAAanyB,GAAK5mB,EACpC+4C,EAAa/pB,MAAM8pB,EAAapmC,GAAG6oB,EAAUl5B,QAAQ2sB,QAEzDuM,EAAU3V,OAAOmzB,GACjBA,EAAexd,EAAUh5B,IACrBA,EAAMw2C,EAAa7xC,SACnB7E,EAAQ8oC,SAAW9oC,EAAQ4oC,WAC3B8N,EAAapW,UAAUtgC,EAAQ8oC,QAAS9oC,EAAQ4oC,SAChD7pC,KAAKm6B,UAAU3V,OAAOmzB,IAE1Bx2C,EAAI2xB,EAAM,GAAKrO,EAAUqO,EAAM,GAC/B3xB,EAAI2xB,EAAM,GAAKrO,EAAUqO,EAAM,GAC/B9yB,KAAKmB,IAAMA,GAEfq2C,sBAAuB,SAAU/yB,GAAV,GACf0B,GAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdk5B,EAAYhU,EAAIgU,UAChB4P,EAAU9oC,EAAQ8oC,QAClBF,EAAU5oC,EAAQ4oC,QAClBjrC,EAAQqC,EAAQrC,MAChBC,EAASoC,EAAQpC,OACjBsL,EAAWnK,KAAKokB,aAChBuzB,EAAelzB,EAAU3e,OACzBqE,IAAYtL,EACZ84C,EAAapyB,GAAKoyB,EAAaryB,GAAKzmB,GAC5BsL,GAAYvL,IACpB+4C,EAAalyB,GAAKkyB,EAAanyB,GAAK5mB,GAExCu7B,EAAU3V,OAAOmzB,GACjBA,EAAexd,EAAUh5B,IACzBg5B,EAAU3V,OAAO,GAAIze,IAAIgkC,EAASF,EAASE,EAAU4N,EAAa/4C,QAASirC,EAAU8N,EAAa94C,YAEtGqlC,aAAc,WACNlkC,KAAKs3C,YACL7lC,GAAa6S,GAAG4f,aAAa3f,KAAKvkB,SAI9C2R,GAAkB6K,IACdqS,SAAU7jB,GACVyxB,SACA9uB,QAAUmgB,QAAUC,KAAM,IAC1Bgc,QAAS,EACTF,QAAS,EACT/b,OAAQ7b,GAAW,GACnB+d,QAAS/d,GAAW,GACpBkc,QACI/nB,MAAOmL,GACP3S,MAAO,GAEX6iB,MAAQ+0B,OAAQl6B,IAChB0b,QAAS,EACT9J,WAAY,GACZppB,OAAQ,EACRwoB,SACIa,QAAUvvB,MAAO,GACjBA,MAAO,GACPC,OAAQ,EACRqI,KAAM,OACN0mB,MAAO3iB,EACP4iB,OAAQ9iB,KAGZ0R,GAAkB7c,EAAMC,QACxBC,KAAM,WACFE,KAAK43C,cAET12B,SAAU,SAAUha,EAAMF,GACtBhH,KAAK43C,UAAU15C,MACXgJ,KAAMA,EACNF,YAAaA,KAGrBy4B,OAAQ,SAAUqQ,EAAW7uC,EAAS2lB,GAA9B,GAGAxiB,GACKQ,EACDrE,EAJJs3C,EAAW73C,KAAK43C,UAChBE,EAAQD,EAAS,EAErB,KAASjzC,EAAM,EAAGA,EAAMizC,EAASp5C,OAAQmG,IAGrC,GAFIrE,EAAQs3C,EAASjzC,GACrBR,EAASwC,EAAmBkpC,EAAWvvC,EAAMyG,aACzC5C,EAAO3F,OAAS,EAAG,CACnBq5C,EAAQv3C,CACR,OAGR,MAAO,IAAIu3C,GAAM5wC,KAAK9C,EAAQnD,EAAS2lB,MAG/CnK,GAAgBrd,QAAU,GAAIqd,IAC1BC,GAAoB,EAepBC,GAAY/c,EAAMC,QAClBC,KAAM,SAAUukB,EAAO5b,EAAcxH,EAAS82C,GAAxC,GACE7C,GAAe7wB,EAAMtc,QACrB4gB,EAAY3oB,KAAKg4C,aAAavvC,EAClCzI,MAAKiB,QAAUmB,MAAepC,KAAKiB,QAASA,GAC5CjB,KAAKqkB,MAAQA,EACbrkB,KAAK+3C,SAAWA,EAChB/3C,KAAKk1C,aAAeA,EACpBl1C,KAAKyI,aAAeA,EACpBzI,KAAKi4C,UAAYj4C,KAAKyI,uBAAwB8J,IAC9CvS,KAAK2oB,UAAYA,EACjB3oB,KAAKk4C,cACDl4C,KAAKiB,QAAQwK,UACbzL,KAAKm4C,iBACLn4C,KAAKo6B,IAAIp6B,KAAKo4C,OAAOp4C,KAAKiB,QAAQif,MAAOlgB,KAAKo4C,OAAOp4C,KAAKiB,QAAQkf,KAClEngB,KAAKyS,eAGb0lC,eAAgB,WAAA,GASRE,GAOAC,EACAC,EAMAC,EAKAC,EACAC,EA5BAz3C,EAAUjB,KAAKiB,QACf03C,EAAU34C,KAAK24C,QAAUhvC,EAAU,aACvC6I,IAAcmmC,GACV7hB,IAAK71B,EAAQm9B,OAAOtH,IACpB/I,KAAM9sB,EAAQm9B,OAAOrQ,KACrBnvB,MAAOqC,EAAQrC,MACfC,OAAQoC,EAAQpC,SAEhBw5C,EAAYr4C,KAAKq4C,UAAY1uC,EAAU,eAC3C3J,KAAK44C,SAAWjvC,EAAU,UAC1B3J,KAAK64C,UAAYlvC,EAAU,UAC3BgvC,EAAQh3C,YAAY3B,KAAK44C,UACzBD,EAAQh3C,YAAY3B,KAAK64C,WACzBF,EAAQh3C,YAAY02C,GACpBA,EAAU12C,YAAYgI,EAAU,mBAC5B2uC,EAAat4C,KAAKs4C,WAAa3uC,EAAU,0BACzC4uC,EAAcv4C,KAAKu4C,YAAc5uC,EAAU,2BAC/C2uC,EAAW32C,YAAYgI,KACvB4uC,EAAY52C,YAAYgI,KACxB0uC,EAAU12C,YAAY22C,GACtBD,EAAU12C,YAAY42C,GACtBv4C,KAAKk1C,aAAavzC,YAAYg3C,GAC1BH,EAAkBhmC,GAAc6lC,GAChC,kBACA,mBACA,WAEAI,EAAmBjmC,GAAc8lC,EAAY,UAAUz5C,OACvD65C,EAAoBlmC,GAAc+lC,EAAa,UAAU15C,OAC7DoC,EAAQo3C,WACJlqB,QACIJ,KAAMyqB,EAAgBM,gBACtB9qB,MAAOwqB,EAAgBO,mBAG/BvmC,GAAc8lC,GAAcxhB,KAAM0hB,EAAgB35C,OAAS45C,GAAoB,IAC/EjmC,GAAc+lC,GAAezhB,KAAM0hB,EAAgB35C,OAAS65C,GAAqB,IACjFC,EAAQ15C,MAAM+B,QAAU23C,EAAQ15C,MAAM+B,SAE1CyR,WAAY,WACRzS,KAAKg5C,mBAAqBh5C,KAAKiB,QAAQg4C,cAAe,EAAQj5C,KAAKk5C,YAAY5xB,KAAKtnB,MAAQ+J,CAC5F,IAAIovC,EACJ1mC,IAAWzS,KAAK24C,SAAUQ,KAAUA,EAAI/gC,IAAcpY,KAAKg5C,mBAAoBG,IAC/En5C,KAAKo5C,WAAavnC,GAASwnC,iBAAiB5Z,OAAOz/B,KAAK24C,SACpD1hB,MAAOj3B,KAAKs5C,OAAOhyB,KAAKtnB,MACxBq8B,KAAMr8B,KAAKu5C,MAAMjyB,KAAKtnB,MACtBq0B,IAAKr0B,KAAKw5C,KAAKlyB,KAAKtnB,MACpBy5C,IAAKz5C,KAAK05C,KAAKpyB,KAAKtnB,MACpB25C,MAAO35C,KAAK45C,OAAOtyB,KAAKtnB,MACxB65C,aAAc75C,KAAK85C,cAAcxyB,KAAKtnB,MACtC+5C,cAAe/5C,KAAKg6C,eAAe1yB,KAAKtnB,MACxCi6C,WAAYj6C,KAAKk6C,YAAY5yB,KAAKtnB,SAG1Ck4C,YAAa,WAAA,GAgBLpa,GAIAqC,EACAF,EApBA9Z,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdwH,EAAe0d,EAAI1d,aACnBkgB,EAAYxC,EAAIwC,UAChBuL,EAAsBzrB,EAAawrB,UACnCD,EAAmBrL,EAAUsL,UAC7B/rB,EAAclI,KAAKqkB,MAAMuC,aAAasW,IACtCl9B,MAAKi4C,WACL71C,GAAWnB,GACPwI,IAAKtB,GAAUD,EAAajH,EAAQwI,KACpCjF,IAAK2D,GAAUD,EAAajH,EAAQuD,KACpC0b,KAAM/X,GAAUD,EAAajH,EAAQif,MACrCC,GAAIhY,GAAUD,EAAajH,EAAQkf,MAGvC2d,EAAQtrB,GAAcxS,KAAKk1C,cAC3B,cACA,eAEA/U,EAAcrC,EAAMqC,YACpBF,EAAanC,EAAMmC,WACvBjgC,KAAKiB,QAAUmB,OACXxD,MAAOs1B,EAAoBt1B,QAC3BC,OAAQm1B,EAAiBn1B,SACzBmxB,SACIjC,KAAMoS,EACNrJ,IAAKmJ,GAET7B,QACIrQ,KAAMiG,EAAiBvO,GAAK0a,EAC5BrJ,IAAK9C,EAAiB1O,GAAK2a,GAE/B/f,KAAMjf,EAAQwI,IACd0W,GAAIlf,EAAQuD,KACbvD,IAEPy/B,QAAS,WAOL,GANI1gC,KAAKo5C,aACLp5C,KAAKo5C,WAAW1Y,gBACT1gC,MAAKo5C,YAEhBe,aAAan6C,KAAKo6C,YAClBp6C,KAAKq6C,OAAS,KACVr6C,KAAK24C,QAAS,CACd,GAAIQ,EACJzmC,IAAa1S,KAAK24C,SAAUQ,KAAUA,EAAI/gC,IAAcpY,KAAKg5C,mBAAoBG,IACjFn5C,KAAKk1C,aAAahzC,YAAYlC,KAAK24C,WAG3C2B,gBAAiB,SAAU5wC,GACvB,OACIrB,KAAMrI,KAAKyI,aAAaxH,QACxBif,KAAMlgB,KAAKu6C,OAAO7wC,EAAMwW,MACxBC,GAAIngB,KAAKu6C,OAAO7wC,EAAMyW,MAG9Bm5B,OAAQ,SAAUzwC,GAAV,GAeA+tC,GAdA31C,EAAUjB,KAAKiB,QACfsF,EAASqL,GAAa/I,IACtB7I,KAAKq6C,QAAW9zC,IAGpBvG,KAAKqkB,MAAM2yB,oBACXh3C,KAAKq6C,QACDG,WAAY3wC,EAActD,IAAWA,EACrCmvC,cAAe7sC,EAAE0D,EAAI1D,EAAE0D,EAAEopC,SAAW,EACpCjsC,OACIwW,KAAMlgB,KAAKo4C,OAAOn3C,EAAQif,MAC1BC,GAAIngB,KAAKo4C,OAAOn3C,EAAQkf,MAG5By2B,EAAO52C,KAAKs6C,iBACZp6B,KAAMlgB,KAAKo4C,OAAOn3C,EAAQif,MAC1BC,GAAIngB,KAAKo4C,OAAOn3C,EAAQkf,MAExBngB,KAAKysB,QAAQhV,GAAcm/B,KAC3B52C,KAAKq6C,OAAS,QAGtBT,OAAQ,SAAU/wC,GACd,GAAI4xC,EAEAA,GADAz6C,KAAKq6C,OACIr6C,KAAKq6C,OAAOG,WAEZ3wC,EAAc+H,GAAa/I,IAEpC4xC,GACApwC,EAAQqwC,SAASD,EAAQ,oBAGjClB,MAAO,SAAU1wC,GAAV,GAICsd,GACA9iB,EACApC,EACAqD,EACAoF,EACAnD,EACA2Z,EACAC,EACA1W,EACAjF,EACA0vC,EACAyG,EAIAC,EACAC,EACAzc,CApBCp+B,MAAKq6C,SAGNl0B,EAAMnmB,KACNqD,EAAQ8iB,EAAIk0B,OACZp5C,EAAUklB,EAAIllB,QACdqD,EAAa6hB,EAAI1d,aAAaxH,QAAQqD,WACtCoF,EAAQrG,EAAMqG,MACdnD,EAASlD,EAAMm3C,WACft6B,EAAOlgB,KAAKo4C,OAAOn3C,EAAQif,MAC3BC,EAAKngB,KAAKo4C,OAAOn3C,EAAQkf,IACzB1W,EAAMzJ,KAAKo4C,OAAOn3C,EAAQwI,KAC1BjF,EAAMxE,KAAKo4C,OAAOn3C,EAAQuD,KAC1B0vC,EAAQ7wC,EAAMqyC,cAAgB7sC,EAAE0D,EAAEopC,SAClCgF,GACAz6B,KAAMxW,EAAMwW,KACZC,GAAIzW,EAAMyW,IAEVy6B,EAAOlxC,EAAMyW,GAAKzW,EAAMwW,KACxB26B,EAAQroC,GAAcxS,KAAK24C,QAAS,SAAS/5C,OAAS0F,EAAW7F,OAAS,GAC1E2/B,EAAS75B,KAAKiG,MAAM0pC,EAAQ2G,GAC3Bt0C,IAGDuD,GAAWvD,EAAQ,+BACnBmD,EAAMwW,KAAO3b,KAAKkF,IAAIlF,KAAKC,IAAIiF,EAAKyW,EAAOke,GAAS55B,EAAMo2C,GAC1DlxC,EAAMyW,GAAK5b,KAAKkF,IAAIC,EAAMwW,KAAO06B,EAAMp2C,IAChCsF,GAAWvD,EAAQ,kBAC1BmD,EAAMwW,KAAO3b,KAAKkF,IAAIlF,KAAKC,IAAIiF,EAAKyW,EAAOke,GAAS55B,EAAM,GAC1DkF,EAAMyW,GAAK5b,KAAKC,IAAIkF,EAAMwW,KAAO,EAAGxW,EAAMyW,KACnCrW,GAAWvD,EAAQ,oBAC1BmD,EAAMyW,GAAK5b,KAAKkF,IAAIlF,KAAKC,IAAIiF,EAAM,EAAG0W,EAAKie,GAAS55B,GACpDkF,EAAMwW,KAAO3b,KAAKkF,IAAIC,EAAMyW,GAAK,EAAGzW,EAAMwW,OAE1CxW,EAAMwW,OAASy6B,EAASz6B,MAAQxW,EAAMyW,KAAOw6B,EAASx6B,KACtDngB,KAAKq8B,KAAK3yB,EAAMwW,KAAMxW,EAAMyW,IAC5BngB,KAAKysB,QAAQ/U,GAAQ1X,KAAKs6C,gBAAgB5wC,QAGlD8vC,KAAM,WAAA,GAEMgB,GAIA9wC,CALJ1J,MAAKq6C,SACDG,EAAax6C,KAAKq6C,OAAOG,WACzBA,GACAnwC,EAAQywC,YAAYN,EAAY,mBAEhC9wC,EAAQ1J,KAAKq6C,OAAO3wC,MACxB1J,KAAKo6B,IAAI1wB,EAAMwW,KAAMxW,EAAMyW,IAC3BngB,KAAKysB,QAAQ9U,GAAY3X,KAAKs6C,gBAAgB5wC,UACvC1J,MAAKq6C,SAGpBX,KAAM,SAAU7wC,GAAV,GACEsd,GAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdwH,EAAe0d,EAAI1d,aACnB6nB,EAAStwB,KAAKqkB,MAAM8uB,kBAAkBtqC,GACtCgf,EAAapf,EAAaq5B,mBAAmB,GAAIp1B,IAAM4jB,EAAO/jB,EAAG9D,EAAatH,IAAImkB,KAClFpF,EAAOlgB,KAAKo4C,OAAOn3C,EAAQif,MAC3BC,EAAKngB,KAAKo4C,OAAOn3C,EAAQkf,IACzB1W,EAAMzJ,KAAKo4C,OAAOn3C,EAAQwI,KAC1BjF,EAAMxE,KAAKo4C,OAAOn3C,EAAQuD,KAC1Bo2C,EAAOz6B,EAAKD,EACZqZ,EAAMrZ,EAAO06B,EAAO,EACpBlxC,KACAqxC,EAA+B,IAAlBlyC,EAAEE,MAAMiyC,MACrB5c,EAAS75B,KAAKiG,MAAM+uB,EAAM1R,EAC1B7nB,MAAKq6C,QAAUU,IAGnB/6C,KAAKqkB,MAAM2yB,oBACNvuC,EAAaxH,QAAQgwB,WACtBmN,IAEJ10B,EAAMwW,KAAO3b,KAAKkF,IAAIlF,KAAKC,IAAIiF,EAAKyW,EAAOke,GAAS55B,EAAMo2C,GAC1DlxC,EAAMyW,GAAK5b,KAAKkF,IAAIC,EAAMwW,KAAO06B,EAAMp2C,GACvCxE,KAAKs5C,OAAOzwC,GACR7I,KAAKq6C,SACLr6C,KAAKq6C,OAAO3wC,MAAQA,EACpB1J,KAAKysB,QAAQ/U,GAAQ1X,KAAKs6C,gBAAgB5wC,IAC1C1J,KAAKw5C,UAGbN,YAAa,SAAUrwC,GAAV,GAKDa,GAJJ0X,EAASphB,KACTk0C,EAAQ7pC,EAAQ4wC,gBAAgBpyC,EACpC7I,MAAKs5C,QAAS/yC,OAAQvG,KAAKq4C,YACvBr4C,KAAKq6C,SACD3wC,EAAQ1J,KAAKq6C,OAAO3wC,MACxBb,EAAEH,iBACFG,EAAEkB,kBACExF,KAAKsG,IAAIqpC,GAAS,IAClBA,GAASx3B,IAET1c,KAAKiB,QAAQg4C,WAAW3tB,UACxB4oB,OAEAl0C,KAAKk7C,OAAOhH,IACZl0C,KAAKysB,QAAQ/U,IACTrP,KAAMrI,KAAKyI,aAAaxH,QACxBizC,MAAOA,EACPrnB,cAAehkB,EACfqX,KAAMlgB,KAAKu6C,OAAO7wC,EAAMwW,MACxBC,GAAIngB,KAAKu6C,OAAO7wC,EAAMyW,MAG1BngB,KAAKo6C,YACLD,aAAan6C,KAAKo6C,YAEtBp6C,KAAKo6C,WAAae,WAAW,WACzB/5B,EAAOo4B,QACRnhC,MAGXyhC,cAAe,SAAUjxC,GAAV,GAQP+tC,GAPA31C,EAAUjB,KAAKiB,OACnBjB,MAAKq6C,QACD3wC,OACIwW,KAAMlgB,KAAKo4C,OAAOn3C,EAAQif,MAC1BC,GAAIngB,KAAKo4C,OAAOn3C,EAAQkf,MAG5By2B,EAAO52C,KAAKs6C,gBAAgBt6C,KAAKq6C,OAAO3wC,OACxC1J,KAAKysB,QAAQhV,GAAcm/B,GAC3B52C,KAAKq6C,OAAS,KAEdxxC,EAAEH,kBAGVwxC,YAAa,WACLl6C,KAAKq6C,SACLr6C,KAAKysB,QAAQ9U,GAAY3X,KAAKs6C,gBAAgBt6C,KAAKq6C,OAAO3wC,cACnD1J,MAAKq6C,SAGpBL,eAAgB,SAAUnxC,GAAV,GACRsd,GAAMnmB,KACNqkB,EAAQ8B,EAAI9B,MACZhhB,EAAQ8iB,EAAIk0B,OACZp5C,EAAUklB,EAAIllB,QACdwH,EAAe0d,EAAI1d,aACnBiB,EAAQrG,EAAMqG,MACd0xC,EAAK/2B,EAAMg3B,oBAAoBxyC,EAAEyyC,QAAQ,GAAG/uC,EAAEopC,UAAUppC,EACxDgvC,EAAKl3B,EAAMg3B,oBAAoBxyC,EAAEyyC,QAAQ,GAAG/uC,EAAEopC,UAAUppC,EACxDwhB,EAAOxpB,KAAKkF,IAAI2xC,EAAIG,GACpBvtB,EAAQzpB,KAAKC,IAAI42C,EAAIG,EACzB1yC,GAAEH,iBACFgB,EAAMwW,KAAOzX,EAAaq5B,mBAAmB,GAAIp1B,IAAMqhB,KAAU9sB,EAAQwI,IACzEC,EAAMyW,GAAK1X,EAAaq5B,mBAAmB,GAAIp1B,IAAMshB,KAAW/sB,EAAQuD,IACxExE,KAAKq8B,KAAK3yB,EAAMwW,KAAMxW,EAAMyW,IAC5BngB,KAAKysB,QAAQ/U,GAAQ1X,KAAKs6C,gBAAgB5wC,KAE9C0uC,OAAQ,SAAU/3C,GACd,GAAIkL,GAAQlL,CAIZ,OAHIA,aAAiBsH,QACjB4D,EAAQvL,KAAKyI,aAAamjC,cAAcvrC,IAErCkL,GAEXgvC,OAAQ,SAAUhvC,GAAV,GACAjH,GAAatE,KAAKyI,aAAaxH,QAAQqD,WACvCjE,EAAQkL,CAQZ,OAPIvL,MAAKi4C,YAED53C,EADAkL,EAAQjH,EAAW7F,OAAS,EACpBuB,KAAKiB,QAAQuD,IAEbF,EAAWC,KAAKgsC,KAAKhlC,KAG9BlL,GAEXm7C,MAAO,SAAUn7C,GAAV,GACCoI,GAAezI,KAAKyI,aACpB8C,EAAQvL,KAAKo4C,OAAO/3C,EACxB,OAAOoI,GAAaqc,QAAQvZ,EAAOA,GAAO,IAE9C8wB,KAAM,SAAUnc,EAAMC,GAAhB,GAUEs7B,GAEAC,EAXAz6C,EAAUjB,KAAKiB,QACfm9B,EAASn9B,EAAQm9B,OACjBpO,EAAU/uB,EAAQ+uB,QAClB7B,EAASltB,EAAQo3C,UAAUlqB,OAC3BhtB,EAAMnB,KAAKw7C,MAAMt7B,GACjBy7B,EAAgBnxC,GAAMrJ,EAAIqkB,GAAK4Y,EAAOrQ,KAAOiC,EAAQjC,KACzDvb,IAAcxS,KAAK44C,UAAYh6C,MAAO+8C,IACtCnpC,GAAcxS,KAAKq4C,WAAatqB,KAAM4tB,IACtCx6C,EAAMnB,KAAKw7C,MAAMr7B,GACbs7B,EAAiBjxC,GAAMvJ,EAAQrC,OAASuC,EAAIqkB,GAAK4Y,EAAOrQ,KAAOiC,EAAQjC,OAC3Evb,GAAcxS,KAAK64C,WAAaj6C,MAAO68C,IACnCC,EAAWz6C,EAAQrC,MAAQ68C,EAC3BC,IAAaz6C,EAAQrC,QACrB88C,GAAYvtB,EAAOH,OAEvBxb,GAAcxS,KAAK64C,WAAa9qB,KAAM2tB,IACtClpC,GAAcxS,KAAKq4C,WAAaz5C,MAAO2F,KAAKC,IAAIvD,EAAQrC,OAAS+8C,EAAgBF,GAAkBttB,EAAOH,MAAO,MAErHoM,IAAK,SAAUla,EAAMC,GAAhB,GACGlf,GAAUjB,KAAKiB,QACfwI,EAAMzJ,KAAKo4C,OAAOn3C,EAAQwI,KAC1BjF,EAAMxE,KAAKo4C,OAAOn3C,EAAQuD,KAC1Bo3C,EAAY1pC,GAAWlS,KAAKo4C,OAAOl4B,GAAOzW,EAAKjF,GAC/Cq3C,EAAU3pC,GAAWlS,KAAKo4C,OAAOj4B,GAAKy7B,EAAY,EAAGp3C,EACrDvD,GAAQwK,SACRzL,KAAKq8B,KAAKuf,EAAWC,GAEzB56C,EAAQif,KAAOlgB,KAAKu6C,OAAOqB,GAC3B36C,EAAQkf,GAAKngB,KAAKu6C,OAAOsB,IAE7BX,OAAQ,SAAUhH,GAAV,GACAjzC,GAAUjB,KAAKiB,QACfwI,EAAMzJ,KAAKo4C,OAAOn3C,EAAQwI,KAC1BjF,EAAMxE,KAAKo4C,OAAOn3C,EAAQuD,KAC1Bs3C,EAAO76C,EAAQg4C,WAAWzD,KAC1Bt1B,EAAOlgB,KAAKo4C,OAAOn3C,EAAQif,MAC3BC,EAAKngB,KAAKo4C,OAAOn3C,EAAQkf,IACzBzW,GACAwW,KAAMA,EACNC,GAAIA,GAEJw6B,EAAWv4C,MAAesH,EAU9B,IATI1J,KAAKq6C,SACL3wC,EAAQ1J,KAAKq6C,OAAO3wC,OAEpBoyC,IAAS9wC,KACTtB,EAAMwW,KAAOhO,GAAWA,GAAWgO,EAAOg0B,EAAO,EAAG/zB,EAAK,GAAI1W,EAAKjF,IAElEs3C,IAAS7wC,IACTvB,EAAMyW,GAAKjO,GAAWA,GAAWiO,EAAK+zB,EAAOxqC,EAAMwW,KAAO,EAAG1b,GAAMiF,EAAKjF,IAExEkF,EAAMwW,OAASy6B,EAASz6B,MAAQxW,EAAMyW,KAAOw6B,EAASx6B,GAEtD,MADAngB,MAAKo6B,IAAI1wB,EAAMwW,KAAMxW,EAAMyW,KACpB,GAGf63B,aAAc,SAAUvvC,GAAV,GAGDlK,GACD8J,EAHJ3C,EAAO+C,EAAaxC,KAAKP,KACzBulC,EAAYvlC,EAAKjH,MACrB,KAASF,EAAI,EAAGA,EAAI0sC,EAAW1sC,IAE3B,GADI8J,EAAO3C,EAAKnH,GACZ8J,EAAKpH,QAAQkJ,WAAa1B,EAAaxH,QAAQkJ,SAC/C,MAAO9B,IAInBokB,QAAS,SAAUjjB,EAAMotC,GACrB,OAAQ52C,KAAK+3C,UAAY/3C,KAAKqkB,OAAOoI,QAAQjjB,EAAMotC,MAM3DjlC,GAAkBgL,IACdlR,SAAS,EACTwtC,YAAczD,KAAM,QACpB/rC,IAAKwH,EACLzM,IAAKwM,IAEL4L,GAAU7B,GAAYlb,QACtBwgC,KAAM,SAAUvgB,GAAV,GAIE7e,GACAiF,GAJC4Z,IAAUA,EAAM2P,eAAiBzvB,KAAK+7C,UAAY/7C,KAAK+7C,WAAaj8B,IAGrE7e,EAAUmB,MAAepC,KAAKiB,QAAS6e,EAAM7e,QAAQqN,SACrDpI,EAAS4Z,EAAM2P,gBACfvpB,GACAlG,KAAK+7C,SAAWj8B,EAChB/E,GAAYuJ,GAAG+b,KAAK9b,KAAKvkB,MACrB8f,MAAOA,EACP5Z,OAAQA,GACTjF,EAAS6e,IAEZ9f,KAAKygC,SAGbA,KAAM,iBACKzgC,MAAK+7C,SACZhhC,GAAYuJ,GAAGmc,KAAKlc,KAAKvkB,SAG7B6c,GAAgB9B,GAAYlb,QAC5BC,KAAM,SAAUwgB,EAAUrf,GACtB8Z,GAAYuJ,GAAGxkB,KAAKykB,KAAKvkB,KAAMsgB,EAASsG,aAAc3lB,GACtDjB,KAAKsgB,SAAWA,EAChBtgB,KAAK4gC,cAAgBtgB,EAASsG,aAAa0F,QAE/CwU,OAAQ,SAAU7zB,EAAQqjB,GAAlB,GAOIxQ,GACAG,EACA/Z,EARJ81C,EAAgBzzC,GAAK0E,EAAQ,SAAU6S,GAAV,GACzBxR,GAAUwR,EAAM1b,OAAOkK,QACvB1K,EAAW0K,GAAWA,EAAQ7C,WAAY,CAC9C,QAAQ7H,GAERo4C,GAAcv9C,OAAS,IACnBqhB,EAAQk8B,EAAc,GACtB/7B,EAAOjgB,KAAKsgB,SAAS7X,aAAaqc,QAAQhF,EAAM+H,YAChD3hB,EAASoqB,EAAStwB,KAAKi8C,YAAY3rB,EAAQrQ,GAAQjgB,KAAKk8C,eAAep8B,EAAOG,GAClFjgB,KAAKqgC,MACDn6B,OAAQA,EACRi2C,QAAQ,EACRlvC,OAAQA,EACRC,SAAU4S,EAAM5S,SAChBkvC,aAAcp8C,KAAK4gC,cAAcrU,KAAKvsB,KAAKiB,QAAQo7C,eAAgBv8B,EAAM5S,WAC1ElN,KAAKiB,WAGhBg7C,YAAa,SAAUn8B,EAAOG,GAAjB,GACL5X,GAAOrI,KAAKsgB,SAAS7X,aACrBmlB,GACA1jB,WAAY,OACZC,SAAU,SAKd,OAHK9B,GAAKpH,QAAQkJ,WACd2V,EAAMvT,EAAI0T,EAAK+E,SAASzY,IAGxBuT,MAAOA,EACP8N,MAAOA,IAGfsuB,eAAgB,SAAUp8B,EAAOG,GAAjB,GASRq8B,GARAn7C,EAAM2e,EAAMuK,MAAMpkB,KAAKk8B,YACvBh4B,EAAWnK,KAAKsgB,SAAS7X,aAAaxH,QAAQkJ,SAC9C6a,EAAS7jB,EAAI6jB,SACbu3B,EAAat8B,EAAK+E,SAClB4I,GACA1jB,WAAY,SACZC,SAAU,SAQd,OAJImyC,GADAnyC,EACc,GAAIuC,IAAMsY,EAAOzY,EAAGgwC,EAAW/vC,GAE/B,GAAIE,IAAM6vC,EAAWhwC,EAAGyY,EAAOxY,IAG7CsT,MAAOw8B,EACP1uB,MAAOA,MAInBjc,GAAkBkL,IAAiBw/B,eAAgB,UAC/Cv/B,GAAoBhK,GAAUjT,QAC9B8yB,MAAO,WAAA,GAOKtqB,GACAm0C,EAPJr2B,EAAMnmB,KACN+H,EAAUoe,EAAIpe,QACd9G,EAAUklB,EAAIllB,QACdogC,EAAOt5B,EAAQs5B,MACfA,IACArhC,KAAKs5B,OAASr4B,EAAQq4B,OAClBjxB,EAAOpH,EAAQkJ,SAAWkH,GAAIC,GAC9BkrC,EAAYx8C,KAAKw8C,UAAY,GAAIrpC,IAAc,EAAG,GACtDqpC,EAAUn0C,GAAQ8L,GAClBpM,EAAQqL,UAAUA,KAAYynC,MAAM2B,EAAUjwC,EAAGiwC,EAAUhwC,KAE3DxM,KAAKy8C,SAGb5pB,KAAM,SAAUC,GAAV,GACE4pB,GAASryC,EAAQ0oB,iBAAiB/yB,KAAKw8C,UAAUjwC,EAAG,EAAGumB,GACvD6pB,EAAStyC,EAAQ0oB,iBAAiB/yB,KAAKw8C,UAAUhwC,EAAG,EAAGsmB,EAC3D9yB,MAAK+H,QAAQqL,UAAUA,KAAYynC,MAAM6B,EAAQC,EAAQ38C,KAAKs5B,UAElEmjB,MAAO,WACH3pC,GAAUwR,GAAGm4B,MAAMl4B,KAAKvkB,MACxBA,KAAK+H,QAAQqL,UAAU,SAG/BzB,GAAkBmL,IAAqBuW,SAAUvf,KACjDf,GAAiB3T,QAAQ8hB,SAASjM,GAAK6H,IACnCC,GAAkBjK,GAAUjT,QAC5B8yB,MAAO,WACH,GAAI3N,GAAShlB,KAAKglB,OAAShlB,KAAK+H,QAAQs5B,OAAOrc,QAC/ChlB,MAAK+H,QAAQqL,UAAUA,KAAYynC,MAAM1mC,GAAaA,GAAa6Q,KAEvE6N,KAAM,SAAUC,GACZ9yB,KAAK+H,QAAQqL,UAAUA,KAAYynC,MAAM/nB,EAAKA,EAAK9yB,KAAKglB,YAGhErT,GAAkBoL,IAAmB6/B,OAAQ,mBAC7C7pC,GAAiB3T,QAAQ8hB,SAAS/L,GAAQ4H,IACtCC,GAAkBlK,GAAUjT,QAC5B8yB,MAAO,WACH3yB,KAAK68C,OAAS78C,KAAK+H,QAAQwmB,UAC3BvuB,KAAK+H,QAAQwmB,QAAQ,IAEzBsE,KAAM,SAAUC,GACZ9yB,KAAK+H,QAAQwmB,QAAQuE,EAAM9yB,KAAK68C,WAGxClrC,GAAkBqL,IACdqW,SAAU,IACVupB,OAAQ,WAEZ7pC,GAAiB3T,QAAQ8hB,SAASnN,GAAQiJ,IACtCC,GAAenK,GAAUjT,QACzB8yB,MAAO,WACH3yB,KAAK+H,QAAQqL,UAAUA,KAAYynC,MAAM1mC,GAAaA,GAAanU,KAAKiB,QAAQ+jB,UAEpF6N,KAAM,SAAUC,GACZ9yB,KAAK+H,QAAQqL,UAAUA,KAAYynC,MAAM/nB,EAAKA,EAAK9yB,KAAKiB,QAAQ+jB,YAGxErT,GAAkBsL,IACd2/B,OAAQ,iBACRvpB,SAAUvf,KAEdf,GAAiB3T,QAAQ8hB,SAAStL,GAAKqH,IACnCC,GAAmBzC,GAAa5a,QAChCsnB,OAAQ,WACJ1M,GAAa6J,GAAG6C,OAAO5C,KAAKvkB,MAC5BA,KAAKwxB,kBAETM,cAAe,SAAUpN,EAAY5d,EAAe0gB,GAArC,GAEPC,GADAxoB,EAAQ6H,EAAc7H,KAO1B,OAAO,KAJHwoB,EADAxoB,IAAU6V,GACEoE,GAEAF,IAEK0L,EAAY5d,EAAe0gB,IAEpDqM,gBAAiB,WACb,GAAI5mB,GAASwN,GAAa6J,GAAGuP,gBAAgBtP,KAAKvkB,KAClD,OAAOiN,GAAOhG,OAAOjH,KAAK4xB,YAE9BqL,mBAAoB,SAAU58B,EAAO8xB,GACjC,GAAIA,IAAkBxd,GAAM,CACxB,GAAImoC,IACAvwC,EAAGlM,EAAMkM,EACTC,EAAGnM,EAAMmM,EAQb,OANKrH,GAAS23C,EAAavwC,KACvBuwC,EAAavwC,EAAI,GAEhBpH,EAAS23C,EAAatwC,KACvBswC,EAAatwC,EAAI,GAEdswC,MAInB16C,GAAW8a,GAAiBwK,UAAWvO,IACnCgE,GAAa/B,GAAavb,QAC1B4kC,WAAY,WACRzkC,KAAKy9B,cACLz9B,KAAK29B,cACL39B,KAAK+8C,kBAAoB,GAAInjC,IAC7B5Z,KAAKg9C,kBAAoB,GAAIpjC,KAEjCuN,OAAQ,SAAU8d,GAAV,GAKA+B,GACKzoC,EACD0H,EACA4oC,EAEAoO,EATJ77B,EAASphB,IAKb,KAJc,SAAVilC,IACAA,EAAQjlC,KAAKilC,OAEb+B,EAAehnC,KAAK+mC,oBACfxoC,EAAI,EAAGA,EAAI0mC,EAAMxmC,OAAQF,IAC1B0H,EAAOg/B,EAAM1mC,GACbswC,EAAa7H,EAAa/gC,EAAKhF,QAAQuI,MAAQ,eACnD4X,EAAO6kB,YAAY4I,GACfoO,EAAiB77B,EAAO8lB,oBAAoB2H,GAC3CoO,IAGL77B,EAAO87B,mBAAmBt2C,EAAmBq2C,EAAgB5mC,IAAUpQ,GACvEmb,EAAO+7B,uBAAuBv2C,EAAmBq2C,EAAgB3mC,IAAerQ,GAChFmb,EAAOg8B,kBAAkBx2C,EAAmBq2C,EAAgB9nC,IAASlP,GAEzEjG,MAAKq9C,WAAWpY,IAEpBhC,YAAa,SAAU5e,EAAOpe,GAC1BjG,KAAK+8C,kBAAkB3mB,OAAO/R,EAAMuY,aACpC58B,KAAKg9C,kBAAkB5mB,OAAO/R,EAAMwY,aACpCzhB,GAAakJ,GAAG2e,YAAY1e,KAAKvkB,KAAMqkB,EAAOpe,IAElDm9B,WAAY,SAAU/6B,GAClB,GAAIoF,GAAWpF,EAAKpH,QAAQuI,IAC5B4R,IAAakJ,GAAG8e,WAAW7e,KAAKvkB,KAAMqI,GAClCA,EAAKpH,QAAQkJ,UACbnK,KAAKg9C,kBAAkBzmB,MAAM9oB,SACtBzN,MAAK29B,WAAWlwB,KAEvBzN,KAAK+8C,kBAAkBxmB,MAAM9oB,SACtBzN,MAAKy9B,WAAWhwB,IAEvBpF,IAASrI,KAAK09B,aACP19B,MAAK09B,MAEZr1B,IAASrI,KAAK49B,aACP59B,MAAK49B,OAGpBqJ,eAAgB,SAAU7iC,GAAV,GACRnD,GAAUjB,KAAKiB,QACfk8B,EAAY/4B,EAAOg5B,MACnBkgB,KAAkBr2C,OAAOhG,EAAQm8B,OACjCA,EAAQ70B,GAAK+0C,EAAc,SAAUl2C,GACrC,MAAOA,GAAEoC,OAAS2zB,IACnB,GACCE,EAAYj5B,EAAOk5B,MACnBigB,KAAkBt2C,OAAOhG,EAAQq8B,OACjCA,EAAQ/0B,GAAKg1C,EAAc,SAAUn2C,GACrC,MAAOA,GAAEoC,OAAS6zB,IACnB,GACC4H,EAAQhkC,EAAQgkC,YAChBmM,EAAkBnM,EAAM,GAAGz7B,MAAQ,UACnC6nC,GAAYjU,OAAan3B,OAASq3B,OAAar3B,MAAQmrC,CAC3D,OAAOC,IAEX6L,mBAAoB,SAAU94C,EAAQ6B,GAC9B7B,EAAO3F,OAAS,GAChBuB,KAAKijC,YAAY,GAAIxoB,IAAaza,MAC9BoE,OAAQA,EACR4mB,KAAM/kB,EAAKhF,QAAQ+pB,OACnB/kB,IAGZk3C,uBAAwB,SAAU/4C,EAAQ6B,GAClC7B,EAAO3F,OAAS,GAChBuB,KAAKijC,YAAY,GAAI/lB,IAAiBld,MAClCoE,OAAQA,EACR4mB,KAAM/kB,EAAKhF,QAAQ+pB,OACnB/kB,IAGZm3C,kBAAmB,SAAUh5C,EAAQ6B,GAC7B7B,EAAO3F,OAAS,GAChBuB,KAAKijC,YAAY,GAAItoB,IAAY3a,MAC7BoE,OAAQA,EACR4mB,KAAM/kB,EAAKhF,QAAQ+pB,OACnB/kB,IAGZu3C,aAAc,SAAUv8C,EAASkJ,EAAUshB,GAA7B,GAoBDjE,GACD1gB,EACA22C,EAEIC,EASRC,EACKp/C,EAMLq0C,EAQAvqC,EA/CAoF,EAAWxM,EAAQuI,KACnBo0C,EAAYzzC,EAAWnK,KAAK29B,WAAa39B,KAAKy9B,WAC9CoV,EAAU1oC,EAAWnK,KAAKg9C,kBAAoBh9C,KAAK+8C,kBACnDv1C,EAAcpF,MAAenB,GAAWkJ,SAAUA,IAClD0zC,EAAQ12C,EAAiBK,EAAYN,KAAM6Q,IAC3C+6B,EAAeD,EAAQrc,QACvBmc,EAAmBkL,GACnBp0C,IAAK,GACLjF,IAAK,IAELiF,IAAK,EACLjF,IAAK,GAELkF,EAAQmpC,EAAQrc,MAAM/oB,IAAaqlC,GAAgBH,EACnDmL,GACAt2C,EAAYiC,IACZjC,EAAYhD,KAEZJ,EAASpE,KAAKoE,MAClB,KAASojB,EAAW,EAAGA,EAAWpjB,EAAO3F,OAAQ+oB,IAG7C,GAFI1gB,EAAgB1C,EAAOojB,GACvBi2B,EAAiB32C,EAAcqD,EAAW,QAAU,SACpDszC,IAAmBj2C,EAAYgC,MAAsB,IAAdiiB,IAAoBgyB,EAAgB,CACvEC,EAAkB7xC,GAAazM,QAAQ0M,UAAUhF,EAAe,GAAGiF,YACvE+xC,EAAY5/C,KAAKw/C,EAAgBvzC,EAAW,IAAM,KAClD,OAQR,IALkB,IAAdshB,GAAmBqnB,IACnBppC,EAAMD,IAAMlF,KAAKkF,IAAIC,EAAMD,IAAKqpC,EAAarpC,KAC7CC,EAAMlF,IAAMD,KAAKC,IAAIkF,EAAMlF,IAAKsuC,EAAatuC,MAGxCjG,EAAI,EAAGA,EAAIu/C,EAAYr/C,OAAQF,IACpC,GAAIu/C,EAAYv/C,YAAcoJ,MAAM,CAChCg2C,GAAe,CACf,OAaR,GARI/K,EADAzrC,EAAiBK,EAAYN,KAAMU,MAAUJ,EAAYN,MAAQy2C,EACtDtzC,EAAQ0zC,cACZF,EACIxzC,EAAQ2oC,gBAER3oC,EAAQ4oC,YAEnB5qC,EAAO,GAAIuqC,GAASlpC,EAAMD,IAAKC,EAAMlF,IAAKgD,EAAaxH,KAAK4mB,cAChEve,EAAKojB,UAAYA,EACbhe,EAAU,CACV,GAAImwC,EAAUnwC,GACV,KAAUoW,QAAO1Z,EAAW,IAAM,KAAO,mBAAqBsD,EAAW,sBAE7EmwC,GAAUnwC,GAAYpF,EAG1B,MADArI,MAAKgjC,WAAW36B,GACTA,GAEXg1C,WAAY,SAAUpY,GAAV,GAOCrgC,GACDgrC,EAKCvL,EACD2Z,EAbJ58B,EAASphB,KACTiB,EAAUjB,KAAKiB,QACfg9C,KAAkBh3C,OAAOhG,EAAQm8B,OACjCwJ,KACAsX,KAAkBj3C,OAAOhG,EAAQq8B,OACjCuJ,IACJ,KAASjiC,EAAM,EAAGA,EAAMq5C,EAAax/C,OAAQmG,IACrCgrC,EAAWxuB,EAAOqkB,SAASwY,EAAar5C,GAAKqB,MAC7CnC,GAAQ8rC,EAAU3K,IAClB2B,EAAM1oC,KAAKkjB,EAAOo8B,aAAaS,EAAar5C,IAAM,EAAOA,GAGjE,KAASy/B,EAAQ,EAAGA,EAAQ6Z,EAAaz/C,OAAQ4lC,IACzC2Z,EAAa58B,EAAOqkB,SAASyY,EAAa7Z,GAAOp+B,MACjDnC,GAAQk6C,EAAY/Y,IACpB4B,EAAM3oC,KAAKkjB,EAAOo8B,aAAaU,EAAa7Z,IAAQ,EAAMA,GAGlErkC,MAAK09B,MAAQ19B,KAAK09B,OAASkJ,EAAM,GACjC5mC,KAAK49B,MAAQ59B,KAAK49B,OAASiJ,EAAM,IAErCsF,eAAgB,SAAU9nB,EAAOxb,EAAGqqC,GAApB,GAOH30C,GACD8J,EACA1F,EACAw7C,EATJ7tB,EAASjM,EAAM8uB,kBAAkBtqC,GACjCiX,EAAQ,GAAIpT,IAAM4jB,EAAO/jB,EAAG+jB,EAAO9jB,GACnCq3B,EAAU7jC,KAAK0F,KACfjH,EAASolC,EAAQplC,OACjB2/C,KACAC,IACJ,KAAS9/C,EAAI,EAAGA,EAAIE,EAAQF,IACpB8J,EAAOw7B,EAAQtlC,GACfoE,EAAS0F,EAAKpH,QAAQkJ,SAAWk0C,EAAUD,EAC3CD,EAAe91C,EAAK2X,SAASF,GACZ,OAAjBq+B,GACAx7C,EAAOzE,KAAKigD,EAGhBC,GAAQ3/C,OAAS,GAAK4/C,EAAQ5/C,OAAS,GACvC4lB,EAAMoI,QAAQymB,GACVnrC,QAAS6J,GAAa/I,GACtBgkB,cAAehkB,EACf0D,EAAGvE,EAAkBo2C,GACrB5xC,EAAGxE,EAAkBq2C,MAIjChL,kBAAmB,SAAUhrC,EAAMpH,GAAhB,GACXkJ,GAAW9B,EAAKpH,QAAQkJ,SACxBzE,EAAO1F,KAAKymC,UAAUzmC,KAAKilC,OAC3B15B,GAASpB,EAAWzE,EAAK8G,EAAI9G,EAAK6G,GAAG9F,QAAQ4B,GAC7Cb,KAAiBP,OAAOkD,EAAWnK,KAAKiB,QAAQq8B,MAAQt9B,KAAKiB,QAAQm8B,OAAO7xB,EAChFnJ,IAAWoF,EAAavG,MAGhC0Q,GAAkBwL,IACdigB,SACAE,WAEJl7B,GAAW+a,GAAWuK,UAAWrM,IAC7B+B,GAAa3L,GAAa5R,QAC1BC,KAAM,SAAUO,EAAOi+C,EAAQr9C,GAC3BwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKK,MAAQA,EACbL,KAAKs+C,OAASA,GAElBn3B,OAAQ,WAAA,GASIkG,GAcQkxB,EAWJC,EAjCR7wC,EAAS3N,KAAKiB,QAAQ0M,OACtBiZ,EAAe5mB,KAAKqqB,MAAMzD,aAC1BwG,EAAYptB,KAAKK,KACjBL,MAAKutB,WAAavtB,KAAKyL,WAAY,IAGvCzL,KAAKutB,WAAY,EACb5f,EAAO8f,UACHJ,EAAgBvb,GAAgB4b,QAAQ/f,EAAO8f,UACnDL,EAAYC,GACR/C,SAAUtqB,KAAKsqB,SACfpd,SAAUlN,KAAKkN,SACf7M,MAAOL,KAAKK,MACZ+D,OAAQpE,KAAKoE,OACb+mB,WAAYnrB,KAAKmrB,cAEdxd,EAAO2e,SACdc,EAAYxG,EAAa0F,OAAOC,KAAK5e,EAAO2e,OAAQc,IAEpDzf,EAAOlC,SAAW2hB,IACdzf,EAAOkhB,WAAa9jB,GAAU4C,EAAOkhB,WAAa5W,IAC7CtK,EAAOvH,QACJm4C,EAAkB,GAAItrC,IAAMjT,KAAKiB,QAAQmF,OAAOm6B,iBAEhD5yB,EAAOvH,MADPm4C,EAAkB,IACHhtC,GAEAJ,IAGlBxD,EAAOugB,aACRvgB,EAAOugB,WAAaluB,KAAKiB,QAAQmF,SAGjCo4C,EAAc53B,EAAa63B,MAAMxwC,eAAeN,OACpDA,EAAOvH,MAAQuH,EAAOvH,OAASo4C,EAAYp4C,MAC3CuH,EAAOugB,WAAavgB,EAAOugB,YAAcswB,EAAYtwB,YAEzDluB,KAAKgtB,MAAQ,GAAIjb,IAAQqb,EAAWhrB,MAAeuL,GAC/CigB,MAAO7iB,EACP8iB,OAAQ,GACRpH,WACIvf,KAAM6M,GACN2S,MAAO1mB,KAAK0+C,mBAGpB1+C,KAAKmS,OAAOnS,KAAKgtB,UAGzBxI,OAAQ,SAAUC,GACdzkB,KAAKmnB,SACLnnB,KAAKmB,IAAMsjB,EACXzkB,KAAK4uB,eAETA,YAAa,WAAA,GAQD+vB,GACAC,EACAC,EAUIr5B,EAnBRW,EAAMnmB,KACN8+C,EAAgB34B,EAAIllB,QAAQ0M,OAC5Bqf,EAAQ7G,EAAI6G,MACZsxB,EAASt+C,KAAKs+C,OAAOx4C,QACrBi5C,EAAiBD,EAAcpD,SAC/BzxC,EAAQq0C,EAAOU,QACfhyB,KACI2xB,EAAc3xB,EAAM7rB,IAAItC,SACxB+/C,EAAa5xB,EAAM7rB,IAAIvC,QAEvBkgD,EAAcjwB,WAAa9jB,GAC3BuzC,EAAOvgB,OAASx5B,KAAKsG,KAAKyzC,EAAOvgB,OAAS4gB,GAAe,GAAKA,EAC9DE,EAAKP,EAAOx+B,MAAM7V,GAClB+iB,EAAMxI,OAAO,GAAIze,IAAI84C,EAAGtyC,EAAGsyC,EAAGryC,EAAImyC,EAAc,EAAGE,EAAGtyC,EAAGsyC,EAAGryC,KACrDsyC,EAAcjwB,WAAa5W,IAClCqmC,EAAOvgB,OAASugB,EAAOvgB,OAAS4gB,EAAc,EAC9CE,EAAKP,EAAOx+B,MAAM7V,GAClB+iB,EAAMxI,OAAO,GAAIze,IAAI84C,EAAGtyC,EAAGsyC,EAAGryC,EAAImyC,EAAc,EAAGE,EAAGtyC,EAAGsyC,EAAGryC,MAG5DqyC,EAAKP,EAAOx4C,QAAQo1C,OAAO6D,GAAgBj/B,MAAM7V,GAC7C40C,EAAGtyC,GAAK+xC,EAAOt5B,OAAOzY,GACtBiZ,EAAKq5B,EAAGtyC,EAAIqyC,EACZ5xB,EAAMipB,YAAcjrC,KAEpBwa,EAAKq5B,EAAGtyC,EAAIqyC,EACZ5xB,EAAMipB,YAAchrC,GAExB+hB,EAAMxI,OAAO,GAAIze,IAAIyf,EAAIq5B,EAAGryC,EAAImyC,EAAaE,EAAGtyC,EAAGsyC,EAAGryC,OAIlEoZ,aAAc,WAAA,GAQEq5B,GACAz+B,EARRY,EAASphB,KACTmmB,EAAMnmB,KACNs+C,EAASn4B,EAAIm4B,OACbr9C,EAAUklB,EAAIllB,OAClBwQ,IAAa6S,GAAGsB,aAAarB,KAAKvkB,MAC9BA,KAAKK,QACDY,EAAQuf,QACJy+B,GAAcX,EAAOW,WAAa,KAAO,IACzCz+B,EAASvf,EAAQuf,QACjBtT,SAAUlN,KAAKkN,SACfod,SAAUtqB,KAAKsqB,SACfjqB,MAAOL,KAAKK,MACZ+D,OAAQpE,KAAKoE,OACb+mB,WAAYnrB,KAAKmrB,WACjBnG,OAAQ,GAAI7R,IAAcmrC,EAAOt5B,OAAOzY,EAAG+xC,EAAOt5B,OAAOxY,GACzDuxB,OAAQugB,EAAOvgB,OACfmhB,YAAaZ,EAAOY,YACpBD,WAAYA,EACZE,SAAUF,EAAaX,EAAOr0C,MAC9BhJ,QAASA,EACT8kB,OAAQ/lB,KAAKgmB,YACbJ,aAAc,WACV,GAAIwC,GAAQ,GAAIpV,GAEhB,OADAoO,GAAOg+B,oBAAoBh3B,GACpBA,KAGX5H,GACAxgB,KAAKwgB,OAAOrO,OAAOqO,IAGvBxgB,KAAKo/C,oBAAoBp/C,KAAKwgB,UAI1C4+B,oBAAqB,SAAUh3B,GAAV,GACbjC,GAAMnmB,KACNs+C,EAASn4B,EAAIm4B,OACbr9C,EAAUklB,EAAIllB,QACdo+C,EAAgBp+C,EAAQktB,WACxBA,EAASkxB,EAAczgD,MAAQ,GAC/BynB,QACIjgB,MAAOi5C,EAAcj5C,MACrBxH,MAAOygD,EAAczgD,MACrB2vB,QAAS8wB,EAAc9wB,QACvBjI,SAAU+4B,EAAc/4B,cAG5BlgB,EAAQnF,EAAQmF,MAChBquB,GACAruB,MAAOA,EACPmoB,QAASttB,EAAQstB,SAEjB/N,EAASxgB,KAAK8xB,cAAcwsB,EAAQl8C,IACpCqyB,KAAMA,EACNpO,QAAUkI,QAASttB,EAAQstB,SAC3BzpB,OAAQ7D,EAAQ6D,QACjBqpB,GACH/F,GAAMjW,OAAOqO,GACTzb,EAAmB9D,IACnBmnB,EAAMjW,OAAOnS,KAAK23B,sBAAsBnX,GACpCoX,UAAWxxB,EACXk5C,aAAc7qB,GACfryB,IACC4iB,QACIs5B,EAAOt5B,OAAOzY,EACd+xC,EAAOt5B,OAAOxY,GAElB0yC,YAAaZ,EAAOY,YACpBnhB,OAAQugB,EAAOvgB,OACfwhB,WAAW,GACZt+C,EAAQ+D,YAGnB8sB,cAAe,SAAUwsB,EAAQr9C,GAC7B,MAAIA,GAAQu+C,cACD,GAAI5sC,IAAQqrB,OAAO,GAAI/qB,IAAS+qB,OAAO,GAAI9qB,IAAcmrC,EAAOt5B,OAAOzY,EAAG+xC,EAAOt5B,OAAOxY,GAAI8xC,EAAOvgB,QAAS98B,GAEhHoJ,EAAQo1C,aAAargD,QAAQsgD,WAAWpB,EAAQr9C,IAE3DqyB,gBAAiB,WAAA,GACTnN,GAAMnmB,KACNiB,EAAUklB,EAAIllB,QACd+jB,EAASmB,EAAIm4B,OAAOt5B,MACxB5iB,IAAWnB,GACPwlB,WACIzB,QACIA,EAAOzY,EACPyY,EAAOxY,GAEXka,MAAO1mB,KAAK0+C,kBAGpBjtC,GAAa6S,GAAGgP,gBAAgB/O,KAAKvkB,OAEzC+uB,gBAAiB,SAAU9tB,GAAV,GACT+tB,GAAYhvB,KAAKiB,QAAQ+tB,cACzBb,EAASa,EAAUb,UACvB,OAAOnuB,MAAK8xB,cAAc9xB,KAAKs+C,OAAQl8C,MAAenB,GAClDwzB,MACIruB,MAAO4oB,EAAU5oB,MACjBmoB,QAASS,EAAUT,SAEvBlI,QACIkI,QAASJ,EAAOI,QAChB3vB,MAAOuvB,EAAOvvB,MACdwH,MAAO+nB,EAAO/nB,WAI1BgpB,gBAAiB,WACb,MAAOpvB,MAAKwgB,OAAOwR,SAAS,IAEhC3C,oBAAqB,WACjB,GAAIivB,GAASt+C,KAAKs+C,MAClB,QACIr9C,QAASjB,KAAKiB,QACd88B,OAAQugB,EAAOvgB,OACfmhB,YAAaZ,EAAOY,YACpBl6B,OAAQ,GAAI7R,IAAcmrC,EAAOt5B,OAAOzY,EAAG+xC,EAAOt5B,OAAOxY,GACzDyyC,WAAYX,EAAOW,WACnBE,SAAUb,EAAOr0C,MAAQq0C,EAAOW,WAChCz+B,OAAQxgB,KAAKwgB,SAGrBiP,cAAe,WAAA,GACP6uB,GAASt+C,KAAKs+C,OAAOx4C,QAAQo1C,OAAOhnC,IACpCyrC,EAAWrB,EAAOU,SAClBY,EAAWtB,EAAOx+B,MAAM6/B,EAC5B,QACI7/B,MAAO8/B,EACPhyB,MAAO5jB,EAAiB21C,EAAW,OAG3ChyB,YAAa,SAAUrB,GACnB,MAAOtsB,MAAKqqB,MAAMgC,iBAAiBrsB,KAAMssB,MAG7CphB,GAASV,GAAMH,EAAQC,IAAI,IAAKI,IAChCI,GAASN,GAAMH,EAAQC,IAAI,IAAKI,IA0BpCiH,GAAkByL,IACdhX,MAAO+K,GACPnM,SAAWC,SAAU,gBACrBkpB,QAAUvvB,MAAO,IACjB+O,QACIlC,SAAS,EACTiwC,SAAU,GACV3b,KAAMhvB,EAAiB8uC,aACvB/xB,OAAQ7b,GAAW,IACnB2b,MAAOxc,GACPtM,OAAQ,EACR+pB,SAAU1W,IAEdsO,WAAavf,KAAM0O,IACnBoZ,WACIvjB,SAAS,EACT0iB,QAAUvvB,MAAO,IAErB6M,SAAS,IAEbrJ,GAAWgb,GAAWsK,UAAW/O,IAC7B0E,IACAyiC,iBAAkB,SAAUz/C,EAAOyf,EAAO7e,GAAxB,GAMN8+C,GACA1yB,EACAruB,EAUAmnC,EAAkBC,EAjBtB4Z,EAAgBhgD,KAAKiB,QAAQ0jC,WAC7Bma,EAAgBkB,EAAcryC,WAC9B04B,EAAgB2Z,EAAc3Z,kBAC9BC,EAAsBD,EAAc14B,UACpC1M,IAAWA,EAAQslC,mBAAoB,IACnCwZ,EAAe9+C,EAAQwK,WAAY,EACnC4hB,EAAgB0yB,EAAejB,EAAcrxB,SAAW6Y,EAAoB7Y,UAAYqxB,EAAcrxB,SACtGzuB,EAAOiC,EAAQiM,UAAY,GAC3BmgB,IACAruB,EAAO8S,GAAgB4b,QAAQL,IAC3BruB,KAAMA,EACNoF,OAAQnD,EAAQmD,OAChBkmB,SAAUrpB,EAAQqpB,SAClBa,WAAYlqB,EAAQkqB,WACpB9qB,MAAOA,KAIX0/C,GACA5Z,KACAC,EAActmB,EAAM1Z,QAEpB+/B,GACI//B,MAAOkgC,EAAoBlgC,MAC3B25B,KAAMuG,EAAoBvG,MAE9BqG,GAAeC,EAAc/Y,aAAelnB,OAE5CpH,GACAgB,KAAKigD,YAAY/hD,MACb44C,WAAY71C,EAAQsK,MACpBvM,KAAMA,EACNoF,OAAQnD,EAAQmD,OAChBgiC,YAAaA,EACbz4B,OAAQw4B,OAgCxB7oB,GAAwB,GACxBC,GAAW9L,GAAa5R,QACxBC,KAAM,SAAUwgB,EAAUrf,GACtBwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKsgB,SAAWA,EAChBtgB,KAAK4mB,aAAetG,EAASsG,aAC7B5mB,KAAKiN,UACLjN,KAAKigD,eACLjgD,KAAKmnB,UAETA,OAAQ,WACJnnB,KAAKonB,mBAAmBpnB,KAAKqnB,SAASC,KAAKtnB,QAE/ConB,mBAAoB,SAAUwE,GAAV,GAQZs0B,GACA97C,EACAC,EACKmjB,EACD1gB,EACArC,EACAuf,EACAm8B,EACAC,EAWK7hD,EACDoN,EACAtL,EACAunB,EACAtc,EACArB,EACAo2C,EAIA50C,EApCR2V,EAASphB,KACTmmB,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdq/C,EAAen6B,EAAI7F,SAASrf,QAAQq/C,YAOxC,KANqB,SAAjBA,IACAA,MAEAJ,EAAcI,EAAa7hD,OAC3B2F,EAASnD,EAAQmD,OACjBC,EAAcD,EAAO3F,OAChB+oB,EAAW,EAAGA,EAAWnjB,EAAamjB,IAgB3C,IAfI1gB,EAAgB1C,EAAOojB,GACvB/iB,EAAOqC,EAAcrC,KACrBuf,EAAQtY,EAAY5E,GACpBq5C,EAAgB,IAAMn8B,EACtBo8B,EAAe,OAEfA,EADAv7C,GAAQiC,EAAcm4C,YACPn4C,EAAcm4C,WAEdh+C,EAAQg+C,WAEvBz3B,IAAanjB,EAAc,GACvByC,EAAc6G,OAAOkhB,WAAa1W,KAClCrR,EAAc6G,OAAOkhB,SAAW9jB,GAG/BxM,EAAI,EAAGA,EAAIkG,EAAKhG,OAAQF,IACzBoN,EAAYE,GAAazM,QAAQ0M,UAAUhF,EAAevI,GAC1D8B,EAAQsL,EAAUI,YAAY1L,MAC9BunB,EAAYrjB,KAAKsG,IAAIxK,GACrBiL,EAASK,EAAUL,OACnBrB,EAAQ2d,EAAYu4B,EACpBE,EAA0B,IAAhB57C,EAAKhG,UAAwB6M,EAAO+0C,QAC7Cr8C,GAAW8C,EAAcV,SAC1BU,EAAcV,MAAQkF,EAAOlF,OAASk6C,EAAa/hD,EAAI2hD,IAEvDz0C,EAAUJ,EAAevE,EAAewE,EAAQ/M,GACpDqtB,EAASvrB,EAAO,GAAIgK,GAAQk2C,KAAK,KAAM,EAAG,EAAGH,EAAcn2C,IACvDogB,MAAOjJ,EACPlU,SAAU5B,EAAO4B,UAAY,GAC7B3B,MAAOhN,EACP6F,OAAQ0C,EACR0gB,SAAUA,EACV8C,SAAU7lB,EAAKlG,GACf4sB,WAAsB,IAAVnH,EAAc4D,EAAY5D,EAAQ,EAC9Cq8B,QAASA,EACT9Z,gBAAiBj7B,EAAOi7B,gBACxB96B,QAASA,EACT3G,OAAQT,EAAcmjB,EACtBk3B,eAAgBt9B,EAAOs9B,eAAengD,EAAGipB,EAAUnjB,KAEnDoH,KAAY,IACZ20C,GAAgBn2C,IAKhCu2C,mBAAoB,SAAUv/C,EAASZ,EAAOiL,GAC1C,GAAIlH,GAASkH,EAAOlH,MACpBjB,GAAYlC,GACRZ,MAAOA,EACP+D,OAAQA,EACRkmB,SAAUhf,EAAOgf,SACjBpd,SAAU5B,EAAO4B,SACjBie,WAAY7f,EAAO6f,aAEnB5nB,SAAUa,EAAOmK,UACjB3K,UACI,OACA,WACA,SACA,aAIZyjB,SAAU,SAAUhnB,EAAOi+C,EAAQhzC,GAAzB,GAOF4mB,GANAuuB,EAAiBr+C,MAAekJ,EAAOlH,QAAUmH,MAAOD,EAAOC,OACnEvL,MAAKwgD,mBAAmBC,EAAgBpgD,EAAOiL,GAC/CtL,KAAK8/C,iBAAiBz/C,EAAOogD,EAAgBn1C,GACzCA,EAAOG,WAAY,IAGnBymB,EAAU,GAAI9U,IAAW/c,EAAOi+C,EAAQmC,GAC5C5iD,EAAEgC,OAAOqyB,EAAS5mB,GAClBtL,KAAKmS,OAAO+f,GACZlyB,KAAKiN,OAAO/O,KAAKg0B,KAErB1N,OAAQ,SAAUC,GAAV,GAQA5hB,GACA1B,EACAu/C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA38C,EACA48C,EACAC,EACAlxB,EAGA+N,EACA/Y,EACKzmB,EACD2zB,EACAosB,EACAxS,EAIIqV,EAQJn0B,EAvCJ7G,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdgM,EAASkZ,EAAIlZ,OACbm0C,EAAgBj7B,EAAIi7B,aAqBxB,KApBsB,SAAlBA,IACAA,MAEAv+C,EAAQoK,EAAOxO,OACf0C,EAAMsjB,EAAU3e,QAChB46C,EAAQ,EACRC,EAAWp8C,KAAKkF,IAAItI,EAAIvC,QAASuC,EAAItC,UACrC+hD,EAAeD,EAAW,EAC1BE,EAAiBF,EAAsB,IAAXA,EAC5BG,EAAS,GAAI/6C,IAAI5E,EAAIqkB,GAAIrkB,EAAImkB,GAAInkB,EAAIqkB,GAAKm7B,EAAUx/C,EAAImkB,GAAKq7B,GAC7DI,EAAeD,EAAO97B,SACtBg8B,EAAY7/C,EAAI6jB,SAChB3gB,EAAcpD,EAAQmD,OAAO3F,OAC7BwiD,KACAC,KACAlxB,EAAU/rB,GAAehD,EAAQ+uB,QAAS6wB,GAC9C7wB,EAAUA,EAAU4wB,EAAeF,EAAQE,EAAeF,EAAQ1wB,EAClE8wB,EAAOvf,UAAUyf,EAAUz0C,EAAIw0C,EAAax0C,EAAGy0C,EAAUx0C,EAAIu0C,EAAav0C,GACtEuxB,EAAS6iB,EAAe5wB,EACxBhL,EAAS,GAAItY,IAAMqxB,EAAS+iB,EAAOt7B,GAAKwK,EAAS+N,EAAS+iB,EAAOx7B,GAAK0K,GACjEzxB,EAAI,EAAGA,EAAIsE,EAAOtE,IACnB2zB,EAAUjlB,EAAO1O,GACjB+/C,EAASpsB,EAAQosB,OACjBxS,EAAc5Z,EAAQ1K,SAC1B82B,EAAOvgB,OAASA,EAChBugB,EAAOt5B,OAASA,EACZo8B,EAAc3iD,SACV0iD,EAAeC,EAActV,GACjCwS,EAAOY,YAAciC,EAAajC,YAClCZ,EAAOvgB,OAASojB,EAAapjB,QAE7B+N,IAAgBznC,EAAc,GAAK6tB,EAAQmuB,UAC3C/B,EAAOt5B,OAASs5B,EAAOx4C,QAAQu7C,UAA0B,IAAhB/C,EAAOvgB,QAAeje,MAAMw+B,EAAOU,WAEhF9sB,EAAQ1N,OAAOs8B,GACX9zB,EAAQkF,EAAQlF,MAChBA,GACIA,EAAM/rB,QAAQ4tB,WAAa1W,IACvB2zB,IAAgBznC,EAAc,IAC1B2oB,EAAMipB,cAAgBjrC,GACtBk2C,EAAgBhjD,KAAK8uB,GAErBi0B,EAAe/iD,KAAK8uB,GAMpCi0B,GAAexiD,OAAS,IACxBwiD,EAAe9iD,KAAK6B,KAAKshD,iBAAgB,IACzCthD,KAAKuhD,iBAAiBN,IAEtBC,EAAgBziD,OAAS,IACzByiD,EAAgB/iD,KAAK6B,KAAKshD,iBAAgB,IAC1CthD,KAAKwhD,kBAAkBN,IAE3BlhD,KAAKmB,IAAM2/C,GAEfS,iBAAkB,SAAU5zC,GACxB,GAAI8zC,GAAYzhD,KAAK0hD,sBAAsB/zC,EAC3C3N,MAAK2hD,iBAAiBF,EAAW9zC,IAErC6zC,kBAAmB,SAAU7zC,GACzB,GAAI8zC,GAAYzhD,KAAK0hD,sBAAsB/zC,EAC3C3N,MAAK2hD,iBAAiBF,EAAW9zC,IAErC+zC,sBAAuB,SAAU/zC,GAAV,GASVpP,GACDqjD,EATJ1vB,EAAU/hB,GAAKnQ,KAAKiN,QACpBqxC,EAASpsB,EAAQosB,OACjBz7C,EAAQ8K,EAAOlP,OAAS,EACxBojD,EAAKvD,EAAOvgB,OAAS7L,EAAQjxB,QAAQ0M,OAAO+tC,SAC5C+F,KACAK,EAAWn0C,EAAO,GAAGxM,IACrBu6C,EAAWlxC,GAAMs3C,EAASx8B,IAAMg5B,EAAOt5B,OAAOxY,EAAIq1C,EAAKC,EAASjjD,SAAWijD,EAASjjD,SAAW,GAEnG,KADA4iD,EAAUvjD,KAAKw9C,GACNn9C,EAAI,EAAGA,EAAIsE,EAAOtE,IACnBqjD,EAAYj0C,EAAOpP,EAAI,GAAG4C,IAC9B2gD,EAAWn0C,EAAOpP,GAAG4C,IACrBu6C,EAAWlxC,GAAMo3C,EAAUt8B,GAAKw8B,EAASv8B,IACzCk8B,EAAUvjD,KAAKw9C,EAInB,OAFAA,GAAWlxC,GAAM8zC,EAAOt5B,OAAOxY,EAAIq1C,EAAKl0C,EAAO9K,GAAO1B,IAAIokB,GAAK5X,EAAO9K,GAAO1B,IAAItC,SAAW,GAC5F4iD,EAAUvjD,KAAKw9C,GACR+F,GAEXE,iBAAkB,SAAUF,EAAW9zC,GAArB,GAGVogB,GAAMC,EAAO+zB,EACRxjD,EAHL6iB,EAASphB,KACT6C,EAAQ4+C,EAAUhjD,MAEtB,KAASF,EAAI,EAAGA,EAAIsE,EAAOtE,IAGvB,IAFAwjD,GAAaN,EAAUljD,GACvBwvB,EAAOC,EAAQzvB,EACRwjD,EAAY,IAAMh0B,GAAQ,GAAKC,EAAQnrB,IAC1Ck/C,EAAY3gC,EAAO4gC,cAAcP,EAAWljD,IAAKwvB,EAAMg0B,GACvDA,EAAY3gC,EAAO4gC,cAAcP,EAAWljD,IAAKyvB,EAAO+zB,EAGhE/hD,MAAKiiD,aAAaR,EAAW9zC,IAEjCq0C,cAAe,SAAUP,EAAWv7C,EAAQ2oB,EAAUqzB,GAAvC,GAGHC,GAFJp7C,EAASm7C,CAOb,OANIT,GAAU5yB,GAAY,IAClBszB,EAAY59C,KAAKkF,IAAIg4C,EAAU5yB,GAAW9nB,GAC9CA,GAAUo7C,EACVV,EAAU5yB,IAAaszB,EACvBV,EAAUv7C,IAAWi8C,GAElBp7C,GAEXk7C,aAAc,SAAUR,EAAW9zC,GAArB,GAQNy0C,GAEK7jD,EACDyuB,EACA7rB,EAXJigB,EAASphB,KACTkyB,EAAU/hB,GAAKnQ,KAAKiN,QACpBqxC,EAASpsB,EAAQosB,OACjB3lB,EAAezG,EAAQjxB,QAAQ0M,OAC/B00C,EAAc10C,EAAOlP,OACrB6jD,EAAgB3pB,EAAa+iB,SAC7B6G,EAAOjE,EAAOt5B,OAAOxY,GAAK8xC,EAAOvgB,OAASukB,GAAiB30C,EAAO,GAAGxM,IAAItC,QAG7E,KADA4iD,EAAU,IAAM,EACPljD,EAAI,EAAGA,EAAI8jD,EAAa9jD,IACzByuB,EAAQrf,EAAOpP,GACf4C,EAAM6rB,EAAM7rB,IAChBohD,GAAQd,EAAUljD,GAClB6jD,EAAOhhC,EAAOohC,YAAYrhD,EAAIskB,GAAI64B,EAAOx4C,QAAQo1C,OAAOoH,GAAgBC,EAAMA,EAAOphD,EAAItC,SAAUmuB,EAAMipB,cAAgBjrC,IACrHgiB,EAAMipB,cAAgBjrC,IAClB2tB,EAAa/K,QAAUxc,KACvBgxC,EAAO9D,EAAOvgB,OAASugB,EAAOt5B,OAAOzY,EAAI+1C,GAE7Ct1B,EAAMxI,OAAO,GAAIze,IAAIq8C,EAAOjhD,EAAIvC,QAAS2jD,EAAMH,EAAMG,MAEjD5pB,EAAa/K,QAAUxc,KACvBgxC,EAAO9D,EAAOt5B,OAAOzY,EAAI+xC,EAAOvgB,OAASukB,GAE7Ct1B,EAAMxI,OAAO,GAAIze,IAAIq8C,EAAOjhD,EAAIvC,QAAS2jD,EAAMH,EAAMG,KAEzDA,GAAQphD,EAAItC,UAGpB+mB,aAAc,WAAA,GASDrnB,GACD2zB,EACAosB,EACAtxB,EACA/iB,EACAw4C,EAEIC,EAWIvhD,EACAm7C,EACArlB,EACA+nB,EACA2D,EAAatuB,EAAcuuB,EA9BvCxhC,EAASphB,KACTmmB,EAAMnmB,KACN6iD,EAAa18B,EAAIllB,QAAQ4hD,WACzB51C,EAASkZ,EAAIlZ,OACbpK,EAAQoK,EAAOxO,OACfiiD,EAAQ,CAGZ,KAFAjvC,GAAa6S,GAAGsB,aAAarB,KAAKvkB,MAClCA,KAAK8iD,mBACIvkD,EAAI,EAAGA,EAAIsE,EAAOtE,IACnB2zB,EAAUjlB,EAAO1O,GACjB+/C,EAASpsB,EAAQosB,OACjBtxB,EAAQkF,EAAQlF,MAChB/iB,EAAQq0C,EAAOU,SACfyD,GAAmBvwB,EAAQjxB,QAAQ4hD,gBAAkBz8C,OAASy8C,EAAWz8C,MACzE4mB,IACI01B,EAAgB,GAAI7vC,KACpBwT,QACIjgB,MAAOq8C,EACP7jD,MAAOikD,EAAWjkD,OAEtB6nB,WACIvf,KAAM6M,GACN2S,MAAOwL,EAAQwsB,kBAGnB1xB,EAAM/rB,QAAQ4tB,WAAa1W,IAAiC,IAAlB+Z,EAAQ7xB,QAC9Cc,EAAM6rB,EAAM7rB,IACZm7C,EAAcgC,EAAOt5B,OACrBiS,EAAQqnB,EAAOx+B,MAAM7V,GACrB+0C,EAAS,GAAItyC,IAAMvL,EAAIqkB,GAAIrkB,EAAI6jB,SAASxY,GACxCm2C,EAAK,OAAQtuB,EAAM,OAAQuuB,EAAW,OAC1C3rB,EAAQqnB,EAAOx4C,QAAQo1C,OAAO2H,EAAW7yB,SAASlQ,MAAM7V,GACxDy4C,EAAcn8B,OAAO0Q,EAAM1qB,EAAG0qB,EAAMzqB,GAChCwgB,EAAMipB,cAAgBjrC,IACtBqpB,EAAM,GAAI3nB,IAAMvL,EAAIqkB,GAAKq9B,EAAW7yB,QAAS7uB,EAAI6jB,SAASxY,GAC1Do2C,EAAW12C,EAAaowC,EAAarlB,EAAO+nB,EAAQ3qB,GACpD2qB,EAAS,GAAItyC,IAAM2nB,EAAI9nB,EAAIm0C,EAAOrsB,EAAI7nB,GACtCo2C,EAAWA,GAAY5D,EACvB4D,EAASr2C,EAAIhI,KAAKkF,IAAIm5C,EAASr2C,EAAGyyC,EAAOzyC,GACrC6U,EAAO2hC,cAAcH,EAAUtE,EAAOt5B,OAAQs5B,EAAOvgB,OAAS2iB,IAAUkC,EAASr2C,EAAI+xC,EAAOt5B,OAAOzY,GACnGo2C,EAAKrE,EAAOt5B,OAAOzY,EAAI+xC,EAAOvgB,OAAS2iB,EACnCxuB,EAAQjxB,QAAQ0M,OAAOigB,QAAUtY,GAC7BqtC,EAAK3D,EAAOzyC,EACZm2C,EAAcl8B,OAAOm8B,EAAI1rB,EAAMzqB,GAE/Bk2C,EAAcl8B,OAAOyQ,EAAM1qB,EAAY,EAARm0C,EAAWzpB,EAAMzqB,GAGpDk2C,EAAcl8B,OAAOm8B,EAAI1rB,EAAMzqB,GAEnCk2C,EAAcl8B,OAAOw4B,EAAOzyC,EAAG8nB,EAAI7nB,KAEnCo2C,EAASp2C,EAAI6nB,EAAI7nB,EACjBk2C,EAAcl8B,OAAOo8B,EAASr2C,EAAGq2C,EAASp2C,MAG9C6nB,EAAM,GAAI3nB,IAAMvL,EAAIskB,GAAKo9B,EAAW7yB,QAAS7uB,EAAI6jB,SAASxY,GAC1Do2C,EAAW12C,EAAaowC,EAAarlB,EAAO+nB,EAAQ3qB,GACpD2qB,EAAS,GAAItyC,IAAM2nB,EAAI9nB,EAAIm0C,EAAOrsB,EAAI7nB,GACtCo2C,EAAWA,GAAY5D,EACvB4D,EAASr2C,EAAIhI,KAAKC,IAAIo+C,EAASr2C,EAAGyyC,EAAOzyC,GACrC6U,EAAO2hC,cAAcH,EAAUtE,EAAOt5B,OAAQs5B,EAAOvgB,OAAS2iB,IAAUkC,EAASr2C,EAAI+xC,EAAOt5B,OAAOzY,GACnGo2C,EAAKrE,EAAOt5B,OAAOzY,EAAI+xC,EAAOvgB,OAAS2iB,EACnCxuB,EAAQjxB,QAAQ0M,OAAOigB,QAAUtY,GAC7BqtC,EAAK3D,EAAOzyC,EACZm2C,EAAcl8B,OAAOm8B,EAAI1rB,EAAMzqB,GAE/Bk2C,EAAcl8B,OAAOyQ,EAAM1qB,EAAY,EAARm0C,EAAWzpB,EAAMzqB,GAGpDk2C,EAAcl8B,OAAOm8B,EAAI1rB,EAAMzqB,GAEnCk2C,EAAcl8B,OAAOw4B,EAAOzyC,EAAG8nB,EAAI7nB,KAEnCo2C,EAASp2C,EAAI6nB,EAAI7nB,EACjBk2C,EAAcl8B,OAAOo8B,EAASr2C,EAAGq2C,EAASp2C,KAGlDk2C,EAAcl8B,OAAO6N,EAAI9nB,EAAG8nB,EAAI7nB,GAChC4U,EAAO0hC,gBAAgB5kD,KAAKwkD,GAC5BthC,EAAOZ,OAAOrO,OAAOuwC,MAKrCpB,gBAAiB,SAAUh2B,GACvB,GAAI03B,GAAe13B,KAAe,CAClC,OAAO,UAAUlkB,EAAGC,GAAb,GACCwZ,IAASzZ,EAAEmpB,OAAO+tB,OAAOU,SAAW,KAAO,IAC3CiE,GAAU57C,EAAEkpB,OAAO+tB,OAAOU,SAAW,KAAO,GAChD,QAAQn+B,EAAQoiC,GAAUD,IAGlCR,YAAa,SAAUU,EAAW5E,EAAQh5B,EAAIC,EAAI49B,GAArC,GACLplB,GAASugB,EAAOvgB,OAChBqlB,EAAgB9E,EAAOt5B,OACvBq+B,EAAKD,EAAc72C,EACnB+2C,EAAKF,EAAc52C,EACnB+2C,EAAIh/C,KAAKkF,IAAIlF,KAAKsG,IAAIy4C,EAAKh+B,GAAK/gB,KAAKsG,IAAIy4C,EAAK/9B,GAClD,OAAIg+B,GAAIxlB,EACGmlB,EAEJG,EAAK9+C,KAAKuf,KAAKia,EAASA,EAASwlB,EAAIA,IAAMJ,EAAY,OAElEJ,cAAe,SAAUjjC,EAAOkF,EAAQ+Y,GACpC,MAAOx5B,MAAK2f,IAAIc,EAAOzY,EAAIuT,EAAMvT,EAAG,GAAKhI,KAAK2f,IAAIc,EAAOxY,EAAIsT,EAAMtT,EAAG,GAAKjI,KAAK2f,IAAI6Z,EAAQ,IAEhG1R,iBAAkB,SAAUvM,EAAOwM,GAC/B,MAAOtsB,MAAK4mB,aAAa0F,OAAOC,KAAKD,EAAQxM,EAAMzf,QAEvDq+C,eAAgB,SAAU9S,GACtB,MAAOA,GAAgBtuB,MAa/B3L,GAAkB4L,IACd0hC,WAAY,GACZ4D,YACIjkD,MAAO,EACPwH,MAAO,UACP4pB,QAAS,GAEbqW,eACI/Y,WACA3f,aAGRvL,GAAWmb,GAASmK,UAAWrK,IAC3BG,GAAcpC,GAAavb,QAC3BsnB,OAAQ,WACJnnB,KAAKwjD,eAAexjD,KAAKoE,SAE7Bo/C,eAAgB,SAAUp/C,GAAV,GACRmtC,GAAcntC,EAAO,GACrBq/C,EAAW,GAAIlmC,IAASvd,MACxBoE,OAAQA,EACR4rB,QAASuhB,EAAYvhB,QACrBivB,WAAY1N,EAAY0N,WACxB4D,WAAYtR,EAAYsR,WACxBle,OAAQ3kC,KAAKiB,QAAQ0jC,QAEzB3kC,MAAKijC,YAAYwgB,IAErBxgB,YAAa,SAAU5e,EAAOpe,GAC1BmV,GAAakJ,GAAG2e,YAAY1e,KAAKvkB,KAAMqkB,EAAOpe,GAC9CkM,GAAOnS,KAAKiB,QAAQ0jC,OAAOlI,MAAOpY,EAAM47B,gBAG5CxiC,GAAeL,GAAWvd,QAC1B+uB,YAAa,WAAA,GAOD+vB,GAGIE,EATR14B,EAAMnmB,KACN8+C,EAAgB34B,EAAIllB,QAAQ0M,OAC5Bqf,EAAQ7G,EAAI6G,MACZsxB,EAASt+C,KAAKs+C,OAAOx4C,QACrBmE,EAAQq0C,EAAOU,QACfhyB,KACI2xB,EAAc3xB,EAAM7rB,IAAItC,SACxBigD,EAAcjwB,WAAa9jB,GAC3BuzC,EAAOvgB,SAAWugB,EAAOvgB,OAASugB,EAAOY,aAAe,EACpDL,EAAKP,EAAOx+B,MAAM7V,GACtB+iB,EAAMxI,OAAO,GAAIze,IAAI84C,EAAGtyC,EAAGsyC,EAAGryC,EAAImyC,EAAc,EAAGE,EAAGtyC,EAAGsyC,EAAGryC,KAE5D4Q,GAAWkH,GAAGsK,YAAYrK,KAAKvkB,QAI3C8xB,cAAe,SAAUwsB,EAAQr9C,GAC7B,MAAOoJ,GAAQo1C,aAAargD,QAAQsgD,WAAWpB,EAAQr9C,MAG/D0Q,GAAkB8L,IACdzY,SAAWC,SAAU,gBACrB0I,QAAUkhB,SAAU9jB,GACpB0b,WAAavf,KAAM0O,MAEvBxT,GAAWqb,GAAaiK,UAAW/O,IAC/B+E,GAA0B,GAC1BC,GAAaJ,GAAS1d,QACtBwnB,SAAU,SAAUhnB,EAAOi+C,EAAQhzC,GAAzB,GAOF4mB,GANAuuB,EAAiBr+C,MAAekJ,EAAOlH,QAAUmH,MAAOD,EAAOC,OACnEvL,MAAKwgD,mBAAmBC,EAAgBpgD,EAAOiL,GAC/CtL,KAAK8/C,iBAAiBz/C,EAAOogD,EAAgBn1C,GACxCjL,GAASiL,EAAOG,WAAY,IAG7BymB,EAAU,GAAIzU,IAAapd,EAAOi+C,EAAQmC,GAC9C5iD,EAAEgC,OAAOqyB,EAAS5mB,GAClBtL,KAAKmS,OAAO+f,GACZlyB,KAAKiN,OAAO/O,KAAKg0B,KAErB1N,OAAQ,SAAUC,GAAV,GAYAi/B,GACAC,EACAC,EACKrlD,EACDuI,EAiBA+8C,EAIJ3E,EACApxB,EACA/tB,EAAMg+B,EAEDoF,EACD2gB,EAzCJ1iC,EAASphB,KACTiB,EAAUjB,KAAKiB,QACfE,EAAMsjB,EAAU3e,QAChB46C,EAAQ,EACRC,EAAWp8C,KAAKkF,IAAItI,EAAIvC,QAASuC,EAAItC,UACrC+hD,EAAeD,EAAW,EAC1BE,EAAiBF,EAAsB,IAAXA,EAC5Bv8C,EAASnD,EAAQmD,OACjBC,EAAcD,EAAO3F,OACrBuxB,EAAU/rB,GAAehD,EAAQ+uB,QAAS6wB,EAK9C,KAJA7wB,EAAUA,EAAU4wB,EAAeF,EAAQE,EAAeF,EAAQ1wB,EAC9D0zB,EAAY9C,EAAe5wB,EAC3B2zB,EAAoB,EAEfplD,EAAI,EAAGA,EAAI8F,EAAa9F,IACzBuI,EAAgB1C,EAAO7F,GACjB,IAANA,GACIsG,GAAQiC,EAAc88C,YACtBA,EAAW98C,EAAc88C,SACzBF,GAAa58C,EAAc88C,UAG/B/+C,GAAQiC,EAAc/G,MACtB2jD,GAAa58C,EAAc/G,KAE3B4jD,IAEA9+C,GAAQiC,EAAcgnB,SAAWvvB,IAAM8F,EAAc,IACrDq/C,GAAa58C,EAAcgnB,OAYnC,KATKjpB,GAAQ++C,KACLC,GAAejD,EAAe5wB,IAAY3rB,EAAc,KAC5Du/C,EAAyB,IAAdC,EACXH,GAAaE,GAEb1E,EAAc0E,EACd91B,EAAS,EAEb9tB,KAAKohD,iBACIje,EAAM,EAAGA,EAAM9+B,EAAa8+B,IAC7B2gB,EAAkB1/C,EAAO++B,GAC7BpjC,EAAOkE,GAAe6/C,EAAgB/jD,KAAM2jD,EAAYC,GACxDzE,GAAepxB,EACfiQ,EAASmhB,EAAcn/C,EACvBqhB,EAAOggC,cAAcljD,MACjBghD,YAAaA,EACbnhB,OAAQA,IAEZjQ,EAASg2B,EAAgBh2B,QAAU,EACnCoxB,EAAcnhB,CAElBxgB,IAAS+G,GAAGE,OAAOD,KAAKvkB,KAAMykB,IAElCi6B,eAAgB,SAAU9S,EAAeE,EAAaznC,GAClD,MAAOunC,GAAgBluB,GAA0B5J,IAA8Bg4B,EAAc,IAAMznC,EAAc,MAGzHsN,GAAkBgM,IACdshC,WAAY,GACZ4D,YACIjkD,MAAO,EACPwH,MAAO,UACP4pB,QAAS,KAGbpS,GAAgBJ,GAAY3d,QAC5BsnB,OAAQ,WACJnnB,KAAK+jD,iBAAiB/jD,KAAKoE,SAE/B2/C,iBAAkB,SAAU3/C,GAAV,GACVmtC,GAAcntC,EAAO,GACrB4/C,EAAa,GAAIrmC,IAAW3d,MAC5BoE,OAAQA,EACR4rB,QAASuhB,EAAYvhB,QACrB6yB,WAAYtR,EAAYsR,WACxBle,OAAQ3kC,KAAKiB,QAAQ0jC,QAEzB3kC,MAAKijC,YAAY+gB,MAGrBnmC,GAAkB,IAClBC,GAAoB1C,GAAavb,QACjC4kC,WAAY,WACRzkC,KAAKsuC,sBAAwB,GAAI10B,KAErCuN,OAAQ,WACJnnB,KAAKimC,YAAYjmC,KAAKoE,QACtBpE,KAAKikD,kBACLjkD,KAAK2uC,eACL3uC,KAAKkkD,mBAEThc,UAAW,WAAA,GACH7/B,GAAOrI,KAAK2oB,UACZjf,EAAQrB,EAAKqB,QACbo+B,EAAgBz/B,EAAKpH,QAAQqqB,QAAU5hB,EAAMlF,IAAMkF,EAAMD,IACzDwW,EAAO5X,EAAKyc,QAAQgjB,GACpB9iB,EAAShlB,KAAKmkD,UAAUr/B,QAAQ,GAAGE,OACnCrf,EAAU0C,EAAKlH,IAAIogC,UAAUvc,EAAOzY,EAAI0T,EAAKuF,GAAIR,EAAOxY,EAAIyT,EAAKqF,GACrEjd,GAAKmc,OAAO7e,IAEhBu+C,gBAAiB,WAAA,GAOTtR,GAAUwR,EAcV16C,EAKAif,EAzBAkqB,EAAU7yC,KAAKsuC,sBACfwE,EAAeD,EAAQrc,QACvBhvB,EAAcxH,KAAKqkD,kBACnBtR,kBAAkB,EAClBjuC,WAGA0C,GAAYN,OAAS6Q,IACrB66B,EAAWvoC,EAAQi6C,qBACnBF,GACI36C,IAAK,GACLjF,IAAK,KAGTouC,EAAWvoC,EAAQk6C,iBACnBH,GACI36C,IAAK,EACLjF,IAAK,IAGTkF,EAAQmpC,EAAQrc,MAAMhtB,OAASspC,GAAgBsR,EAC/C16C,GAASopC,IACTppC,EAAMD,IAAMlF,KAAKkF,IAAIC,EAAMD,IAAKqpC,EAAarpC,KAC7CC,EAAMlF,IAAMD,KAAKC,IAAIkF,EAAMlF,IAAKsuC,EAAatuC,MAE7CmkB,EAAY,GAAIiqB,GAASlpC,EAAMD,IAAKC,EAAMlF,IAAKgD,EAAaxH,KAAK4mB,cACrE5mB,KAAK2oB,UAAYA,EACjB3oB,KAAKgjC,WAAWra,IAEpB0e,WAAY,WAAA,GAYJmd,GAXAr+B,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QAAQqf,SACtBqI,EAAYxC,EAAIwC,UAChBw7B,EAAYh+B,EAAIg+B,UAChBhjD,EAAMglB,EAAIhlB,IACV0/C,EAAiBt8C,KAAKkF,IAAItI,EAAIvC,QAASuC,EAAItC,UAAYgf,GACvDmS,EAAU/d,GAAWhR,EAAQ+uB,YAAe6wB,GAC5Cl7C,EAAUxE,EAAI2E,QAAQqhC,MAAMnX,GAC5By0B,EAAe9+C,EAAQG,QAAQyjC,OAAO,EAAG5jC,EAAQ9G,SAAW,EAChEslD,GAAU3/B,OAAO7e,GACjBgjB,EAAUnE,OAAOigC,GACbD,EAAa77B,EAAUsL,UAAUp1B,SAAW8pB,EAAUxnB,IAAItC,SAC9D8pB,EAAUnE,OAAOmE,EAAUxnB,IAAIgmC,OAAQrQ,IAAK0tB,KAC5CxkD,KAAK2F,QAAUA,EACf3F,KAAKkoC,UAAUviC,IAEnBmlC,cAAe,WACX,MAAO9qC,MAAKmB,OAGhB4c,GAAoBtD,GAAa5a,QACjCirB,UAAW,SAAUY,EAAOC,GAAjB,GACH+4B,GAAch5B,EAAM1G,OAAOxY,EAAImf,EAAMrG,GACrCrF,EAAOvT,GAAMi4C,SAASj5B,EAAM1G,OAAQ0G,EAAMuzB,WAAYyF,EAC1D,OAAO,IAAI3+C,IAAIka,EAAK1T,EAAG0T,EAAKzT,EAAGyT,EAAK1T,EAAG0T,EAAKzT,MAGpDmF,GAAkBoM,IAAqBiN,MAAM,IACzChN,GAAiBd,GAAiBrd,WACtCme,GAAe0J,UAAUoD,UAAY/M,GAAkB2J,UAAUoD,UACjEnZ,GAAkBqM,IAAkBgN,MAAM,IACtC/M,GAAyBvE,GAAkB7Z,QAC3C01B,UAAW,SAAUC,GACjB,GAAIxQ,GAAShlB,KAAK4kD,kBAClBpvB,GAAShP,OAAOxB,EAAOzY,EAAGyY,EAAOxY,IAErCo4C,iBAAkB,WAAA,GACVT,GAAYnkD,KAAKuwB,OAAOjQ,SAAS6jC,UACjCn/B,EAASm/B,EAAUhjD,IAAI6jB,QAC3B,OAAOA,IAEX2P,eAAgB,WAAA,GAGJ3P,GACAkM,EACAxM,EAJJyM,EAAWnxB,KAAK40B,eASpB,OARKzD,KACGnM,EAAShlB,KAAK4kD,mBACd1zB,EAAiB,GAAI7mB,GAAQgnB,iBAAe,IAC5C3M,EAAa1L,GAAY0O,UAAUza,OAAOsX,KAAKvkB,MACnD0kB,EAAWxmB,KAAK8mB,GAChBmM,EAAWnxB,KAAK40B,gBAAkB1D,EAAeI,QAAQ5M,GACzDyM,EAASmS,OAENnS,KAGXjT,GAAmB1E,GAAY3Z,QAC/BoN,OAAQ,WAAA,GACAkZ,GAAMnmB,KACNmkD,EAAYh+B,EAAIoK,OAAOjQ,SAAS6jC,UAChChwB,EAAchO,EAAIgO,YAClBnP,EAASm/B,EAAUhjD,IAAI6jB,SACvB/X,EAAS+L,GAAY0O,UAAUza,OAAOsX,KAAKvkB,KAAMm0B,EASrD,OARAlnB,GAAOglB,SACHjN,EAAOzY,EACPyY,EAAOxY,IAEXS,EAAO/O,MACH8mB,EAAOzY,EACPyY,EAAOxY,IAEJS,KAGXkR,GAAiBH,GAAene,QAChCiyB,cAAe,SAAUpN,EAAY5d,EAAe0gB,GAArC,GAEP0K,GADAjzB,GAAS6H,EAAc4G,UAAYzO,KAOvC,OAJIizB,GADAjzB,IAAU6V,GACA,GAAImJ,IAAuByG,EAAY,OAAM,GAAO5d,EAAe0gB,GAEnE,GAAItJ,IAAiBwG,KAAgB5d,EAAe0gB,IAItEyV,mBAAoB,SAAU58B,EAAO8xB,GACjC,GAAI2qB,EAUJ,OATI33C,GAAS9E,EAAMkM,IAAM4lB,IAAkBvd,KACvCkoC,GACIvwC,EAAGlM,EAAMkM,EACTC,EAAGnM,EAAMmM,GAET2lB,IAAkBxd,KAClBmoC,EAAatwC,EAAI,IAGlBswC,GAEXhsB,oBAAqB,SAAU1sB,GAC3B,MAAOA,GAAO+tB,eAAiBxd,IAEnCkwC,qBAAsB,WAAA,GAGTjgD,GAFLwc,EAASphB,KACToE,EAASpE,KAAKiB,QAAQmD,MAC1B,KAASQ,EAAM,EAAGA,EAAMR,EAAO3F,OAAQmG,IACnC,GAAIwc,EAAO0P,oBAAoB1sB,EAAOQ,MAAUiQ,GAC5C,OAAO;EAInBgd,WAAY,SAAU5kB,GAAV,GAIKrI,GACDkb,EAEIzf,EANZ+gB,EAASphB,IAEb,IADAiN,EAAO9O,KAAKwO,GACR3M,KAAK6kD,uBACL,IAASjgD,EAAM,EAAGA,EAAMqI,EAAOxO,OAAQmG,IAC/Bkb,EAAQ7S,EAAOrI,GACfkb,IACIzf,EAAQyf,EAAMzf,MACb8E,EAAS9E,EAAMmM,IAAM4U,EAAO0P,oBAAoBhR,EAAM1b,UAAYyQ,UAC5D5H,GAAOrI,GAK9B,OAAOqI,MAMXmR,GAAgBN,GAAkBje,QAClCokD,gBAAiB,WACb,GAAIE,GAAY,GAAI95C,GAAQy6C,UAAU9kD,KAAKiB,QAAQm8B,MAAOp9B,KAAK4mB,aAC/D5mB,MAAKmkD,UAAYA,EACjBnkD,KAAK09B,MAAQymB,EACbnkD,KAAKgjC,WAAWmhB,IAEpBE,iBAAkB,SAAU9gD,GACxB,MAAOnB,IAAWmB,GACdwhD,gBAAkB79C,KAAMsK,IACxBwzC,gBAAkB99C,KAAMsK,KACzBxR,KAAKiB,QAAQq8B,QAEpB4mB,gBAAiB,WACbpmC,GAAkBwG,GAAG4/B,gBAAgB3/B,KAAKvkB,MAC1CA,KAAK49B,MAAQ59B,KAAK2oB,WAEtBsa,YAAa,SAAU5e,EAAOpe,GAC1BjG,KAAKsuC,sBAAsBlY,OAAO/R,EAAMwY,aACxCzhB,GAAasM,UAAUub,YAAY1e,KAAKvkB,KAAMqkB,EAAOpe,IAEzD0oC,aAAc,WAAA,GACNvqC,GAASpE,KAAKknC,oBAAoBlnC,KAAKoE,QACvC6B,EAAOjG,KAAKilC,MAAM,EACtBjlC,MAAK2vC,gBAAgB/oC,EAAmBxC,GAAS0R,KAAc7P,GAC/DjG,KAAKk9C,mBAAmBt2C,EAAmBxC,GAAS2R,KAAiB9P,GACrEjG,KAAKmvC,gBAAgBvoC,EAAmBxC,GAASyR,KAAc5P,IAEnE0pC,gBAAiB,SAAUvrC,EAAQ6B,GAC/B,GAAsB,IAAlB7B,EAAO3F,OAAX,CAGA,GAAIqzC,GAAY,GAAI9zB,IAAehe,MAAQoE,OAAQA,GACnDpE,MAAKijC,YAAY6O,EAAW7rC,KAEhCi3C,mBAAoB,SAAU94C,EAAQ6B,GAClC,GAAsB,IAAlB7B,EAAO3F,OAAX,CAGA,GAAIwmD,GAAe,GAAIlnC,IAAkB/d,MAAQoE,OAAQA,GACzDpE,MAAKijC,YAAYgiB,EAAch/C,KAEnCkpC,gBAAiB,SAAU/qC,EAAQ6B,GAC/B,GAAsB,IAAlB7B,EAAO3F,OAAX,CAGA,GAAIszC,GAAY,GAAI5zB,IAAene,MAAQoE,OAAQA,GACnDpE,MAAKijC,YAAY8O,EAAW9rC,KAEhCkmC,eAAgB,SAAU9nB,EAAOxb,EAAGqqC,GAApB,GACR5iB,GAASjM,EAAM8uB,kBAAkBtqC,GACjCiX,EAAQ,GAAIpT,IAAM4jB,EAAO/jB,EAAG+jB,EAAO9jB,GACnC04C,EAASllD,KAAK09B,MAAM1d,SAASF,GAC7BqlC,EAASnlD,KAAK49B,MAAM5d,SAASF,EAClB,QAAXolC,GAA8B,OAAXC,GACnB9gC,EAAMoI,QAAQymB,GACVnrC,QAAS6J,GAAa/I,GACtB0D,EAAG24C,EACH14C,EAAG24C,KAIfrgB,iBAAkB,eAGtBnzB,GAAkByM,IACdgf,SACAE,WAEJl7B,GAAWgc,GAAcsJ,UAAWrM,IAChCgD,GAAiB/E,GAAUzZ,QAC3BirB,UAAW,SAAUC,EAAcF,GAAxB,GACH65B,GAAc35B,EAAa/F,OAAOxY,EAAIqe,EAAUvF,GAChDrF,EAAOvT,GAAMi4C,SAAS55B,EAAa/F,OAAQ+F,EAAai0B,SAAU0F,EACtE,OAAO,IAAI3+C,IAAIka,EAAK1T,EAAG0T,EAAKzT,EAAGyT,EAAK1T,EAAG0T,EAAKzT,IAEhDslB,cAAe,SAAUpN,EAAY5d,EAAe0gB,GAArC,GAEPC,GAMAyK,EAPAjzB,EAAQ6H,EAAc7H,KAW1B,OARIwoB,GADAxoB,IAAU6V,GACEoE,GAEAF,GAEZkZ,EAAU,GAAIzK,GAAU/C,EAAY5d,EAAe0gB,GACnD9C,EAAWjmB,SAAWqI,EAAcrC,KAAKhG,SACzCyzB,EAAQjxB,QAAQkvB,QAAS,GAEtB+B,KAGfvgB,GAAkB0M,IAAkB2M,MAAM,IACtC1M,GAAyB5E,GAAkB7Z,QAC3C01B,UAAW,eAGXhX,GAAmB/E,GAAY3Z,QAC/BoN,OAAQ,WACJ,MAAO+L,IAAY0O,UAAUza,OAAOsX,KAAKvkB,KAAMA,KAAKm0B,gBAGxD3V,GAAiBH,GAAexe,QAChCiyB,cAAe,SAAUpN,EAAY5d,EAAe0gB,EAAUkN,GAA/C,GAGPxC,GAKIiC,EAPJtL,EAAY7oB,KAAKiB,QAAQ4nB,UACzB5pB,GAAS6H,EAAc4G,UAAYzO,KAavC,OAXIA,KAAU6V,IACVod,EAAU,GAAI5T,IAAuBoG,EAAYgQ,EAAa7L,EAAW/hB,EAAe0gB,GACxF0K,EAAQjxB,QAAQkvB,QAAS,IAGrBtH,GAAarB,EAAW,GAAKkN,IAC7BP,EAAcO,EAAYhQ,WAAW5C,MAAM,GAAGwJ,WAElD5G,EAAWxmB,KAAKwmB,EAAW,IAC3BwN,EAAU,GAAI3T,IAAiBmG,EAAYyP,EAAartB,EAAe0gB,IAEpE0K,GAEXpB,oBAAqB,SAAU1sB,GAC3B,MAAOA,GAAO+tB,eAAiBxd,MAGnC8J,GAAehB,GAAa5d,QAC5BC,KAAM,SAAUO,EAAOY,GACnBwc,GAAa6G,GAAGxkB,KAAKykB,KAAKvkB,KAAMK,EAAO,KAAMY,MAGrD0Q,GAAkB8M,IACdzZ,SAAWC,SAAU,QACrB0I,QAAU+tC,SAAU,MAEpBh9B,GAAqBjN,GAAa5R,QAClC2kB,OAAQ,SAAU85B,GAAV,GAUK//C,GACD6mD,EAVJj/B,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACd+wB,EAAW7L,EAAI6L,SACf+F,EAAM92B,EAAQ82B,IACdC,EAAU/2B,EAAQ+2B,QAClBn1B,EAAQmvB,EAASvzB,OACjBw5B,EAAQp1B,EAAQk1B,EAAMC,GAAWn1B,EAAQ,GACzCwiD,EAAY/G,EAAOr0C,MAAQguB,EAC3BhuB,EAAQq0C,EAAOW,WAAaoG,GAAattB,EAAM,EACnD,KAASx5B,EAAI,EAAGA,EAAIsE,EAAOtE,IACnB6mD,EAAa9G,EAAOx4C,QACxBs/C,EAAWnG,WAAah1C,EACxBm7C,EAAWn7C,MAAQo7C,EACfrzB,EAASzzB,GAAG+/C,SACZ8G,EAAWrnB,OAAS/L,EAASzzB,GAAG+/C,OAAOvgB,QAE3C/L,EAASzzB,GAAGimB,OAAO4gC,GACnBpzB,EAASzzB,GAAG+/C,OAAS8G,EACrBn7C,GAASo7C,EAAYA,EAAYrtB,KAI7CrmB,GAAkB+M,IACdqZ,IAAK,EACLC,QAAS,IAETrZ,GAAmBlN,GAAa5R,QAChC2kB,OAAQ,SAAU85B,GAAV,GAQK//C,GACD+mD,EARJn/B,EAAMnmB,KACNsrB,EAAUnF,EAAIllB,QAAQqqB,QACtB0G,EAAW7L,EAAI6L,SACfqG,EAAgBrG,EAASvzB,OACzBoiB,EAAQyK,EAAU+M,EAAgB,EAAI,EACtCxF,EAAOvH,KAAe,CAE1B,KADAtrB,KAAKmB,IAAM,GAAI4E,IACNxH,EAAIsiB,EAAOtiB,GAAK,GAAKA,EAAI85B,EAAe95B,GAAKs0B,EAC9CyyB,EAActzB,EAASzzB,GAAG+/C,OAC9BgH,EAAYrG,WAAaX,EAAOW,WAChCqG,EAAYr7C,MAAQq0C,EAAOr0C,SAInC2U,GAAgB1E,GAASra,QACzB4nB,UAAW,WACP,MAAOhJ,KAEX8Z,YAAa,WACT,MAAO7Z,KAEX8Z,UAAW,WACP,MAAO7Z,KAEXoM,aAAc,SAAUtiB,EAAcof,GAClC,MAAOpf,GAAaqc,QAAQ+C,IAEhCiD,UAAW,SAAUC,EAAcF,GAAxB,GACH5K,GAAO8K,EAAajlB,QACpB0G,EAAIue,EAAa/F,OAAOxY,CAG5B,OAFAyT,GAAK8d,OAASvxB,EAAIqe,EAAUvF,GAC5BrF,EAAKi/B,YAAc1yC,EAAIqe,EAAUtF,GAC1BtF,GAEXmL,YAAa,SAAUtL,EAAOgL,GAC1BhL,EAAMw+B,OAASxzB,EACfhL,EAAM0E,UAEV8O,gBAAiB,WACbtzB,KAAKiB,QAAQwlB,UAAUzB,OAAShlB,KAAKmB,IAAI2kB,SAASd,SAClD9K,GAASoK,GAAGgP,gBAAgB/O,KAAKvkB,SAGzC4e,GAAc8I,UAAUlD,OAAS9L,GAAiBgP,UAAUlD,OAC5D7S,GAAkBiN,IACdoM,MAAM,EACNvE,WAAavf,KAAM,SAEnB2X,GAAgBf,GAAkBje,QAClCokD,gBAAiB,WACb,GAAIx7C,GAAe,GAAI4B,GAAQk7C,kBAAkBvlD,KAAKiB,QAAQwH,aAAczI,KAAK4mB,aACjF5mB,MAAKmkD,UAAY17C,EACjBzI,KAAKyI,aAAeA,EACpBzI,KAAKgjC,WAAWv6B,GAChBzI,KAAKyuC,sBACLzuC,KAAK0uC,4BAET2V,iBAAkB,SAAU9gD,GAaxB,MAZIvD,MAAKwlD,eACLpjD,GAAWmB,GACPwhD,gBAAkB79C,KAAMsK,IACxBwzC,gBAAkB99C,KAAMsK,MAG5BxR,KAAKylD,eACLrjD,GAAWmB,GACPwvC,kBAAkB,EAClBplC,QAAU2e,OAAQ,QAGnBlqB,GAAWmB,EAAUvD,KAAKiB,QAAQ0nB,YAE7C8lB,oBAAqB,WACjB3yB,GAAoB4L,UAAU+mB,oBAAoBlqB,KAAKvkB,KAAMA,KAAKilC,QAEtEyJ,yBAA0B,WACtB5yB,GAAoB4L,UAAUgnB,yBAAyBnqB,KAAKvkB,KAAMA,KAAKilC,QAE3EiL,aAAc,SAAUppC,GACpB,MAAOA,IAEX6nC,aAAc,WAAA,GACNvqC,GAASpE,KAAKknC,oBAAoBlnC,KAAKoE,QACvC6B,EAAOjG,KAAKilC,MAAM,EACtBjlC,MAAKmvC,gBAAgBvoC,EAAmBxC,GAAS4R,KAAc/P,GAC/DjG,KAAK2vC,gBAAgB/oC,EAAmBxC,GAAS8R,KAAcjQ,GAC/DjG,KAAKovC,eAAexoC,EAAmBxC,GAAS6R,KAAgBhQ,IAEpEy/C,aAAc,SAAUthD,GAAV,GAIF64C,GACAh1B,EAJJhnB,GAAYmD,OAAQA,GACpBmtC,EAAcntC,EAAO,EAUzB,OATImtC,KACI0L,EAAiBj9C,KAAKknC,oBAAoB9iC,GAC1C6jB,EAAQspB,EAAYtpB,MACxBhnB,EAAQ4nB,UAAYZ,GAASg1B,EAAex+C,OAAS,EACrDwC,EAAQknB,aAAeF,GAAwB,SAAfA,EAAM/gB,MAAmB+1C,EAAex+C,OAAS,EAC7EwC,EAAQknB,eACRnoB,KAAKylD,eAAgB,IAGtBxkD,GAEXkuC,gBAAiB,SAAU/qC,EAAQ6B,GAC/B,GAAsB,IAAlB7B,EAAO3F,OAAX,CAGA,GAAIszC,GAAY,GAAIvzB,IAAexe,KAAMA,KAAK0lD,aAAathD,GAC3DpE,MAAKijC,YAAY8O,EAAW9rC,KAEhC0pC,gBAAiB,SAAUvrC,EAAQ6B,GAC/B,GAAsB,IAAlB7B,EAAO3F,OAAX,CAGA,GAAIqzC,GAAY,GAAIzzB,IAAere,KAAMA,KAAK0lD,aAAathD,GAC3DpE,MAAKijC,YAAY6O,EAAW7rC,KAEhCmpC,eAAgB,SAAUhrC,EAAQ6B,GAAlB,GAIRsrC,GACAtwC,EAGA0wC,CAPkB,KAAlBvtC,EAAO3F,SAGP8yC,EAAcntC,EAAO,GACrBnD,EAAUjB,KAAK0lD,aAAathD,GAChCnD,EAAQ82B,IAAMwZ,EAAYxZ,IAC1B92B,EAAQ+2B,QAAUuZ,EAAYvZ,QAC1B2Z,EAAW,GAAI/yB,IAAc5e,KAAMiB,GACvCjB,KAAKijC,YAAY0O,EAAU1rC,GAC3BjG,KAAKwlD,eAAgB,IAEzB3+B,mBAAoB,WAChB,MAAO7mB,MAAKyI,cAEhB0jC,eAAgB,SAAU9nB,EAAOxb,EAAGqqC,GAApB,GACR5iB,GAASjM,EAAM8uB,kBAAkBtqC,GACjCiX,EAAQ,GAAIpT,IAAM4jB,EAAO/jB,EAAG+jB,EAAO9jB,GACnCU,EAAWlN,KAAKyI,aAAasX,YAAYD,GACzCzf,EAAQL,KAAK2oB,UAAU3I,SAASF,EACnB,QAAb5S,GAA+B,OAAV7M,GACrBgkB,EAAMoI,QAAQymB,GACVnrC,QAAS6J,GAAa/I,GACtBqE,SAAUA,EACV7M,MAAOA,KAInBykC,iBAAkB,eAGtB1iC,GAAWyc,GAAc6I,UAAWrM,IAChC4nB,YAAannB,GAAoB4L,UAAUub,YAC3CgN,gBAAiBn0B,GAAoB4L,UAAUuoB,kBAEnDt+B,GAAkBkN,IACdpW,cAAgBnE,eAChBqkB,eAEA7J,GAAgBrN,GAAa5R,QAC7BC,KAAM,SAAUO,EAAOY,EAASw/C,GAC5BhvC,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKK,MAAQA,EACbL,KAAKiB,QAAQsK,MAAQk1C,EAAel1C,OAExCiZ,OAAQ,SAAUmhC,GAAV,GACA14C,GAASjN,KAAKiN,OACd+f,EAAQhtB,KAAKgyB,SAAS,EAC1BhyB,MAAKmB,IAAM,GAAI4E,IAAIkH,EAAO,GAAGV,EAAGU,EAAO,GAAGT,EAAGS,EAAO,GAAGV,EAAGU,EAAO,GAAGT,GAChEwgB,GACAA,EAAMxI,OAAO,GAAIze,IAAI4/C,EAASngC,GAAIvY,EAAO,GAAGT,EAAGm5C,EAASlgC,GAAIxY,EAAO,GAAGT,KAG9EoZ,aAAc,WAAA,GAGNpF,GAFAY,EAASphB,KACTiB,EAAUjB,KAAKiB,OAEnBwQ,IAAa6S,GAAGsB,aAAarB,KAAKvkB,MAE9BwgB,EADAvf,EAAQuf,OACCvf,EAAQuf,QACbtT,SAAUlN,KAAKkN,SACfod,SAAUtqB,KAAKsqB,SACfjqB,MAAOL,KAAKK,MACZ+D,OAAQpE,KAAKoE,OACb+mB,WAAYnrB,KAAKmrB,WACjBle,OAAQjN,KAAKiN,OACbhM,QAASA,EACT8kB,OAAQ/lB,KAAKgmB,YACbJ,aAAc,WACV,MAAOxE,GAAOwkC,gBAIb5lD,KAAK4lD,aAEdplC,GACAxgB,KAAKwgB,OAAOrO,OAAOqO,IAG3BolC,WAAY,WAAA,GACJ3kD,GAAUjB,KAAKiB,QACfktB,EAASltB,EAAQktB,OACjBoJ,EAAO1kB,GAAKqd,WAAWlwB,KAAKiN,QAC5BwnB,MACIruB,MAAOnF,EAAQmF,MACfmoB,QAASttB,EAAQstB,SAErBlI,QACIjgB,MAAO+nB,EAAO/nB,MACdmoB,QAASJ,EAAOI,QAChB3vB,MAAOuvB,EAAOvvB,SAEnBwxB,OACH,OAAOmH,IAEXxI,gBAAiB,SAAU9vB,GACvB,MAAO4T,IAAKqd,WAAWlwB,KAAKiN,OAAQhO,IAExCmwB,gBAAiB,WACb,MAAOpvB,MAAKwgB,OAAOwR,SAAS,IAEhC3C,oBAAqB,WACjB,GAAIkI,GAAO1kB,GAAKqd,WAAWlwB,KAAKiN,QAAQmjB,OACxC,QACInvB,QAASjB,KAAKiB,QACds2B,KAAMA,IAGd9H,cAAe,WACX,GAAItuB,GAAMnB,KAAKmB,GACf,QACI2e,MAAO,GAAIpT,IAAMvL,EAAI6jB,SAASzY,EAAGpL,EAAImkB,IACrCsI,OACI1jB,WAAY,SACZC,SAAU,SAItBwjB,YAAa,SAAUrB,GACnB,GAAIxM,GAAQ9f,IACZ,OAAO8f,GAAMuK,MAAMgC,iBAAiBvM,EAAOwM,MAGnD3a,GAAkBmN,IACd1Y,MAAO+K,GACPgd,QAAUvvB,MAAO,KAErBwD,GAAW0c,GAAc4I,UAAW/O,IAChCoG,GAActN,GAAa5R,QAC3BC,KAAM,SAAUwgB,EAAUrf,GACtBwQ,GAAa6S,GAAGxkB,KAAKykB,KAAKvkB,KAAMiB,GAChCjB,KAAKsgB,SAAWA,EAChBtgB,KAAKiN,UACLjN,KAAK2N,UACL3N,KAAKigD,eACLjgD,KAAKmnB,UAETkF,iBAAkB,SAAUvM,EAAOwM,GAC/B,MAAOtsB,MAAK4mB,aAAa0F,OAAOC,KAAKD,EAAQxM,EAAMzf,QAEvD8mB,OAAQ,WAAA,GAQA/iB,GACAK,EAIAuf,EACKzlB,EACDoN,EACAtL,EAIAiL,EAIAG,EAQAymB,EACAlF,EAhCJ5L,EAASphB,KACTmmB,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdq/C,EAAen6B,EAAI7F,SAASrf,QAAQq/C,YAMxC,IALqB,SAAjBA,IACAA,MAEAl8C,EAASnD,EAAQmD,OAAO,GACxBK,EAAOL,EAAOK,KAKlB,IADIuf,EAAQtY,EAAYtH,GACf7F,EAAI,EAAGA,EAAIkG,EAAKhG,OAAQF,IACzBoN,EAAYE,GAAazM,QAAQ0M,UAAU1H,EAAQ7F,GACnD8B,EAAQsL,EAAUI,YAAY1L,MACpB,OAAVA,GAA4BihB,SAAVjhB,IAGlBiL,EAASK,EAAUL,OAClBtH,GAAWI,EAAOgC,SACnBhC,EAAOgC,MAAQkF,EAAOlF,OAASk6C,EAAa/hD,EAAI+hD,EAAa7hD,SAE7DgN,EAAUJ,EAAejH,EAAQkH,EAAQ/M,GAC7C+M,EAASlJ,IACLmJ,MAAOhN,EACP8rB,MAAOjJ,EACPhd,OAAQA,EACRkmB,SAAU7lB,EAAKlG,GACf4sB,WAAY5mB,KAAKsG,IAAIxK,GAAS2jB,GAC/B1Y,GAAUG,QAASA,IAClBymB,EAAU9Q,EAAO0Q,cAAczxB,EAAOiL,GACtC0hB,EAAQ5L,EAAO+V,YAAY92B,EAAOiL,GAClC4mB,GAAWlF,GACXkF,EAAQ/f,OAAO6a,KAI3BwzB,mBAAoB,SAAUv/C,EAASZ,EAAOiL,GAC1C,GAAIlH,GAASkH,EAAOlH,MACpBjB,GAAYlC,GACRZ,MAAOA,EACP+D,OAAQA,EACRkmB,SAAUhf,EAAOgf,SACjB/e,MAAOD,EAAOC,QAEdhI,SAAUa,EAAOmK,UACjB3K,UACI,OACA,SACA,aAIZkuB,cAAe,SAAUzxB,EAAOiL,GAAjB,GAKH4mB,GAJJjL,EAAgB7kB,MAAekJ,EAAOlH,OAG1C,IAFApE,KAAKwgD,mBAAmBv5B,EAAe5mB,EAAOiL,GAC9CtL,KAAK8/C,iBAAiBz/C,EAAO4mB,EAAe3b,GACxCA,EAAOG,WAAY,EAKnB,MAJIymB,GAAU,GAAIpT,IAAcze,EAAO4mB,EAAe3b,GACtDzN,EAAEgC,OAAOqyB,EAAS5mB,GAClBtL,KAAKmS,OAAO+f,GACZlyB,KAAKiN,OAAO/O,KAAKg0B,GACVA,GAGfiF,YAAa,SAAU92B,EAAOiL,GAAjB,GAOG+hB,GAYAkxB,EAWJ7nB,EA7BJtyB,EAASkH,EAAOlH,OAChBkmB,EAAWhf,EAAOgf,SAClB3c,EAASvL,MAAepC,KAAKiB,QAAQ0M,OAAQvJ,EAAOuJ,QACpD3O,EAAOqB,CACX,IAAIsN,EAAOlC,QA2BP,MA1BIkC,GAAO8f,UACHJ,EAAgBvb,GAAgB4b,QAAQ/f,EAAO8f,UACnDzuB,EAAOquB,GACH/C,SAAUA,EACVjqB,MAAOA,EACP8qB,WAAY7f,EAAO6f,WACnBje,SAAU5B,EAAO4B,SACjB9I,OAAQA,KAELuJ,EAAO2e,SACdttB,EAAOgB,KAAKsgB,SAASsG,aAAa0F,OAAOC,KAAK5e,EAAO2e,OAAQttB,IAE5D2O,EAAOvH,QACJm4C,EAAkB,GAAItrC,IAAM7O,EAAOgC,OAAOm6B,iBAE1C5yB,EAAOvH,MADPm4C,EAAkB,IACHhtC,GAEAJ,GAEdxD,EAAOugB,aACRvgB,EAAOugB,WAAa9pB,EAAOgC,QAGnCpG,KAAKwgD,mBAAmB7yC,EAAQtN,EAAOiL,GACnCorB,EAAU,GAAI3kB,IAAQ/S,EAAMoD,IAAayrB,OAAQlgB,EAAOkhB,UAAYlhB,IACxE3N,KAAK2N,OAAOzP,KAAKw4B,GACVA,GAGfmvB,aAAc,WAAA,GAMDtnD,GACDyuB,EACAY,EAEIhvB,EATR+O,EAAS3N,KAAK2N,OACdqiB,GACAjC,KAAM,EACNC,MAAO,EAEX,KAASzvB,EAAI,EAAGA,EAAIoP,EAAOlP,OAAQF,IAC3ByuB,EAAQrf,EAAOpP,GACfqvB,EAAQZ,EAAM/rB,QAAQ2sB,MACtBA,IAAU7iB,IACNnM,EAAQ+O,EAAOpP,GAAG4C,IAAIvC,QACtBgvB,IAAU3iB,EACV+kB,EAAQjC,KAAOxpB,KAAKC,IAAIwrB,EAAQjC,KAAMnvB,GAEtCoxB,EAAQhC,MAAQzpB,KAAKC,IAAIwrB,EAAQhC,MAAOpvB,GAIpD,OAAOoxB,IAEX81B,mBAAoB,SAAU3kD,EAAKvC,EAAOmnD,GAAtB,GAOPnhD,GAKLohD,EACAC,EACAC,EACK7hB,EACDlZ,EACAg7B,EACAC,EACAn5C,EACApO,EACAu/B,EApBJjY,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdkwB,EAAWhL,EAAIlZ,OACfpK,EAAQsuB,EAAS1yB,OACjB4nD,EAAel1B,EAAS,GACxBm1B,EAAaD,CACjB,KAASzhD,EAAM,EAAGA,EAAMusB,EAAS1yB,OAAQmG,IACjCusB,EAASvsB,GAAKumB,WAAam7B,EAAWn7B,aACtCm7B,EAAan1B,EAASvsB,GAM9B,KAHIohD,EAAgBK,EAAal7B,WAAam7B,EAAWn7B,WAAavsB,EAClEqnD,GAAkBrnD,EAAQonD,GAAiB,EAC3CE,EAAiB,EACZ7hB,EAAQ,EAAGA,EAAQxhC,EAAOwhC,IAC3BlZ,EAAagG,EAASkT,GAAOlZ,WAC7Bg7B,EAAch1B,EAASkT,EAAQ,GAC/B+hB,EAAiBD,EAAcA,EAAYh7B,WAAaA,EACxDle,EAASkkB,EAASkT,GAAOp3B,UACzBpO,EAASoC,EAAQslD,cAAgBR,EAAc56B,EAAa46B,EAAcljD,EAC1Eu7B,EAAS,OAITA,EAHCjT,GAGSvsB,EAAQonD,GAAiBI,EAAiBj7B,IAAe,EAF1Di7B,EAAiB,EAAIxnD,EAAQ,EAI1Cw/B,EAASlsB,GAAWksB,EAAQ,EAAGx/B,GAC/BqO,EAAO/O,KAAK,GAAIiV,IAAchS,EAAIqkB,GAAKygC,EAAgB9kD,EAAImkB,GAAK4gC,IAChEj5C,EAAO/O,KAAK,GAAIiV,IAAchS,EAAIqkB,GAAK5mB,EAAQqnD,EAAgB9kD,EAAImkB,GAAK4gC,IACxEj5C,EAAO/O,KAAK,GAAIiV,IAAchS,EAAIqkB,GAAK5mB,EAAQw/B,EAAQj9B,EAAImkB,GAAKzmB,EAASqnD,IACzEj5C,EAAO/O,KAAK,GAAIiV,IAAchS,EAAIqkB,GAAK4Y,EAAQj9B,EAAImkB,GAAKzmB,EAASqnD,IACjED,EAAiB7nB,EACjB8nB,GAAkBrnD,EAASoC,EAAQulD,eACnCR,EAAgB9zC,GAAWtT,EAAQ,EAAIw/B,EAAQ,EAAGx/B,IAG1D6nD,oBAAqB,SAAUtlD,EAAKvC,EAAOmnD,GAAtB,GAWRnhD,GACDqI,EACAke,EACAiT,EACAv/B,EAdJsnB,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdkwB,EAAWhL,EAAIlZ,OACfpK,EAAQsuB,EAAS1yB,OACjBioD,EAAkBzlD,EAAQ0lD,WAAa,EACvCA,EAAYD,EAAkBzlD,EAAQ0lD,UAAY/nD,EAAQA,EAC1DqnD,EAAiBS,EAAkB,GAAK9nD,EAAQA,EAAQqC,EAAQ0lD,WAAa,EAC7EC,EAAeF,EAAkB9nD,EAAQA,EAAyB,EAAjBqnD,EACjDY,GAAeD,EAAeD,GAAa,EAC3CT,EAAiB,CACrB,KAASthD,EAAM,EAAGA,EAAM/B,EAAO+B,IACvBqI,EAASkkB,EAASvsB,GAAKqI,UACvBke,EAAagG,EAASvsB,GAAKumB,WAC3BiT,EAASn9B,EAAQslD,cAAgBM,EAAc17B,EAAa07B,EAAchkD,EAC1EhE,EAASoC,EAAQslD,cAAgBR,EAAc56B,EAAa46B,EAAcljD,EAC9EoK,EAAO/O,KAAK,GAAIiV,IAAchS,EAAIqkB,GAAKygC,EAAgB9kD,EAAImkB,GAAK4gC,IAChEj5C,EAAO/O,KAAK,GAAIiV,IAAchS,EAAIqkB,GAAK5mB,EAAQqnD,EAAgB9kD,EAAImkB,GAAK4gC,IACxEj5C,EAAO/O,KAAK,GAAIiV,IAAchS,EAAIqkB,GAAK5mB,EAAQqnD,EAAiB7nB,EAAQj9B,EAAImkB,GAAKzmB,EAASqnD,IAC1Fj5C,EAAO/O,KAAK,GAAIiV,IAAchS,EAAIqkB,GAAKygC,EAAiB7nB,EAAQj9B,EAAImkB,GAAKzmB,EAASqnD,IAClFD,GAAkB7nB,EAClB8nB,GAAkBrnD,EAASoC,EAAQulD,gBAG3ChiC,OAAQ,SAAUmhC,GAAV,GAMA1kD,GACAE,EACA4kD,EACAnnD,EAMKgG,EAdLqI,EAASjN,KAAKiN,OACdpK,EAAQoK,EAAOxO,MACnB,IAAKoE,EAYL,IATI5B,EAAUjB,KAAKiB,QACfE,EAAMwkD,EAAS7/C,QAAQqhC,MAAMnnC,KAAK6lD,gBAClCE,EAAc5kD,EAAItC,SAAWoC,EAAQulD,gBAAkB3jD,EAAQ,GAC/DjE,EAAQuC,EAAIvC,QACZqC,EAAQ6lD,aACR9mD,KAAK8lD,mBAAmB3kD,EAAKvC,EAAOmnD,GAEpC/lD,KAAKymD,oBAAoBtlD,EAAKvC,EAAOmnD,GAEhCnhD,EAAM,EAAGA,EAAM/B,EAAO+B,IAC3BqI,EAAOrI,GAAK4f,OAAOmhC,MAI/Bh0C,GAAkBoN,IACd4nC,UAAW,GACX/nD,MAAO,IACPkoD,cAAc,EACdP,eAAe,EACfC,eAAgB,EAChB74C,QACIlC,SAAS,EACTmiB,MAAO7iB,EACP8jB,SAAU9jB,EACVjG,OAAQ,KAGhB1C,GAAW2c,GAAY2I,UAAWrK,IAC9B2B,GAAiB5D,GAAavb,QAC9BsnB,OAAQ,WACJnnB,KAAK+mD,kBAAkB/mD,KAAKoE,SAEhC2iD,kBAAmB,SAAU3iD,GAAV,GACXmtC,GAAcntC,EAAO,GACrB4iD,EAAc,GAAIjoC,IAAY/e,MAC9BoE,OAAQA,EACRugC,OAAQ3kC,KAAKiB,QAAQ0jC,OACrBgiB,UAAWpV,EAAYoV,UACvBJ,cAAehV,EAAYgV,cAC3BO,aAAcvV,EAAYuV,aAC1BN,eAAgBjV,EAAYiV,eAC5Bx3B,UAAWuiB,EAAYviB,WAE3BhvB,MAAKijC,YAAY+jB,IAErB/jB,YAAa,SAAU5e,EAAOpe,GAC1BmV,GAAakJ,GAAG2e,YAAY1e,KAAKvkB,KAAMqkB,EAAOpe,GAC9CkM,GAAOnS,KAAKiB,QAAQ0jC,OAAOlI,MAAOpY,EAAM47B,gBAG5ChhC,GAAQ,QACRC,GAAQ,QACRC,GAAO,OACPC,GAAM,MACNC,GAAM,MACNC,GAAY,WACZC,GAAgB,UAChBC,GAAK,KACT/C,GAAgBrd,QAAQ8hB,SAASpF,IAC7B7G,GACAK,GACAI,GACAgB,GACA1B,GACAuB,GACAlB,GACAM,GACAP,GACAqB,GACAvB,GACAsB,GACAJ,GACAD,GACAQ,GACAlB,KAEJgH,GAAgBrd,QAAQ8hB,SAAS/D,IAC7B9G,GACAC,GACAnB,KAEJsH,GAAgBrd,QAAQ8hB,SAAS1D,IAAc5H,KAC/C6G,GAAgBrd,QAAQ8hB,SAAStD,IAAgBrI,KACjDkH,GAAgBrd,QAAQ8hB,SAASlC,IAAiBxJ,KAClDiH,GAAgBrd,QAAQ8hB,SAAS9C,IAC7BvI,GACAC,GACAC,KAEJ0G,GAAgBrd,QAAQ8hB,SAASrC,IAC7B7I,GACAC,GACAC,KAEJrK,GAAazM,QAAQ8hB,UACjBjM,GACAK,GACAI,GACAgB,GACA1B,GACAuB,KACArF,IACA8G,GACAiH,GACAK,GACAlL,GACAC,KAEJxI,GAAazM,QAAQ8hB,UACjB9K,GACAD,KAEAgJ,GACAK,KAEAxH,GACAiH,GACAK,KAEJzT,GAAazM,QAAQ8hB,UACjBvK,GACAlB,KACAvE,IACA8G,GACAiH,GACAK,GACAC,KAEJ1T,GAAazM,QAAQ8hB,UACjBrL,GACAC,GACAC,KAEAzE,GACAD,KACA4N,KACJpT,GAAazM,QAAQ8hB,UACjBlL,GACAC,GACAC,KACAhF,IAAS+N,KACbpT,GAAazM,QAAQ8hB,UAAU1L,KAAUtE,IACrC8G,GACAiH,GACA,kBACA,YAEJ1D,GAAkBnc,QAAQ8hB,UACtBjM,GACAK,GACAI,GACAgB,GACA1B,GACAuB,GACAI,GACAlB,KAEApV,MAAO+e,GACPhZ,MAAO8Y,GACPqL,SAAUrL,GACV+nC,SAAU5nC,GACV6nC,UAAW9nC,KAEf7D,GAAkBnc,QAAQ8hB,UACtB9K,GACAD,KAEA+J,KAAMb,GACNc,GAAIf,GACJhZ,MAAO8Y,GACPqL,SAAUrL,KAEd3D,GAAkBnc,QAAQ8hB,UACtBlL,GACAC,GACAC,KAEA7V,MAAO+e,GACPhZ,MAAO8Y,KAEXrT,GAAazM,QAAQ8hB,UACjB7K,GACAC,GACAnB,KAEA7D,GACAD,KAEA4N,GACAK,GACAhL,GACAC,GACAC,GACAC,KAEJ5I,GAAazM,QAAQ8hB,UAAU/L,KAC3B7D,GACAD,GACA,SAEA4N,GACAjH,GACAsH,KAEJzT,GAAazM,QAAQ8hB,UACjB7L,GACAM,KAEA,OACA,OACA,MACA,UAEAqC,GACAiH,GACA,YACAK,KAEJ/D,GAAkBnc,QAAQ8hB,UACtB7L,GACAM,KAEA8jB,KAAMra,GACNiE,KAAMjE,GACNgE,IAAK/D,GACL+Q,MAAOhR,GACPhZ,MAAO8Y,GACPwb,UAAWxb,GACXqL,SAAUrL,KAEdrT,GAAazM,QAAQ8hB,UACjBhM,GACAsB,KAEA,QACA,KACA,SACA,KACA,QACA,OACA,aAEAwB,GACAiH,GACAK,KAEJ/D,GAAkBnc,QAAQ8hB,UACtBhM,GACAsB,KAEA0kB,MAAO9b,GACP2b,GAAI3b,GACJic,OAAQjc,GACR4b,GAAI5b,GACJ+b,MAAO/b,GACPkc,KAAMlc,GACN6c,SAAU/c,GACV9Y,MAAO8Y,GACPqL,SAAUrL,KAEdrT,GAAazM,QAAQ8hB,UACjB9L,GACAqB,KAEA,UACA,WAEAuB,GACAiH,GACA,kBACAK,KAEJ/D,GAAkBnc,QAAQ8hB,UACtB9L,GACAqB,KAEArX,QAASggB,GACT7Y,OAAQ6Y,GACRhZ,MAAO8Y,GACPqL,SAAUrL,KAEdrT,GAAazM,QAAQ8hB,UACjBtL,GACAL,KACArE,IACA8G,GACAiH,GACA,UACA,kBACA,YAEAlS,IACAiL,GACA9G,EACAI,GACAD,IAEAoO,GAAY,YACZC,GAAc,cACdC,GAAkB,GAClBC,GAAQhgB,EAAMC,QACdC,KAAM,SAAUiI,EAASo/C,EAAa/5C,EAAchK,GAA9C,GAUEnC,GATAmgB,EAASphB,IACG,UAAZoD,IACAA,MAEJpD,KAAKonD,aACLpnD,KAAKqnD,YAAYjkD,EAAQ20C,UACzB/3C,KAAK4mB,aAAe,GAAI/U,IAASy1C,aAAatnD,KAAMoD,GACpDpD,KAAK4mB,aAAa63B,MAAQrxC,EAC1BpN,KAAKunD,aAAax/C,GACd9G,EAAUmB,MAAepC,KAAKiB,QAASkmD,GAC3CnnD,KAAKwnD,iBAAmBplD,MAAenB,GACvCjB,KAAKynD,OAASr6C,EACdpN,KAAK0nD,WAAWzmD,EAASmM,GACzBpN,KAAK2nD,eACL3nD,KAAK4nD,gBACL5nD,KAAK6nD,kBACLx9C,EAAQy9C,WAAWC,aAAaZ,EAAa,WACpC/lC,EAAO4mC,aACR5mC,EAAO6mC,UACP7mC,EAAO8mC,oBAInBX,aAAc,SAAUx/C,GAGpB,IAFA/H,KAAKmoD,iBAAiBpgD,GACtBA,EAAQ9I,MAAM4vB,SAAW,WAClB9mB,EAAQqgD,YACXrgD,EAAQ7F,YAAY6F,EAAQqgD,WAEhCpoD,MAAK+H,QAAUA,GAEnBogD,iBAAkB,SAAUpgD,GACxBsC,EAAQqwC,SAAS3yC,EAAS,YAE9B2/C,WAAY,SAAUzmD,EAASmM,GAAnB,GAGC7O,GAFL8pD,KACAjkD,EAASnD,EAAQmD,UACrB,KAAS7F,EAAI,EAAGA,EAAI6F,EAAO3F,OAAQF,IAC/B8pD,EAAanqD,KAAKL,EAAEgC,UAAWuE,EAAO7F,IAE1C0C,GAAQmD,OAASikD,EACjBz7C,EAAmB3L,GACnBjB,KAAKsoD,eAAernD,EAASmM,GACA,OAAzBnM,EAAQq/C,oBACDr/C,GAAQq/C,aAEnBtgD,KAAKiB,QAAUmB,MAAegL,EAAcnM,GAC5CjB,KAAKuoD,sBAETC,QAAS,WACL,OACI5pD,MAAOoB,KAAK+H,QAAQjG,YACpBjD,OAAQmB,KAAK+H,QAAQhG,eAG7B0mD,OAAQ,SAAUC,GAAV,GACA3oD,GAAOC,KAAKwoD,UACZ3E,EAAc7jD,KAAKC,OACnByoD,IAAU3oD,EAAKnB,MAAQ,GAAKmB,EAAKlB,OAAS,MAAQglD,GAAe9jD,EAAKnB,QAAUilD,EAAYjlD,OAASmB,EAAKlB,SAAWglD,EAAYhlD,WACjImB,KAAKC,MAAQF,EACbC,KAAK2oD,QAAQ5oD,EAAM2oD,GACnB1oD,KAAKysB,QAAQ,SAAU1sB,KAG/B4oD,QAAS,WACL3oD,KAAK4oD,wBAETrhB,OAAQ,SAAU8J,GAAV,GAII/wB,GACAra,CAJRjG,MAAKsoD,eAAetoD,KAAKiB,SACzBjB,KAAKuoD,qBACDlX,GACI/wB,EAAWtgB,KAAK6oD,OAAOtoC,UACvBta,EAAOqa,EAASmlB,SAAS4L,GAC7B/wB,EAASinB,OAAOthC,IAEhBjG,KAAKioD,WAGbrjC,QAAS,SAAUpb,GAAV,GAEI5E,GADLc,EAAO1F,KAAKugB,UAAU7a,IAC1B,KAASd,EAAM,EAAGA,EAAMc,EAAKjH,OAAQmG,IACjC,GAAIc,EAAKd,GAAK3D,QAAQuI,OAASA,EAC3B,MAAO,IAAI6J,IAAU3N,EAAKd,KAItCkkD,eAAgB,SAAUt/C,GACtB,MAAOxJ,MAAK4kB,QAAQpb,IAExB8W,SAAU,WACN,MAAO,IAAIhN,IAActT,KAAKugB,YAElCkzB,gBAAiB,SAAUpT,EAAM0oB,GAAhB,GAGT97C,GAII+7C,EAAYC,EANhB3oC,EAAWtgB,KAAKugB,UAChBgxB,GAAejxB,EAASwvB,WAAaxvB,EAASlc,YAAc,EAE5DJ,IAAW+kD,GACX97C,EAASqT,EAASyrB,aAAagd,IAG3B7kD,GAAS6kD,IACTC,EAAaD,EAAO3kD,OACpB6kD,EAAeF,EAAO77C,UAEtB87C,EAAaC,EAAeF,EAG5B97C,EADAskC,EAAYrqC,OAASqO,GACZvI,EAAoBsT,EAAS0rB,mBAAmBgd,GAAaC,GAC/D1X,EAAYrqC,OAAS0O,IAAO27B,EAAYrqC,OAASsO,GAC/CxI,GAAqBsT,EAASkiB,OAAO,QAAUv1B,OAAQg8C,GAEvD3oC,EAAS0rB,mBAAmBgd,IAGzC/7C,GACAjN,KAAKkpD,uBAAuB7oB,EAAMpzB,IAG1Ci8C,uBAAwB,SAAU7oB,EAAMpzB,GAAhB,GAEXrI,GADLoqB,EAAYhvB,KAAKmpD,UACrB,KAASvkD,EAAM,EAAGA,EAAMqI,EAAOxO,OAAQmG,IACnCoqB,EAAU2kB,qBAAqB1mC,EAAOrI,GAAMy7B,IAGpDxQ,YAAa,SAAUk5B,GAAV,GAKLjpC,GAAO8rB,EAWC3+B,EAfRkvC,EAASn8C,KAAKopD,iBACdjjC,EAAMnmB,KACNsO,EAAU6X,EAAIkjC,SACd/oC,EAAW6F,EAAI5F,SAEfvc,IAAW+kD,IACXjpC,EAAQQ,EAAS2rB,UAAU8c,GACvBjpC,GAASq8B,IACTvQ,EAAgB9rB,EAAM+H,aAEnBs0B,GAAUt3C,GAAQkkD,KACzBnd,EAAgBtrB,EAAS7X,aAAamjC,cAAcmd,IAEpD5M,EACIvQ,GAAiB,IACb3+B,EAASjN,KAAKugB,UAAUorB,sBAAsBC,GAClDt9B,EAAQwyB,OAAO7zB,IAEZ6S,GACPxR,EAAQ+xB,KAAKvgB,IAGrBwpC,YAAa,WACTtpD,KAAKqpD,SAAS5oB,QAElBknB,aAAc,WAAA,GACN4B,GAAUvpD,KAAKupD,QACf1jD,EAAO7F,KAAKwpD,eACZC,EAAYzpD,KAAKiB,QAAQwoD,SACzBA,GAAU7qD,OACVyL,EAAQq/C,YAAY7jD,GAAQjH,MAAO6qD,EAAU7qD,QAE7C6qD,EAAU5qD,QACVwL,EAAQq/C,YAAY7jD,GAAQhH,OAAQ4qD,EAAU5qD,SAE7C0qD,GAAWA,EAAQtoD,QAAQiG,OAASlH,KAAKiB,QAAQ0oD,UAMlD3pD,KAAKupD,QAAQtlB,QACbjkC,KAAKupD,QAAQd,WANTc,GACAA,EAAQ7oB,UAEZ1gC,KAAKupD,QAAU32C,GAAQg3C,QAAQnqB,OAAO55B,GAAQqB,KAAMlH,KAAKiB,QAAQ0oD,aAMzEH,aAAc,WACV,MAAOxpD,MAAK+H,SAEhBkgD,QAAS,WACL,GAAI4B,GAAQ7pD,KAAK8pD,WACjB9pD,MAAK+pD,eACL/pD,KAAK6oD,OAASgB,EACd7pD,KAAKugB,UAAYspC,EAAMtpC,UACvBspC,EAAM3lB,eACFlkC,KAAKiB,QAAQyyB,eAAgB,GAC7Bm2B,EAAMG,SAAS,SAAUjiD,GACjBA,EAAQ0e,WACR1e,EAAQ0e,UAAUkM,UAI9B3yB,KAAK2nD,eACL3nD,KAAKupD,QAAQU,KAAKJ,EAAMrpC,QACpBxgB,KAAKiB,QAAQyyB,eAAgB,GAC7Bm2B,EAAMG,SAAS,SAAUjiD,GACjBA,EAAQ0e,WACR1e,EAAQ0e,UAAUyjC,SAI9BlqD,KAAKqpD,SAAWrpD,KAAKmqD,iBACrBnqD,KAAKmpD,WAAa,GAAIptC,IACtB/b,KAAKoqD,kBACLpqD,KAAKqqD,kBACLrqD,KAAKsqD,uBACLtqD,KAAKuqD,wBACLvqD,KAAKysB,QAAQ7U,IACR5X,KAAKwqD,WACNxqD,KAAKyqD,oBAGbC,aAAc,SAAUzpD,GAAV,GACNuf,GAEIipC,EACAkB,EAEAd,CAQR,OAZI5oD,KAAYA,EAAQrC,OAASqC,EAAQpC,SACjC4qD,EAAYzpD,KAAKiB,QAAQwoD,UACzBkB,EAAoB3qD,KAAKwnD,iBAAiBiC,UAC9CrnD,GAAWqnD,EAAWxoD,GAClB4oD,EAAQ7pD,KAAK8pD,YACjBL,EAAU7qD,MAAQ+rD,EAAkB/rD,MACpC6qD,EAAU5qD,OAAS8rD,EAAkB9rD,OACrCgrD,EAAM3lB,eACN1jB,EAASqpC,EAAMrpC,QAEfA,EAASxgB,KAAKupD,QAAQmB,eAEnBlqC,GAEX4oC,eAAgB,WACZ,MAAOppD,MAAKugB,oBAAqBzE,KAAuB9b,KAAKiB,QAAQqN,QAAQ6tC,QAEjFkO,gBAAiB,WACb,GAAIppD,GAAUjB,KAAKiB,OACfA,GAAQ2pD,YAAa,IACrB5qD,KAAK6qD,UAAY,GAAI7uC,IAAShc,KAAKugB,UAAWtf,EAAQ2pD,YAG9DN,qBAAsB,WAAA,GACdQ,GAAW9qD,KAAKiB,QAAQ6pD,SACxBzS,GAAayS,OAAgBzS,SAC7ByS,MAAa,GAASzS,KAAc,IACpCr4C,KAAK+qD,eAAiB,GAAI9uC,IAAcjc,KAAMq4C,KAGtDkS,sBAAuB,WAAA,GACfO,GAAW9qD,KAAKiB,QAAQ6pD,SACxB7R,GAAc6R,OAAgB7R,UAC9B6R,MAAa,GAAS7R,KAAe,IACrCj5C,KAAKgrD,gBAAkB,GAAI9uC,IAAelc,KAAMi5C,KAGxDkR,eAAgB,WAAA,GAGR77C,GAFA6X,EAAMnmB,KACNsgC,EAAiBna,EAAIllB,QAAQqN,OAOjC,OAJIA,GADAtO,KAAKopD,iBACK,GAAIvsC,IAAc7c,KAAKugB,UAAW+f,GAElC,GAAI1jB,IAAQ5c,KAAK4mB,aAAc0Z,IAIjDgoB,eAAgB,SAAUrnD,EAASmM,GAC/BD,EAAkBlM,EAASmM,GAC3BS,EAAoB5M,EAASmM,IAEjCm7C,mBAAoB,WAAA,GAIPhqD,GACDuI,EACAmkD,EACA1nD,EANJtC,EAAUjB,KAAKiB,QACfmD,EAASnD,EAAQmD,OACjB8mD,EAASjqD,EAAQq/C,gBACrB,KAAS/hD,EAAI,EAAGA,EAAI6F,EAAO3F,OAAQF,IAC3BuI,EAAgB1C,EAAO7F,GACvB0sD,EAAcC,EAAO3sD,EAAI2sD,EAAOzsD,QAChC8E,EAAWuD,EAAcyH,UAC7BzH,EAAcV,MAAQU,EAAcV,OAAS6kD,EACzC1nD,IACAA,EAAS6C,MAAQ7C,EAAS6C,OAAS6kD,IAI/CnB,UAAW,WAAA,GACH7oD,GAAUjB,KAAKiB,QACfqf,EAAWtgB,KAAKmrD,kBAChBtB,EAAQ,GAAIx/C,GAAQ+gD,YAAYprD,KAAKqrD,gBASzC,OARAxB,GAAMxlC,MAAQrkB,KACd6pD,EAAMtpC,UAAYD,EAClBjW,EAAQy4B,MAAMC,WAAW9hC,EAAQ2M,MAAOi8C,GACpC5oD,EAAQ0jC,OAAOl5B,SACfo+C,EAAM13C,OAAO,GAAIqK,IAAO8D,EAASrf,QAAQ0jC,OAAQ3kC,KAAK4mB,eAE1DijC,EAAM13C,OAAOmO,GACbupC,EAAMrlC,SACCqlC,GAEXwB,cAAe,WAAA,GACPllC,GAAMnmB,KACNiB,EAAUklB,EAAIllB,QACd8G,EAAUoe,EAAIpe,QACdhI,EAAOsK,EAAQq/C,YAAY3hD,EAE/B,OADA/H,MAAKC,MAAQ,KACNmC,IACHxD,MAAO2F,KAAKohB,MAAM5lB,EAAKnB,QAAUmS,EAAiBu6C,cAClDzsD,OAAQ0F,KAAKohB,MAAM5lB,EAAKlB,SAAWkS,EAAiBw6C,eACpD73B,YAAazyB,EAAQyyB,aACtBzyB,EAAQwoD,YAEf0B,gBAAiB,SAAUK,GAAV,GACTvqD,GAAUjB,KAAKiB,QACfqf,EAAW7D,GAAgBrd,QAAQqgC,OAAO+rB,KAAkBvqD,EAAQmD,OAAQnD,EAASjB,KAAK4mB,aAC9F,OAAOtG,IAEXmrC,cAAe,WACX,MAAOzrD,MAAK0rD,aAAe1rD,KAAK0rD,YAAYjtD,QAEhD2rD,gBAAiB,WAAA,GAKJ7rD,GACD8J,EACApH,EAEIwI,EACAjF,EAYA6zC,EArBRj3B,EAASphB,KACTmmB,EAAMnmB,KACN0F,EAAOygB,EAAI5F,UAAU7a,KACrBimD,EAAa3rD,KAAK0rD,cACtB,KAASntD,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IACzB8J,EAAO3C,EAAKnH,GACZ0C,EAAUoH,EAAKpH,QACfoH,YAAgBgK,KAAgBpR,EAAQ2qD,SAAW3qD,EAAQkJ,WACvDV,EAAM,EACNjF,EAAMvD,EAAQqD,WAAW7F,OAAS,EAClC4J,YAAgBkK,MAChB9I,EAAMxI,EAAQqD,WAAWmF,GACzBjF,EAAMvD,EAAQqD,WAAWE,IAExBvD,EAAQgwB,YACL5oB,YAAgBkK,IAChB/N,EAAM6F,EAAQwhD,YAAYrnD,EAAK,EAAGvD,EAAQigC,SAAUjgC,EAAQ6qD,cAE5DtnD,KAGJ6zC,EAAY,GAAI17B,IAAUyE,EAAQ/Y,EAAMjG,IACxCqH,IAAKA,EACLjF,IAAKA,GACNvD,EAAQ2qD,SACXD,EAAWztD,KAAKm6C,KAI5B0T,aAAc,SAAUljD,GACpB,MAAO7I,MAAKysB,QAAQhV,GAAc5O,IAEtCmjD,QAAS,SAAUnjD,GACf,MAAO7I,MAAKysB,QAAQ/U,GAAQ7O,IAEhCojD,WAAY,SAAUpjD,GAClB,MAAO7I,MAAKysB,QAAQ9U,GAAY9O,IAEpC++C,cAAe,WACX5nD,KAAKksD,cAAgBlsD,KAAKmsD,OAAO7kC,KAAKtnB,MACtCA,KAAKg5C,mBAAqBh5C,KAAKk5C,YAAY5xB,KAAKtnB,MAChDA,KAAKosD,0BAA4BpsD,KAAKqsD,WAAW/kC,KAAKtnB,MACtDA,KAAKssD,0BAA4BtsD,KAAKusD,UAAUjlC,KAAKtnB,MACrDA,KAAKwsD,WAAa9sD,MAAM+sD,SAASzsD,KAAKwsD,WAAWllC,KAAKtnB,MAAO2f,KAEjE0nC,YAAa,SAAUtP,GACfA,GACA/3C,KAAKonD,UAAUlpD,KAAK65C,IAG5B2U,eAAgB,SAAU3U,GACtB,GAAIxsC,GAAQvL,KAAKonD,UAAU3gD,QAAQsxC,EAC/BxsC,IAAS,GACTvL,KAAKonD,UAAU7hB,OAAOh6B,EAAO,IAGrCohD,iBAAkB,SAAUC,GAAV,GAELhoD,GADLwiD,EAAYpnD,KAAKonD,SACrB,KAASxiD,EAAM,EAAGA,EAAMwiD,EAAU3oD,OAAQmG,IACtC,GAAIwiD,EAAUxiD,GAAK+nD,iBAAiBC,GAChC,OAAO,GAInBngC,QAAS,SAAUjjB,EAAMotC,GAAhB,GAQDwQ,GACAyF,EACKjoD,CAAT,KATa,SAATgyC,IACAA,MAEAptC,IAASqO,KACT++B,EAAK1wC,OAAO4Z,MAAQ9f,KAAK8sD,uBAAuBlW,EAAK1wC,OAAO4Z,QAEhE82B,EAAK7wB,OAAS/lB,KACVonD,EAAYpnD,KAAKonD,UACjByF,GAAqB,EAChBjoD,EAAM,EAAGA,EAAMwiD,EAAU3oD,OAAQmG,IAClCwiD,EAAUxiD,GAAK6nB,QAAQjjB,EAAMotC,KAC7BiW,GAAqB,EAG7B,OAAOA,IAEX3E,cAAe,WAAA,GAMP/O,GAGI4T,EARJ5mC,EAAMnmB,KACN+H,EAAUoe,EAAIpe,QACdwhD,EAAUpjC,EAAIojC,OAClBA,GAAQjiC,KAAK,aAActnB,KAAKosD,2BAChC7C,EAAQjiC,KAAK,aAActnB,KAAKssD,2BAEhC75C,GAAW1K,GAAUoxC,KAAUA,EAAIz5B,IAAe1f,KAAKksD,cAAe/S,EAAI/gC,IAAcpY,KAAKg5C,mBAAoBG,IAC7Gn5C,KAAKgtD,0BAELv6C,GAAW1K,GAAUglD,KAAYA,EAAMttC,IAAazf,KAAKwsD,WAAYO,IAEzE/sD,KAAKitD,UAAYp7C,GAASwnC,iBAAiB5Z,OAAOz/B,KAAK+H,SACnDkvB,MAAOj3B,KAAKs5C,OAAOhyB,KAAKtnB,MACxBq8B,KAAMr8B,KAAKu5C,MAAMjyB,KAAKtnB,MACtBq0B,IAAKr0B,KAAKw5C,KAAKlyB,KAAKtnB,MACpBy5C,IAAKz5C,KAAK05C,KAAKpyB,KAAKtnB,MACpB65C,aAAc75C,KAAK85C,cAAcxyB,KAAKtnB,MACtC+5C,cAAe/5C,KAAKg6C,eAAe1yB,KAAKtnB,MACxCi6C,WAAYj6C,KAAKk6C,YAAY5yB,KAAKtnB,SAG1CyqD,iBAAkB,WACVzqD,KAAKitD,WAAajtD,KAAKitD,UAAUC,QACjCltD,KAAKitD,UAAUC,UAGvBpT,cAAe,SAAUjxC,GACjB7I,KAAKgrD,kBAAoBhrD,KAAKmtD,eAAetkD,KAC7C7I,KAAKotD,iBAAmBvkD,EAAE6yC,SAC1B17C,KAAKg3C,oBACLh3C,KAAKupD,QAAQ8D,oBAGrBnT,YAAa,SAAUrxC,GACf7I,KAAKstD,WAAattD,KAAKmtD,eAAetkD,KAClC7I,KAAKupD,SACLvpD,KAAKupD,QAAQgE,iBAEjBvtD,KAAKstD,UAAW,EAChBttD,KAAKysB,QAAQjV,SAGrBwiC,eAAgB,SAAUnxC,GAAV,GAIJ2kD,GACAC,EAII7W,EASIrtC,EAjBZmkD,EAAiB1tD,KAAKgrD,eACtB0C,KAAmB1tD,KAAKmtD,eAAetkD,KACvCA,EAAEH,iBACE8kD,EAA0BxtD,KAAKotD,iBAC/BK,GAAc5kD,EAAE6yC,SAAW8R,EAA0B,EACrDjpD,KAAKsG,IAAI4iD,IAAe,KACxBA,EAAalpD,KAAKiG,MAAmB,GAAbijD,GACxBztD,KAAKotD,iBAAmBvkD,EAAE6yC,SACtB9E,GACA1C,MAAOuZ,EACPpkD,WAAYA,EAAWrJ,KAAKugB,UAAU7a,MACtCmnB,cAAehkB,IAEf7I,KAAKstD,UAAattD,KAAKysB,QAAQnV,GAAYs/B,KACtC52C,KAAKstD,WACNttD,KAAKstD,UAAW,GAEhB/jD,EAASqtC,EAAKvtC,WAAaqkD,EAAe9X,aAAa6X,GACvDlkD,IAAWvJ,KAAKysB,QAAQlV,GAAMq/B,IAC9B8W,EAAelY,WAMnC+W,UAAW,SAAU1jD,GACjB,GAAIA,EAAEd,QAAS,CACX,GAAIA,GAAU/H,KAAK2tD,qBAAqB9kD,EAAEd,QAASc,EAC/Cd,IAAWA,EAAQgvC,OACnBhvC,EAAQgvC,MAAM/2C,KAAM6I,EAAEgkB,iBAIlCysB,OAAQ,SAAUzwC,GACd,GAAIynB,GAAStwB,KAAKmzC,kBAAkBtqC,IAChC7I,KAAKmtD,eAAetkD,IAAO7I,KAAKugB,UAAUgrB,wBAAwBjb,KAGlEtwB,KAAK2sD,kBACDt1C,GACAF,GACAC,MAEJpX,KAAK4tD,iBAAiB/kD,EAAGynB,EAAQjZ,IAEjCrX,KAAK6qD,WAAa7qD,KAAK6qD,UAAU5zB,MAAMpuB,KACvC7I,KAAKupD,QAAQ8D,kBACbrtD,KAAKg3C,oBACLh3C,KAAK6tD,gBAAiB,GAEtB7tD,KAAK+qD,gBACD/qD,KAAK+qD,eAAe9zB,MAAMpuB,IAC1B7I,KAAKysB,QAAQnV,IACTjO,WAAYA,EAAWrJ,KAAKugB,UAAU7a,MACtCmnB,cAAehkB,MAK/B0wC,MAAO,SAAU1wC,GAAV,GAQKU,GAQAukD,EACApoD,EACKnH,EACDyjC,EACAv0B,EAEIpF,EACA6rC,EAtBZ/tB,EAAMnmB,KACNqD,EAAQ8iB,EAAIqkC,UACZI,EAAWzkC,EAAI0kC,SACnB,KAAI7qD,KAAKmtD,eAAetkD,GAAxB,CAGA,GAAI+hD,EACIrhD,EAASqhD,EAASvuB,KAAKxzB,GACvBU,IAAWvJ,KAAKysB,QAAQtV,IACpB9N,WAAYE,EACZsjB,cAAehkB,KAEnB+hD,EAAS3W,UAEV,IAAI5wC,EAAO,CAGd,IAFIyqD,KACApoD,EAAOrC,EAAMqC,KACRnH,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IACzByjC,EAAct8B,EAAKnH,GACnBkP,EAAWu0B,EAAY/gC,QAAQuI,KAC/BiE,IACIpF,EAAO25B,EAAY/gC,QAAQkJ,SAAWtB,EAAE2D,EAAI3D,EAAE0D,EAC9C2nC,EAAQ7rC,EAAKqtC,cAAgBrtC,EAAKstC,SACxB,IAAVzB,IACA4Z,EAAS9rB,EAAY/gC,QAAQuI,MAAQw4B,EAAY+rB,eAAe7Z,IAI5E7wC,GAAMgG,WAAaykD,EACnB9tD,KAAKysB,QAAQtV,IACT9N,WAAYykD,EACZjhC,cAAehkB,IAGnB7I,KAAK+qD,gBACL/qD,KAAK+qD,eAAe1uB,KAAKxzB,KAGjC2wC,KAAM,SAAU3wC,GAAV,GAIE+hD,GAYIrhD,CAfJvJ,MAAKmtD,eAAetkD,KAGpB+hD,EAAW5qD,KAAK6qD,UAChBD,GAAYA,EAASv2B,IAAIxrB,IACzB7I,KAAKupD,QAAQgE,iBACbvtD,KAAKysB,QAAQrV,IACT/N,WAAYA,EAAWrJ,KAAKugB,UAAU7a,MACtCmnB,cAAehkB,IAEnB7I,KAAK6tD,gBAAiB,GAEtB7tD,KAAKguD,eAAenlD,EAAGuO,IAEvBpX,KAAK+qD,iBACDxhD,EAASvJ,KAAK+qD,eAAe12B,IAAIxrB,GACjCU,IAAWvJ,KAAKysB,QAAQlV,IACpBlO,WAAYE,EACZsjB,cAAehkB,MAEnB7I,KAAK+qD,eAAevV,OACpBx1C,KAAKysB,QAAQjV,IACTnO,WAAYE,EACZsjB,cAAehkB,QAK/BskD,eAAgB,WACZ,MAAOntD,MAAKyrD,iBAEhBvS,YAAa,SAAUrwC,GAAV,GASD+tC,GA4BAvzC,EAEI4qD,EAMAC,EAEAxoD,EACA6D,EACKhL,EACDyjC,EACAv0B,EAlDZ2T,EAASphB,KACTk0C,EAAQ7pC,EAAQ4wC,gBAAgBpyC,GAChC6kD,EAAiB1tD,KAAKgrD,gBACtB16B,EAAStwB,KAAKmzC,kBAAkBtqC,EACpC,IAAK7I,KAAKugB,UAAUgrB,wBAAwBjb,GAG5C,GAAIo9B,EACI9W,GACA1C,MAAOA,EACP7qC,WAAYA,EAAWrJ,KAAKugB,UAAU7a,MACtCmnB,cAAehkB,IAEf7I,KAAKstD,UAAattD,KAAKysB,QAAQnV,GAAYs/B,KAC3C/tC,EAAEH,iBACG1I,KAAKstD,WACNttD,KAAKg3C,oBACLh3C,KAAKupD,QAAQ8D,kBACbrtD,KAAKstD,UAAW,GAEhBttD,KAAKo6C,YACLD,aAAan6C,KAAKo6C,YAEtBxD,EAAKvtC,WAAaqkD,EAAe9X,aAAa1B,GAC1C0C,EAAKvtC,aAAerJ,KAAKysB,QAAQlV,GAAMq/B,IACvC8W,EAAelY,OAEnBx1C,KAAKo6C,WAAae,WAAW,WACzB/5B,EAAOqL,QAAQjV,GAAUo/B,GACzBx1B,EAAOksC,UAAW,EACdlsC,EAAOmoC,SACPnoC,EAAOmoC,QAAQgE,kBAEpBl1C,SAUP,IAPIhV,EAAQrD,KAAKwqD,UACZnnD,IACG4qD,EAAYjuD,KAAK4tD,iBAAiB/kD,EAAGynB,EAAQhZ,IAC5C22C,IACD5qD,EAAQrD,KAAKwqD,YAGjBnnD,EAAO,CAKP,IAJI6qD,EAAa7qD,EAAM6qD,YAAcha,EACrC7wC,EAAM6qD,WAAaA,EAAaha,EAC5BxuC,EAAO1F,KAAKwqD,UAAU9kD,KACtB6D,KACKhL,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IACzByjC,EAAct8B,EAAKnH,GACnBkP,EAAWu0B,EAAY/gC,QAAQuI,KAC/BiE,IACAlE,EAAOkE,GAAYu0B,EAAYmsB,YAAYD,GAGnDluD,MAAKysB,QAAQlV,IACT28B,MAAOA,EACP7qC,WAAYE,EACZsjB,cAAehkB,IAEf7I,KAAKo6C,YACLD,aAAan6C,KAAKo6C,YAEtBp6C,KAAKo6C,WAAae,WAAW,WACzB/5B,EAAO4sC,eAAenlD,EAAG2O,KAC1Ba,MAIfu1C,iBAAkB,SAAU/kD,EAAGynB,EAAQ89B,GAArB,GAOV7kD,GACA0kD,EAPA3tC,EAAWtgB,KAAK6oD,OAAOtoC,UACvBta,EAAOqa,EAASqlB,cAAcrV,GAC9B5qB,EAAO4a,EAAS5a,KAAKoc,MAAM,EAC1B7b,KAGDsD,EAASF,EAAW3D,GACpBuoD,EAAYjuD,KAAKysB,QAAQ2hC,GACzB/kD,WAAYE,EACZsjB,cAAehkB,IAEfolD,EACAjuD,KAAKyqD,oBAELzqD,KAAK6tD,gBAAiB,EACtB7tD,KAAKg3C,oBACLh3C,KAAKwqD,WACDnhD,WAAYE,EACZtD,KAAMA,EACNP,KAAMA,MAIlBsoD,eAAgB,SAAUnlD,EAAGulD,GACrBpuD,KAAKwqD,YACLxqD,KAAKysB,QAAQ2hC,GACT/kD,WAAYrJ,KAAKwqD,UAAUnhD,WAC3BwjB,cAAehkB,IAEnB7I,KAAK6tD,gBAAiB,EACtB7tD,KAAKwqD,UAAY,OAGzB6D,iBAAkB,SAAUxlD,EAAGivC,GAC3B,GAAI/vC,GAAU/H,KAAKupD,QAAQ+E,YAAYzlD,EACvC,IAAId,EACA,MAAO/H,MAAK2tD,qBAAqB5lD,EAASc,EAAGivC,IAGrD6V,qBAAsB,SAAU5lD,EAASc,EAAGivC,GAGxC,IAHkB,GAEd5C,GADA91C,EAAU2I,EAEP3I,IAAY81C,GACfA,EAAe91C,EAAQ81C,aACvB91C,EAAUA,EAAQmxB,MAEtB,IAAI2kB,EAOA,MANIA,GAAa7kB,WACb6kB,EAAeA,EAAa7kB,SAASxnB,EAAG7I,KAAKmzC,kBAAkBtqC,KAE/DivC,IACA5C,EAAeA,EAAaqZ,QAAQzW,IAEjC5C,GAGf/B,kBAAmB,SAAUtqC,GACzB,GAAI2lD,GAAcnkD,EAAQokD,iBAAiB5lD,EAC3C,OAAO7I,MAAKq7C,oBAAoBmT,EAAYjiD,EAAGiiD,EAAYhiD,IAE/DkiD,gBAAiB,WAAA,GAELvoC,GAIAga,EACAF,CAMR,OAZKjgC,MAAK2uD,WACFxoC,EAAM3T,GAAcxS,KAAK+H,SACzB,cACA,eAEAo4B,EAAcha,EAAIga,YAClBF,EAAa9Z,EAAI8Z,WACrBjgC,KAAK2uD,UACD73B,IAAKmJ,EACLlS,KAAMoS,IAGPngC,KAAK2uD,UAEhB7B,uBAAwB,SAAUhtC,GAAV,GAChBkQ,GAAUhwB,KAAK0uD,kBACftwB,EAAS/zB,EAAQ8qC,cAAcn1C,KAAK+H,QACxC,QACIgmB,KAAMvjB,GAAMsV,EAAMvT,EAAIyjB,EAAQjC,KAAOqQ,EAAOrQ,MAC5C+I,IAAKtsB,GAAMsV,EAAMtT,EAAIwjB,EAAQ8G,IAAMsH,EAAOtH,OAGlDukB,oBAAqB,SAAUuT,EAASC,GAAnB,GACb9mD,GAAU/H,KAAK+H,QACfq2B,EAAS/zB,EAAQ8qC,cAAcptC,GAC/BioB,EAAUhwB,KAAK0uD,iBACnB,OAAO,IAAIhiD,IAAMkiD,EAAUxwB,EAAOrQ,KAAOiC,EAAQjC,KAAM8gC,EAAUzwB,EAAOtH,IAAM9G,EAAQ8G,MAE1F4iB,KAAM,SAAU7wC,GAAV,GACEuY,GAASphB,KACT8uD,EAAiB9uD,KAAKupD,QAAQ+E,YAAYzlD,GAC1Cd,EAAU/H,KAAK2tD,qBAAqBmB,EAAgBjmD,EACpD7I,MAAK+uD,eAAiBhnD,EACtB/H,KAAKgvD,gBAAgBjnD,EAASc,IAEzB7I,KAAKivD,YAAYH,EAAgBjmD,IAClC7I,KAAKg3C,oBAETh3C,KAAKgvD,gBAAgBjnD,EAASc,IAElC7I,KAAKkvD,aAAc,EACnB/T,WAAW,WACP/5B,EAAO8tC,aAAc,GACtB,IAEP/C,OAAQ,SAAUtjD,GACd,GAAId,GAAU/H,KAAKquD,iBAAiBxlD,EACpC7I,MAAKgvD,gBAAgBjnD,EAASc,IAElCmmD,gBAAiB,SAAUjnD,EAASc,GAGhC,IAHa,GACTuY,GAASphB,KACTZ,EAAU2I,EACP3I,GACCA,EAAQotB,OACRptB,EAAQotB,MAAMpL,EAAQvY,GAE1BzJ,EAAUA,EAAQmxB,QAG1B0+B,YAAa,SAAUlnD,EAASc,GAAnB,GAQLiX,GAKIwgB,EAZJ4U,EAAel1C,KAAK2tD,qBAAqB5lD,EAASc,GAClDsd,EAAMnmB,KACNsO,EAAU6X,EAAIkjC,SACdr6B,EAAY7I,EAAIgjC,UACpB,SAAInpD,KAAK6tD,iBAAmB7+B,GAAaA,EAAU8kB,cAAcoB,IAAiBl1C,KAAKopD,oBAGnFtpC,EAAQ9f,KAAK2tD,qBAAqB5lD,EAASc,EAAG,SAAUd,GACxD,MAAOA,GAAQ4kB,SAAW5kB,YAAmBqT,OAE7C0E,IAAUA,EAAM6M,MAAM3sB,KAAM6I,IAC5B7I,KAAK+uD,aAAejvC,EAChBwgB,EAAiBl+B,MAAek+B,EAAgBxgB,EAAM7e,QAAQqN,SAC9DgyB,EAAe70B,SACf6C,EAAQ+xB,KAAKvgB,GAEjBkP,EAAUqR,KAAKvgB,GACRA,GAPX,SAUJusC,WAAY,SAAUxjD,GAAV,GAIAswC,GAHJr5B,EAAQ9f,KAAKivD,YAAYpmD,EAAEd,QAASc,EAAEgkB,cACtC/M,IAASA,EAAMqN,kBACfntB,KAAKmvD,uBAAyBnvD,KAAKmvD,wBAA0BnvD,KAAKovD,mBAAmB9nC,KAAKtnB,MAE1FyS,GAAW3R,UAAWq4C,KAAUA,EAAI15B,IAAazf,KAAKmvD,uBAAwBhW,MAGtFiW,mBAAoB,SAAUvmD,GAAV,GASJwmD,GAII/uB,EAQR6Y,EApBJhzB,EAAMnmB,KACNiB,EAAUklB,EAAIllB,QACdqN,EAAU6X,EAAIkjC,SACdr6B,EAAY7I,EAAIgjC,WAChBrpC,EAAQqG,EAAI4oC,aACZz+B,EAAStwB,KAAKmzC,kBAAkBtqC,EAChC7I,MAAKugB,UAAUpf,IAAIykC,cAActV,GAC7BxQ,GAASA,EAAMqN,iBAAmBrN,EAAM1b,QAAU0b,EAAMyQ,OAAOC,kBAC3D6+B,EAAcvvC,EAAMyQ,OAAOC,gBAAgBF,EAAO/jB,EAAG+jB,EAAO9jB,EAAGsT,EAAM0H,UACrE6nC,GAAeA,IAAgBvvC,IAC/BuvC,EAAY1iC,MAAM3sB,KAAM6I,GACxB7I,KAAK+uD,aAAeM,EAChB/uB,EAAiBl+B,MAAenB,EAAQqN,QAASwR,EAAM7e,QAAQqN,SAC/DgyB,EAAe70B,SACf6C,EAAQ+xB,KAAKgvB,GAEjBrgC,EAAUqR,KAAKgvB,MAKvB38C,GAAa5R,UAAWq4C,KAAUA,EAAI15B,IAAazf,KAAKmvD,uBAAwBhW,IAChFn5C,KAAKg3C,sBAGbwV,WAAY,SAAU3jD,GAClB,GAAIynB,GAAStwB,KAAKmzC,kBAAkBtqC,EACpC7I,MAAKsvD,iBAAiBh/B,GAClBtwB,KAAKugB,UAAUoM,OACf3sB,KAAKugB,UAAUoM,MAAM3sB,KAAM6I,GAE3B7I,KAAKopD,kBACLppD,KAAKuvD,oBAAoBj/B,EAAQznB,IAGzCymD,iBAAkB,SAAUh/B,GAAV,GAEL/xB,GACDa,EAFJwlC,EAAa5kC,KAAKugB,UAAUqkB,UAChC,KAASrmC,EAAI,EAAGA,EAAIqmC,EAAWnmC,OAAQF,IAC/Ba,EAAUwlC,EAAWrmC,GACrBa,EAAQ+B,IAAIykC,cAActV,GAC1BlxB,EAAQ0hC,OAAOxQ,GAEflxB,EAAQqhC,QAIpB8uB,oBAAqB,SAAUj/B,EAAQznB,GAAlB,GAQT0C,GAEI0B,EACAuiD,EAGAC,EAbRtpC,EAAMnmB,KACNsgC,EAAiBna,EAAIllB,QAAQqN,QAC7BgS,EAAW6F,EAAI5F,UACf9X,EAAe0d,EAAI5F,UAAU9X,aAC7B6F,EAAU6X,EAAIkjC,SACdr6B,EAAY7I,EAAIgjC,UAChB7oC,GAASnf,IAAIykC,cAActV,KACvB/kB,EAAQ9C,EAAaq5B,mBAAmBxR,GACxC/kB,IAAUvL,KAAK0vD,qBACXziD,EAASqT,EAASqrB,sBAAsBpgC,GACxCikD,EAAYviD,EAAO3M,IAAI,SAAUwf,GACjC,MAAOA,GAAM4M,UAAU7jB,KAEvB4mD,EAAYD,EAAU,OAC1BC,EAAU1oC,eAAiByoC,EACvBviD,EAAOxO,OAAS,IAAMuB,KAAKysB,QAAQzV,GAAcy4C,IAC7CnvB,EAAe70B,SACf6C,EAAQwyB,OAAO7zB,EAAQqjB,GAE3BtB,EAAUqR,KAAKpzB,IAEfqB,EAAQmyB,OAEZzgC,KAAK0vD,mBAAqBnkD,KAItCokD,aAAc,WAAA,GACNxpC,GAAMnmB,KACNsgB,EAAW6F,EAAI5F,UACfjS,EAAU6X,EAAIkjC,SACdr6B,EAAY7I,EAAIgjC,UACpBnpD,MAAKwsD,WAAWU,SAChB5sC,EAASklB,iBACTxW,EAAUyR,OACVnyB,EAAQmyB,aACDzgC,MAAK0vD,oBAEhB1Y,kBAAmB,WAAA,GACX7wB,GAAMnmB,KACNsO,EAAU6X,EAAIkjC,SACdr6B,EAAY7I,EAAIgjC,UACpBnpD,MAAK+uD,aAAe,KAChBzgD,GACAA,EAAQmyB,OAERzR,GACAA,EAAUyR,QAGlBmvB,aAAc,WACV5vD,KAAKioD,WAET4H,oBAAqB,WACb7vD,KAAK8vD,iBACLC,cAAc/vD,KAAK8vD,gBACnB9vD,KAAK8vD,eAAiB,OAG9BjI,gBAAiB,WAAA,GAIJv/C,GACDD,EAJJ+Y,EAASphB,KACTiB,EAAUjB,KAAKiB,QACfwxC,KAAiBxrC,OAAOhG,EAAQwH,aACpC,KAASH,EAAS,EAAGA,EAASmqC,EAAYh0C,OAAQ6J,IAC1CD,EAAOoqC,EAAYnqC,GACnBD,EAAK2nD,YAAa,GAClB5uC,EAAO6uC,4BAA4B5nD,EAAMC,IAIrD2nD,4BAA6B,SAAU5nD,EAAMC,GAAhB,GAMrBunC,GACKroB,EACDhf,EACA0nD,EACAzrD,EACA0rD,EAGIpf,EACKqf,EACDC,EACAnjD,EAmBRnG,EAnCJqa,EAASphB,KACToE,EAASpE,KAAKiB,QAAQmD,OACtB4J,EAAe5J,EAAO3F,OACtB6xD,KACA7zB,IAEJ,KAASjV,EAAW,EAAGA,EAAWxZ,EAAcwZ,IAK5C,GAJIhf,EAAIpE,EAAOojB,GACX0oC,EAAS1nD,EAAEC,eAAiBJ,EAAKmB,OAAShB,EAAEC,cAA2B,IAAXH,EAC5D7D,EAAO+D,EAAE/D,KACT0rD,EAAa1rD,EAAKhG,OAClB+J,EAAEwnC,eAAiBkgB,GAAUC,EAAa,EAG1C,IAFAtgB,EAAWtoC,EAAWc,EAAMtF,EAASyF,EAAEwnC,cAAevrC,EAAK,KACvDssC,EAAQlB,EAAW5nC,EAAelF,EAC7BqtD,EAAS,EAAGA,EAASD,EAAYC,IAClCC,EAAU5rD,EAAK2rD,GACfljD,EAAW6jC,EAAMvoC,EAAEwnC,cAAeqgB,EAASjvC,EAAOwF,aAAasW,OAC/D2S,GAAaygB,EAAiBpjD,KAC9BuvB,EAAMv+B,MACFgP,EACAmjD,IAECxgB,IACDygB,EAAiBpjD,IAAY,GAM7CuvB,GAAMh+B,OAAS,IACXoxC,IACApT,EAAQxsB,EAAYwsB,EAAO,SAAUr1B,EAAGC,GACpC,MAAOgD,GAAQ2F,aAAa5I,EAAE,GAAIC,EAAE,OAGxCN,EAASqJ,EAAUqsB,GACvBp0B,EAAK/D,WAAayC,EAAO,KAGjCwpD,YAAa,SAAUnsD,GAAV,GAGA7F,GACDyE,EAHJ+I,EAAcF,GAAazM,QAAQ2M,YAAY3H,GAC/C2C,GAAS,CACb,KAASxI,EAAI,EAAGA,EAAIwN,EAAYtN,OAAQF,IAOpC,GANIyE,EAAQ+I,EAAYxN,GACpByE,IAAUkO,EACVlO,EAAQ,QAERA,GAAgB,SAEf6B,GAAQT,EAAOpB,IAAS,CACzB+D,GAAS,CACT,OAGR,MAAOA,IAEX6hD,qBAAsB,WAAA,GAEd4H,GADAvvD,EAAUjB,KAAKiB,OAEfA,GAAQyyB,cACRzyB,EAAQyyB,aAAc,EACtB88B,GAAmB,GAEvBxwD,KAAKunC,SACDipB,IACAvvD,EAAQyyB,aAAc,IAG9BmjB,iBAAkB,SAAU/K,EAAagL,GAAvB,GAKVra,GAJAtW,EAAMnmB,KACNsgB,EAAW6F,EAAI5F,UACfyO,EAAY7I,EAAIgjC,WAChBriD,GAAiBwZ,EAASwvB,WAAaxvB,EAASlc,QAAQ0nC,EAOxDrP,GALA34B,GAAQgD,EAAcI,MAClB0O,GACAL,GACAC,KAEI8K,EAAS2rB,UAAU,SAAUnsB,GACjC,MAAOA,GAAM1b,OAAOmH,QAAUugC,GAAehsB,EAAMvU,QAAUurC,IAGzDx2B,EAASurB,oBAAoBC,GAEzC9c,EAAUqR,KAAK5D,IAEnBuwB,uBAAwB,WACpB,MAAOhtD,MAAKugB,UAAUqkB,WAAWnmC,QAAUuB,KAAKqpD,UAAYrpD,KAAKopD,kBAAoBppD,KAAK2sD,kBAAkBz1C,MAEhHu5C,uBAAwB,WAAA,GAChBtX,GAGI4T,CAFRr6C,IAAa1S,KAAK+H,SAAUoxC,KAAUA,EAAI15B,IAAazf,KAAKwsD,WAAYrT,IACpEn5C,KAAKgtD,0BAELv6C,GAAWzS,KAAK+H,SAAUglD,KAAYA,EAAMttC,IAAazf,KAAKwsD,WAAYO,KAGlF2D,aAAc,SAAUzvD,EAASw9C,GAC7B/tC,EAAmB1Q,KAAKwnD,iBAAkBvmD,GAC1CjB,KAAKwnD,iBAAmBplD,GAAWpC,KAAKwnD,iBAAkBvmD,GAC1DjB,KAAKiB,QAAUmB,MAAepC,KAAKwnD,kBAC/B/I,IACAz+C,KAAKynD,OAAShJ,EACdz+C,KAAK4mB,aAAa63B,MAAQA,GAE9Bz+C,KAAK0nD,WAAW1nD,KAAKiB,QAASjB,KAAKynD,SAEvCkJ,WAAY,SAAU1vD,EAASw9C,GAC3Bz+C,KAAK0wD,aAAazvD,EAASw9C,GAC3Bz+C,KAAK6nD,kBACL7nD,KAAKunC,SACLvnC,KAAKywD,0BAET/vB,QAAS,WAAA,GAEDyY,GAMA4T,CAPJ/sD,MAAKgoD,YAAa,EAElBt1C,GAAa1S,KAAK+H,SAAUoxC,KAAUA,EAAIz5B,IAAe1f,KAAKksD,cAAe/S,EAAI/gC,IAAcpY,KAAKg5C,mBAAoBG,EAAI15B,IAAazf,KAAKwsD,WAAYrT,IACtJn5C,KAAKitD,YACLjtD,KAAKitD,UAAUvsB,gBACR1gC,MAAKitD,WAGhBv6C,GAAa5R,UAAWisD,KAAYA,EAAMttC,IAAazf,KAAKmvD,uBAAwBpC,IACpF/sD,KAAK+pD,eACL/pD,KAAKupD,QAAQ7oB,UACb1gC,KAAKupD,QAAU,KACfvpD,KAAK6vD,uBAET9F,aAAc,WAAA,GACN5jC,GAAMnmB,KACN6pD,EAAQ1jC,EAAI0iC,OACZ8C,EAAaxlC,EAAIulC,WAKrB,IAJI7B,IACAA,EAAMnpB,UACN1gC,KAAK6oD,OAAS,MAEd8C,EACA,KAAOA,EAAWltD,OAAS,GACvBktD,EAAWhlD,QAAQ+5B,SAG3B1gC,MAAKg3C,oBACDh3C,KAAKqpD,UACLrpD,KAAKqpD,SAAS3oB,UAEd1gC,KAAKmpD,YACLnpD,KAAKmpD,WAAWzoB,UAEhB1gC,KAAK+qD,iBACL/qD,KAAK+qD,eAAerqB,gBACb1gC,MAAK+qD,gBAEZ/qD,KAAK6qD,YACL7qD,KAAK6qD,UAAUnqB,gBACR1gC,MAAK6qD,WAEZ7qD,KAAKgrD,kBACLhrD,KAAKgrD,gBAAgBtqB,gBACd1gC,MAAKgrD,oBAyJxBr5C,GAAkBiO,IACd+pC,SAAU,GACVF,aACA9kB,QACIl5B,SAAS,EACTkC,WAEJlF,gBACAwF,gBACI/G,KAAMoO,GACN7Q,QACAuqB,WAAavjB,SAAS,GACtBkC,UACA2wB,gBAAkB7yB,SAAS,IAE/BrH,UACAk8C,aAAc,KACdhyC,SAAW7C,SAAS,GACpBioB,aAAa,EACb/K,aACArI,YACA1S,SACAwvB,SACAE,SACA2H,WACA2lB,UAAU,EACVE,UAAU,IAEdprD,MAAM0C,WAAW1C,MAAM2K,SACnBiO,UAAWA,GACX/E,WAAYA,GACZoG,UAAWA,GACXH,YAAaA,GACbI,sBAAuBA,GACvBG,IAAKA,GACLG,SAAUA,GACVL,SAAUA,GACVU,aAAcA,GACdF,QAASA,GACTM,YAAaA,GACbE,OAAQA,GACRC,YAAaA,GACbV,iBAAkBA,GAClBD,YAAaA,GACbzB,iBAAkBA,GAClBD,oBAAqBA,GACrBqD,oBAAqBA,GACrB8D,MAAOA,GACP1E,eAAgBA,GAChB9B,cAAeA,GACfY,cAAeA,GACfiB,UAAWA,GACXD,iBAAkBA,GAClBO,kBAAmBA,GACnBoC,WAAYA,GACZC,cAAeA,GACfH,aAAcA,GACdjF,aAAcA,GACd5E,qBAAsBA,GACtBmI,UAAWA,GACXc,cAAeA,GACfL,OAAQA,GACRJ,WAAYA,GACZD,aAAcA,GACd7C,UAAWA,GACXP,UAAWA,GACXC,YAAaA,GACbmC,KAAMA,GACN8B,aAAcA,GACdM,SAAUA,GACVF,cAAeA,GACfG,YAAaA,GACbJ,WAAYA,GACZhC,aAAcA,GACdC,oBAAqBA,GACrBoB,gBAAiBA,GACjB9D,iBAAkBA,GAClB6C,SAAUA,GACVC,cAAeA,GACfhB,aAAcA,GACdD,gBAAiBA,GACjB0C,iBAAkBA,GAClBP,UAAWA,GACXrB,iBAAkBA,GAClBzP,aAAcA,GACdqN,cAAeA,GACfQ,kBAAmBA,GACnBO,UAAWA,GACX2C,QAASA,GACTjB,UAAWA,GACXD,UAAWA,GACXG,eAAgBA,GAChBD,iBAAkBA,GAClBuB,WAAYA,GACZjB,eAAgBA,GAChBD,cAAeA,GACfD,SAAUA,GACV3I,UAAWA,GACXC,cAAeA,GACf5O,aAAcA,EACdmD,gBAAiB3C,EACjBA,WAAYA,EACZf,gBAAiBA,EACjBzB,aAAcA,EACdyE,iBAAkBA,EAClBhE,YAAaA,EACbyD,mBAAoBA,EACpBqB,aAAcA,EACdlF,SAAUA,EACVgC,mBAAoBA,EACpBI,SAAUA,EACVoC,WAAYA,EACZ8D,eAAgBA,EAChBK,YAAaA,EACb1D,kBAAmBA,KAEzBvI,OAAOC,MAAM2C,SACC,kBAAVzE,SAAwBA,OAAO0E,IAAM1E,OAAS,SAAU2E,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAU7E,EAAGC,QACVA,OAAO,uBACH,4BACA,aACA,qBACA,uBACA,gBACA,oBACDD,IACL,WAw6BE,MAv6BC,UAAUE,EAAGyjB,GA8fV,QAASsvC,GAAkBpnD,GACvBoW,EAAM0E,GAAG9a,GAAQ,WACb,GAAIqnD,GAAW7wD,KAAK8wD,SACpB,IAAID,EACA,MAAOA,GAASrnD,GAAM+nB,MAAMs/B,EAAUE,YAOlD,QAAS3oD,GAAYhE,EAAQK,GACzB,GAAiBusD,GAAyDhiB,EAAmCiiB,EAAzGlqD,KAA2BmqD,EAAiB9sD,EAAO+sD,kBAA4BhB,EAAa1rD,EAAKhG,MACrG,IAAmB,IAAf0xD,EAGA,MAFAc,GAAc7uD,KAAegC,GAC7B6sD,EAAY1qB,iBAAkB,GACtB0qB,EAaZ,KAXIpsD,EAAQqsD,IACRxxD,EAAM0xD,aAAa,4HACfF,IACAF,EAAevjC,EAASyjC,MAG5BF,EAAevjC,EAASrpB,EAAOoF,MAAQ,IACP,IAA5BwnD,EAAaK,aACbL,EAAevjC,EAAS5oB,EAAQT,EAAOoF,MAAQ,qCAAuC,sBAGzFwlC,EAAU,EAAGA,EAAUmhB,EAAYnhB,IACpCiiB,EAAc7uD,KAAegC,GACxB1E,EAAMsE,WAAWitD,EAAY7qD,SAC9B6qD,EAAY7qD,MAAQkb,GAExB2vC,EAAYK,SAAWtiB,EACvBiiB,EAAYM,YAAc9sD,EAAKuqC,GAAS3uC,MACxC0G,EAAO7I,KAAK+yD,GACRD,IACAC,EAAYznD,KAAOwnD,GACf5sD,OAAQ6sD,EACR7oC,MAAO3jB,EAAKuqC,KAIxB,OAAOjoC,GA1iBd,GA8DOyqD,GAQA5xC,EA0aA6xC,EAsBK7sD,EA2CL8sD,EACA90C,EA2MA5B,EAiCA22C,EAqBAC,EAlzBAC,EAAK,cACLnyD,EAAQD,OAAOC,MACfE,EAAQF,EAAME,MACdkyD,EAAapyD,EAAMqyD,YACnBC,EAActyD,EAAMuyD,aACpB5nD,EAAU3K,EAAM2K,QAChBiO,EAAYjO,EAAQiO,UACpB45C,EAAa7nD,EAAQuV,MACrB/T,EAAexB,EAAQwB,aACvBsmD,EAASzyD,EAAM0yD,GAAGD,OAClBE,EAAa3yD,EAAM+E,KAAK4tD,WACxBjwD,EAAa1C,EAAM0C,WACnByC,EAAUwF,EAAQxF,QAClB9B,EAAWsH,EAAQtH,SACnBuvD,EAAmBjoD,EAAQioD,iBAC3BxuD,EAAUuG,EAAQvG,QAClB+N,EAAWxH,EAAQwH,SACnB0gD,EAAQ10D,EAAE00D,MACVjtD,EAAUzH,EAAEyH,QACZmoB,EAAW/tB,EAAM+tB,SACjB+kC,EAAgB,aAAeX,EAC/BY,EAAmBn6C,EAAUm6C,iBAC7B57C,EAAoByB,EAAUzB,kBAC9BC,EAAoBwB,EAAUxB,kBAC9BC,EAAeuB,EAAUvB,aACzBC,EAAesB,EAAUtB,aACzBC,EAAkBqB,EAAUrB,gBAC5BC,EAAkBoB,EAAUpB,gBAC5BC,EAAOmB,EAAUnB,KACjBC,EAAWkB,EAAUlB,SACrBC,EAAaiB,EAAUjB,WACvBC,EAAagB,EAAUhB,WACvBC,EAAOe,EAAUf,KACjBC,EAAWc,EAAUd,SACrBC,EAAea,EAAUb,aACzBC,EAASY,EAAUZ,OACnBC,EAAaW,EAAUX,WACvBC,EAASU,EAAUV,OACnB86C,EAAap6C,EAAUo6C,WACvBC,EAAar6C,EAAUq6C,WACvBC,EAAS,SACTC,GAAY,YACZC,GAAQ,QACR5hD,GAAQoH,EAAUpH,MAClB0E,GAAM0C,EAAU1C,IAChBL,GAAQ+C,EAAU/C,MAClBC,GAAS8C,EAAU9C,OACnBu9C,GAAarzD,EAAMqzD,WACnBC,GAA6B,IAC7BC,GAAqB,IACrBC,GAAkB,0BAClBC,GAAuB;AAkd3B,IAjdAthD,EAASwnC,iBAAiBn4B,UACtBue,OAAQ,SAAU13B,EAASqrD,GACvB,MAAO,IAAI1zD,GAAM2zD,WAAWtrD,EAAS3F,GACjCkxD,QAAQ,EACRC,YAAY,EACZC,SAAS,GACVJ,OAGP5B,EAAwBc,EAAiBzyD,QACzC4zD,YACI5jC,YAAa,eACby5B,YAAa,eACboK,gBAAiB,qBACjBvsC,OAAQ,eAGZvH,EAAQuyC,EAAOtyD,QACfC,KAAM,SAAUiI,EAASo/C,GACrB,GAAIwM,EACJj0D,GAAMghC,QAAQ34B,GACdoqD,EAAO7tC,GAAGxkB,KAAKykB,KAAKvkB,KAAM+H,GACtBo/C,IACAwM,EAAaxM,EAAYwM,iBAClBxM,GAAYwM,YAEvB3zD,KAAKiB,QAAUmB,KAAepC,KAAKiB,QAASkmD,GAC5CnnD,KAAK24C,QAAU34C,KAAK+H,QACpB/H,KAAKkoD,gBACDf,IACAA,EAAYwM,WAAaA,GAE7B3zD,KAAKsnB,KAAKtnB,KAAKozD,OAAQpzD,KAAKiB,SAC5BjB,KAAK4zD,gBAAgBzM,GACrBznD,EAAM8gC,OAAOxgC,KAAMqK,EAAQ+nD,KAE/BgB,QACIP,GACA97C,EACAC,EACAy7C,EACA57C,EACAC,EACAG,EACAC,EACAG,EACAF,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACA+6C,EACAC,EACA/6C,GAEJ3W,SACIuI,KAAM,QACNmgD,SAAU,GACVlL,MAAO,UACPgL,aACA9kB,UACAl8B,gBACAunD,UAAU,EACV/hD,kBACA7J,UACAk8C,aAAc,KACdhyC,WACAolB,aAAa,EACb/K,aACArI,YACA1S,SACAwvB,SACAE,SACA2H,WACA2lB,UAAU,EACVE,UAAU,GAEdruB,MAAO,WACH,MAAO5+B,MAEXmmC,QAAS,WAAA,GACD3f,GAAQrkB,KACR6wD,EAAWxsC,EAAMysC,SACrBD,GAASvI,eAAejkC,EAAMpjB,SAC9B4vD,EAAStI,qBACTlkC,EAAMwvC,cACNxvC,EAAMwjC,kBACNxjC,EAAMoI,QAAQomC,IACdxuC,EAAM4jC,WAEVO,QAAS,WACL,MAAO9oD,GAAMo0D,WAAW9zD,KAAK+H,UAEjCw/B,OAAQ,SAAU8J,GACdrxC,KAAKC,MAAQ,KACbD,KAAK8wD,UAAUvpB,OAAO8J,IAE1Bsf,WAAY,SAAU1vD,GAClB,GAAIojB,GAAQrkB,KAAM2zD,EAAa1yD,EAAQ0yD,iBAChC1yD,GAAQ0yD,WACfxB,EAAO7tC,GAAGyvC,WAAWxvC,KAAKF,EAAOpjB,GACjCjB,KAAK8wD,UAAUJ,aAAazvD,EAASjB,KAAKg0D,iBAAiB/yD,IAC3DjB,KAAKiB,QAAUjB,KAAK8wD,UAAU7vD,QAC9BjB,KAAKqpD,SAASsH,WAAW3wD,KAAKiB,QAAQqN,SACtCtO,KAAKi0D,cAAgB,KACjBN,GACAtvC,EAAM6vC,cAAcP,GAEpBtvC,EAAM8vC,eACN9vC,EAAM+vC,kBAEN/vC,EAAMwjC,kBACNxjC,EAAMkjB,UAEVljB,EAAMysC,UAAUL,0BAEpByD,cAAe,SAAUP,GACrB,GAAItvC,GAAQrkB,IACZqkB,GAAMsvC,WAAWU,OAAOzB,EAAQvuC,EAAMiwC,oBACtCjwC,EAAMsvC,WAAaA,EAAatB,EAAW5yB,OAAOk0B,GAClDtvC,EAAM8vC,gBAAiB,EACvB9vC,EAAMkwC,UAAW,EACjBZ,EAAWrsC,KAAKsrC,EAAQvuC,EAAMiwC,oBAC1BjwC,EAAMpjB,QAAQ+uD,UACd2D,EAAWa,SAGnB9zB,QAAS,WACL,GAAIrc,GAAQrkB,KAAM2zD,EAAatvC,EAAMsvC,UACrCtvC,GAAMtc,QAAQ0sD,IAAI5C,GACd8B,GACAA,EAAWU,OAAOzB,EAAQvuC,EAAMiwC,oBAEhCjwC,EAAMysC,YACNzsC,EAAMysC,UAAUpwB,gBACT1gC,MAAK8wD,WAEZ9wD,KAAKqpD,WACLrpD,KAAKqpD,SAAS3oB,gBACP1gC,MAAKqpD,UAEhBrpD,KAAK00D,4BACLvC,EAAO7tC,GAAGoc,QAAQnc,KAAKF,IAE3BswC,eAAgB,SAAUnrD,GAAV,GAEH5E,GADLqgC,EAAQjlC,KAAKugB,UAAU0kB,KAC3B,KAASrgC,EAAM,EAAGA,EAAMqgC,EAAMxmC,OAAQmG,IAClC,GAAIqgC,EAAMrgC,GAAK3D,QAAQuI,OAASA,EAC5B,MAAO,IAAImoD,GAAU3xD,KAAMilC,EAAMrgC,KAI7CgwD,gBAAiB,SAAUhwD,GACvB,GAAIqgC,GAAQjlC,KAAKugB,UAAU0kB,KAC3B,IAAIA,EAAMrgC,GACN,MAAO,IAAI+sD,GAAU3xD,KAAMilC,EAAMrgC,KAGzCiwD,WAAY,SAAUjpC,GAAV,GAGChnB,GAFL0b,EAAWtgB,KAAKugB,UAChBnc,EAASkc,EAASwvB,WAAaxvB,EAASlc,MAC5C,KAASQ,EAAM,EAAGA,EAAMR,EAAO3F,OAAQmG,IACnC,GAAIgnB,EAASxnB,EAAOQ,IAChB,MAAO,IAAIgtD,GAAY5xD,KAAMoE,EAAOQ,KAIhDkwD,iBAAkB,SAAUtrD,GACxB,MAAOxJ,MAAK+0D,eAAgBvrD,KAAMA,KAEtCwrD,kBAAmB,SAAUzpD,GACzB,MAAOvL,MAAK+0D,eAAgBxpD,MAAOA,KAEvCwpD,cAAe,SAAU9zD,GACrB,GAAIgmB,GAAgBjnB,KAAKi1D,eAAeh0D,EACxC,IAAIgmB,EACA,MAAO,IAAI2qC,GAAY5xD,KAAMinB,IAGrCguC,eAAgB,SAAUh0D,GAAV,GAGRgmB,GAISriB,EANT0b,EAAWtgB,KAAKugB,UAChBnc,EAASkc,EAASwvB,WAAaxvB,EAASlc,MAE5C,IAAIS,EAAQ5D,EAAQsK,OAChB0b,EAAgB7iB,EAAOnD,EAAQsK,WAC5B,IAAI1G,EAAQ5D,EAAQuI,MACvB,IAAS5E,EAAM,EAAGA,EAAMR,EAAO3F,OAAQmG,IACnC,GAAIR,EAAOQ,GAAK4E,OAASvI,EAAQuI,KAAM,CACnCyd,EAAgB7iB,EAAOQ,EACvB,OAIZ,MAAOqiB,IAEXihC,cAAe,WACXloD,KAAK+H,QAAQmtD,GAAG1C,EAAeD,EAAMvyD,KAAKm1D,YAAan1D,QAE3Dm1D,YAAa,SAAUtsD,GAAV,GACLgoD,GAAW7wD,KAAK8wD,UAChBxiD,EAAUtO,KAAKqpD,SACf9iD,EAASsC,EAAEusD,aACT7uD,IAAU1I,EAAE0I,GAAQgoD,QAAQjgD,EAAQvG,SAAStJ,SAAWoyD,GAAaA,EAAS3B,aAChF2B,EAASlB,gBAGjBqE,iBAAkB,SAAU7M,GAAV,GAGNkO,GACA5W,EAHJ6W,GAAanO,OAAmB1I,KACpC,IAAI55C,EAAQywD,GAGR,MAFID,GAAShrD,EAAQ+nD,GAAGiD,WACpB5W,EAAQ4W,EAAOC,IAAcD,EAAOC,EAAUhuD,mBAC3Cm3C,EAAMp6B,WAGrBkxC,WAAY,WACRv1D,KAAKw1D,aAAax1D,KAAKiB,QAASjB,KAAKg0D,iBAAiBh0D,KAAKiB,UAC3DjB,KAAKiB,QAAUjB,KAAK8wD,UAAU7vD,SAElCu0D,aAAc,SAAUv0D,EAASmM,GAC7BpN,KAAK8wD,UAAY,GAAIoB,GAAWlyD,KAAK+H,QAAQ,GAAI9G,EAASmM,GACtD2qC,SAAU,GAAIyZ,GAAsBxxD,MACpC+lB,OAAQ/lB,QAGhB4zD,gBAAiB,SAAUzM,GACvB,GAAI9iC,GAAQrkB,KAAM2zD,GAAcxM,OAAmBwM,UACnDtvC,GAAMiwC,mBAAqB/B,EAAMluC,EAAM+vC,eAAgB/vC,GACvDA,EAAMsvC,WAAatB,EAAW5yB,OAAOk0B,GAAYrsC,KAAK,SAAUjD,EAAMiwC,oBACtEjwC,EAAMwjC,kBACF8L,IACAtvC,EAAM8vC,gBAAiB,GAE3Bn0D,KAAKu1D,aACLv1D,KAAKy1D,eACD9B,GACItvC,EAAMpjB,QAAQ+uD,UACd3rC,EAAMsvC,WAAWa,SAI7BE,0BAA2B,WAAA,GAGV12D,GAFT03D,EAAW11D,KAAK21D,kBACpB,IAAID,EACA,IAAS13D,IAAO03D,GACZA,EAAS13D,GAAK0iC,SAGtB1gC,MAAK21D,uBAETC,qBAAsB,SAAUpsD,EAAM+B,GAAhB,GACdmqD,GAAW11D,KAAK21D,mBAAqB31D,KAAK21D,uBAC1C33D,EAAMwL,EAAO+B,EACb+C,EAAUonD,EAAS13D,EAIvB,OAHKsQ,KACDA,EAAUonD,EAAS13D,GAAO,GAAIgd,GAAiBhb,KAAK+H,UAEjDuG,GAEXunD,aAAc,SAAUhtD,GACpB,GAAIA,EAAE83B,UAAW,CACb,GAAIryB,GAAUtO,KAAK41D,qBAAqB/sD,EAAE4E,SAAU5E,EAAE4iB,UACtDnd,GAAQ+xB,KAAKx3B,OACN7I,MAAKqpD,UACZrpD,KAAKqpD,SAAShpB,KAAKx3B,IAG3BitD,aAAc,SAAUjtD,GACpB,GAAIA,EAAE83B,UAAW,CACb,GAAIryB,GAAUtO,KAAK41D,qBAAqB/sD,EAAE4E,SAAU5E,EAAE4iB,UACtDnd,GAAQmyB,WACDzgC,MAAKqpD,UACZrpD,KAAKqpD,SAAS5oB,KAAK53B,IAG3BktD,UAAW,SAAUltD,GACjB7I,KAAK00D,4BACL10D,KAAKg2D,aAAantD,EAAEkd,QACf/lB,KAAKm0D,iBAAkBn0D,KAAKu0D,UAAav0D,KAAKiB,QAAQ+uD,UACvDhwD,KAAKysB,QAAQ7U,IAGrBo+C,aAAc,SAAUnF,GACpB7wD,KAAKiB,QAAU4vD,EAAS5vD,QACxBjB,KAAKwnD,iBAAmBqJ,EAASrJ,iBACjCxnD,KAAKupD,QAAUsH,EAAStH,QACxBvpD,KAAKugB,UAAYswC,EAAStwC,UAC1BvgB,KAAK6oD,OAASgI,EAAShI,OACvB7oD,KAAKmpD,WAAa0H,EAAS1H,WAC3BnpD,KAAK0rD,YAAcmF,EAASnF,YAC5B1rD,KAAK6qD,UAAYgG,EAAShG,UAC1B7qD,KAAK+qD,eAAiB8F,EAAS9F,eAC/B/qD,KAAKgrD,gBAAkB6F,EAAS7F,iBAEpC2B,iBAAkB,SAAUsJ,GAAV,GAELrxD,GADLwuD,EAASpzD,KAAKk2D,OAClB,KAAStxD,EAAM,EAAGA,EAAMqxD,EAAMx3D,OAAQmG,IAClC,GAAIC,EAAQuuD,EAAO6C,EAAMrxD,KACrB,OAAO,GAInB6wD,aAAc,WACVz1D,KAAKqpD,SAAWrpD,KAAKmqD,iBACrBnqD,KAAKqpD,SAAS/hC,KAAKwrC,GAAOP,EAAMvyD,KAAKm2D,cAAen2D,QAExDo2D,mBAAoB,SAAUvtD,GACrB7I,KAAKysB,QAAQ5V,EAAmBhO,IACjC7I,KAAKq2D,iBAAiBxtD,EAAEijC,YAAajjC,EAAEiuC,aAG/Cuf,iBAAkB,SAAUvqB,EAAagL,GAAvB,GAONtrC,GACAC,EAPJ4Y,EAAQrkB,KAAK8wD,UAAWxwC,EAAW+D,EAAM9D,UAAWzZ,GAAiBwZ,EAASwvB,WAAaxvB,EAASlc,QAAQ0nC,EAC5GjuC,GAAEiG,QAAQgD,EAAcI,MACpB0O,GACAL,GACAC,MACE,GACFhK,EAAkB1E,EAAc0E,gBAAkB1E,EAAc0E,oBAChEC,EAAUD,EAAgBsrC,GAC9BtrC,EAAgBsrC,KAAcjyC,EAAQ4G,KAAYA,IAElD3E,EAAc2E,SAAW3E,EAAc2E,QACvCzL,KAAKs2D,uBAAuBxvD,IAEhCud,EAAMukC,wBAEVuB,eAAgB,WACZ,MAAO,IAAIvtC,GAAQ5c,KAAK+H,QAAS/H,KAAKiB,QAAQqN,UAElD6nD,cAAe,WACX,GAAI9xC,GAAQrkB,KAAK8wD,UAAWxwC,EAAW+D,EAAM9D,UAAWyO,EAAY3K,EAAM8kC,UAC1E7oC,GAASklB,iBACTxW,EAAUyR,QAEd81B,UAAW,SAAU1tD,GACjB,GAA2F2e,GAAqJ1gB,EAA5Oud,EAAQrkB,KAAMiB,EAAUojB,EAAMpjB,QAASmD,EAASigB,EAAM4vC,eAAiBhzD,EAAQmD,OAAkB4J,EAAe5J,EAAO3F,OAAQgG,EAAO4f,EAAMsvC,WAAW6C,OAAQC,GAAWpyC,EAAMsvC,WAAWvrC,aAAe3pB,OAAS,EAAGsxC,IAC1N,KAAKvoB,EAAW,EAAGA,EAAWxZ,EAAcwZ,IACxC1gB,EAAgB1C,EAAOojB,GACnBnD,EAAMksC,YAAYzpD,IAAkB2vD,GACpC1mB,EAAkBA,EAAgB9oC,OAAOmB,EAAYtB,EAAerC,IACpEzE,KAAK02D,wBAAwB3mB,EAAiBlnC,IAE9CknC,EAAgB7xC,KAAK4I,MAG7Bud,GAAM4vC,cAAgB7vD,EACtBnD,EAAQmD,OAAS2rC,EACjB/vC,KAAK8wD,UAAUvI,qBACflkC,EAAMwvC,cACNxvC,EAAMwjC,kBACN7nD,KAAKu0D,UAAW,GAEpBH,eAAgB,SAAUvrD,GACtB7I,KAAKu2D,UAAU1tD,GACf7I,KAAKysB,QAAQomC,IACb7yD,KAAKioD,WAETyO,wBAAyB,SAAU3mB,EAAiBlnC,GAA3B,GAEb8tD,GACK/xD,CAFb,IAAIiE,GAAKA,EAAE+tD,OAEP,IADID,EAAe32D,KAAK62D,mBAAqB72D,KAAK62D,uBACzCjyD,EAAM,EAAGA,EAAMmrC,EAAgBtxC,OAAQmG,IACxC+xD,EAAa5mB,EAAgBnrC,GAAK2sD,gBAAiB,IACnDxhB,EAAgBnrC,GAAK6G,SAAU,cAIhCzL,MAAK62D,oBAGpBP,uBAAwB,SAAUlyD,GAC1BS,EAAQT,EAAOmtD,eACVvxD,KAAK62D,qBACN72D,KAAK62D,uBAET72D,KAAK62D,mBAAmBzyD,EAAOmtD,aAAentD,EAAOqH,UAG7DooD,YAAa,WACT,GAAiFrsC,GAAwC1gB,EAAekoC,EAAS8nB,EAA7IzyC,EAAQrkB,KAAMyE,EAAO4f,EAAMsvC,WAAW6C,OAAQpyD,EAASigB,EAAMpjB,QAAQmD,OAAkB4J,EAAe5J,EAAO3F,MACjH,KAAK+oB,EAAW,EAAGA,EAAWxZ,EAAcwZ,IACxC1gB,EAAgB1C,EAAOojB,GACnBnD,EAAMksC,YAAYzpD,KAClBkoC,EAAUloC,EAAcwqD,SACxBwF,EAAajyD,EAAQmqC,IAAYvqC,EAAKuqC,QAAgBvS,MAAQh4B,EAC1DqC,EAAckpD,YAAa,IAC3BlpD,EAAcrC,KAAOqyD,KAKrCjP,gBAAiB,WACb,GAA8Mv/C,GAAQD,EAAlNgc,EAAQrkB,KAAMyE,EAAO4f,EAAMsvC,WAAW6C,WAAcC,GAAWpyC,EAAMsvC,WAAWvrC,aAAe3pB,OAAS,EAAGs4D,EAAiBtyD,EAAMxD,EAAUojB,EAAMpjB,QAASwxC,KAAiBxrC,OAAOhG,EAAQwH,aAM/L,KALIguD,GACIhyD,EAAKhG,SACLs4D,EAAiBtyD,EAAK,GAAGg4B,OAG5Bn0B,EAAS,EAAGA,EAASmqC,EAAYh0C,OAAQ6J,IAC1CD,EAAOoqC,EAAYnqC,GACfD,EAAK2nD,YAAa,GAClB3rC,EAAM2yC,kBAAkB3uD,EAAM0uD,EAAgBzuD,IAI1D0uD,kBAAmB,SAAU3uD,EAAM5D,EAAM6D,GACrC,GAAiCuf,GAAY3a,EAAUjK,EAAnDJ,GAAS4B,OAAYhG,MACzB,IAAI4J,EAAKrF,MAEL,IADAqF,EAAK/D,cACAujB,EAAa,EAAGA,EAAahlB,EAAOglB,IACrC5kB,EAAMwB,EAAKojB,GACX3a,EAAWnK,EAASsF,EAAKrF,MAAOC,GACb,IAAf4kB,GACAxf,EAAK/D,YAAc4I,GACnB7E,EAAK6kC,WAAajqC,KAElBoF,EAAK/D,WAAWpG,KAAKgP,GACrB7E,EAAK6kC,UAAUhvC,KAAK+E,QAGrBjD,MAAK8wD,WACZ9wD,KAAK8wD,UAAUb,4BAA4B5nD,EAAMC,IAGzDioD,YAAa,SAAUnsD,GACnB,GAA2EpB,GAAOzE,EAA9EwN,EAAcF,EAAazM,QAAQ2M,YAAY3H,GAAS2C,GAAS,CACrE,KAAKxI,EAAI,EAAGA,EAAIwN,EAAYtN,OAAQF,IAOhC,GANAyE,EAAQ+I,EAAYxN,GAChByE,IAAUkO,GACVlO,EAAQ,QAERA,GAAgB,SAEf6B,EAAQT,EAAOpB,IAAS,CACzB+D,GAAS,CACT,OAGR,MAAOA,MAGX0qD,GACA,UACA,iBACA,WACA,kBACA,cACA,cACA,eACA,UACA,UACA,uBACA,mBACA,qBAUK7sD,EAAM,EAAGA,EAAM6sD,EAAahzD,OAAQmG,IACzCgsD,EAAkBa,EAAa7sD,GAqCnCyF,GAAQ4sD,YAAYp3D,OAAO+f,EAAM0E,IAC7B5kB,EAAMw3D,UACNx3D,EAAMw3D,SAASr3D,OAAO+f,EAAM0E,IAEhCja,EAAQ+nD,GAAG+E,OAAOv3C,GACd8xC,EAAOhyD,EAAMwT,SACb0J,EAAUm2C,GAAWlzD,QACrBC,KAAM,SAAUo1C,EAAcj0C,GAAxB,GAeEm2D,GAdA9oD,EAAUtO,IACd+yD,IAAWzuC,GAAGxkB,KAAKykB,KAAKjW,GACxBtO,KAAK2wD,WAAW1vD,GAChBqN,EAAQ4mC,aAAeA,EACvB5mC,EAAQmf,SAAW7Q,EAAQ6Q,SACtBnf,EAAQmf,WACTnf,EAAQmf,SAAW7Q,EAAQ6Q,SAAW/tB,EAAM+tB,SAAS,6OACjD4pC,cAAc,EACdC,UAAW,OAGnBhpD,EAAQvG,QAAUlK,EAAEyQ,EAAQmf,SAASnf,EAAQrN,UAC7CqN,EAAQ+tB,KAAOk2B,EAAMjkD,EAAQ+tB,KAAM/tB,GACnCA,EAAQ6mD,YAAc5C,EAAMjkD,EAAQ6mD,YAAa7mD,GAC7C8oD,EAAyB13D,EAAM4sB,OAAO,mCAAwC5sB,EAAM63D,KAAK,SAC7FjpD,EAAQkpD,gBAAkBtiB,EAAaqZ,QAAQ6I,GAAwB3yD,KAAK,wBAEhFi8B,QAAS,WACL1gC,KAAKy3D,oBACDz3D,KAAK+H,UACL/H,KAAK+H,QAAQ0sD,IAAIjC,GAAekF,SAChC13D,KAAK+H,QAAU,OAGvB4oD,WAAY,SAAU1vD,GAClBjB,KAAKiB,QAAUmB,KAAepC,KAAKiB,QAASA,IAEhDA,SACIstB,QAAS,EACT9H,WAAa4M,SAAU2/B,IACvB2E,eAAgB,qVAChBtb,eAAgB,SAEpBhgB,KAAM,WACF,GAA0E+B,GAAtE9vB,EAAUtO,KAAMiB,EAAUqN,EAAQrN,QAAS8G,EAAUuG,EAAQvG,OAC5DuG,GAAQpI,QAAWoI,EAAQvG,UAGhCq2B,EAAS9vB,EAAQspD,UACZtpD,EAAQ7C,SACT1D,EAAQ8vD,KACJ/gC,IAAKsH,EAAOtH,IACZ/I,KAAMqQ,EAAOrQ,OAGrBzf,EAAQ7C,SAAU,EAClB6C,EAAQwpD,eAAeh3D,SAASc,MAChCmG,EAAQgwD,MAAK,GAAM,GAAM13B,OAAO23B,SAC5BjqC,KAAMqQ,EAAOrQ,KACb+I,IAAKsH,EAAOtH,KACb71B,EAAQwlB,UAAU4M,YAEzBokC,kBAAmB,WACXz3D,KAAKi4D,cACL9d,aAAan6C,KAAKi4D,aAClBj4D,KAAKi4D,YAAc,OAG3B92B,UAAW,SAAUphC,GAAV,GACHmG,GAASlG,KAAKkG,OACd4Z,EAAQ5Z,EAAO4Z,MACf8N,EAAQ1nB,EAAO0nB,MACfrhB,EAAIuT,EAAMiO,KACVvhB,EAAIsT,EAAMgX,GAWd,OAVyB,WAArBlJ,EAAM1jB,WACNqC,GAAKxM,EAAKnB,MAAQ,EACU,UAArBgvB,EAAM1jB,aACbqC,GAAKxM,EAAKnB,OAES,WAAnBgvB,EAAMzjB,SACNqC,GAAKzM,EAAKlB,OAAS,EACO,WAAnB+uB,EAAMzjB,WACbqC,GAAKzM,EAAKlB,SAGV0N,EAAGA,EACHC,EAAGA,IAGXorD,QAAS,WAAA,GAMGxkD,GAIA0M,EATJxR,EAAUtO,KAAMD,EAAOuO,EAAQ4pD,WAAYhyD,EAASoI,EAAQ6yB,UAAUphC,GAAO+2B,EAAM5wB,EAAOsG,EAAGuhB,EAAO7nB,EAAOqG,EAAG4rD,EAAYz4D,EAAMiT,QAAQwlD,YAAaC,EAAWv6D,EAAE4B,QAAS44D,EAAY54D,OAAO64D,aAAex3D,SAASy3D,gBAAgBF,WAAa,EAAGG,EAAa/4D,OAAOg5D,aAAe33D,SAASy3D,gBAAgBC,YAAc,EAAGE,GAAW14D,KAAKw3D,qBAAuBkB,OAa9W,OAZKA,IAA6B,IAAlBA,EAAQ7d,OAIhBznC,EAAYs+C,EAAKt+C,YAAYynC,MAAM6d,EAAQ7d,MAAO6d,EAAQ7d,OAC1D6d,EAAQnsD,EACRmsD,EAAQlsD,IAERsT,EAAQ,GAAI4xC,GAAKhlD,MAAMqhB,EAAM+I,GAAK1jB,UAAUA,GAChD2a,EAAOjO,EAAMvT,EACbuqB,EAAMhX,EAAMtT,IATZsqB,GAAOxoB,EAAQqqD,KAAK7hC,EAAMuhC,EAAWt4D,EAAKlB,OAAQmzD,EAAYoG,GAAYD,GAC1EpqC,GAAQzf,EAAQqqD,KAAK5qC,EAAOyqC,EAAYz4D,EAAKnB,MAAOkzD,EAAWsG,GAAYD,KAW3ErhC,IAAKA,EACL/I,KAAMA,IAGdsS,KAAM,SAAUx3B,GACZ7I,KAAKkG,OAAS2C,EAAE3C,OAChBlG,KAAK+H,QAAQ8vD,IAAIhvD,EAAE5J,OACnBe,KAAK+H,QAAQ6wD,YAAY1F,KAAmBrqD,EAAEe,WAC9C5J,KAAK+H,QAAQ6wD,YAAYzF,KAAwBtqD,EAAEszC,OACnD,IAAI1lB,GAAU5tB,EAAEszC,OAASn8C,KAAK64D,eAAehwD,GAAK7I,KAAK84D,cAAcjwD,EAAEiX,MACvE9f,MAAK+H,QAAQgxD,KAAKtiC,GAClBz2B,KAAKy3D,oBACLz3D,KAAKi4D,YAAc9c,WAAWn7C,KAAKq8B,KAAM42B,KAE7CxyB,KAAM,WACF,GAAInyB,GAAUtO,IACdm6C,cAAa7rC,EAAQ2pD,aACrB3pD,EAAQ0qD,eACJ1qD,EAAQ7C,UACR6C,EAAQwR,MAAQ,KAChBxR,EAAQ7C,SAAU,EAClB6C,EAAQ/C,MAAQ,OAGxBstD,eAAgB,SAAUhwD,GACtB,GAAoB4kB,GAAUgJ,EAA1BnoB,EAAUtO,IAQd,OAPAytB,GAAW/tB,EAAM+tB,SAASnf,EAAQrN,QAAQ02D,gBAC1ClhC,EAAUhJ,GACNxgB,OAAQpE,EAAEoE,OACVC,SAAUrE,EAAEqE,SACZkvC,aAAcvzC,EAAEuzC,aAChB3lB,QAASnoB,EAAQwqD,iBAIzBZ,SAAU,WACNl4D,KAAK83D,gBACL,IAAI/3D,IACAnB,MAAOkzD,EAAW9xD,KAAK+H,SACvBlJ,OAAQmzD,EAAYhyD,KAAK+H,SAE7B,OAAOhI,IAEX+3D,eAAgB,WACR93D,KAAK+H,SACL/H,KAAK+H,QAAQkxD,SAASn4D,SAASc,MAAMszD,GAAG1C,EAAexyD,KAAKm1D,cAGpEA,YAAa,SAAUtsD,GAAV,GACLtC,GAASsC,EAAEusD,cACX/wC,EAAQrkB,KAAKk1C,aAAa,EAC1B3uC,IAAUA,IAAW8d,IAAUxmB,EAAEq7D,SAAS70C,EAAO9d,KACjDvG,KAAKysB,QAAQqmC,IACb9yD,KAAKygC,SAGbu4B,aAAc,WAAA,GACN1qD,GAAUtO,KACV+H,EAAU/H,KAAK+H,OACfA,IACAA,EAAQoxD,SACJC,OAAQ,WACC9qD,EAAQ7C,SACT1D,EAAQ0sD,IAAIjC,GAAekF,aAM/CoB,cAAe,SAAUh5C,GACrB,GAAsF2W,GAAS4iC,EAA3F/qD,EAAUtO,KAAMiB,EAAUmB,KAAekM,EAAQrN,QAAS6e,EAAM7e,QAAQqN,QAwB5E,OAvBIzJ,GAAQib,EAAMzf,SACdo2B,EAAU3W,GAAAA,EAAMzf,OAEhBY,EAAQwsB,UACR4rC,EAAkB5rC,EAASxsB,EAAQwsB,UACnCgJ,EAAU4iC,GACNh5D,MAAOyf,EAAMzf,MACb6M,SAAU4S,EAAM5S,SAChB9I,OAAQ0b,EAAM1b,OACdkmB,SAAUxK,EAAMwK,SAChBa,WAAYrL,EAAMqL,WAClByB,aAAc9M,EAAM8M,aACpB5I,MAAOlE,EAAMkE,MACbZ,IAAKtD,EAAMsD,IACXC,KAAMvD,EAAMuD,KACZi2C,KAAMx5C,EAAMw5C,KACZC,MAAOz5C,EAAMy5C,MACbC,KAAM15C,EAAM05C,KACZC,MAAO35C,EAAM25C,SAEVx4D,EAAQqrB,SACfmK,EAAU3W,EAAM6N,YAAY1sB,EAAQqrB,SAEjCmK,GAEXkiC,KAAM,SAAUv6B,EAAQr+B,EAAM25D,GAC1B,GAAIC,GAAS,CAOb,OANIv7B,GAASr+B,EAAO25D,IAChBC,EAASD,GAAgBt7B,EAASr+B,IAElCq+B,EAAS,IACTu7B,GAAUv7B,GAEPu7B,KAGX3+C,EAAmB4B,EAAQ/c,QAC3BC,KAAM,SAAUo1C,EAAcj0C,GAC1B2b,EAAQ0H,GAAGxkB,KAAKykB,KAAKvkB,KAAMk1C,EAAcj0C,GACzCjB,KAAK+H,QAAQ2yC,SAAS,8BAE1Bra,KAAM,SAAUx3B,GACZ,GAAId,GAAU/H,KAAK+H,OACfA,KACA/H,KAAKkG,OAAS2C,EAAE3C,OAChBlG,KAAK+H,QAAQ8vD,IAAIhvD,EAAE5J,OACnBe,KAAK+H,QAAQgxD,KAAK/4D,KAAKy2B,QAAQ5tB,IAC/B7I,KAAKq8B,SAGbA,KAAM,WACF,GAAI/tB,GAAUtO,KAAM+H,EAAUuG,EAAQvG,QAASq2B,EAAS9vB,EAAQspD,SAChEtpD,GAAQwpD,iBACR/vD,EAAQ8vD,KACJ/gC,IAAKsH,EAAOtH,IACZ/I,KAAMqQ,EAAOrQ,OACdsS,QAEP5J,QAAS,SAAU5tB,GACf,GAAI4tB,GAAU5tB,EAAExI,MAAOY,EAAU4H,EAAE83B,UAAU1/B,QAAQqN,OAIrD,OAHIrN,GAAQwsB,WACRgJ,EAAUhJ,EAASxsB,EAAQwsB,WAAYptB,MAAOo2B,KAE3CA,GAEXgK,KAAM,WACFzgC,KAAK+H,QAAQ04B,UAGjBkxB,EAAY/xD,EAAMC,QAClBC,KAAM,SAAUukB,EAAOpe,GACnBjG,KAAK45D,OAASv1C,EACdrkB,KAAK65D,MAAQ5zD,EACbjG,KAAKwgB,OAASva,EAAKua,OACnBxgB,KAAK85D,aAAe7zD,EAAK28B,eAAepiB,OACxCxgB,KAAKwJ,KAAOvD,EAAKhF,QAAQuI,MAE7BpF,OAAQ,WAAA,GAMSQ,GALTyf,EAAQrkB,KAAK45D,OACb5yB,EAAe3iB,EAAM9D,UAAUwmB,oBAC/B3iC,EAAS4iC,EAAahnC,KAAKwJ,MAAQ,WACnCzC,IACJ,IAAI3C,EACA,IAASQ,EAAM,EAAGA,EAAMR,EAAO3F,OAAQmG,IACnCmC,EAAO7I,KAAK,GAAI0zD,GAAYvtC,EAAOjgB,EAAOQ,IAGlD,OAAOmC,MAGX6qD,EAAchyD,EAAMC,QACpBC,KAAM,SAAUukB,EAAOpjB,GACnBjB,KAAK45D,OAASv1C,EACdrkB,KAAK+5D,SAAW94D,GAEpBgM,OAAQ,SAAU87C,GAAV,GAGI3kD,GACAkc,EAHJrT,EAASjN,KAAKuzC,OASlB,OARKtmC,KACG7I,EAASpE,KAAKi1D,iBACd30C,EAAWtgB,KAAK45D,OAAOr5C,UAC3BvgB,KAAKuzC,QAAUtmC,EAASqT,EAASurB,oBAAoBznC,EAAOmH,QAE5D7L,EAAMsE,WAAW+kD,KACjB97C,EAASjN,KAAKg6D,cAAc/sD,EAAQ87C,IAEjC97C,GAEXxI,KAAM,SAAUA,GAAV,GAGM4f,GACA/D,EAGIjY,EACApH,EAPRmD,EAASpE,KAAKi1D,gBAalB,OAZIxwD,KACI4f,EAAQrkB,KAAK45D,OACbt5C,EAAW+D,EAAM9D,UACrBnc,EAAOK,KAAOA,EACVL,EAAO4rC,gBACH3nC,EAAOiY,EAASuG,mBAAmBziB,GACnCnD,KAAagG,OAAOod,EAAMpjB,QAAQwH,cACtC4b,EAAMysC,UAAUb,4BAA4BhvD,EAAQoH,EAAKojB,WAAYpjB,EAAKojB,YAE9EpH,EAAMukC,uBACN5oD,KAAKi6D,gBAEF71D,EAAOK,MAElBwnC,UAAW,SAAU8c,GAAV,GAEEnkD,GADLqI,EAASjN,KAAKiN,QAClB,KAASrI,EAAM,EAAGA,EAAMqI,EAAOxO,OAAQmG,IACnC,GAAImkD,EAAO97C,EAAOrI,IACd,MAAOqI,GAAOrI,IAI1B6uC,gBAAiB,SAAUpT,EAAM17B,GAIzBA,EAHCA,EAEMjF,EAAMsE,WAAWW,GACb3E,KAAKiN,OAAOtI,GAEZW,EAAQX,GAAYA,GAAYA,GAJhC3E,KAAKiN,SAMpBjN,KAAK45D,OAAO9I,UAAU5H,uBAAuB7oB,EAAM17B,IAEvDu1D,iBAAkB,SAAUzuD,EAASs9C,GAAnB,GAaFtkD,GACKG,EAbbyf,EAAQrkB,KAAK45D,OACb3yC,EAAgBjnB,KAAKi1D,iBACrBkF,EAAYz6D,EAAMsE,WAAW+kD,EACjC,IAAKoR,EAID,GAAIr2D,EAAQmjB,EAAc/f,MAClB0O,GACAL,GACAC,KAGJ,IADI/Q,EAAOzE,KAAKo6D,YAAYrR,GACnBnkD,EAAM,EAAGA,EAAMH,EAAKhG,OAAQmG,IACjCH,EAAKG,GAAK6G,QAAUA,MAGxBwb,GAAcxb,QAAU,SAAUhH,GAC9B,OAAOskD,EAAOtkD,EAAK6lB,WAAY7e,OAdvCwb,GAAcxb,QAAUA,EACxB4Y,EAAMiyC,uBAAuBrvC,EAiBjC5C,GAAMukC,uBACN5oD,KAAKi6D,gBAETG,YAAa,SAAUrR,GAAV,GAIAnkD,GAHLH,EAAOzE,KAAKi1D,iBAAiBxwD,KAC7BhG,EAASgG,EAAKhG,OACdsI,IACJ,KAASnC,EAAM,EAAGA,EAAMnG,EAAQmG,IACxBmkD,EAAOtkD,EAAKG,KACZmC,EAAO7I,KAAKuG,EAAKG,GAGzB,OAAOmC,IAEXizD,cAAe,SAAU/sD,EAAQ87C,GAAlB,GAGFnkD,GAFLmC,KACAtI,EAASwO,EAAOxO,MACpB,KAASmG,EAAM,EAAGA,EAAMnG,EAAQmG,IACxBmkD,EAAO97C,EAAOrI,KACdmC,EAAO7I,KAAK+O,EAAOrI,GAG3B,OAAOmC,IAEXkuD,eAAgB,WACZ,GAAI7wD,GAASpE,KAAK0sC,OAIlB,OAHKtoC,KACDA,EAASpE,KAAK0sC,QAAU1sC,KAAK45D,OAAO3E,eAAej1D,KAAK+5D,WAErD31D,GAEX61D,aAAc,iBACHj6D,MAAKuzC,cACLvzC,MAAK0sC,WAGpBriC,EAAQuS,QAAUA,EAClBvS,EAAQ2Q,iBAAmBA,EAC3B3Q,EAAQmnD,sBAAwBA,EAChCnnD,EAAQsnD,UAAYA,EACpBtnD,EAAQunD,YAAcA,GACxBnyD,OAAOC,MAAM2C,QACR5C,OAAOC,OACE,kBAAV9B,SAAwBA,OAAO0E,IAAM1E,OAAS,SAAU2E,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAU7E,EAAGC,QACVA,OAAO,uBACH,4BACA,uBACDD,IACL,aAoBkB,kBAAVC,SAAwBA,OAAO0E,IAAM1E,OAAS,SAAU2E,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                measureBox.textContent = text;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (String(text).length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/kendo-chart', [\n        'kendo.core',\n        'kendo.color',\n        'kendo.drawing',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var dataviz = kendo.dataviz;\n        var Class = dataviz.Class;\n        var isNumber = dataviz.isNumber;\n        var datavizConstants = dataviz.constants;\n        var MAX_VALUE = datavizConstants.MAX_VALUE;\n        var MIN_VALUE = datavizConstants.MIN_VALUE;\n        var VALUE = datavizConstants.VALUE;\n        var CENTER = datavizConstants.CENTER;\n        var TOP = datavizConstants.TOP;\n        var BOTTOM = datavizConstants.BOTTOM;\n        var LEFT = datavizConstants.LEFT;\n        var WHITE = datavizConstants.WHITE;\n        var CIRCLE = datavizConstants.CIRCLE;\n        var Y = datavizConstants.Y;\n        var X = datavizConstants.X;\n        var RIGHT = datavizConstants.RIGHT;\n        var BLACK = datavizConstants.BLACK;\n        var DATE = datavizConstants.DATE;\n        var DEFAULT_PRECISION = datavizConstants.DEFAULT_PRECISION;\n        var ARC = datavizConstants.ARC;\n        var defined = dataviz.defined;\n        var getter = dataviz.getter;\n        var isArray = dataviz.isArray;\n        var ChartElement = dataviz.ChartElement;\n        var Point = dataviz.Point;\n        var Box = dataviz.Box;\n        var alignPathToPixel = dataviz.alignPathToPixel;\n        var setDefaultOptions = dataviz.setDefaultOptions;\n        var inArray = dataviz.inArray;\n        var isFunction = dataviz.isFunction;\n        var valueOrDefault = dataviz.valueOrDefault;\n        var isObject = dataviz.isObject;\n        var deepExtend = dataviz.deepExtend;\n        var eventElement = dataviz.eventElement;\n        var services = dataviz.services;\n        var TemplateService = services.TemplateService;\n        var TextBox = dataviz.TextBox;\n        var ShapeElement = dataviz.ShapeElement;\n        var getSpacing = dataviz.getSpacing;\n        var limitValue = dataviz.limitValue;\n        var last = dataviz.last;\n        var append = dataviz.append;\n        var isString = dataviz.isString;\n        var parseDate = dataviz.parseDate;\n        var styleValue = dataviz.styleValue;\n        var CategoryAxis = dataviz.CategoryAxis;\n        var BoxElement = dataviz.BoxElement;\n        var round = dataviz.round;\n        var grep = dataviz.grep;\n        var DateCategoryAxis = dataviz.DateCategoryAxis;\n        var elementStyles = dataviz.elementStyles;\n        var hasClasses = dataviz.hasClasses;\n        var bindEvents = dataviz.bindEvents;\n        var unbindEvents = dataviz.unbindEvents;\n        var support = kendo.support;\n        var drawing = kendo.drawing;\n        var Path = drawing.Path;\n        var Animation = drawing.Animation;\n        var AnimationFactory = drawing.AnimationFactory;\n        var Group = drawing.Group;\n        var Color = kendo.Color;\n        var geometry = kendo.geometry;\n        var GeometryPoint = geometry.Point;\n        var transform = geometry.transform;\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n                this.options = axis.options;\n            },\n            value: function (point) {\n                var axis = this._axis;\n                var value = axis.getCategory ? axis.getCategory(point) : axis.getValue(point);\n                return value;\n            },\n            slot: function (from, to, limit) {\n                if (limit === void 0) {\n                    limit = true;\n                }\n                return this._axis.slot(from, to, limit);\n            },\n            range: function () {\n                return this._axis.range();\n            },\n            valueRange: function () {\n                return this._axis.valueRange();\n            }\n        });\n        var ChartPlotArea = Class.extend({\n            init: function (plotArea) {\n                this._plotArea = plotArea;\n                this.visual = plotArea.visual;\n                this.backgroundVisual = plotArea._bgVisual;\n            }\n        });\n        function countNumbers(values) {\n            var length = values.length;\n            var count = 0;\n            for (var i = 0; i < length; i++) {\n                var num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        var Aggregates = {\n            min: function (values) {\n                var length = values.length;\n                var min = MAX_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        min = Math.min(min, value);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var length = values.length;\n                var max = MIN_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        max = Math.max(max, value);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length;\n                var sum = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        sum += value;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length;\n                var count = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var count = countNumbers(values);\n                var result = values[0];\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        return value;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var this$1 = this;\n                if (valueFields === void 0) {\n                    valueFields = [VALUE];\n                }\n                if (otherFields === void 0) {\n                    otherFields = {};\n                }\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    var type = seriesTypes[i];\n                    this$1._valueFields[type] = valueFields;\n                    this$1._otherFields[type] = otherFields;\n                    this$1._nullValue[type] = this$1._makeValue(valueFields, null);\n                    this$1._undefinedValue[type] = this$1._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var data = series.data;\n                var pointData = defined(item) ? item : data[pointIx];\n                var result = { valueFields: { value: pointData } };\n                var valueFields = this.valueFields(series);\n                var otherFields = this._otherFields[series.type];\n                var fields, value;\n                if (pointData === null) {\n                    value = this._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = this._undefinedValue[series.type];\n                } else if (Array.isArray(pointData)) {\n                    var fieldData = pointData.slice(valueFields.length);\n                    value = this._bindFromArray(pointData, valueFields);\n                    fields = this._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === 'object') {\n                    var srcValueFields = this.sourceFields(series, valueFields);\n                    var srcPointFields = this.sourceFields(series, otherFields);\n                    value = this._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {};\n                var length = fields.length;\n                for (var i = 0; i < length; i++) {\n                    var fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {};\n                if (fields) {\n                    var length = Math.min(fields.length, array.length);\n                    for (var i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                if (srcFields === void 0) {\n                    srcFields = fields;\n                }\n                var value = {};\n                if (fields) {\n                    var length = fields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = fields[i];\n                        var srcFieldName = srcFields[i];\n                        value[fieldName] = getField(srcFieldName, object);\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var sourceFields = [];\n                if (canonicalFields) {\n                    var length = canonicalFields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = canonicalFields[i];\n                        var sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] || fieldName);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var STD_ERR = 'stderr';\n        var STD_DEV = 'stddev';\n        var percentRegex = /percent(?:\\w*)\\((\\d+)\\)/;\n        var standardDeviationRegex = new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$');\n        var ErrorRangeCalculator = Class.extend({\n            init: function (errorValue, series, field) {\n                this.initGlobalRanges(errorValue, series, field);\n            },\n            initGlobalRanges: function (errorValue, series, field) {\n                var data = series.data;\n                var deviationMatch = standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var average = this.getAverage(data);\n                    var deviation = this.getStandardDeviation(data, average, false);\n                    var multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1;\n                    var errorRange = {\n                        low: average.value - deviation * multiple,\n                        high: average.value + deviation * multiple\n                    };\n                    this.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var standardError = this.getStandardError(data, this.getAverage(data));\n                    this.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data;\n                var binder = SeriesBinder.current;\n                var valueFields = binder.valueFields(series);\n                var item = defined(data[0]) ? data[0] : {};\n                var valueGetter;\n                if (isArray(item)) {\n                    var index = field ? valueFields.indexOf(field) : 0;\n                    valueGetter = getter('[' + index + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === datavizConstants.OBJECT) {\n                    var srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[valueFields.indexOf(field)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var low, high, value;\n                if (!defined(errorValue)) {\n                    return null;\n                }\n                if (this.globalRange) {\n                    return this.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - Math.abs(percentValue);\n                    high = pointValue + Math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / Math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var this$1 = this;\n                var length = data.length;\n                var total = isSample ? average.count - 1 : average.count;\n                var squareDifferenceSum = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += Math.pow(value - average.value, 2);\n                    }\n                }\n                return Math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var this$1 = this;\n                var length = data.length;\n                var sum = 0;\n                var count = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        });\n        var browser = support.browser || {};\n        var INITIAL_ANIMATION_DURATION = 600;\n        var FADEIN = 'fadeIn';\n        var GLASS = 'glass';\n        var BORDER_BRIGHTNESS = 0.8;\n        var TOOLTIP_OFFSET = 5;\n        var START_SCALE = browser.msie ? 0.001 : 0;\n        var ERROR_LOW_FIELD = 'errorLow';\n        var ERROR_HIGH_FIELD = 'errorHigh';\n        var X_ERROR_LOW_FIELD = 'xErrorLow';\n        var X_ERROR_HIGH_FIELD = 'xErrorHigh';\n        var Y_ERROR_LOW_FIELD = 'yErrorLow';\n        var Y_ERROR_HIGH_FIELD = 'yErrorHigh';\n        var LINE_MARKER_SIZE = 8;\n        var ZERO = 'zero';\n        var INTERPOLATE = 'interpolate';\n        var GAP = 'gap';\n        var SMOOTH = 'smooth';\n        var STEP = 'step';\n        var AREA = 'area';\n        var BAR = 'bar';\n        var BOX_PLOT = 'boxPlot';\n        var BUBBLE = 'bubble';\n        var BULLET = 'bullet';\n        var CANDLESTICK = 'candlestick';\n        var COLUMN = 'column';\n        var DONUT = 'donut';\n        var FUNNEL = 'funnel';\n        var HORIZONTAL_WATERFALL = 'horizontalWaterfall';\n        var LINE = 'line';\n        var OHLC = 'ohlc';\n        var PIE = 'pie';\n        var POLAR_AREA = 'polarArea';\n        var POLAR_LINE = 'polarLine';\n        var POLAR_SCATTER = 'polarScatter';\n        var RADAR_AREA = 'radarArea';\n        var RADAR_COLUMN = 'radarColumn';\n        var RADAR_LINE = 'radarLine';\n        var RANGE_BAR = 'rangeBar';\n        var RANGE_COLUMN = 'rangeColumn';\n        var SCATTER = 'scatter';\n        var SCATTER_LINE = 'scatterLine';\n        var VERTICAL_AREA = 'verticalArea';\n        var VERTICAL_BOX_PLOT = 'verticalBoxPlot';\n        var VERTICAL_BULLET = 'verticalBullet';\n        var VERTICAL_LINE = 'verticalLine';\n        var WATERFALL = 'waterfall';\n        var EQUALLY_SPACED_SERIES = [\n            BAR,\n            COLUMN,\n            OHLC,\n            CANDLESTICK,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            BULLET,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ];\n        var LEGEND_ITEM_CLICK = 'legendItemClick';\n        var LEGEND_ITEM_HOVER = 'legendItemHover';\n        var SERIES_CLICK = 'seriesClick';\n        var SERIES_HOVER = 'seriesHover';\n        var PLOT_AREA_CLICK = 'plotAreaClick';\n        var PLOT_AREA_HOVER = 'plotAreaHover';\n        var DRAG = 'drag';\n        var DRAG_END = 'dragEnd';\n        var DRAG_START = 'dragStart';\n        var ZOOM_START = 'zoomStart';\n        var ZOOM = 'zoom';\n        var ZOOM_END = 'zoomEnd';\n        var SELECT_START = 'selectStart';\n        var SELECT = 'select';\n        var SELECT_END = 'selectEnd';\n        var RENDER = 'render';\n        var SHOW_TOOLTIP = 'showTooltip';\n        var HIDE_TOOLTIP = 'hideTooltip';\n        var LOGARITHMIC = 'log';\n        var CATEGORY = 'category';\n        var INSIDE_END = 'insideEnd';\n        var INSIDE_BASE = 'insideBase';\n        var OUTSIDE_END = 'outsideEnd';\n        var MOUSEWHEEL = 'DOMMouseScroll mousewheel';\n        var MOUSEWHEEL_DELAY = 150;\n        var constants = {\n            INITIAL_ANIMATION_DURATION: INITIAL_ANIMATION_DURATION,\n            FADEIN: FADEIN,\n            LEGEND_ITEM_CLICK: LEGEND_ITEM_CLICK,\n            LEGEND_ITEM_HOVER: LEGEND_ITEM_HOVER,\n            SERIES_CLICK: SERIES_CLICK,\n            SERIES_HOVER: SERIES_HOVER,\n            GLASS: GLASS,\n            BORDER_BRIGHTNESS: BORDER_BRIGHTNESS,\n            TOOLTIP_OFFSET: TOOLTIP_OFFSET,\n            START_SCALE: START_SCALE,\n            ERROR_LOW_FIELD: ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD: ERROR_HIGH_FIELD,\n            X_ERROR_LOW_FIELD: X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD: X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD: Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD: Y_ERROR_HIGH_FIELD,\n            LINE_MARKER_SIZE: LINE_MARKER_SIZE,\n            INTERPOLATE: INTERPOLATE,\n            ZERO: ZERO,\n            SMOOTH: SMOOTH,\n            STEP: STEP,\n            CATEGORY: CATEGORY,\n            FUNNEL: FUNNEL,\n            BAR: BAR,\n            CANDLESTICK: CANDLESTICK,\n            PIE: PIE,\n            COLUMN: COLUMN,\n            AREA: AREA,\n            VERTICAL_BULLET: VERTICAL_BULLET,\n            BOX_PLOT: BOX_PLOT,\n            OHLC: OHLC,\n            WATERFALL: WATERFALL,\n            LINE: LINE,\n            BULLET: BULLET,\n            VERTICAL_LINE: VERTICAL_LINE,\n            VERTICAL_AREA: VERTICAL_AREA,\n            RANGE_COLUMN: RANGE_COLUMN,\n            VERTICAL_BOX_PLOT: VERTICAL_BOX_PLOT,\n            RANGE_BAR: RANGE_BAR,\n            HORIZONTAL_WATERFALL: HORIZONTAL_WATERFALL,\n            SCATTER: SCATTER,\n            SCATTER_LINE: SCATTER_LINE,\n            BUBBLE: BUBBLE,\n            RADAR_AREA: RADAR_AREA,\n            RADAR_LINE: RADAR_LINE,\n            RADAR_COLUMN: RADAR_COLUMN,\n            POLAR_LINE: POLAR_LINE,\n            POLAR_AREA: POLAR_AREA,\n            POLAR_SCATTER: POLAR_SCATTER,\n            RENDER: RENDER,\n            PLOT_AREA_CLICK: PLOT_AREA_CLICK,\n            PLOT_AREA_HOVER: PLOT_AREA_HOVER,\n            LOGARITHMIC: LOGARITHMIC,\n            DRAG: DRAG,\n            DRAG_START: DRAG_START,\n            DRAG_END: DRAG_END,\n            ZOOM_START: ZOOM_START,\n            ZOOM: ZOOM,\n            ZOOM_END: ZOOM_END,\n            SELECT_START: SELECT_START,\n            SELECT: SELECT,\n            SELECT_END: SELECT_END,\n            GAP: GAP,\n            DONUT: DONUT,\n            INSIDE_END: INSIDE_END,\n            INSIDE_BASE: INSIDE_BASE,\n            OUTSIDE_END: OUTSIDE_END,\n            MOUSEWHEEL: MOUSEWHEEL,\n            MOUSEWHEEL_DELAY: MOUSEWHEEL_DELAY,\n            SHOW_TOOLTIP: SHOW_TOOLTIP,\n            HIDE_TOOLTIP: HIDE_TOOLTIP,\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES\n        };\n        var DEFAULT_ERROR_BAR_WIDTH = 4;\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                ChartElement.fn.init.call(this, options);\n                this.low = low;\n                this.high = high;\n                this.isVertical = isVertical;\n                this.chart = chart;\n                this.series = series;\n            },\n            reflow: function (targetBox) {\n                var endCaps = this.options.endCaps;\n                var isVertical = this.isVertical;\n                var axis = this.getAxis();\n                var valueBox = axis.getSlot(this.low, this.high);\n                var centerBox = targetBox.center();\n                var capsWidth = this.getCapsWidth(targetBox, isVertical);\n                var capValue = isVertical ? centerBox.x : centerBox.y;\n                var capStart = capValue - capsWidth;\n                var capEnd = capValue + capsWidth;\n                var linePoints;\n                if (isVertical) {\n                    linePoints = [\n                        new Point(centerBox.x, valueBox.y1),\n                        new Point(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(capStart, valueBox.y1), new Point(capEnd, valueBox.y1), new Point(capStart, valueBox.y2), new Point(capEnd, valueBox.y2));\n                    }\n                    this.box = new Box(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        new Point(valueBox.x1, centerBox.y),\n                        new Point(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(valueBox.x1, capStart), new Point(valueBox.x1, capEnd), new Point(valueBox.x2, capStart), new Point(valueBox.x2, capEnd));\n                    }\n                    this.box = new Box(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                this.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height();\n                var capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual = options.visual;\n                if (visual) {\n                    this.visual = visual({\n                        low: this.low,\n                        high: this.high,\n                        rect: this.box.toRect(),\n                        sender: this.getSender(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            this$1.createDefaultVisual();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    this.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var linePoints = ref.linePoints;\n                var lineOptions = {\n                    stroke: {\n                        color: options.color,\n                        width: options.line.width,\n                        dashType: options.line.dashType\n                    }\n                };\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    alignPathToPixel(line);\n                    this$1.visual.append(line);\n                }\n            }\n        });\n        setDefaultOptions(ErrorBarBase, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            endCaps: true,\n            line: { width: 2 },\n            zIndex: 1\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axis = this.chart.seriesValueAxis(this.series);\n                return axis;\n            }\n        });\n        var MAX_EXPAND_DEPTH = 5;\n        function evalOptions(options, context, state, dryRun) {\n            if (state === void 0) {\n                state = {};\n            }\n            if (dryRun === void 0) {\n                dryRun = false;\n            }\n            var defaults = state.defaults = state.defaults || {};\n            var depth = state.depth = state.depth || 0;\n            var needsEval = false;\n            state.excluded = state.excluded || [];\n            if (depth > MAX_EXPAND_DEPTH) {\n                return null;\n            }\n            for (var property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    var propValue = options[property];\n                    if (isFunction(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (isObject(propValue)) {\n                        if (!dryRun) {\n                            state.defaults = defaults[property];\n                        }\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length;\n            var categories = 0;\n            for (var i = 0; i < seriesCount; i++) {\n                categories = Math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                this.valueAxisRanges = {};\n                this.points = [];\n                this.categoryPoints = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    var otherValues = [];\n                    var categorySum = 0;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += Math.abs(other.value);\n                                otherValues.push(Math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var this$1 = this;\n                if (startValue === void 0) {\n                    startValue = 0;\n                }\n                var categoryPoints = this.categoryPoints[point.categoryIx];\n                if (this.options.isStacked) {\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === datavizConstants.STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this$1.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this$1.options.isStacked100) {\n                                plotValue = Math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value || axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var this$1 = this;\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPoints = this$1.categoryPoints[i];\n                    if (!categoryPoints) {\n                        continue;\n                    }\n                    for (var pIx = 0; pIx < categoryPoints.length; pIx++) {\n                        var point = categoryPoints[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this$1.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = Math.max(max, to);\n                                    min = Math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var isStacked = ref.isStacked;\n                var chartSeries = ref.series;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        var limits = limitsCache[key];\n                        if (!limits) {\n                            limits = this$1.stackLimits(axisName, series.stack);\n                            var errorTotals = this$1.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = Math.min(limits.min, dataviz.sparseArrayLimits(errorTotals.negative).min);\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = Math.max(limits.max, dataviz.sparseArrayLimits(errorTotals.positive).max);\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            this$1.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var value = point.value;\n                var series = point.series;\n                var seriesIx = point.seriesIx;\n                var errorBars = point.options.errorBars;\n                var lowValue = data.fields[ERROR_LOW_FIELD];\n                var highValue = data.fields[ERROR_HIGH_FIELD];\n                var errorRange;\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    this.seriesErrorRanges = this.seriesErrorRanges || [];\n                    this.seriesErrorRanges[seriesIx] = this.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = this.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    this.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var isVertical = !this.options.invertAxes;\n                var options = point.options.errorBars;\n                var series = point.series;\n                var low = point.low;\n                var high = point.high;\n                if (this.options.isStacked) {\n                    var stackedErrorRange = this.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    this.updateRange({ value: low }, fields);\n                    this.updateRange({ value: high }, fields);\n                }\n                var errorBar = new CategoricalErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var plotValue = this.plotRange(point, 0)[1] - point.value;\n                var low = point.low + plotValue;\n                var high = point.high + plotValue;\n                this.errorTotals = this.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    this.errorTotals.negative[categoryIx] = Math.min(this.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    this.errorTotals.positive[categoryIx] = Math.max(this.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = this.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = this.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    this.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = this.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = this;\n                    point.dataItem = series.data[categoryIx];\n                    point.noteText = data.fields.noteText;\n                    this.addErrorBar(point, data, categoryIx);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                this.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, pointOptions);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return pointOptions;\n            },\n            updateRange: function (data, fields) {\n                var axisName = fields.series.axis;\n                var value = data.value;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, value);\n                    axisRange.max = Math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea;\n                var axisName = series.axis;\n                var axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var categorySlots = this.categorySlots = [];\n                var chartPoints = this.points;\n                var categoryAxis = this.categoryAxis;\n                var pointIx = 0;\n                this.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    var valueAxis = this$1.seriesValueAxis(currentSeries);\n                    var point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = this$1.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = this$1.plotRange(point, valueAxis.startValue());\n                        var valueSlot = valueAxis.getSlot(plotRange[0], plotRange[1], !this$1.options.clip);\n                        if (valueSlot) {\n                            var pointSlot = this$1.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = this$1.aboveAxis(point, valueAxis);\n                            point.stackValue = plotRange[1];\n                            if (this$1.options.isStacked100) {\n                                point.percentage = this$1.plotValue(point);\n                            }\n                            this$1.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.reflowCategories(categorySlots);\n                this.box = targetBox;\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis;\n                var options = valueAxis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var options = this.options;\n                var invertAxes = options.invertAxes;\n                var slotX = invertAxes ? valueSlot : categorySlot;\n                var slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var count = categoriesCount(series);\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this$1._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (var seriesIx$1 = 0; seriesIx$1 < seriesCount; seriesIx$1++) {\n                        var currentSeries = series[seriesIx$1];\n                        var currentCategory = categories[categoryIx];\n                        var pointData = this$1._bindPoint(currentSeries, seriesIx$1, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx$1\n                        });\n                    }\n                }\n                for (var seriesIx$2 = 0; seriesIx$2 < seriesCount; seriesIx$2++) {\n                    this$1._outOfRangeCallback(series[seriesIx$2], '_outOfRangeMaxPoint', seriesIx$2, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        setDefaultOptions(CategoricalChart, {\n            series: [],\n            invertAxes: false,\n            isStacked: false,\n            clip: true\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: eventElement(e),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var options = this.options.notes;\n                var text = this.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    this.note = new dataviz.Note({\n                        value: this.value,\n                        text: text,\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        series: this.series\n                    }, this.options.notes, this.owner.chartService);\n                    this.append(this.note);\n                }\n            }\n        };\n        var ABOVE = 'above';\n        var BELOW = 'below';\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n            },\n            render: function () {\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                if (markers.visible && markers.size) {\n                    this.marker = this.createMarker();\n                    this.append(this.marker);\n                }\n                if (labels.visible) {\n                    var labelText = this.value;\n                    if (labels.template) {\n                        var labelTemplate = TemplateService.compile(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            series: this.series\n                        });\n                    } else if (labels.format) {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels));\n                    this.append(this.label);\n                }\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: function () {\n            },\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var aboveAxis = ref.aboveAxis;\n                var vertical = options.vertical;\n                this.render();\n                this.box = targetBox;\n                var childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                this._childBox = childBox;\n                if (this.marker) {\n                    this.marker.reflow(childBox);\n                }\n                this.reflowLabel(childBox);\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (this.note) {\n                    var noteTargetBox = this.markerBox();\n                    if (!(options.markers.visible && options.markers.size)) {\n                        var center = noteTargetBox.center();\n                        noteTargetBox = new Box(center.x, center.y, center.x, center.y);\n                    }\n                    this.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(this.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var markers = this.options.highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var size = options.size + (options.border.width || 0) + (markers.border.width || 0);\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: size,\n                    height: size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual, rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geometry.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function () {\n                var markerBox = this.markerBox();\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    var x = markerBox.x2 + TOOLTIP_OFFSET;\n                    var horizontalAlign = LEFT;\n                    var y, verticalAlign;\n                    if (this.aboveAxis) {\n                        y = markerBox.y1;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        y = markerBox.y2;\n                        verticalAlign = TOP;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            }\n        });\n        LinePoint.prototype.defaults = {\n            vertical: true,\n            markers: {\n                visible: true,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                position: ABOVE,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: '#fff',\n                        width: 2\n                    }\n                }\n            },\n            errorBars: { line: { width: 1 } }\n        };\n        deepExtend(LinePoint.prototype, PointEventsMixin);\n        deepExtend(LinePoint.prototype, NoteMixin);\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                ChartElement.fn.init.call(this);\n                this.linePoints = linePoints;\n                this.series = series;\n                this.seriesIx = seriesIx;\n            },\n            points: function (visualPoints) {\n                var linePoints = this.linePoints.concat(visualPoints || []);\n                var points = [];\n                for (var i = 0, length = linePoints.length; i < length; i++) {\n                    if (linePoints[i].visible !== false) {\n                        points.push(linePoints[i]._childBox.toRect().center());\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var ref = this;\n                var options = ref.options;\n                var series = ref.series;\n                var color = series.color;\n                var defaults = series._defaults;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                return this.parent.getNearestPoint(coords.x, coords.y, this.seriesIx);\n            }\n        });\n        setDefaultOptions(LineSegment, { closed: false });\n        var StepLineSegment = LineSegment.extend({\n            points: function (visualPoints) {\n                var points = this.calculateStepPoints(this.linePoints);\n                if (visualPoints && visualPoints.length) {\n                    points = points.concat(this.calculateStepPoints(visualPoints).reverse());\n                }\n                return points;\n            },\n            calculateStepPoints: function (points) {\n                var chart = this.parent;\n                var plotArea = chart.plotArea;\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var isInterpolate = chart.seriesMissingValues(this.series) === INTERPOLATE;\n                var reverse = categoryAxis.options.reverse;\n                var vertical = categoryAxis.options.vertical;\n                var dir = reverse ? 2 : 1;\n                var revDir = reverse ? 1 : 2;\n                var length = points.length;\n                var result = [];\n                for (var i = 1; i < length; i++) {\n                    var prevPoint = points[i - 1];\n                    var point = points[i];\n                    var prevMarkerBoxCenter = prevPoint.markerBox().center();\n                    var markerBoxCenter = point.markerBox().center();\n                    if (categoryAxis.options.justified) {\n                        result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevMarkerBoxCenter.y));\n                        if (vertical) {\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, markerBoxCenter.y));\n                        } else {\n                            result.push(new GeometryPoint(markerBoxCenter.x, prevMarkerBoxCenter.y));\n                        }\n                        result.push(new GeometryPoint(markerBoxCenter.x, markerBoxCenter.y));\n                    } else {\n                        if (vertical) {\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevPoint.box[Y + dir]));\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevPoint.box[Y + revDir]));\n                            if (isInterpolate) {\n                                result.push(new GeometryPoint(prevMarkerBoxCenter.x, point.box[Y + dir]));\n                            }\n                            result.push(new GeometryPoint(markerBoxCenter.x, point.box[Y + dir]));\n                            result.push(new GeometryPoint(markerBoxCenter.x, point.box[Y + revDir]));\n                        } else {\n                            result.push(new GeometryPoint(prevPoint.box[X + dir], prevMarkerBoxCenter.y));\n                            result.push(new GeometryPoint(prevPoint.box[X + revDir], prevMarkerBoxCenter.y));\n                            if (isInterpolate) {\n                                result.push(new GeometryPoint(point.box[X + dir], prevMarkerBoxCenter.y));\n                            }\n                            result.push(new GeometryPoint(point.box[X + dir], markerBoxCenter.y));\n                            result.push(new GeometryPoint(point.box[X + revDir], markerBoxCenter.y));\n                        }\n                    }\n                }\n                return result || [];\n            }\n        });\n        var SplineSegment = LineSegment.extend({\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new dataviz.CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesPoints = ref.seriesPoints;\n                var series = options.series;\n                var seriesCount = seriesPoints.length;\n                var lastSegment;\n                this._segments = [];\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var sortedPoints = this$1.sortPoints(seriesPoints[seriesIx]);\n                    var pointCount = sortedPoints.length;\n                    var linePoints = [];\n                    for (var pointIx = 0; pointIx < pointCount; pointIx++) {\n                        var point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (this$1.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this$1._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this$1._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues;\n                var assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimation = Animation.extend({\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(dataviz.interpolateValue(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        setDefaultOptions(ClipAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register('clip', ClipAnimation);\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.box;\n                    var clipPath = Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n                this.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var missingValues = this.seriesMissingValues(series);\n                var value = data.valueFields.value;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var this$1 = this;\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this$1.plotValue(other);\n                        if (this$1.options.isStacked100) {\n                            plotValue = Math.min(plotValue, 1);\n                        }\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(LineChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var AreaSegmentMixin = {\n            points: function () {\n                var chart = this.parent;\n                var plotArea = chart.plotArea;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var valueAxisLineBox = valueAxis.lineBox();\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var categoryAxisLineBox = categoryAxis.lineBox();\n                var stackPoints = this.stackPoints;\n                var points = this._linePoints(stackPoints);\n                var pos = invertAxes ? X : Y;\n                var end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!this.stackPoints && points.length > 1) {\n                    var firstPoint = points[0];\n                    var lastPoint = last(points);\n                    if (invertAxes) {\n                        points.unshift(new GeometryPoint(end, firstPoint.y));\n                        points.push(new GeometryPoint(end, lastPoint.y));\n                    } else {\n                        points.unshift(new GeometryPoint(firstPoint.x, end));\n                        points.push(new GeometryPoint(lastPoint.x, end));\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createArea(color);\n                this.createLine(color);\n            },\n            createLine: function (color) {\n                var series = this.series;\n                var lineOptions = deepExtend({\n                    color: color,\n                    opacity: series.opacity\n                }, series.line);\n                if (lineOptions.visible !== false && lineOptions.width > 0) {\n                    var line = Path.fromPoints(this._linePoints(), {\n                        stroke: {\n                            color: lineOptions.color,\n                            width: lineOptions.width,\n                            opacity: lineOptions.opacity,\n                            dashType: lineOptions.dashType,\n                            lineCap: 'butt'\n                        }\n                    });\n                    this.visual.append(line);\n                }\n            },\n            createArea: function (color) {\n                var series = this.series;\n                var area = Path.fromPoints(this.points(), {\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.visual.append(area);\n            }\n        };\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                LineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.stackPoints = stackPoints;\n            }\n        });\n        deepExtend(AreaSegment.prototype, AreaSegmentMixin, { _linePoints: LineSegment.prototype.points });\n        var StepAreaSegment = StepLineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                StepLineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.stackPoints = stackPoints;\n            }\n        });\n        deepExtend(StepAreaSegment.prototype, AreaSegmentMixin, { _linePoints: StepLineSegment.prototype.points });\n        var SplineAreaSegment = AreaSegment.extend({\n            init: function (linePoints, prevSegment, isStacked, currentSeries, seriesIx) {\n                AreaSegment.fn.init.call(this, linePoints, [], currentSeries, seriesIx);\n                this.prevSegment = prevSegment;\n                this.isStacked = isStacked;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var curveProcessor = new dataviz.CurveProcessor(this.options.closed);\n                    var linePoints = LineSegment.prototype.points.call(this);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                }\n                return segments;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.createStroke({\n                    stroke: deepExtend({\n                        color: color,\n                        opacity: series.opacity,\n                        lineCap: 'butt'\n                    }, series.line)\n                });\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var prevSegment = this.prevSegment;\n                if (this.isStacked && prevSegment) {\n                    var prevStrokeSegments = prevSegment.strokeSegments();\n                    var prevAnchor = last(prevStrokeSegments).anchor();\n                    fillSegments.push(new geometry.Segment(prevAnchor, prevAnchor, last(strokeSegments).anchor()));\n                    var stackSegments = [];\n                    for (var idx = prevStrokeSegments.length - 1; idx >= 0; idx--) {\n                        var segment = prevStrokeSegments[idx];\n                        stackSegments.push(new geometry.Segment(segment.anchor(), segment.controlOut(), segment.controlIn()));\n                    }\n                    append(fillSegments, stackSegments);\n                    var firstAnchor = fillSegments[0].anchor();\n                    fillSegments.push(new geometry.Segment(firstAnchor, firstAnchor, last(stackSegments).anchor()));\n                }\n                var fill = new Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                this.closeFill(fill);\n                this.visual.append(fill);\n            },\n            closeFill: function (fillPath) {\n                var chart = this.parent;\n                var prevSegment = this.prevSegment;\n                var plotArea = chart.plotArea;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var valueAxisLineBox = valueAxis.lineBox();\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var categoryAxisLineBox = categoryAxis.lineBox();\n                var pos = invertAxes ? X : Y;\n                var segments = this.strokeSegments();\n                var firstPoint = segments[0].anchor();\n                var lastPoint = last(segments).anchor();\n                var end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!(chart.options.isStacked && prevSegment) && segments.length > 1) {\n                    if (invertAxes) {\n                        fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                    } else {\n                        fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                    }\n                }\n            },\n            createStroke: function (style) {\n                if (style.stroke.width > 0) {\n                    var stroke = new Path(style);\n                    stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                    this.visual.append(stroke);\n                }\n            }\n        });\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var stackPoints;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues !== 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                    if (style !== STEP) {\n                        stackPoints = stackPoints.slice(0).reverse();\n                    }\n                }\n                if (style === SMOOTH) {\n                    return new SplineAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                }\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, stackPoints, currentSeries, seriesIx);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        var stackPoint = stackPoints[idx];\n                        var pointSlot = this$1.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var this$1 = this;\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var endIdx = startIdx + linePoints.length;\n                var stackPoints = [];\n                this._stackPoints = this._stackPoints || [];\n                for (var idx = startIdx; idx < endIdx; idx++) {\n                    var currentSeriesIx = seriesIx;\n                    var point = void 0;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][idx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && idx > startIdx && !seriesPoints[currentSeriesIx][idx - 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(idx, idx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && idx + 1 < endIdx && !seriesPoints[currentSeriesIx][idx + 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(idx, idx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        var gapStackPoint = this$1._createGapStackPoint(idx);\n                        this$1._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var index = seriesIdx;\n                var point;\n                while (index > 0 && !point) {\n                    index--;\n                    point = seriesPoints[index][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[index][categoryIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                this.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var axisRanges = this.axisRanges;\n                for (var axisName in chartAxisRanges) {\n                    var chartRange = chartAxisRanges[axisName];\n                    var range = axisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = Math.min(range.min, chartRange.min);\n                    range.max = Math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var BarLabel = ChartElement.extend({\n            init: function (content, options) {\n                ChartElement.fn.init.call(this, options);\n                this.textBox = new TextBox(content, this.options);\n                this.append(this.textBox);\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var aboveAxis = options.aboveAxis;\n                var text = this.children[0];\n                var textOptions = text.options;\n                var box = text.box;\n                var padding = text.options.padding;\n                var labelBox = targetBox;\n                textOptions.align = vertical ? CENTER : LEFT;\n                textOptions.vAlign = vertical ? TOP : CENTER;\n                if (options.position === INSIDE_END) {\n                    if (vertical) {\n                        textOptions.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            textOptions.vAlign = BOTTOM;\n                        }\n                    } else {\n                        textOptions.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position === CENTER) {\n                    textOptions.vAlign = CENTER;\n                    textOptions.align = CENTER;\n                } else if (options.position === INSIDE_BASE) {\n                    if (vertical) {\n                        textOptions.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        textOptions.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position === OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            labelBox = new Box(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        textOptions.align = CENTER;\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            labelBox = new Box(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (labelBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (labelBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(labelBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var vertical = this.options.vertical;\n                var field = vertical ? Y : X;\n                var start = field + '1';\n                var end = field + '2';\n                var text = this.children[0];\n                var parentBox = this.parent.box;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    var targetBox = text.paddingBox.clone();\n                    targetBox[start] = Math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = Math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        setDefaultOptions(BarLabel, {\n            position: OUTSIDE_END,\n            margin: getSpacing(3),\n            padding: getSpacing(4),\n            color: BLACK,\n            background: '',\n            border: {\n                width: 1,\n                color: ''\n            },\n            aboveAxis: true,\n            vertical: false,\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            zIndex: 2\n        });\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient !== 'none';\n        }\n        var BAR_ALIGN_MIN_WIDTH = 6;\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.options = options;\n                this.color = options.color || WHITE;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.value = value;\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                if (labels.visible) {\n                    var labelText;\n                    if (labels.template) {\n                        var labelTemplate = TemplateService.compile(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            series: this.series\n                        });\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, labels));\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                this.render();\n                var label = this.label;\n                this.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = this.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var options = ref.options;\n                var customVisual = options.visual;\n                if (this.visible !== false) {\n                    ChartElement.fn.createVisual.call(this);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            sender: this.getSender(),\n                            series: this.series,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        this.createRect(this.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    var overlay = this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay));\n                    visual.append(overlay);\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var color = this.color;\n                var border = this.options.border;\n                var brightness = border._brightness || BORDER_BRIGHTNESS;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var aboveAxis = ref.aboveAxis;\n                var clipBox = this.owner.pane.clipBox() || box;\n                var horizontalAlign = LEFT;\n                var verticalAlign = TOP;\n                var x, y;\n                if (options.vertical) {\n                    x = Math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n                    if (aboveAxis) {\n                        y = Math.max(box.y1, clipBox.y1);\n                    } else {\n                        y = Math.min(box.y2, clipBox.y2);\n                        verticalAlign = BOTTOM;\n                    }\n                } else {\n                    var x1 = Math.max(box.x1, clipBox.x1);\n                    var x2 = Math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        verticalAlign = BOTTOM;\n                        if (aboveAxis) {\n                            horizontalAlign = RIGHT;\n                            x = x2;\n                        } else {\n                            x = x1;\n                        }\n                        y = Math.max(box.y1, clipBox.y1) - TOOLTIP_OFFSET;\n                    } else {\n                        if (aboveAxis) {\n                            x = x2 + TOOLTIP_OFFSET;\n                        } else {\n                            x = x1 - TOOLTIP_OFFSET;\n                            horizontalAlign = RIGHT;\n                        }\n                        y = Math.max(box.y1, clipBox.y1);\n                    }\n                }\n                return {\n                    point: new Point(x, y),\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Bar.prototype, PointEventsMixin);\n        deepExtend(Bar.prototype, NoteMixin);\n        Bar.prototype.defaults = {\n            border: { width: 1 },\n            vertical: true,\n            overlay: { gradient: 'glass' },\n            labels: {\n                visible: false,\n                format: '{0}'\n            },\n            opacity: 1,\n            notes: { label: {} }\n        };\n        var ClusterLayout = ChartElement.extend({\n            reflow: function (box) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var gap = ref.gap;\n                var spacing = ref.spacing;\n                var children = this.children;\n                var count = children.length;\n                var axis = vertical ? Y : X;\n                var slots = count + gap + spacing * (count - 1);\n                var slotSize = (vertical ? box.height() : box.width()) / slots;\n                var position = box[axis + 1] + slotSize * (gap / 2);\n                for (var i = 0; i < count; i++) {\n                    var childBox = (children[i].box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    children[i].reflow(childBox);\n                    if (i < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                }\n            }\n        });\n        setDefaultOptions(ClusterLayout, {\n            vertical: false,\n            gap: 0,\n            spacing: 0\n        });\n        var StackWrap = ChartElement.extend({\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var positionAxis = this.options.vertical ? X : Y;\n                var children = this.children;\n                var childrenCount = children.length;\n                var box = this.box = new Box();\n                for (var i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i];\n                    if (currentChild.visible !== false) {\n                        var childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this$1.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        setDefaultOptions(StackWrap, { vertical: true });\n        var BarChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var isStacked = options.isStacked;\n                var value = this.pointValue(data);\n                var pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position === OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var pointType = this.pointType();\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    var clusterType = this.clusterType();\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = this.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === datavizConstants.STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var options = this.options;\n                var categorySlot = categoryAxis.getSlot(categoryIx);\n                var startValue = valueAxis.startValue();\n                if (options.isStacked) {\n                    var zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    var stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                CategoricalChart.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    var pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this$1.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new GeometryPoint(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        setDefaultOptions(BarChart, { animation: { type: BAR } });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var ocSlot = valueAxis.getSlot(value.open, value.close);\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                this.realBody = ocSlot;\n                var mid = lhSlot.center().x;\n                var points = [];\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                this.lines = points;\n                this.box = lhSlot.clone().wrap(ocSlot);\n                if (!this._rendered) {\n                    this._rendered = true;\n                    this.createNote();\n                }\n                this.reflowNote();\n            },\n            reflowNote: function () {\n                if (this.note) {\n                    this.note.reflow(this.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var border = this.options.border;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(this.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                var clipBox = this.owner.pane.clipBox() || box;\n                return {\n                    point: new Point(box.x2 + TOOLTIP_OFFSET, Math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET),\n                    align: {\n                        horizontal: LEFT,\n                        vertical: TOP\n                    }\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        setDefaultOptions(Candlestick, {\n            vertical: true,\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{4:d}</th></tr>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            }\n        });\n        deepExtend(Candlestick.prototype, PointEventsMixin);\n        deepExtend(Candlestick.prototype, NoteMixin);\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        var CandlestickChart = CategoricalChart.extend({\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var pointType = this.pointType();\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var color = data.fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type === CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.vertical = !this.options.invertAxes;\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var parts = this.splitValue(value);\n                var axisRange = this.valueAxisRanges[axisName];\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.prototype, ClipAnimationMixin);\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                Candlestick.fn.init.call(this, value, options);\n                this.createNote();\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var whiskerSlot, boxSlot;\n                this.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                this.realBody = boxSlot;\n                this.reflowBoxSlot(box);\n                this.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                this.reflowWhiskerSlot(box);\n                var medianSlot = valueAxis.getSlot(value.median);\n                if (value.mean) {\n                    var meanSlot = valueAxis.getSlot(value.mean);\n                    this.meanPoints = this.calcMeanPoints(box, meanSlot);\n                }\n                this.whiskerPoints = this.calcWhiskerPoints(boxSlot, whiskerSlot);\n                this.medianPoints = this.calcMedianPoints(box, medianSlot);\n                this.box = whiskerSlot.clone().wrap(boxSlot);\n                this.reflowNote();\n            },\n            reflowBoxSlot: function (box) {\n                this.boxSlot.x1 = box.x1;\n                this.boxSlot.x2 = box.x2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.x1 = box.x1;\n                this.whiskerSlot.x2 = box.x2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            box.x1,\n                            meanSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            meanSlot.y1\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().x;\n                return [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n            },\n            renderOutliers: function (options) {\n                var this$1 = this;\n                var value = this.value;\n                var outliers = value.outliers || [];\n                var outerFence = Math.abs(value.q3 - value.q1) * 3;\n                var elements = [];\n                var markers = options.markers || {};\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    var markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(this$1.color)) {\n                            markersBorder.color = this$1.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    var shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var this$1 = this;\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var center = this.box.center();\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue);\n                    if (this$1.options.vertical) {\n                        markerBox.move(center.x);\n                    } else {\n                        markerBox.move(undefined, center.y);\n                    }\n                    this$1.box = this$1.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.whiskers);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.fn.getBorderColor.call(this);\n            }\n        });\n        setDefaultOptions(BoxPlot, {\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            median: { color: '#f6f6f6' },\n            mean: {\n                width: 2,\n                dashType: 'dash',\n                color: '#f6f6f6'\n            },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{6:d}</th></tr>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            },\n            outliers: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: datavizConstants.CROSS,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            },\n            extremes: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            }\n        });\n        deepExtend(BoxPlot.prototype, PointEventsMixin);\n        var VerticalBoxPlot = BoxPlot.extend({\n            reflowBoxSlot: function (box) {\n                this.boxSlot.y1 = box.y1;\n                this.boxSlot.y2 = box.y2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.y1 = box.y1;\n                this.whiskerSlot.y2 = box.y2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            meanSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            meanSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().y;\n                return [\n                    [\n                        [\n                            whiskerSlot.x1,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid\n                        ],\n                        [\n                            boxSlot.x1,\n                            mid\n                        ]\n                    ],\n                    [\n                        [\n                            whiskerSlot.x2,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid\n                        ],\n                        [\n                            boxSlot.x2,\n                            mid\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            medianSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            medianSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                if (this.options.invertAxes) {\n                    return VerticalBoxPlot;\n                }\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                var parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length;\n                var result = [];\n                for (var i = 0; i < length; i++) {\n                    var item = items[i];\n                    if (defined(item) && item !== null) {\n                        result.push(item);\n                    }\n                }\n                return result;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axes = this.chart.seriesAxes(this.series);\n                var axis = this.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this._initFields();\n                this.render();\n            },\n            _initFields: function () {\n                this.xAxisRanges = {};\n                this.yAxisRanges = {};\n                this.points = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            addErrorBar: function (point, field, fields) {\n                var value = point.value[field];\n                var valueErrorField = field + 'Value';\n                var lowField = field + 'ErrorLow';\n                var highField = field + 'ErrorHigh';\n                var seriesIx = fields.seriesIx;\n                var series = fields.series;\n                var errorBars = point.options.errorBars;\n                var lowValue = fields[lowField];\n                var highValue = fields[highField];\n                if (isNumber(value)) {\n                    var errorRange;\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        this.seriesErrorRanges = this.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        this.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var low = errorRange.low;\n                var high = errorRange.high;\n                var series = point.series;\n                var options = point.options.errorBars;\n                var isVertical = field === Y;\n                var item = {};\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                var errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                this.updateRange(item, series);\n                item[field] = high;\n                this.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var x = value.x;\n                var y = value.y;\n                var seriesIx = fields.seriesIx;\n                var series = this.options.series[seriesIx];\n                var missingValues = this.seriesMissingValues(series);\n                var seriesPoints = this.seriesPoints[seriesIx];\n                var pointValue = value;\n                if (!(hasValue(x) && hasValue(y))) {\n                    pointValue = this.createMissingValue(pointValue, missingValues);\n                }\n                var point;\n                if (pointValue) {\n                    point = this.createPoint(pointValue, fields);\n                    if (point) {\n                        $.extend(point, fields);\n                        this.addErrorBar(point, X, fields);\n                        this.addErrorBar(point, Y, fields);\n                    }\n                    this.updateRange(pointValue, fields.series);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: function () {\n            },\n            updateRange: function (value, series) {\n                var intlService = this.chartService.intl;\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var x = value.x;\n                var y = value.y;\n                var xAxisRange = this.xAxisRanges[xAxisName];\n                var yAxisRange = this.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = this.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(x)) {\n                        x = parseDate(intlService, x);\n                    }\n                    xAxisRange.min = Math.min(xAxisRange.min, x);\n                    xAxisRange.max = Math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = this.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(y)) {\n                        y = parseDate(intlService, y);\n                    }\n                    yAxisRange.min = Math.min(yAxisRange.min, y);\n                    yAxisRange.max = Math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, options);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return pointOptions;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var plotArea = this.plotArea;\n                var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n                var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var chartPoints = this.points;\n                var limit = !this.options.clip;\n                var pointIx = 0;\n                this.traverseDataPoints(function (value, fields) {\n                    var point = chartPoints[pointIx++];\n                    var seriesAxes = this$1.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n                    var slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n                    if (point) {\n                        if (slotX && slotY) {\n                            var pointSlot = this$1.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var seriesPoints = ref.seriesPoints;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                        var value = ref$1.valueFields;\n                        var fields = ref$1.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: this$1\n                        }, fields));\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        setDefaultOptions(ScatterChart, {\n            series: [],\n            tooltip: { format: '{0}, {1}' },\n            labels: { format: '{0}, {1}' },\n            clip: true\n        });\n        deepExtend(ScatterChart.prototype, ClipAnimationMixin, { _bindPoint: CategoricalChart.prototype._bindPoint });\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                LinePoint.fn.init.call(this, value, options);\n                this.category = value.category;\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = (markers.size + markers.border.width + border.width) / 2;\n                var highlightGroup = new Group();\n                var shadow = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y + radius / 5 + border.width / 2\n                ], radius + border.width / 2), {\n                    stroke: { color: 'none' },\n                    fill: this.createGradient({\n                        gradient: 'bubbleShadow',\n                        color: markers.background,\n                        stops: [\n                            {\n                                offset: 0,\n                                color: markers.background,\n                                opacity: 0.3\n                            },\n                            {\n                                offset: 1,\n                                color: markers.background,\n                                opacity: 0\n                            }\n                        ]\n                    })\n                });\n                var overlay = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                highlightGroup.append(shadow, overlay);\n                return highlightGroup;\n            }\n        });\n        Bubble.prototype.defaults = deepExtend({}, Bubble.prototype.defaults, {\n            labels: { position: CENTER },\n            highlight: {\n                opacity: 1,\n                border: {\n                    color: '#fff',\n                    width: 2,\n                    opacity: 1\n                }\n            }\n        });\n        var BubbleChart = ScatterChart.extend({\n            _initFields: function () {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn._initFields.call(this);\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = Math.max(this._maxSize, Math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                this.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(this, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointsCount = series.data.length;\n                var delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount);\n                var animationOptions = {\n                    delay: delay,\n                    duration: INITIAL_ANIMATION_DURATION - delay,\n                    type: BUBBLE\n                };\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                var pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                var point = new Bubble(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var boxSize = Math.min(box.width(), box.height());\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesPoints = this$1.seriesPoints[seriesIx];\n                    var minSize = currentSeries.minSize || Math.max(boxSize * 0.02, 10);\n                    var maxSize = currentSeries.maxSize || boxSize * 0.2;\n                    var minR = minSize / 2;\n                    var maxR = maxSize / 2;\n                    var minArea = Math.PI * minR * minR;\n                    var maxArea = Math.PI * maxR * maxR;\n                    var areaRange = maxArea - minArea;\n                    var areaRatio = areaRange / this$1._maxSize;\n                    for (var pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = Math.abs(point.value.size) * areaRatio;\n                            var radius = Math.sqrt((minArea + area) / Math.PI);\n                            var baseZIndex = valueOrDefault(point.options.zIndex, 0);\n                            var zIndex = baseZIndex + (1 - radius / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: radius * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: function () {\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(BubbleChart, {\n            tooltip: { format: '{3}' },\n            labels: { format: '{3}' }\n        });\n        var Target = ShapeElement.extend({});\n        deepExtend(Target.prototype, PointEventsMixin);\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.aboveAxis = this.options.aboveAxis;\n                this.color = options.color || WHITE;\n                this.value = value;\n            },\n            render: function () {\n                var options = this.options;\n                if (!this._rendered) {\n                    this._rendered = true;\n                    if (defined(this.value.target)) {\n                        this.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || this.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        this.target.value = this.value;\n                        this.target.dataItem = this.dataItem;\n                        this.target.series = this.series;\n                        this.append(this.target);\n                    }\n                    this.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var ref = this;\n                var options = ref.options;\n                var target = ref.target;\n                var chart = ref.owner;\n                var invertAxes = options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.options);\n                var categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis);\n                var targetValueSlot = valueAxis.getSlot(this.value.target);\n                var targetSlotX = invertAxes ? targetValueSlot : categorySlot;\n                var targetSlotY = invertAxes ? categorySlot : targetValueSlot;\n                if (target) {\n                    var targetSlot = new Box(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (this.note) {\n                    this.note.reflow(box);\n                }\n                this.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            createHighlight: function (style) {\n                return Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        Bullet.prototype.tooltipAnchor = Bar.prototype.tooltipAnchor;\n        setDefaultOptions(Bullet, {\n            border: { width: 1 },\n            vertical: false,\n            opacity: 1,\n            target: {\n                shape: '',\n                border: {\n                    width: 0,\n                    color: 'green'\n                },\n                line: { width: 2 }\n            },\n            tooltip: { format: 'Current: {0}<br />Target: {1}' }\n        });\n        deepExtend(Bullet.prototype, PointEventsMixin);\n        deepExtend(Bullet.prototype, NoteMixin);\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                wrapData(options);\n                CategoricalChart.fn.init.call(this, plotArea, options);\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var value = data.valueFields;\n                var bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = this.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                var bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var current = value.current;\n                var target = value.target;\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, current, target);\n                    axisRange.max = Math.max(axisRange.max, current, target);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    point.options.animation = this$1.options.animation;\n                    point.createAnimation();\n                }\n            }\n        });\n        BulletChart.prototype._setAnimationOptions = BarChart.prototype._setAnimationOptions;\n        setDefaultOptions(BulletChart, { animation: { type: BAR } });\n        function wrapData(options) {\n            var series = options.series;\n            for (var i = 0; i < series.length; i++) {\n                var seriesItem = series[i];\n                var data = seriesItem.data;\n                if (data && !isArray(data[0]) && !isObject(data[0])) {\n                    seriesItem.data = [data];\n                }\n            }\n        }\n        var BaseTooltip = Class.extend({\n            init: function (chartService, options) {\n                this.chartService = chartService;\n                this.options = deepExtend({}, this.options, options);\n            },\n            getStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                var padding = getSpacing(options.padding || {}, 'auto');\n                return {\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: styleValue(options.border.width),\n                    paddingTop: styleValue(padding.top),\n                    paddingBottom: styleValue(padding.bottom),\n                    paddingLeft: styleValue(padding.left),\n                    paddingRight: styleValue(padding.right)\n                };\n            },\n            show: function (options, tooltipOptions, point) {\n                options.format = tooltipOptions.format;\n                var style = this.getStyle(tooltipOptions, point);\n                options.style = style;\n                if (!defined(tooltipOptions.color) && new Color(style.backgroundColor).percBrightness() > 180) {\n                    options.className = 'k-chart-tooltip-inverse';\n                }\n                this.chartService.notify(SHOW_TOOLTIP, options);\n            },\n            hide: function () {\n                this.chartService.notify(HIDE_TOOLTIP);\n            },\n            destroy: function () {\n                delete this.chartService;\n            }\n        });\n        setDefaultOptions(BaseTooltip, {\n            border: { width: 1 },\n            opacity: 1\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (chartService, crosshair, options) {\n                BaseTooltip.fn.init.call(this, chartService, options);\n                this.crosshair = crosshair;\n                this.formatService = chartService.format;\n                this.initAxisName();\n            },\n            initAxisName: function () {\n                var axis = this.crosshair.axis;\n                var plotArea = axis.plotArea;\n                var name;\n                if (plotArea.categoryAxis) {\n                    name = axis.getCategory ? 'categoryAxis' : 'valueAxis';\n                } else {\n                    name = axis.options.vertical ? 'yAxis' : 'xAxis';\n                }\n                this.axisName = name;\n            },\n            showAt: function (point) {\n                var ref = this;\n                var axis = ref.crosshair.axis;\n                var options = ref.options;\n                var value = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                var formattedValue = value;\n                if (options.format) {\n                    formattedValue = this.formatService.auto(options.format, value);\n                } else if (axis.options.type === DATE) {\n                    formattedValue = this.formatService.auto(axis.options.labels.dateFormats[axis.options.baseUnit], value);\n                }\n                this.show({\n                    point: point,\n                    anchor: this.getAnchor(),\n                    crosshair: this.crosshair,\n                    value: formattedValue,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                }, this.options);\n            },\n            hide: function () {\n                this.chartService.notify(HIDE_TOOLTIP, {\n                    crosshair: this.crosshair,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                });\n            },\n            getAnchor: function () {\n                var ref = this;\n                var crosshair = ref.crosshair;\n                var ref_options = ref.options;\n                var position = ref_options.position;\n                var padding = ref_options.padding;\n                var vertical = !crosshair.axis.options.vertical;\n                var lineBox = crosshair.line.bbox();\n                var horizontalAlign, verticalAlign, point;\n                if (vertical) {\n                    horizontalAlign = CENTER;\n                    if (position === BOTTOM) {\n                        verticalAlign = TOP;\n                        point = lineBox.bottomLeft().translate(0, padding);\n                    } else {\n                        verticalAlign = BOTTOM;\n                        point = lineBox.topLeft().translate(0, -padding);\n                    }\n                } else {\n                    verticalAlign = CENTER;\n                    if (position === LEFT) {\n                        horizontalAlign = RIGHT;\n                        point = lineBox.topLeft().translate(-padding, 0);\n                    } else {\n                        horizontalAlign = LEFT;\n                        point = lineBox.topRight().translate(padding, 0);\n                    }\n                }\n                return {\n                    point: point,\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            }\n        });\n        setDefaultOptions(CrosshairTooltip, { padding: 10 });\n        var Crosshair = ChartElement.extend({\n            init: function (chartService, axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    this.tooltip = new CrosshairTooltip(chartService, this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                if (this.tooltip) {\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var ref = this;\n                var axis = ref.axis;\n                var point = ref.point;\n                var vertical = axis.options.vertical;\n                var box = this.getBox();\n                var dim = vertical ? Y : X;\n                var lineStart = new GeometryPoint(box.x1, box.y1);\n                var lineEnd;\n                if (vertical) {\n                    lineEnd = new GeometryPoint(box.x2, box.y1);\n                } else {\n                    lineEnd = new GeometryPoint(box.x1, box.y2);\n                }\n                if (point) {\n                    if (this.stickyMode) {\n                        var slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                this.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var axis = this.axis;\n                var axes = axis.pane.axes;\n                var length = axes.length;\n                var vertical = axis.options.vertical;\n                var box = axis.lineBox().clone();\n                var dim = vertical ? X : Y;\n                var axisLineBox;\n                for (var i = 0; i < length; i++) {\n                    var currentAxis = axes[i];\n                    if (currentAxis.options.vertical !== vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                if (this.tooltip) {\n                    this.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(this);\n            }\n        });\n        setDefaultOptions(Crosshair, {\n            color: BLACK,\n            width: 2,\n            zIndex: -1,\n            tooltip: { visible: false }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                ChartElement.fn.init.call(this, options);\n                this.pane = pane;\n            },\n            shouldClip: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                return this.pane.chartsBox();\n            },\n            createVisual: function () {\n                this.visual = new Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = Path.fromRect(clipRect);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            unclipLabels: function () {\n                var ref = this;\n                var charts = ref.children;\n                var clipBox = ref.clipBox;\n                for (var i = 0; i < charts.length; i++) {\n                    var points = charts[i].points || {};\n                    var length = points.length;\n                    for (var j = 0; j < length; j++) {\n                        var point = points[j];\n                        if (point && point.overlapsBox && point.overlapsBox(clipBox)) {\n                            var label = point.label;\n                            var note = point.note;\n                            if (label && label.options.visible) {\n                                if (label.alignToClipBox) {\n                                    label.alignToClipBox(clipBox);\n                                }\n                                label.options.noclip = true;\n                            }\n                            if (note && note.options.visible) {\n                                note.options.noclip = true;\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        ChartContainer.prototype.isStackRoot = true;\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.id = paneID();\n                this.createTitle();\n                this.content = new ChartElement();\n                this.chartContainer = new ChartContainer({}, this);\n                this.append(this.content);\n                this.axes = [];\n                this.charts = [];\n            },\n            createTitle: function () {\n                var titleOptions = this.options.title;\n                if (isObject(titleOptions)) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                this.title = dataviz.Title.buildTitle(titleOptions, this, Pane.prototype.options.title);\n            },\n            appendAxis: function (axis) {\n                this.content.append(axis);\n                this.axes.push(axis);\n                axis.pane = this;\n            },\n            appendChart: function (chart) {\n                if (this.chartContainer.parent !== this.content) {\n                    this.content.append(this.chartContainer);\n                }\n                this.charts.push(chart);\n                this.chartContainer.append(chart);\n                chart.pane = this;\n            },\n            empty: function () {\n                var this$1 = this;\n                var plotArea = this.parent;\n                if (plotArea) {\n                    for (var i = 0; i < this.axes.length; i++) {\n                        plotArea.removeAxis(this$1.axes[i]);\n                    }\n                    for (var i$1 = 0; i$1 < this.charts.length; i$1++) {\n                        plotArea.removeChart(this$1.charts[i$1]);\n                    }\n                }\n                this.axes = [];\n                this.charts = [];\n                this.content.destroy();\n                this.content.children = [];\n                this.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var content;\n                if (last(this.children) === this.content) {\n                    content = this.children.pop();\n                }\n                BoxElement.fn.reflow.call(this, targetBox);\n                if (content) {\n                    this.children.push(content);\n                }\n                if (this.title) {\n                    this.contentBox.y1 += this.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            clipRoot: function () {\n                return this;\n            },\n            createGridLines: function () {\n                var axes = this.axes;\n                var allAxes = axes.concat(this.parent.axes);\n                var vGridLines = [];\n                var hGridLines = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var vertical = axis.options.vertical;\n                    var gridLines = vertical ? vGridLines : hGridLines;\n                    for (var j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            var altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = this.createGradient.bind(this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n            },\n            chartsBox: function () {\n                var axes = this.axes;\n                var length = axes.length;\n                var chartsBox = new Box();\n                for (var idx = 0; idx < length; idx++) {\n                    var axis = axes[idx];\n                    var axisValueField = axis.options.vertical ? Y : X;\n                    var lineBox = axis.lineBox();\n                    chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                if (chartsBox.x2 === 0) {\n                    var allAxes = this.parent.axes;\n                    var length$1 = allAxes.length;\n                    for (var idx$1 = 0; idx$1 < length$1; idx$1++) {\n                        var axis$1 = allAxes[idx$1];\n                        if (!axis$1.options.vertical) {\n                            var lineBox$1 = axis$1.lineBox();\n                            chartsBox.x1 = lineBox$1.x1;\n                            chartsBox.x2 = lineBox$1.x2;\n                        }\n                    }\n                }\n                return chartsBox;\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            }\n        });\n        var ID = 1;\n        function paneID() {\n            return 'pane' + ID++;\n        }\n        Pane.prototype.isStackRoot = true;\n        setDefaultOptions(Pane, {\n            zIndex: -1,\n            shrinkToFit: true,\n            title: { align: LEFT },\n            visible: true\n        });\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.initFields(series, options);\n                this.series = series;\n                this.initSeries();\n                this.charts = [];\n                this.options.legend.items = [];\n                this.axes = [];\n                this.crosshairs = [];\n                this.chartService = chartService;\n                this.createPanes();\n                this.render();\n                this.createCrosshairs();\n            },\n            initFields: function () {\n            },\n            initSeries: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    series[i].index = i;\n                }\n            },\n            createPanes: function () {\n                var this$1 = this;\n                var defaults = { title: { color: (this.options.title || {}).color } };\n                var panes = [];\n                var paneOptions = this.options.panes || [];\n                var panesLength = Math.max(paneOptions.length, 1);\n                function setTitle(options, defaults) {\n                    if (isString(options.title)) {\n                        options.title = { text: options.title };\n                    }\n                    options.title = deepExtend({}, defaults.title, options.title);\n                }\n                for (var i = 0; i < panesLength; i++) {\n                    var options = paneOptions[i] || {};\n                    setTitle(options, defaults);\n                    var currentPane = new Pane(options);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    this$1.append(currentPane);\n                }\n                this.panes = panes;\n            },\n            createCrosshairs: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    for (var j = 0; j < pane.axes.length; j++) {\n                        var axis = pane.axes[j];\n                        if (axis.options.crosshair && axis.options.crosshair.visible) {\n                            var currentCrosshair = new Crosshair(this$1.chartService, axis, axis.options.crosshair);\n                            this$1.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var crosshairs = this.crosshairs;\n                var axes = pane.axes;\n                for (var i = crosshairs.length - 1; i >= 0; i--) {\n                    for (var j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var pane = this.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                this.axes.push(axis);\n                axis.plotArea = this;\n            },\n            removeAxis: function (axisToRemove) {\n                var this$1 = this;\n                var filteredAxes = [];\n                for (var i = 0; i < this.axes.length; i++) {\n                    var axis = this$1.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                this.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                this.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    this.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var this$1 = this;\n                var filteredCharts = [];\n                for (var i = 0; i < this.charts.length; i++) {\n                    var chart = this$1.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                this.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length;\n                var legend = this.options.legend;\n                var labels = legend.labels || {};\n                var inactiveItems = legend.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                var data = [];\n                for (var i = 0; i < count; i++) {\n                    var currentSeries = series[i];\n                    var seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    var text = currentSeries.name || '';\n                    var labelTemplate = seriesVisible ? labels.template : inactiveItemsLabels.template || labels.template;\n                    if (labelTemplate) {\n                        text = TemplateService.compile(labelTemplate)({\n                            text: text,\n                            series: currentSeries\n                        });\n                    }\n                    var defaults = currentSeries._defaults;\n                    var color = currentSeries.color;\n                    if (isFunction(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    var itemLabelOptions = void 0, markerColor = void 0;\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (text) {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [];\n                var yAxes = [];\n                for (var paneIx = 0; paneIx < panes.length; paneIx++) {\n                    var paneAxes = panes[paneIx].axes;\n                    for (var axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        var axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var this$1 = this;\n                var series = this.series;\n                var seriesByPane = {};\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var pane = this$1.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var result = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var options = this.options.plotArea;\n                var panes = this.panes;\n                var margin = getSpacing(options.margin);\n                this.box = targetBox.clone().unpad(margin);\n                this.reflowPanes();\n                this.reflowAxes(panes);\n                this.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var this$1 = this;\n                var panesArray = [].concat(panes);\n                this.initSeries();\n                for (var i = 0; i < panesArray.length; i++) {\n                    this$1.removeCrosshairs(panesArray[i]);\n                    panesArray[i].empty();\n                }\n                this.render(panesArray);\n                this.reflowAxes(this.panes);\n                this.reflowCharts(panesArray);\n                this.createCrosshairs(panesArray);\n                for (var i$1 = 0; i$1 < panesArray.length; i$1++) {\n                    panesArray[i$1].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                var valuesToAdd = crossingAxes.length - crossingValues.length;\n                var defaultValue = crossingValues[0] || 0;\n                for (var i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true);\n                var slotEdge = axis.options.reverse ? 2 : 1;\n                var targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true);\n                var targetEdge = targetAxis.options.reverse ? 2 : 1;\n                var axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var this$1 = this;\n                var xAnchor = xAxes[0];\n                var yAnchor = yAxes[0];\n                var xAnchorCrossings = this.axisCrossingValues(xAnchor, yAxes);\n                var yAnchorCrossings = this.axisCrossingValues(yAnchor, xAxes);\n                var leftAnchors = {};\n                var rightAnchors = {};\n                var topAnchors = {};\n                var bottomAnchors = {};\n                for (var i = 0; i < yAxes.length; i++) {\n                    var axis = yAxes[i];\n                    var pane = axis.pane;\n                    var paneId = pane.id;\n                    var anchor = paneAnchor(xAxes, pane) || xAnchor;\n                    var anchorCrossings = xAnchorCrossings;\n                    if (anchor !== xAnchor) {\n                        anchorCrossings = this$1.axisCrossingValues(anchor, yAxes);\n                    }\n                    this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        leftAnchors[paneId] = axis;\n                    }\n                    if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        rightAnchors[paneId] = axis;\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (var i$1 = 0; i$1 < xAxes.length; i$1++) {\n                    var axis$1 = xAxes[i$1];\n                    var pane$1 = axis$1.pane;\n                    var paneId$1 = pane$1.id;\n                    var anchor$1 = paneAnchor(yAxes, pane$1) || yAnchor;\n                    var anchorCrossings$1 = yAnchorCrossings;\n                    if (anchor$1 !== yAnchor) {\n                        anchorCrossings$1 = this$1.axisCrossingValues(anchor$1, xAxes);\n                    }\n                    this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                    if (axis$1.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis$1.lineBox().y1) === round(anchor$1.lineBox().y1)) {\n                        if (!axis$1._mirrored) {\n                            axis$1.options.labels.mirror = !axis$1.options.labels.mirror;\n                            axis$1._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                        if (topAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(topAnchors[paneId$1].box, TOP).translate(0, -axis$1.options.margin));\n                        }\n                        topAnchors[paneId$1] = axis$1;\n                    }\n                    if (round(axis$1.lineBox().y2, datavizConstants.COORD_PRECISION) === round(anchor$1.lineBox().y2, datavizConstants.COORD_PRECISION)) {\n                        if (bottomAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(bottomAnchors[paneId$1].box, BOTTOM).translate(0, axis$1.options.margin));\n                        }\n                        bottomAnchors[paneId$1] = axis$1;\n                    }\n                    if (i$1 !== 0) {\n                        axis$1.alignTo(xAnchor);\n                        axis$1.reflow(axis$1.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var axisBox = axisGroupBox(axes);\n                var overflowX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = Math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                        var currentAxis = axes[i$1];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var shrinked;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var axes = currentPane.axes;\n                    var overflowY = Math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (var j = 0; j < axes.length; j++) {\n                            var currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var offsetX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var paneAxes = currentPane.axes;\n                    var paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        var axisBox = axisGroupBox(paneAxes);\n                        var offsetY = Math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        offsetX = Math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        for (var j = 0; j < paneAxes.length; j++) {\n                            var currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                    var currentAxis$1 = axes[i$1];\n                    currentAxis$1.reflow(currentAxis$1.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var this$1 = this;\n                var axes = this.groupAxes(panes);\n                for (var i = 0; i < panes.length; i++) {\n                    this$1.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    this.alignAxes(axes.x, axes.y);\n                    this.shrinkAxisWidth(panes);\n                    this.autoRotateAxisLabels(axes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisWidth(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.shrinkAxisHeight(panes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisHeight(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref.axes;\n                var panes = ref.panes;\n                var rotated;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (var idx$1 = 0; idx$1 < panes.length; idx$1++) {\n                        this$1.reflowPaneAxes(panes[idx$1]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes;\n                var length = axes.length;\n                if (length > 0) {\n                    for (var i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var charts = this.charts;\n                var count = charts.length;\n                var box = this.box;\n                for (var i = 0; i < count; i++) {\n                    var chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var ref = this;\n                var box = ref.box;\n                var panes = ref.panes;\n                var panesLength = panes.length;\n                var remainingHeight = box.height();\n                var remainingPanes = panesLength;\n                var autoHeightPanes = 0;\n                var top = box.y1;\n                for (var i = 0; i < panesLength; i++) {\n                    var currentPane = panes[i];\n                    var height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            var percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (var i$1 = 0; i$1 < panesLength; i$1++) {\n                    var currentPane$1 = panes[i$1];\n                    if (!currentPane$1.options.height) {\n                        currentPane$1.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (var i$2 = 0; i$2 < panesLength; i$2++) {\n                    var currentPane$2 = panes[i$2];\n                    var paneBox = box.clone().move(box.x1, top);\n                    currentPane$2.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane$2.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var axes = this.axes;\n                var axesCount = axes.length;\n                var box;\n                for (var i = 0; i < axesCount; i++) {\n                    var axisA = axes[i];\n                    for (var j = 0; j < axesCount; j++) {\n                        var axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            var lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || this.box;\n            },\n            chartsBoxes: function () {\n                var panes = this.panes;\n                var boxes = [];\n                for (var idx = 0; idx < panes.length; idx++) {\n                    boxes.push(panes[idx].chartsBox());\n                }\n                return boxes;\n            },\n            addBackgroundPaths: function (multipath) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    multipath.paths.push(Path.fromRect(boxes[idx].toRect()));\n                }\n            },\n            backgroundContainsPoint: function (point) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    if (boxes[idx].containsPoint(point)) {\n                        return true;\n                    }\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options.plotArea;\n                var opacity = options.opacity;\n                var background = options.background;\n                var border = options.border;\n                if (border === void 0) {\n                    border = {};\n                }\n                if (isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = new drawing.MultiPath({\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.addBackgroundPaths(bg);\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts;\n                var result = [];\n                if (categoryIndex !== null) {\n                    for (var i = 0; i < charts.length; i++) {\n                        var chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        var points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (var j = 0; j < points.length; j++) {\n                                var point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                return this.filterPoints(function (point) {\n                    return point.series.index === seriesIndex;\n                });\n            },\n            pointsBySeriesName: function (name) {\n                return this.filterPoints(function (point) {\n                    return point.series.name === name;\n                });\n            },\n            filterPoints: function (callback) {\n                var charts = this.charts;\n                var result = [];\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && callback(point)) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            findPoint: function (callback) {\n                var charts = this.charts;\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && callback(point)) {\n                            return point;\n                        }\n                    }\n                }\n            },\n            paneByPoint: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            }\n        });\n        function axisGroupBox(axes) {\n            var length = axes.length;\n            var box;\n            if (length > 0) {\n                for (var i = 0; i < length; i++) {\n                    var axisBox = axes[i].contentBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || new Box();\n        }\n        function paneAnchor(axes, pane) {\n            for (var i = 0; i < axes.length; i++) {\n                var anchor = axes[i];\n                if (anchor && anchor.pane === pane) {\n                    return anchor;\n                }\n            }\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        setDefaultOptions(PlotAreaBase, {\n            series: [],\n            plotArea: { margin: {} },\n            background: '',\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            legend: {\n                inactiveItems: {\n                    labels: { color: '#919191' },\n                    markers: { color: '#919191' }\n                }\n            }\n        });\n        var PlotAreaEventsMixin = {\n            hover: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n            },\n            click: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n            }\n        };\n        var SeriesAggregator = Class.extend({\n            init: function (series, binder, defaultAggregates) {\n                var canonicalFields = binder.canonicalFields(series);\n                var valueFields = binder.valueFields(series);\n                var sourceFields = binder.sourceFields(series, canonicalFields);\n                var seriesFields = this._seriesFields = [];\n                var defaults = defaultAggregates.query(series.type);\n                var rootAggregate = series.aggregate || defaults;\n                this._series = series;\n                this._binder = binder;\n                for (var i = 0; i < canonicalFields.length; i++) {\n                    var field = canonicalFields[i];\n                    var fieldAggregate = void 0;\n                    if (isObject(rootAggregate)) {\n                        fieldAggregate = rootAggregate[field];\n                    } else if (i === 0 || inArray(field, valueFields)) {\n                        fieldAggregate = rootAggregate;\n                    } else {\n                        break;\n                    }\n                    if (fieldAggregate) {\n                        seriesFields.push({\n                            canonicalName: field,\n                            name: sourceFields[i],\n                            transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                        });\n                    }\n                }\n            },\n            aggregatePoints: function (srcPoints, group) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref._series;\n                var seriesFields = ref._seriesFields;\n                var data = this._bindPoints(srcPoints || []);\n                var firstDataItem = data.dataItems[0];\n                var result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (var i = 0; i < seriesFields.length; i++) {\n                    var field = seriesFields[i];\n                    var srcValues = this$1._bindField(data.values, field.canonicalName);\n                    var value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            setValue(field.name, result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var ref = this;\n                var binder = ref._binder;\n                var series = ref._series;\n                var values = [];\n                var dataItems = [];\n                for (var i = 0; i < points.length; i++) {\n                    var pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [];\n                var count = data.length;\n                for (var i = 0; i < count; i++) {\n                    var item = data[i];\n                    var valueFields = item.valueFields;\n                    var value = void 0;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        });\n        function setValue(fieldName, target, value) {\n            var parentObj = target;\n            var field = fieldName;\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.');\n                while (parts.length > 1) {\n                    field = parts.shift();\n                    if (!defined(parentObj[field])) {\n                        parentObj[field] = {};\n                    }\n                    parentObj = parentObj[field];\n                }\n                field = parts.shift();\n            }\n            parentObj[field] = value;\n        }\n        var DefaultAggregates = Class.extend({\n            init: function () {\n                this._defaults = {};\n            },\n            register: function (seriesTypes, aggregates) {\n                var this$1 = this;\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this$1._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        });\n        DefaultAggregates.current = new DefaultAggregates();\n        var RangeBar = Bar.extend({\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelText;\n                if (options.template) {\n                    var labelTemplate = TemplateService.compile(options.template);\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        percentage: this.percentage,\n                        runningTotal: this.runningTotal,\n                        total: this.total,\n                        series: this.series\n                    });\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options));\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var ref = this;\n                var labelFrom = ref.labelFrom;\n                var labelTo = ref.labelTo;\n                var value = ref.value;\n                this.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = value.from > value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = value.to > value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n            }\n        });\n        RangeBar.prototype.defaults = deepExtend({}, RangeBar.prototype.defaults, {\n            labels: { format: '{0} - {1}' },\n            tooltip: { format: '{1}' }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value.from, point.value.to);\n            },\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var from = value.from;\n                var to = value.to;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, from);\n                    axisRange.max = Math.max(axisRange.max, from);\n                    axisRange.min = Math.min(axisRange.min, to);\n                    axisRange.max = Math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        RangeBarChart.prototype.plotLimits = CategoricalChart.prototype.plotLimits;\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var oPoints = [];\n                var cPoints = [];\n                var lhPoints = [];\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                var oSlot = valueAxis.getSlot(value.open, value.open);\n                var cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                var mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                this.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                this.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                this.reflowNote();\n            },\n            createBody: function () {\n            }\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                ChartElement.fn.init.call(this);\n                this.from = from;\n                this.to = to;\n                this.series = series;\n            },\n            linePoints: function () {\n                var from = this.from;\n                var ref = this;\n                var fromBox = ref.from.box;\n                var toBox = ref.to.box;\n                var points = [];\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        setDefaultOptions(WaterfallSegment, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to = void 0;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: categories[categoryIx],\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint = void 0;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this$1.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        function filterSeriesByType(series, types) {\n            var result = [];\n            var seriesTypes = [].concat(types);\n            for (var idx = 0; idx < series.length; idx++) {\n                var currentSeries = series[idx];\n                if (inArray(currentSeries.type, seriesTypes)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type;\n            var dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        function getDateField(field, row, intlService) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field;\n            var value = row[key];\n            if (!value) {\n                value = parseDate(intlService, getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            initFields: function (series) {\n                var this$1 = this;\n                this.namedCategoryAxes = {};\n                this.namedValueAxes = {};\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    this.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL,\n                        VERTICAL_BOX_PLOT\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            this$1.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n            },\n            render: function (panes) {\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                this.createCategoryAxes(panes);\n                this.aggregateCategories(panes);\n                this.createCategoryAxesLabels(panes);\n                this.createCharts(panes);\n                this.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete this.namedCategoryAxes[axisName];\n                } else {\n                    this.valueAxisRangeTracker.reset(axisName);\n                    delete this.namedValueAxes[axisName];\n                }\n                if (axis === this.categoryAxis) {\n                    delete this.categoryAxis;\n                }\n                if (axis === this.valueAxis) {\n                    delete this.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var this$1 = this;\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this$1.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, [\n                    BOX_PLOT,\n                    VERTICAL_BOX_PLOT\n                ]), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var this$1 = this;\n                var series = this.srcSeries || this.series;\n                var processedSeries = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n                    var axisPane = this$1.findPane(categoryAxis.options.pane);\n                    var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n                    } else if (isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max)) {\n                        currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                this.srcSeries = series;\n                this.series = processedSeries;\n            },\n            filterSeries: function (series, categoryAxis) {\n                var range = categoryAxis.totalRangeIndices();\n                var justified = categoryAxis.options.justified;\n                var outOfRangePoints = inArray(series.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                range.min = isNumber(categoryAxis.options.min) ? Math.floor(range.min) : 0;\n                if (isNumber(categoryAxis.options.max)) {\n                    range.max = justified ? Math.floor(range.max) + 1 : Math.ceil(range.max);\n                } else {\n                    range.max = series.data.length;\n                }\n                var currentSeries = deepExtend({}, series);\n                if (outOfRangePoints) {\n                    var minCategory = range.min - 1;\n                    var srcCategories = categoryAxis.options.srcCategories || [];\n                    if (minCategory >= 0 && minCategory < currentSeries.data.length) {\n                        currentSeries._outOfRangeMinPoint = {\n                            item: currentSeries.data[minCategory],\n                            category: srcCategories[minCategory],\n                            categoryIx: -1\n                        };\n                    }\n                    if (range.max < currentSeries.data.length) {\n                        currentSeries._outOfRangeMaxPoint = {\n                            item: currentSeries.data[range.max],\n                            category: srcCategories[range.max],\n                            categoryIx: range.max - range.min\n                        };\n                    }\n                }\n                categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, currentSeries.data.length);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max);\n                return currentSeries;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var this$1 = this;\n                var outOfRangePoints = inArray(series.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                var ref = categoryAxis.options;\n                var categories = ref.categories;\n                var srcCategories = ref.srcCategories;\n                if (srcCategories === void 0) {\n                    srcCategories = categories;\n                }\n                var dataItems = ref.dataItems;\n                if (dataItems === void 0) {\n                    dataItems = [];\n                }\n                var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                var aggregatorSeries = deepExtend({}, series);\n                var result = deepExtend({}, series);\n                var srcData = series.data;\n                var srcPoints = [];\n                var outOfRangeMinIdx = MIN_VALUE;\n                var outOfRangeMaxIdx = MAX_VALUE;\n                var getFn = getField;\n                var outOfRangeMinCategory, outOfRangeMaxCategory;\n                if (dateAxis) {\n                    getFn = getDateField;\n                }\n                for (var i = 0; i < srcData.length; i++) {\n                    var category = void 0;\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[i], this$1.chartService.intl);\n                    } else {\n                        category = srcCategories[i];\n                    }\n                    if (defined(category)) {\n                        var categoryIx = categoryAxis.categoryIndex(category);\n                        if (0 <= categoryIx && categoryIx < categories.length) {\n                            srcPoints[categoryIx] = srcPoints[categoryIx] || [];\n                            srcPoints[categoryIx].push(i);\n                        } else if (outOfRangePoints) {\n                            if (categoryIx < 0) {\n                                if (categoryIx === outOfRangeMinIdx) {\n                                    outOfRangeMinCategory.points.push(i);\n                                } else if (categoryIx > outOfRangeMinIdx) {\n                                    outOfRangeMinIdx = categoryIx;\n                                    outOfRangeMinCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            } else if (categoryIx >= categories.length) {\n                                if (categoryIx === outOfRangeMaxIdx) {\n                                    outOfRangeMaxCategory.points.push(i);\n                                } else if (categoryIx < outOfRangeMaxIdx) {\n                                    outOfRangeMaxIdx = categoryIx;\n                                    outOfRangeMaxCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n                var aggregator = new SeriesAggregator(aggregatorSeries, SeriesBinder.current, DefaultAggregates.current);\n                var data = result.data = [];\n                for (var i$1 = 0; i$1 < categories.length; i$1++) {\n                    data[i$1] = aggregator.aggregatePoints(srcPoints[i$1], categories[i$1]);\n                    if (srcPoints[i$1]) {\n                        dataItems[i$1] = data[i$1];\n                    }\n                }\n                if (outOfRangeMinCategory && data.length) {\n                    result._outOfRangeMinPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMinCategory.points, outOfRangeMinCategory.category),\n                        categoryIx: outOfRangeMinIdx,\n                        category: outOfRangeMinCategory.category\n                    };\n                }\n                if (outOfRangeMaxCategory && data.length) {\n                    result._outOfRangeMaxPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMaxCategory.points, outOfRangeMaxCategory.category),\n                        categoryIx: outOfRangeMaxIdx,\n                        category: outOfRangeMaxCategory.category\n                    };\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var series = chart.options.series;\n                var categoryAxis = this.seriesCategoryAxis(series[0]);\n                var categories = categoryAxis.options.categories;\n                var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n                while (categoriesToAdd--) {\n                    categories.push('');\n                }\n                this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var axisName = series.axis;\n                var axisOptions = [].concat(options.valueAxis);\n                var axis = grep(axisOptions, function (a) {\n                    return a.name === axisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = (panes[0] || {}).name || 'default';\n                var paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var axisName = series.categoryAxis;\n                var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack;\n                var isStacked100 = stack && stack.type === '100%';\n                var clip = pane.options.clip;\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var categoryAxes = [];\n                var unique = {};\n                for (var idx = 0; idx < series.length; idx++) {\n                    var name = series[idx].categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        categoryAxes.push(name);\n                    }\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(series, axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var barChart = new BarChart(this, $.extend({\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var rangeColumnChart = new RangeBarChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var bulletChart = new BulletChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var lineChart = new LineChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var areaChart = new AreaChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(areaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new OHLCChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new CandlestickChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new BoxPlotChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var waterfallChart = new WaterfallChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var this$1 = this;\n                var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n                for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n                    var currentSeries = this$1.series[seriesIx];\n                    if (currentSeries.type === LINE || currentSeries.type === AREA) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n                    var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var this$1 = this;\n                var invertAxes = this.invertAxes;\n                var definitions = [].concat(this.options.categoryAxis);\n                var axes = [];\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var categories = axisOptions.categories;\n                        if (categories === void 0) {\n                            categories = [];\n                        }\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = this$1.isJustified();\n                        }\n                        if (this$1.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        var categoryAxis = void 0;\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new DateCategoryAxis(axisOptions, this$1.chartService);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n                        }\n                        if (name) {\n                            if (this$1.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        this$1.appendAxis(categoryAxis);\n                    }\n                }\n                var primaryAxis = this.categoryAxis || axes[0];\n                this.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisY = primaryAxis;\n                } else {\n                    this.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (!inArray(currentSeries.type, [\n                            AREA,\n                            VERTICAL_AREA\n                        ])) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var this$1 = this;\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var definitions = [].concat(this.options.valueAxis);\n                var invertAxes = this.invertAxes;\n                var baseOptions = { vertical: !invertAxes };\n                var axes = [];\n                if (this.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        var range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = Math.min(range.min, defaultRange.min);\n                            range.max = Math.max(range.max, defaultRange.max);\n                        }\n                        var axisType = void 0;\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = dataviz.LogarithmicAxis;\n                        } else {\n                            axisType = dataviz.NumericAxis;\n                        }\n                        var valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions), this$1.chartService);\n                        if (name) {\n                            if (this$1.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        this$1.appendAxis(valueAxis);\n                    }\n                }\n                var primaryAxis = this.valueAxis || axes[0];\n                this.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisX = primaryAxis;\n                } else {\n                    this.axisY = primaryAxis;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var pane = this.pointPane(point);\n                var categories = [];\n                var values = [];\n                if (!pane) {\n                    return;\n                }\n                var allAxes = pane.axes;\n                for (var i = 0; i < allAxes.length; i++) {\n                    var axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var axesOptions = axis instanceof CategoryAxis ? [].concat(this.options.categoryAxis) : [].concat(this.options.valueAxis);\n                deepExtend(axesOptions[axis.axisIndex], options);\n            }\n        });\n        function groupSeries(series, axis, axisIx) {\n            return grep(series, function (s) {\n                return axisIx === 0 && !s.categoryAxis || s.categoryAxis === axis;\n            });\n        }\n        setDefaultOptions(CategoricalPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        deepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points) {\n                var this$1 = this;\n                var arrayPoints = [].concat(points);\n                this.hide();\n                for (var i = 0; i < arrayPoints.length; i++) {\n                    var point = arrayPoints[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this$1.togglePointHighlight(point, true);\n                        this$1._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        stackValue: point.stackValue,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show);\n                    }\n                } else {\n                    point.toggleHighlight(show);\n                }\n            },\n            hide: function () {\n                var this$1 = this;\n                var points = this._points;\n                while (points.length) {\n                    this$1.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element === point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var event = e.event;\n            var accept = key === 'none' && !(event.ctrlKey || event.shiftKey || event.altKey) || event[key + 'Key'];\n            return accept;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                var axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            start: function (e) {\n                this._active = acceptKey(e, this.options.key);\n                return this._active;\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                var active = this._active;\n                this._active = false;\n                return active;\n            },\n            pan: function () {\n                var ref = this;\n                var plotArea = ref.plotArea;\n                var axisRanges = ref.axisRanges;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.plotArea;\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() !== position) {\n                    var axes = plotArea.axes;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        var axis = axes[idx];\n                        if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n                            var range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        Pannable.prototype.options = {\n            key: 'none',\n            lock: 'none'\n        };\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this.createElement();\n            },\n            createElement: function () {\n                var marquee = this._marquee = document.createElement('div');\n                marquee.className = 'k-marquee';\n                var marqueeColor = document.createElement('div');\n                marqueeColor.className = 'k-marquee-color';\n                marquee.appendChild(marqueeColor);\n            },\n            removeElement: function () {\n                if (this._marquee.parentNode) {\n                    this._marquee.parentNode.removeChild(this._marquee);\n                }\n            },\n            setStyles: function (styles) {\n                elementStyles(this._marquee, styles);\n            },\n            start: function (e) {\n                if (acceptKey(e, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._eventCoordinates(e);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    if (zoomPane && zoomPane.clipBox()) {\n                        var clipBox = zoomPane.clipBox().clone();\n                        var offset = this._elementOffset();\n                        clipBox.translate(offset.left, offset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        document.body.appendChild(this._marquee);\n                        this.setStyles({\n                            left: e.pageX + 1,\n                            top: e.pageY + 1,\n                            width: 0,\n                            height: 0\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var ref = elementStyles(chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref.paddingLeft;\n                var paddingTop = ref.paddingTop;\n                var offset = dataviz.elementOffset(chartElement);\n                return {\n                    left: paddingLeft + offset.left,\n                    top: paddingTop + offset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    this.setStyles(this._selectionPosition(e));\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset$$1 = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset$$1.left;\n                    selectionPosition.top -= elementOffset$$1.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this.removeElement();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this.removeElement();\n                delete this._marquee;\n                delete this.chart;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.pointsRange(start, end);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var clipBox = this._zoomPaneClipBox;\n                var startLocation = {\n                    x: e.x.startLocation,\n                    y: e.y.startLocation\n                };\n                var pageX = e.x.location;\n                var pageY = e.y.location;\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = Math.min(startLocation.x, pageX);\n                var top = Math.min(startLocation.y, pageY);\n                var width = Math.abs(startLocation.x - pageX);\n                var height = Math.abs(startLocation.y - pageY);\n                if (lock === X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock === Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (pageX > clipBox.x2) {\n                    width = clipBox.x2 - startLocation.x;\n                }\n                if (pageX < clipBox.x1) {\n                    width = startLocation.x - clipBox.x1;\n                }\n                if (pageY > clipBox.y2) {\n                    height = clipBox.y2 - startLocation.y;\n                }\n                if (pageY < clipBox.y1) {\n                    height = startLocation.y - clipBox.y1;\n                }\n                return {\n                    left: Math.max(left, clipBox.x1),\n                    top: Math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        ZoomSelection.prototype.options = {\n            key: 'shift',\n            lock: 'none'\n        };\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.chart;\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n            },\n            render: function () {\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var vertical = options.vertical;\n                this.visual = new drawing.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal'\n                });\n                for (var idx = 0; idx < children.length; idx++) {\n                    var legendItem = children[idx];\n                    legendItem.reflow(new Box());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: function () {\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.createContainer();\n                this.createMarker();\n                this.createLabel();\n            },\n            createContainer: function () {\n                this.container = new dataviz.FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER\n                });\n                this.append(this.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labelOptions = deepExtend({}, options.labels);\n                this.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                BoxElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args)) {\n                    e.preventDefault();\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    e.preventDefault();\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: eventElement(e),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    this.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        sender: this.getSender(),\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: this.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            this$1.renderComplete();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var HORIZONTAL = 'horizontal';\n        var POINTER = 'pointer';\n        var CUSTOM = 'custom';\n        var Legend = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!inArray(this.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    this.options.position = RIGHT;\n                }\n                this.createContainer();\n                this.createItems();\n            },\n            createContainer: function () {\n                var options = this.options;\n                var position = options.position;\n                var userAlign = options.align;\n                var align = position;\n                var vAlign = CENTER;\n                if (position === CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign === 'start') {\n                        align = LEFT;\n                    } else if (userAlign === 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign === 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign === 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                this.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                this.append(this.container);\n            },\n            createItems: function () {\n                var chartService = this.getService();\n                var options = this.options;\n                var vertical = this.isVertical();\n                var innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing\n                }, chartService);\n                var items = options.items;\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                var count = items.length;\n                for (var i = 0; i < count; i++) {\n                    var item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                this.container.append(innerElement);\n            },\n            isVertical: function () {\n                var ref = this.options;\n                var orientation = ref.orientation;\n                var position = ref.position;\n                var vertical = position === CUSTOM && orientation !== HORIZONTAL || (defined(orientation) ? orientation !== HORIZONTAL : inArray(position, [\n                    LEFT,\n                    RIGHT\n                ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var legendBox = targetBox.clone();\n                if (!this.hasItems()) {\n                    this.box = legendBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    this.containerCustomReflow(legendBox);\n                    this.box = legendBox;\n                } else {\n                    this.containerReflow(legendBox);\n                }\n            },\n            containerReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var position = options.position;\n                var width = options.width;\n                var height = options.height;\n                var pos = position === TOP || position === BOTTOM ? X : Y;\n                var vertical = this.isVertical();\n                var alignTarget = targetBox.clone();\n                var containerBox = targetBox.clone();\n                if (position === LEFT || position === RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                var box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    this.container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                this.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var offsetX = options.offsetX;\n                var offsetY = options.offsetY;\n                var width = options.width;\n                var height = options.height;\n                var vertical = this.isVertical();\n                var containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(new Box(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        setDefaultOptions(Legend, {\n            position: RIGHT,\n            items: [],\n            labels: { margin: { left: 6 } },\n            offsetX: 0,\n            offsetY: 0,\n            margin: getSpacing(5),\n            padding: getSpacing(5),\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            item: { cursor: POINTER },\n            spacing: 6,\n            background: '',\n            zIndex: 1,\n            markers: {\n                border: { width: 0 },\n                width: 15,\n                height: 3,\n                type: 'rect',\n                align: LEFT,\n                vAlign: CENTER\n            }\n        });\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options, chartService) {\n                var registry = this._registry;\n                var match = registry[0];\n                var series;\n                for (var idx = 0; idx < registry.length; idx++) {\n                    var entry = registry[idx];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options, chartService);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var ZOOM_ACCELERATION = 3;\n        function createDiv(className) {\n            var element = document.createElement('div');\n            if (className) {\n                element.className = className;\n            }\n            return element;\n        }\n        function closestHandle(element) {\n            var current = element;\n            while (current && !hasClasses(current, 'k-handle')) {\n                current = current.parentNode;\n            }\n            return current;\n        }\n        var Selection = Class.extend({\n            init: function (chart, categoryAxis, options, observer) {\n                var chartElement = chart.element;\n                var valueAxis = this.getValueAxis(categoryAxis);\n                this.options = deepExtend({}, this.options, options);\n                this.chart = chart;\n                this.observer = observer;\n                this.chartElement = chartElement;\n                this.categoryAxis = categoryAxis;\n                this._dateAxis = this.categoryAxis instanceof DateCategoryAxis;\n                this.valueAxis = valueAxis;\n                this.initOptions();\n                if (this.options.visible) {\n                    this.createElements();\n                    this.set(this._index(this.options.from), this._index(this.options.to));\n                    this.bindEvents();\n                }\n            },\n            createElements: function () {\n                var options = this.options;\n                var wrapper = this.wrapper = createDiv('k-selector');\n                elementStyles(wrapper, {\n                    top: options.offset.top,\n                    left: options.offset.left,\n                    width: options.width,\n                    height: options.height\n                });\n                var selection = this.selection = createDiv('k-selection');\n                this.leftMask = createDiv('k-mask');\n                this.rightMask = createDiv('k-mask');\n                wrapper.appendChild(this.leftMask);\n                wrapper.appendChild(this.rightMask);\n                wrapper.appendChild(selection);\n                selection.appendChild(createDiv('k-selection-bg'));\n                var leftHandle = this.leftHandle = createDiv('k-handle k-left-handle');\n                var rightHandle = this.rightHandle = createDiv('k-handle k-right-handle');\n                leftHandle.appendChild(createDiv());\n                rightHandle.appendChild(createDiv());\n                selection.appendChild(leftHandle);\n                selection.appendChild(rightHandle);\n                this.chartElement.appendChild(wrapper);\n                var selectionStyles = elementStyles(selection, [\n                    'borderLeftWidth',\n                    'borderRightWidth',\n                    'height'\n                ]);\n                var leftHandleHeight = elementStyles(leftHandle, 'height').height;\n                var rightHandleHeight = elementStyles(rightHandle, 'height').height;\n                options.selection = {\n                    border: {\n                        left: selectionStyles.borderLeftWidth,\n                        right: selectionStyles.borderRightWidth\n                    }\n                };\n                elementStyles(leftHandle, { top: (selectionStyles.height - leftHandleHeight) / 2 });\n                elementStyles(rightHandle, { top: (selectionStyles.height - rightHandleHeight) / 2 });\n                wrapper.style.cssText = wrapper.style.cssText;\n            },\n            bindEvents: function () {\n                this._mousewheelHandler = this.options.mousewheel !== false ? this._mousewheel.bind(this) : stopPropagation;\n                var obj;\n                bindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                this._domEvents = services.DomEventsBuilder.create(this.wrapper, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    press: this._press.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            initOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var valueAxis = ref.valueAxis;\n                var categoryAxisLineBox = categoryAxis.lineBox();\n                var valueAxisLineBox = valueAxis.lineBox();\n                var intlService = this.chart.chartService.intl;\n                if (this._dateAxis) {\n                    deepExtend(options, {\n                        min: parseDate(intlService, options.min),\n                        max: parseDate(intlService, options.max),\n                        from: parseDate(intlService, options.from),\n                        to: parseDate(intlService, options.to)\n                    });\n                }\n                var ref$1 = elementStyles(this.chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref$1.paddingLeft;\n                var paddingTop = ref$1.paddingTop;\n                this.options = deepExtend({}, {\n                    width: categoryAxisLineBox.width(),\n                    height: valueAxisLineBox.height(),\n                    padding: {\n                        left: paddingLeft,\n                        top: paddingTop\n                    },\n                    offset: {\n                        left: valueAxisLineBox.x2 + paddingLeft,\n                        top: valueAxisLineBox.y1 + paddingTop\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n            },\n            destroy: function () {\n                if (this._domEvents) {\n                    this._domEvents.destroy();\n                    delete this._domEvents;\n                }\n                clearTimeout(this._mwTimeout);\n                this._state = null;\n                if (this.wrapper) {\n                    var obj;\n                    unbindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                    this.chartElement.removeChild(this.wrapper);\n                }\n            },\n            _rangeEventArgs: function (range) {\n                return {\n                    axis: this.categoryAxis.options,\n                    from: this._value(range.from),\n                    to: this._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var options = this.options;\n                var target = eventElement(e);\n                if (this._state || !target) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                this._state = {\n                    moveTarget: closestHandle(target) || target,\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs({\n                    from: this._index(options.from),\n                    to: this._index(options.to)\n                });\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                }\n            },\n            _press: function (e) {\n                var handle;\n                if (this._state) {\n                    handle = this._state.moveTarget;\n                } else {\n                    handle = closestHandle(eventElement(e));\n                }\n                if (handle) {\n                    dataviz.addClass(handle, 'k-handle-active');\n                }\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var ref = this;\n                var state = ref._state;\n                var options = ref.options;\n                var categories = ref.categoryAxis.options.categories;\n                var range = state.range;\n                var target = state.moveTarget;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var delta = state.startLocation - e.x.location;\n                var oldRange = {\n                    from: range.from,\n                    to: range.to\n                };\n                var span = range.to - range.from;\n                var scale = elementStyles(this.wrapper, 'width').width / (categories.length - 1);\n                var offset = Math.round(delta / scale);\n                if (!target) {\n                    return;\n                }\n                if (hasClasses(target, 'k-selection k-selection-bg')) {\n                    range.from = Math.min(Math.max(min, from - offset), max - span);\n                    range.to = Math.min(range.from + span, max);\n                } else if (hasClasses(target, 'k-left-handle')) {\n                    range.from = Math.min(Math.max(min, from - offset), max - 1);\n                    range.to = Math.max(range.from + 1, range.to);\n                } else if (hasClasses(target, 'k-right-handle')) {\n                    range.to = Math.min(Math.max(min + 1, to - offset), max);\n                    range.from = Math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.move(range.from, range.to);\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                if (this._state) {\n                    var moveTarget = this._state.moveTarget;\n                    if (moveTarget) {\n                        dataviz.removeClass(moveTarget, 'k-handle-active');\n                    }\n                    var range = this._state.range;\n                    this.set(range.from, range.to);\n                    this.trigger(SELECT_END, this._rangeEventArgs(range));\n                    delete this._state;\n                }\n            },\n            _tap: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var coords = this.chart._eventCoordinates(e);\n                var categoryIx = categoryAxis.pointCategoryIndex(new Point(coords.x, categoryAxis.box.y1));\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var span = to - from;\n                var mid = from + span / 2;\n                var range = {};\n                var rightClick = e.event.which === 3;\n                var offset = Math.round(mid - categoryIx);\n                if (this._state || rightClick) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = Math.min(Math.max(min, from - offset), max - span);\n                range.to = Math.min(range.from + span, max);\n                this._start(e);\n                if (this._state) {\n                    this._state.range = range;\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                    this._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                this._start({ target: this.selection });\n                if (this._state) {\n                    var range = this._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (Math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (this.options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (this.expand(delta)) {\n                        this.trigger(SELECT, {\n                            axis: this.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: this._value(range.from),\n                            to: this._value(range.to)\n                        });\n                    }\n                    if (this._mwTimeout) {\n                        clearTimeout(this._mwTimeout);\n                    }\n                    this._mwTimeout = setTimeout(function () {\n                        this$1._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _gesturestart: function (e) {\n                var options = this.options;\n                this._state = {\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs(this._state.range);\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                } else {\n                    e.preventDefault();\n                }\n            },\n            _gestureend: function () {\n                if (this._state) {\n                    this.trigger(SELECT_END, this._rangeEventArgs(this._state.range));\n                    delete this._state;\n                }\n            },\n            _gesturechange: function (e) {\n                var ref = this;\n                var chart = ref.chart;\n                var state = ref._state;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var range = state.range;\n                var p0 = chart._toModelCoordinates(e.touches[0].x.location).x;\n                var p1 = chart._toModelCoordinates(e.touches[1].x.location).x;\n                var left = Math.min(p0, p1);\n                var right = Math.max(p0, p1);\n                e.preventDefault();\n                range.from = categoryAxis.pointCategoryIndex(new Point(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new Point(right)) || options.max;\n                this.move(range.from, range.to);\n                this.trigger(SELECT, this._rangeEventArgs(range));\n            },\n            _index: function (value) {\n                var index = value;\n                if (value instanceof Date) {\n                    index = this.categoryAxis.categoryIndex(value);\n                }\n                return index;\n            },\n            _value: function (index) {\n                var categories = this.categoryAxis.options.categories;\n                var value = index;\n                if (this._dateAxis) {\n                    if (index > categories.length - 1) {\n                        value = this.options.max;\n                    } else {\n                        value = categories[Math.ceil(index)];\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var categoryAxis = this.categoryAxis;\n                var index = this._index(value);\n                return categoryAxis.getSlot(index, index, true);\n            },\n            move: function (from, to) {\n                var options = this.options;\n                var offset = options.offset;\n                var padding = options.padding;\n                var border = options.selection.border;\n                var box = this._slot(from);\n                var leftMaskWidth = round(box.x1 - offset.left + padding.left);\n                elementStyles(this.leftMask, { width: leftMaskWidth });\n                elementStyles(this.selection, { left: leftMaskWidth });\n                box = this._slot(to);\n                var rightMaskWidth = round(options.width - (box.x1 - offset.left + padding.left));\n                elementStyles(this.rightMask, { width: rightMaskWidth });\n                var distance = options.width - rightMaskWidth;\n                if (distance !== options.width) {\n                    distance += border.right;\n                }\n                elementStyles(this.rightMask, { left: distance });\n                elementStyles(this.selection, { width: Math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0) });\n            },\n            set: function (from, to) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var fromValue = limitValue(this._index(from), min, max);\n                var toValue = limitValue(this._index(to), fromValue + 1, max);\n                if (options.visible) {\n                    this.move(fromValue, toValue);\n                }\n                options.from = this._value(fromValue);\n                options.to = this._value(toValue);\n            },\n            expand: function (delta) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var zDir = options.mousewheel.zoom;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var range = {\n                    from: from,\n                    to: to\n                };\n                var oldRange = deepExtend({}, range);\n                if (this._state) {\n                    range = this._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.set(range.from, range.to);\n                    return true;\n                }\n            },\n            getValueAxis: function (categoryAxis) {\n                var axes = categoryAxis.pane.axes;\n                var axesCount = axes.length;\n                for (var i = 0; i < axesCount; i++) {\n                    var axis = axes[i];\n                    if (axis.options.vertical !== categoryAxis.options.vertical) {\n                        return axis;\n                    }\n                }\n            },\n            trigger: function (name, args) {\n                return (this.observer || this.chart).trigger(name, args);\n            }\n        });\n        function stopPropagation(e) {\n            e.stopPropagation();\n        }\n        setDefaultOptions(Selection, {\n            visible: true,\n            mousewheel: { zoom: 'both' },\n            min: MIN_VALUE,\n            max: MAX_VALUE\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                if (!point || !point.tooltipAnchor || this._current && this._current === point) {\n                    return;\n                }\n                var options = deepExtend({}, this.options, point.options.tooltip);\n                var anchor = point.tooltipAnchor();\n                if (anchor) {\n                    this._current = point;\n                    BaseTooltip.fn.show.call(this, {\n                        point: point,\n                        anchor: anchor\n                    }, options, point);\n                } else {\n                    this.hide();\n                }\n            },\n            hide: function () {\n                delete this._current;\n                BaseTooltip.fn.hide.call(this);\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (plotArea, options) {\n                BaseTooltip.fn.init.call(this, plotArea.chartService, options);\n                this.plotArea = plotArea;\n                this.formatService = plotArea.chartService.format;\n            },\n            showAt: function (points, coords) {\n                var tooltipPoints = grep(points, function (point) {\n                    var tooltip = point.series.tooltip;\n                    var excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (tooltipPoints.length > 0) {\n                    var point = tooltipPoints[0];\n                    var slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n                    var anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n                    this.show({\n                        anchor: anchor,\n                        shared: true,\n                        points: points,\n                        category: point.category,\n                        categoryText: this.formatService.auto(this.options.categoryFormat, point.category)\n                    }, this.options);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var axis = this.plotArea.categoryAxis;\n                var align = {\n                    horizontal: 'left',\n                    vertical: 'center'\n                };\n                if (!axis.options.vertical) {\n                    point.x = slot.center().x;\n                }\n                return {\n                    point: point,\n                    align: align\n                };\n            },\n            _defaultAnchor: function (point, slot) {\n                var box = point.owner.pane.chartsBox();\n                var vertical = this.plotArea.categoryAxis.options.vertical;\n                var center = box.center();\n                var slotCenter = slot.center();\n                var align = {\n                    horizontal: 'center',\n                    vertical: 'center'\n                };\n                var centerPoint;\n                if (vertical) {\n                    centerPoint = new Point(center.x, slotCenter.y);\n                } else {\n                    centerPoint = new Point(slotCenter.x, center.y);\n                }\n                return {\n                    point: centerPoint,\n                    align: align\n                };\n            }\n        });\n        setDefaultOptions(SharedTooltip, { categoryFormat: '{0:d}' });\n        var BarChartAnimation = Animation.extend({\n            setup: function () {\n                var ref = this;\n                var element = ref.element;\n                var options = ref.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new GeometryPoint(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = dataviz.interpolateValue(this.fromScale.x, 1, pos);\n                var scaleY = dataviz.interpolateValue(this.fromScale.y, 1, pos);\n                this.element.transform(transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        setDefaultOptions(BarChartAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register(BAR, BarChartAnimation);\n        var BubbleAnimation = Animation.extend({\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.center));\n            }\n        });\n        setDefaultOptions(BubbleAnimation, { easing: 'easeOutElastic' });\n        AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var FadeInAnimation = Animation.extend({\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        setDefaultOptions(FadeInAnimation, {\n            duration: 200,\n            easing: 'linear'\n        });\n        AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var PieAnimation = Animation.extend({\n            setup: function () {\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.options.center));\n            }\n        });\n        setDefaultOptions(PieAnimation, {\n            easing: 'easeOutElastic',\n            duration: INITIAL_ANIMATION_DURATION\n        });\n        AnimationFactory.current.register(PIE, PieAnimation);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                ScatterChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.prototype, LineChartMixin);\n        var XYPlotArea = PlotAreaBase.extend({\n            initFields: function () {\n                this.namedXAxes = {};\n                this.namedYAxes = {};\n                this.xAxisRangeTracker = new AxisGroupRangeTracker();\n                this.yAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var filteredSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    this$1.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    this$1.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    this$1.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                this.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                this.xAxisRangeTracker.update(chart.xAxisRanges);\n                this.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis.options.vertical) {\n                    this.yAxisRangeTracker.reset(axisName);\n                    delete this.namedYAxes[axisName];\n                } else {\n                    this.xAxisRangeTracker.reset(axisName);\n                    delete this.namedXAxes[axisName];\n                }\n                if (axis === this.axisX) {\n                    delete this.axisX;\n                }\n                if (axis === this.axisY) {\n                    delete this.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var xAxisName = series.xAxis;\n                var xAxisOptions = [].concat(options.xAxis);\n                var xAxis = grep(xAxisOptions, function (a) {\n                    return a.name === xAxisName;\n                })[0];\n                var yAxisName = series.yAxis;\n                var yAxisOptions = [].concat(options.yAxis);\n                var yAxis = grep(yAxisOptions, function (a) {\n                    return a.name === yAxisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = panes[0].name || 'default';\n                var paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterLineChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new BubbleChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var axisName = options.name;\n                var namedAxes = vertical ? this.namedYAxes : this.namedXAxes;\n                var tracker = vertical ? this.yAxisRangeTracker : this.xAxisRangeTracker;\n                var axisOptions = deepExtend({}, options, { vertical: vertical });\n                var isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC);\n                var defaultRange = tracker.query();\n                var defaultAxisRange = isLog ? {\n                    min: 0.1,\n                    max: 1\n                } : {\n                    min: 0,\n                    max: 1\n                };\n                var range = tracker.query(axisName) || defaultRange || defaultAxisRange;\n                var typeSamples = [\n                    axisOptions.min,\n                    axisOptions.max\n                ];\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName === axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        var firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var inferredDate;\n                for (var i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                var axisType;\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = dataviz.DateValueAxis;\n                } else if (isLog) {\n                    axisType = dataviz.LogarithmicAxis;\n                } else {\n                    axisType = dataviz.NumericAxis;\n                }\n                var axis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                axis.axisIndex = axisIndex;\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                this.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var this$1 = this;\n                var options = this.options;\n                var xAxesOptions = [].concat(options.xAxis);\n                var xAxes = [];\n                var yAxesOptions = [].concat(options.yAxis);\n                var yAxes = [];\n                for (var idx = 0; idx < xAxesOptions.length; idx++) {\n                    var axisPane = this$1.findPane(xAxesOptions[idx].pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(this$1.createXYAxis(xAxesOptions[idx], false, idx));\n                    }\n                }\n                for (var idx$1 = 0; idx$1 < yAxesOptions.length; idx$1++) {\n                    var axisPane$1 = this$1.findPane(yAxesOptions[idx$1].pane);\n                    if (inArray(axisPane$1, panes)) {\n                        yAxes.push(this$1.createXYAxis(yAxesOptions[idx$1], true, idx$1));\n                    }\n                }\n                this.axisX = this.axisX || xAxes[0];\n                this.axisY = this.axisY || yAxes[0];\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var allAxes = this.axes;\n                var length = allAxes.length;\n                var xValues = [];\n                var yValues = [];\n                for (var i = 0; i < length; i++) {\n                    var axis = allAxes[i];\n                    var values = axis.options.vertical ? yValues : xValues;\n                    var currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = (vertical ? axes.y : axes.x).indexOf(axis);\n                var axisOptions = [].concat(vertical ? this.options.yAxis : this.options.xAxis)[index];\n                deepExtend(axisOptions, options);\n            }\n        });\n        setDefaultOptions(XYPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(XYPlotArea.prototype, PlotAreaEventsMixin);\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.sector = sector;\n            },\n            render: function () {\n                var labels = this.options.labels;\n                var chartService = this.owner.chartService;\n                var labelText = this.value;\n                if (this._rendered || this.visible === false) {\n                    return;\n                }\n                this._rendered = true;\n                if (labels.template) {\n                    var labelTemplate = TemplateService.compile(labels.template);\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage\n                    });\n                } else if (labels.format) {\n                    labelText = chartService.format.auto(labels.format, labelText);\n                }\n                if (labels.visible && labelText) {\n                    if (labels.position === CENTER || labels.position === INSIDE_END) {\n                        if (!labels.color) {\n                            var brightnessValue = new Color(this.options.color).percBrightness();\n                            if (brightnessValue > 180) {\n                                labels.color = BLACK;\n                            } else {\n                                labels.color = WHITE;\n                            }\n                        }\n                        if (!labels.background) {\n                            labels.background = this.options.color;\n                        }\n                    } else {\n                        var themeLabels = chartService.theme.seriesDefaults.labels;\n                        labels.color = labels.color || themeLabels.color;\n                        labels.background = labels.background || themeLabels.background;\n                    }\n                    this.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: this.animationDelay\n                        }\n                    }));\n                    this.append(this.label);\n                }\n            },\n            reflow: function (targetBox) {\n                this.render();\n                this.box = targetBox;\n                this.reflowLabel();\n            },\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var labelsDistance = labelsOptions.distance;\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    var labelWidth = label.box.width();\n                    var lp;\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius = Math.abs((sector.radius - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position === INSIDE_END) {\n                        sector.radius = sector.radius - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        var x1;\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.center.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(new Box(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                ChartElement.fn.createVisual.call(this);\n                if (this.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            series: this.series,\n                            percentage: this.percentage,\n                            center: new GeometryPoint(sector.center.x, sector.center.y),\n                            radius: sector.radius,\n                            innerRadius: sector.innerRadius,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            sender: this.getSender(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else {\n                        this.createSegmentVisual(this.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                var borderOptions = options.border || {};\n                var border = borderOptions.width > 0 ? {\n                    stroke: {\n                        color: borderOptions.color,\n                        width: borderOptions.width,\n                        opacity: borderOptions.opacity,\n                        dashType: borderOptions.dashType\n                    }\n                } : {};\n                var color = options.color;\n                var fill = {\n                    color: color,\n                    opacity: options.opacity\n                };\n                var visual = this.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.center.x,\n                            sector.center.y\n                        ],\n                        innerRadius: sector.innerRadius,\n                        radius: sector.radius,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new drawing.Circle(new geometry.Circle(new GeometryPoint(sector.center.x, sector.center.y), sector.radius), options);\n                }\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            },\n            createAnimation: function () {\n                var ref = this;\n                var options = ref.options;\n                var center = ref.sector.center;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var highlight = this.options.highlight || {};\n                var border = highlight.border || {};\n                return this.createSegment(this.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.radius,\n                    innerRadius: sector.innerRadius,\n                    center: new GeometryPoint(sector.center.x, sector.center.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function () {\n                var sector = this.sector.clone().expand(TOOLTIP_OFFSET);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                return {\n                    point: midPoint,\n                    align: tooltipAlignment(midAndle + 180)\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        var RAD_30 = round(dataviz.rad(30), DEFAULT_PRECISION);\n        var RAD_60 = round(dataviz.rad(60), DEFAULT_PRECISION);\n        function tooltipAlignment(angle) {\n            var radians = dataviz.rad(angle);\n            var sine = round(Math.sin(radians), DEFAULT_PRECISION);\n            var cosine = round(Math.cos(radians), DEFAULT_PRECISION);\n            var horizontal;\n            if (Math.abs(sine) > RAD_60) {\n                horizontal = CENTER;\n            } else if (cosine < 0) {\n                horizontal = RIGHT;\n            } else {\n                horizontal = LEFT;\n            }\n            var vertical;\n            if (Math.abs(sine) < RAD_30) {\n                vertical = CENTER;\n            } else if (sine < 0) {\n                vertical = BOTTOM;\n            } else {\n                vertical = TOP;\n            }\n            return {\n                horizontal: horizontal,\n                vertical: vertical\n            };\n        }\n        setDefaultOptions(PieSegment, {\n            color: WHITE,\n            overlay: { gradient: 'roundedBevel' },\n            border: { width: 0.5 },\n            labels: {\n                visible: false,\n                distance: 35,\n                font: datavizConstants.DEFAULT_FONT,\n                margin: getSpacing(0.5),\n                align: CIRCLE,\n                zIndex: 1,\n                position: OUTSIDE_END\n            },\n            animation: { type: PIE },\n            highlight: {\n                visible: true,\n                border: { width: 1 }\n            },\n            visible: true\n        });\n        deepExtend(PieSegment.prototype, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var legendOptions = this.options.legend || {};\n                var labelsOptions = legendOptions.labels || {};\n                var inactiveItems = legendOptions.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                if (options && options.visibleInLegend !== false) {\n                    var pointVisible = options.visible !== false;\n                    var labelTemplate = pointVisible ? labelsOptions.template : inactiveItemsLabels.template || labelsOptions.template;\n                    var text = options.category || '';\n                    if (labelTemplate) {\n                        text = TemplateService.compile(labelTemplate)({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    var itemLabelOptions, markerColor;\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (text) {\n                        this.legendItems.push({\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        function segmentVisible(series, fields, index) {\n            var visible = fields.visible;\n            if (defined(visible)) {\n                return visible;\n            }\n            var pointVisibility = series.pointVisibility;\n            if (pointVisibility) {\n                return pointVisibility[index];\n            }\n        }\n        function seriesTotal(series) {\n            var data = series.data;\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                var pointData = SeriesBinder.current.bindPoint(series, i);\n                var value = pointData.valueFields.value;\n                if (isString(value)) {\n                    value = parseFloat(value);\n                }\n                var visible = segmentVisible(series, pointData.fields, i);\n                if (isNumber(value) && visible !== false) {\n                    sum += Math.abs(value);\n                }\n            }\n            return sum;\n        }\n        var PIE_SECTOR_ANIM_DELAY = 70;\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.points = [];\n                this.legendItems = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var colorsCount = seriesColors.length;\n                var series = options.series;\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var data = currentSeries.data;\n                    var total = seriesTotal(currentSeries);\n                    var anglePerValue = 360 / total;\n                    var currentAngle = void 0;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx !== seriesCount - 1) {\n                        if (currentSeries.labels.position === OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (var i = 0; i < data.length; i++) {\n                        var pointData = SeriesBinder.current.bindPoint(currentSeries, i);\n                        var value = pointData.valueFields.value;\n                        var plotValue = Math.abs(value);\n                        var fields = pointData.fields;\n                        var angle = plotValue * anglePerValue;\n                        var explode = data.length !== 1 && Boolean(fields.explode);\n                        if (!isFunction(currentSeries.color)) {\n                            currentSeries.color = fields.color || seriesColors[i % colorsCount];\n                        }\n                        var visible = segmentVisible(currentSeries, fields, i);\n                        callback(value, new dataviz.Ring(null, 0, 0, currentAngle, angle), {\n                            owner: this$1,\n                            category: fields.category || '',\n                            index: i,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? plotValue / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: this$1.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (visible !== false) {\n                            currentAngle += angle;\n                        }\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                var segment = new PieSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var points = ref.points;\n                var seriesConfigs = ref.seriesConfigs;\n                if (seriesConfigs === void 0) {\n                    seriesConfigs = [];\n                }\n                var count = points.length;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var newBox = new Box(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth);\n                var newBoxCenter = newBox.center();\n                var boxCenter = box.center();\n                var seriesCount = options.series.length;\n                var leftSideLabels = [];\n                var rightSideLabels = [];\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                var radius = halfMinWidth - padding;\n                var center = new Point(radius + newBox.x1 + padding, radius + newBox.y1 + padding);\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var seriesIndex = segment.seriesIx;\n                    sector.radius = radius;\n                    sector.center = center;\n                    if (seriesConfigs.length) {\n                        var seriesConfig = seriesConfigs[seriesIndex];\n                        sector.innerRadius = seriesConfig.innerRadius;\n                        sector.radius = seriesConfig.radius;\n                    }\n                    if (seriesIndex === seriesCount - 1 && segment.explode) {\n                        sector.center = sector.clone().setRadius(sector.radius * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    var label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex === seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(this.labelComparator(true));\n                    this.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(this.labelComparator(false));\n                    this.rightLabelsReflow(rightSideLabels);\n                }\n                this.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var count = labels.length - 1;\n                var lr = sector.radius + segment.options.labels.distance;\n                var distances = [];\n                var firstBox = labels[0].box;\n                var distance = round(firstBox.y1 - (sector.center.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (var i = 0; i < count; i++) {\n                    var secondBox = labels[i + 1].box;\n                    firstBox = labels[i].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.center.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var this$1 = this;\n                var count = distances.length;\n                var left, right, remaining;\n                for (var i = 0; i < count; i++) {\n                    remaining = -distances[i];\n                    left = right = i;\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = this$1._takeDistance(distances, i, --left, remaining);\n                        remaining = this$1._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                this.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                var result = amount;\n                if (distances[position] > 0) {\n                    var available = Math.min(distances[position], result);\n                    result -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return result;\n            },\n            reflowLabels: function (distances, labels) {\n                var this$1 = this;\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var labelOptions = segment.options.labels;\n                var labelsCount = labels.length;\n                var labelDistance = labelOptions.distance;\n                var boxY = sector.center.y - (sector.radius + labelDistance) - labels[0].box.height();\n                var boxX;\n                distances[0] += 2;\n                for (var i = 0; i < labelsCount; i++) {\n                    var label = labels[i];\n                    var box = label.box;\n                    boxY += distances[i];\n                    boxX = this$1.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation === RIGHT);\n                    if (label.orientation === RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.radius + sector.center.x + labelDistance;\n                        }\n                        label.reflow(new Box(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.center.x - sector.radius - labelDistance;\n                        }\n                        label.reflow(new Box(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var connectors = ref.options.connectors;\n                var points = ref.points;\n                var count = points.length;\n                var space = 4;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var label = segment.label;\n                    var angle = sector.middle();\n                    var connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n                    if (label) {\n                        var connectorLine = new Path({\n                            stroke: {\n                                color: connectorsColor,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END && segment.value !== 0) {\n                            var box = label.box;\n                            var centerPoint = sector.center;\n                            var start = sector.point(angle);\n                            var middle = new Point(box.x1, box.center().y);\n                            var sr = void 0, end = void 0, crossing = void 0;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation === RIGHT) {\n                                end = new Point(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.min(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x < sector.center.x) {\n                                    sr = sector.center.x + sector.radius + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = new Point(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.max(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x > sector.center.x) {\n                                    sr = sector.center.x - sector.radius - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this$1._connectorLines.push(connectorLine);\n                            this$1.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                var reverseValue = reverse ? -1 : 1;\n                return function (a, b) {\n                    var first = (a.parent.sector.middle() + 270) % 360;\n                    var second = (b.parent.sector.middle() + 270) % 360;\n                    return (first - second) * reverseValue;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var radius = sector.radius;\n                var sector_center = sector.center;\n                var cx = sector_center.x;\n                var cy = sector_center.y;\n                var t = Math.min(Math.abs(cy - y1), Math.abs(cy - y2));\n                if (t > radius) {\n                    return originalX;\n                }\n                return cx + Math.sqrt(radius * radius - t * t) * (direction ? 1 : -1);\n            },\n            pointInCircle: function (point, center, radius) {\n                return Math.pow(center.x - point.x, 2) + Math.pow(center.y - point.y, 2) < Math.pow(radius, 2);\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var uat = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\n            var ub = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n            var result;\n            if (ub !== 0) {\n                var ua = uat / ub;\n                result = new Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        setDefaultOptions(PieChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            },\n            inactiveItems: {\n                markers: {},\n                labels: {}\n            }\n        });\n        deepExtend(PieChart.prototype, PieChartMixin);\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createPieChart(this.series);\n            },\n            createPieChart: function (series) {\n                var firstSeries = series[0];\n                var pieChart = new PieChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    startAngle: firstSeries.startAngle,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutSegment = PieSegment.extend({\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius -= (sector.radius - sector.innerRadius) / 2;\n                        var lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(this);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        setDefaultOptions(DonutSegment, {\n            overlay: { gradient: 'roundedGlass' },\n            labels: { position: CENTER },\n            animation: { type: PIE }\n        });\n        deepExtend(DonutSegment.prototype, PointEventsMixin);\n        var DONUT_SECTOR_ANIM_DELAY = 50;\n        var DonutChart = PieChart.extend({\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                var segment = new DonutSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var series = options.series;\n                var seriesCount = series.length;\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                var totalSize = halfMinWidth - padding;\n                var seriesWithoutSize = 0;\n                var holeSize;\n                for (var i = 0; i < seriesCount; i++) {\n                    var currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i !== seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    var currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                var innerRadius = holeSize;\n                var margin = 0;\n                var size, radius;\n                this.seriesConfigs = [];\n                for (var i$1 = 0; i$1 < seriesCount; i$1++) {\n                    var currentSeries$1 = series[i$1];\n                    size = valueOrDefault(currentSeries$1.size, totalSize / seriesWithoutSize);\n                    innerRadius += margin;\n                    radius = innerRadius + size;\n                    this$1.seriesConfigs.push({\n                        innerRadius: innerRadius,\n                        radius: radius\n                    });\n                    margin = currentSeries$1.margin || 0;\n                    innerRadius = radius;\n                }\n                PieChart.fn.reflow.call(this, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        setDefaultOptions(DonutChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                this.createDonutChart(this.series);\n            },\n            createDonutChart: function (series) {\n                var firstSeries = series[0];\n                var donutChart = new DonutChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(donutChart);\n            }\n        });\n        var DEFAULT_PADDING = 0.15;\n        var PolarPlotAreaBase = PlotAreaBase.extend({\n            initFields: function () {\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function () {\n                this.addToLegend(this.series);\n                this.createPolarAxis();\n                this.createCharts();\n                this.createValueAxis();\n            },\n            alignAxes: function () {\n                var axis = this.valueAxis;\n                var range = axis.range();\n                var crossingValue = axis.options.reverse ? range.max : range.min;\n                var slot = axis.getSlot(crossingValue);\n                var center = this.polarAxis.getSlot(0).center;\n                var axisBox = axis.box.translate(center.x - slot.x1, center.y - slot.y1);\n                axis.reflow(axisBox);\n            },\n            createValueAxis: function () {\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var axisOptions = this.valueAxisOptions({\n                    roundToMajorUnit: false,\n                    zIndex: -1\n                });\n                var axisType, axisDefaultRange;\n                if (axisOptions.type === LOGARITHMIC) {\n                    axisType = dataviz.RadarLogarithmicAxis;\n                    axisDefaultRange = {\n                        min: 0.1,\n                        max: 1\n                    };\n                } else {\n                    axisType = dataviz.RadarNumericAxis;\n                    axisDefaultRange = {\n                        min: 0,\n                        max: 1\n                    };\n                }\n                var range = tracker.query(name) || defaultRange || axisDefaultRange;\n                if (range && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var valueAxis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                this.valueAxis = valueAxis;\n                this.appendAxis(valueAxis);\n            },\n            reflowAxes: function () {\n                var ref = this;\n                var options = ref.options.plotArea;\n                var valueAxis = ref.valueAxis;\n                var polarAxis = ref.polarAxis;\n                var box = ref.box;\n                var defaultPadding = Math.min(box.width(), box.height()) * DEFAULT_PADDING;\n                var padding = getSpacing(options.padding || {}, defaultPadding);\n                var axisBox = box.clone().unpad(padding);\n                var valueAxisBox = axisBox.clone().shrink(0, axisBox.height() / 2);\n                polarAxis.reflow(axisBox);\n                valueAxis.reflow(valueAxisBox);\n                var heightDiff = valueAxis.lineBox().height() - valueAxis.box.height();\n                valueAxis.reflow(valueAxis.box.unpad({ top: heightDiff }));\n                this.axisBox = axisBox;\n                this.alignAxes(axisBox);\n            },\n            backgroundBox: function () {\n                return this.box;\n            }\n        });\n        var PolarScatterChart = ScatterChart.extend({\n            pointSlot: function (slotX, slotY) {\n                var valueRadius = slotX.center.y - slotY.y1;\n                var slot = Point.onCircle(slotX.center, slotX.startAngle, valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            }\n        });\n        setDefaultOptions(PolarScatterChart, { clip: false });\n        var PolarLineChart = ScatterLineChart.extend({});\n        PolarLineChart.prototype.pointSlot = PolarScatterChart.prototype.pointSlot;\n        setDefaultOptions(PolarLineChart, { clip: false });\n        var SplinePolarAreaSegment = SplineAreaSegment.extend({\n            closeFill: function (fillPath) {\n                var center = this._polarAxisCenter();\n                fillPath.lineTo(center.x, center.y);\n            },\n            _polarAxisCenter: function () {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                return center;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var center = this._polarAxisCenter();\n                    var curveProcessor = new dataviz.CurveProcessor(false);\n                    var linePoints = LineSegment.prototype.points.call(this);\n                    linePoints.push(center);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                    segments.pop();\n                }\n                return segments;\n            }\n        });\n        var PolarAreaSegment = AreaSegment.extend({\n            points: function () {\n                var ref = this;\n                var polarAxis = ref.parent.plotArea.polarAxis;\n                var stackPoints = ref.stackPoints;\n                var center = polarAxis.box.center();\n                var points = LineSegment.prototype.points.call(this, stackPoints);\n                points.unshift([\n                    center.x,\n                    center.y\n                ]);\n                points.push([\n                    center.x,\n                    center.y\n                ]);\n                return points;\n            }\n        });\n        var PolarAreaChart = PolarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplinePolarAreaSegment(linePoints, null, false, currentSeries, seriesIx);\n                } else {\n                    segment = new PolarAreaSegment(linePoints, [], currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            createMissingValue: function (value, missingValues) {\n                var missingValue;\n                if (hasValue(value.x) && missingValues !== INTERPOLATE) {\n                    missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (missingValues === ZERO) {\n                        missingValue.y = 0;\n                    }\n                }\n                return missingValue;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            },\n            _hasMissingValuesGap: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (this$1.seriesMissingValues(series[idx]) === GAP) {\n                        return true;\n                    }\n                }\n            },\n            sortPoints: function (points) {\n                var this$1 = this;\n                points.sort(xComparer);\n                if (this._hasMissingValuesGap()) {\n                    for (var idx = 0; idx < points.length; idx++) {\n                        var point = points[idx];\n                        if (point) {\n                            var value = point.value;\n                            if (!hasValue(value.y) && this$1.seriesMissingValues(point.series) === GAP) {\n                                delete points[idx];\n                            }\n                        }\n                    }\n                }\n                return points;\n            }\n        });\n        function xComparer(a, b) {\n            return a.value.x - b.value.x;\n        }\n        var PolarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var polarAxis = new dataviz.PolarAxis(this.options.xAxis, this.chartService);\n                this.polarAxis = polarAxis;\n                this.axisX = polarAxis;\n                this.appendAxis(polarAxis);\n            },\n            valueAxisOptions: function (defaults) {\n                return deepExtend(defaults, {\n                    majorGridLines: { type: ARC },\n                    minorGridLines: { type: ARC }\n                }, this.options.yAxis);\n            },\n            createValueAxis: function () {\n                PolarPlotAreaBase.fn.createValueAxis.call(this);\n                this.axisY = this.valueAxis;\n            },\n            appendChart: function (chart, pane) {\n                this.valueAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createLineChart(filterSeriesByType(series, [POLAR_LINE]), pane);\n                this.createScatterChart(filterSeriesByType(series, [POLAR_SCATTER]), pane);\n                this.createAreaChart(filterSeriesByType(series, [POLAR_AREA]), pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new PolarLineChart(this, { series: series });\n                this.appendChart(lineChart, pane);\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var scatterChart = new PolarScatterChart(this, { series: series });\n                this.appendChart(scatterChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new PolarAreaChart(this, { series: series });\n                this.appendChart(areaChart, pane);\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var xValue = this.axisX.getValue(point);\n                var yValue = this.axisY.getValue(point);\n                if (xValue !== null && yValue !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        x: xValue,\n                        y: yValue\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        setDefaultOptions(PolarPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(PolarPlotArea.prototype, PlotAreaEventsMixin);\n        var RadarLineChart = LineChart.extend({\n            pointSlot: function (categorySlot, valueSlot) {\n                var valueRadius = categorySlot.center.y - valueSlot.y1;\n                var slot = Point.onCircle(categorySlot.center, categorySlot.middle(), valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                var segment = new pointType(linePoints, currentSeries, seriesIx);\n                if (linePoints.length === currentSeries.data.length) {\n                    segment.options.closed = true;\n                }\n                return segment;\n            }\n        });\n        setDefaultOptions(RadarLineChart, { clip: false });\n        var SplineRadarAreaSegment = SplineAreaSegment.extend({\n            closeFill: function () {\n            }\n        });\n        var RadarAreaSegment = AreaSegment.extend({\n            points: function () {\n                return LineSegment.prototype.points.call(this, this.stackPoints);\n            }\n        });\n        var RadarAreaChart = RadarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplineRadarAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                    segment.options.closed = true;\n                } else {\n                    var stackPoints;\n                    if (isStacked && seriesIx > 0 && prevSegment) {\n                        stackPoints = prevSegment.linePoints.slice(0).reverse();\n                    }\n                    linePoints.push(linePoints[0]);\n                    segment = new RadarAreaSegment(linePoints, stackPoints, currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var RadarSegment = DonutSegment.extend({\n            init: function (value, options) {\n                DonutSegment.fn.init.call(this, value, null, options);\n            }\n        });\n        setDefaultOptions(RadarSegment, {\n            overlay: { gradient: 'none' },\n            labels: { distance: 10 }\n        });\n        var RadarClusterLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var gap = options.gap;\n                var spacing = options.spacing;\n                var count = children.length;\n                var slots = count + gap + spacing * (count - 1);\n                var slotAngle = sector.angle / slots;\n                var angle = sector.startAngle + slotAngle * (gap / 2);\n                for (var i = 0; i < count; i++) {\n                    var slotSector = sector.clone();\n                    slotSector.startAngle = angle;\n                    slotSector.angle = slotAngle;\n                    if (children[i].sector) {\n                        slotSector.radius = children[i].sector.radius;\n                    }\n                    children[i].reflow(slotSector);\n                    children[i].sector = slotSector;\n                    angle += slotAngle + slotAngle * spacing;\n                }\n            }\n        });\n        setDefaultOptions(RadarClusterLayout, {\n            gap: 1,\n            spacing: 0\n        });\n        var RadarStackLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var reverse = ref.options.reverse;\n                var children = ref.children;\n                var childrenCount = children.length;\n                var first = reverse ? childrenCount - 1 : 0;\n                var step = reverse ? -1 : 1;\n                this.box = new Box();\n                for (var i = first; i >= 0 && i < childrenCount; i += step) {\n                    var childSector = children[i].sector;\n                    childSector.startAngle = sector.startAngle;\n                    childSector.angle = sector.angle;\n                }\n            }\n        });\n        var RadarBarChart = BarChart.extend({\n            pointType: function () {\n                return RadarSegment;\n            },\n            clusterType: function () {\n                return RadarClusterLayout;\n            },\n            stackType: function () {\n                return RadarStackLayout;\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var slot = categorySlot.clone();\n                var y = categorySlot.center.y;\n                slot.radius = y - valueSlot.y1;\n                slot.innerRadius = y - valueSlot.y2;\n                return slot;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.sector = pointSlot;\n                point.reflow();\n            },\n            createAnimation: function () {\n                this.options.animation.center = this.box.toRect().center();\n                BarChart.fn.createAnimation.call(this);\n            }\n        });\n        RadarBarChart.prototype.reflow = CategoricalChart.prototype.reflow;\n        setDefaultOptions(RadarBarChart, {\n            clip: false,\n            animation: { type: 'pie' }\n        });\n        var RadarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var categoryAxis = new dataviz.RadarCategoryAxis(this.options.categoryAxis, this.chartService);\n                this.polarAxis = categoryAxis;\n                this.categoryAxis = categoryAxis;\n                this.appendAxis(categoryAxis);\n                this.aggregateCategories();\n                this.createCategoryAxesLabels();\n            },\n            valueAxisOptions: function (defaults) {\n                if (this._hasBarCharts) {\n                    deepExtend(defaults, {\n                        majorGridLines: { type: ARC },\n                        minorGridLines: { type: ARC }\n                    });\n                }\n                if (this._isStacked100) {\n                    deepExtend(defaults, {\n                        roundToMajorUnit: false,\n                        labels: { format: 'P0' }\n                    });\n                }\n                return deepExtend(defaults, this.options.valueAxis);\n            },\n            aggregateCategories: function () {\n                CategoricalPlotArea.prototype.aggregateCategories.call(this, this.panes);\n            },\n            createCategoryAxesLabels: function () {\n                CategoricalPlotArea.prototype.createCategoryAxesLabels.call(this, this.panes);\n            },\n            filterSeries: function (currentSeries) {\n                return currentSeries;\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createAreaChart(filterSeriesByType(series, [RADAR_AREA]), pane);\n                this.createLineChart(filterSeriesByType(series, [RADAR_LINE]), pane);\n                this.createBarChart(filterSeriesByType(series, [RADAR_COLUMN]), pane);\n            },\n            chartOptions: function (series) {\n                var options = { series: series };\n                var firstSeries = series[0];\n                if (firstSeries) {\n                    var filteredSeries = this.filterVisibleSeries(series);\n                    var stack = firstSeries.stack;\n                    options.isStacked = stack && filteredSeries.length > 1;\n                    options.isStacked100 = stack && stack.type === '100%' && filteredSeries.length > 1;\n                    if (options.isStacked100) {\n                        this._isStacked100 = true;\n                    }\n                }\n                return options;\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new RadarAreaChart(this, this.chartOptions(series));\n                this.appendChart(areaChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new RadarLineChart(this, this.chartOptions(series));\n                this.appendChart(lineChart, pane);\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var options = this.chartOptions(series);\n                options.gap = firstSeries.gap;\n                options.spacing = firstSeries.spacing;\n                var barChart = new RadarBarChart(this, options);\n                this.appendChart(barChart, pane);\n                this._hasBarCharts = true;\n            },\n            seriesCategoryAxis: function () {\n                return this.categoryAxis;\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var category = this.categoryAxis.getCategory(point);\n                var value = this.valueAxis.getValue(point);\n                if (category !== null && value !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        category: category,\n                        value: value\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        deepExtend(RadarPlotArea.prototype, PlotAreaEventsMixin, {\n            appendChart: CategoricalPlotArea.prototype.appendChart,\n            aggregateSeries: CategoricalPlotArea.prototype.aggregateSeries\n        });\n        setDefaultOptions(RadarPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        var FunnelSegment = ChartElement.extend({\n            init: function (value, options, segmentOptions) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.options.index = segmentOptions.index;\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var label = this.children[0];\n                this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n                if (label) {\n                    label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual;\n                ChartElement.fn.createVisual.call(this);\n                if (options.visual) {\n                    visual = options.visual({\n                        category: this.category,\n                        dataItem: this.dataItem,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage,\n                        points: this.points,\n                        options: options,\n                        sender: this.getSender(),\n                        createVisual: function () {\n                            return this$1.createPath();\n                        }\n                    });\n                } else {\n                    visual = this.createPath();\n                }\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            },\n            createPath: function () {\n                var options = this.options;\n                var border = options.border;\n                var path = Path.fromPoints(this.points, {\n                    fill: {\n                        color: options.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: border.color,\n                        opacity: border.opacity,\n                        width: border.width\n                    }\n                }).close();\n                return path;\n            },\n            createHighlight: function (style) {\n                return Path.fromPoints(this.points, style);\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var path = Path.fromPoints(this.points).close();\n                return {\n                    options: this.options,\n                    path: path\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                return {\n                    point: new Point(box.center().x, box.y1),\n                    align: {\n                        horizontal: 'center',\n                        vertical: 'top'\n                    }\n                };\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        setDefaultOptions(FunnelSegment, {\n            color: WHITE,\n            border: { width: 1 }\n        });\n        deepExtend(FunnelSegment.prototype, PointEventsMixin);\n        var FunnelChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.points = [];\n                this.labels = [];\n                this.legendItems = [];\n                this.render();\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            render: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var series = options.series[0];\n                var data = series.data;\n                if (!data) {\n                    return;\n                }\n                var total = seriesTotal(series);\n                for (var i = 0; i < data.length; i++) {\n                    var pointData = SeriesBinder.current.bindPoint(series, i);\n                    var value = pointData.valueFields.value;\n                    if (value === null || value === undefined) {\n                        continue;\n                    }\n                    var fields = pointData.fields;\n                    if (!isFunction(series.color)) {\n                        series.color = fields.color || seriesColors[i % seriesColors.length];\n                    }\n                    var visible = segmentVisible(series, fields, i);\n                    fields = deepExtend({\n                        index: i,\n                        owner: this$1,\n                        series: series,\n                        dataItem: data[i],\n                        percentage: Math.abs(value) / total\n                    }, fields, { visible: visible });\n                    var segment = this$1.createSegment(value, fields);\n                    var label = this$1.createLabel(value, fields);\n                    if (segment && label) {\n                        segment.append(label);\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    index: fields.index\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'toggle',\n                        'visual'\n                    ]\n                });\n            },\n            createSegment: function (value, fields) {\n                var seriesOptions = deepExtend({}, fields.series);\n                this.evalSegmentOptions(seriesOptions, value, fields);\n                this.createLegendItem(value, seriesOptions, fields);\n                if (fields.visible !== false) {\n                    var segment = new FunnelSegment(value, seriesOptions, fields);\n                    $.extend(segment, fields);\n                    this.append(segment);\n                    this.points.push(segment);\n                    return segment;\n                }\n            },\n            createLabel: function (value, fields) {\n                var series = fields.series;\n                var dataItem = fields.dataItem;\n                var labels = deepExtend({}, this.options.labels, series.labels);\n                var text = value;\n                if (labels.visible) {\n                    if (labels.template) {\n                        var labelTemplate = TemplateService.compile(labels.template);\n                        text = labelTemplate({\n                            dataItem: dataItem,\n                            value: value,\n                            percentage: fields.percentage,\n                            category: fields.category,\n                            series: series\n                        });\n                    } else if (labels.format) {\n                        text = this.plotArea.chartService.format.auto(labels.format, text);\n                    }\n                    if (!labels.color) {\n                        var brightnessValue = new Color(series.color).percBrightness();\n                        if (brightnessValue > 180) {\n                            labels.color = BLACK;\n                        } else {\n                            labels.color = WHITE;\n                        }\n                        if (!labels.background) {\n                            labels.background = series.color;\n                        }\n                    }\n                    this.evalSegmentOptions(labels, value, fields);\n                    var textBox = new TextBox(text, deepExtend({ vAlign: labels.position }, labels));\n                    this.labels.push(textBox);\n                    return textBox;\n                }\n            },\n            labelPadding: function () {\n                var labels = this.labels;\n                var padding = {\n                    left: 0,\n                    right: 0\n                };\n                for (var i = 0; i < labels.length; i++) {\n                    var label = labels[i];\n                    var align = label.options.align;\n                    if (align !== CENTER) {\n                        var width = labels[i].box.width();\n                        if (align === LEFT) {\n                            padding.left = Math.max(padding.left, width);\n                        } else {\n                            padding.right = Math.max(padding.right, width);\n                        }\n                    }\n                }\n                return padding;\n            },\n            dynamicSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var firstSegment = segments[0];\n                var maxSegment = firstSegment;\n                for (var idx = 0; idx < segments.length; idx++) {\n                    if (segments[idx].percentage > maxSegment.percentage) {\n                        maxSegment = segments[idx];\n                    }\n                }\n                var lastUpperSide = firstSegment.percentage / maxSegment.percentage * width;\n                var previousOffset = (width - lastUpperSide) / 2;\n                var previousHeight = 0;\n                for (var idx$1 = 0; idx$1 < count; idx$1++) {\n                    var percentage = segments[idx$1].percentage;\n                    var nextSegment = segments[idx$1 + 1];\n                    var nextPercentage = nextSegment ? nextSegment.percentage : percentage;\n                    var points = segments[idx$1].points = [];\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    var offset = void 0;\n                    if (!percentage) {\n                        offset = nextPercentage ? 0 : width / 2;\n                    } else {\n                        offset = (width - lastUpperSide * (nextPercentage / percentage)) / 2;\n                    }\n                    offset = limitValue(offset, 0, width);\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + offset, box.y1 + height + previousHeight));\n                    previousOffset = offset;\n                    previousHeight += height + options.segmentSpacing;\n                    lastUpperSide = limitValue(width - 2 * offset, 0, width);\n                }\n            },\n            constantSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var decreasingWidth = options.neckRatio <= 1;\n                var neckRatio = decreasingWidth ? options.neckRatio * width : width;\n                var previousOffset = decreasingWidth ? 0 : (width - width / options.neckRatio) / 2;\n                var topMostWidth = decreasingWidth ? width : width - previousOffset * 2;\n                var finalNarrow = (topMostWidth - neckRatio) / 2;\n                var previousHeight = 0;\n                for (var idx = 0; idx < count; idx++) {\n                    var points = segments[idx].points = [];\n                    var percentage = segments[idx].percentage;\n                    var offset = options.dynamicHeight ? finalNarrow * percentage : finalNarrow / count;\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + previousOffset + offset, box.y1 + height + previousHeight));\n                    previousOffset += offset;\n                    previousHeight += height + options.segmentSpacing;\n                }\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var count = points.length;\n                if (!count) {\n                    return;\n                }\n                var options = this.options;\n                var box = chartBox.clone().unpad(this.labelPadding());\n                var totalHeight = box.height() - options.segmentSpacing * (count - 1);\n                var width = box.width();\n                if (options.dynamicSlope) {\n                    this.dynamicSlopeReflow(box, width, totalHeight);\n                } else {\n                    this.constantSlopeReflow(box, width, totalHeight);\n                }\n                for (var idx = 0; idx < count; idx++) {\n                    points[idx].reflow(chartBox);\n                }\n            }\n        });\n        setDefaultOptions(FunnelChart, {\n            neckRatio: 0.3,\n            width: 300,\n            dynamicSlope: false,\n            dynamicHeight: true,\n            segmentSpacing: 0,\n            labels: {\n                visible: false,\n                align: CENTER,\n                position: CENTER,\n                zIndex: 1\n            }\n        });\n        deepExtend(FunnelChart.prototype, PieChartMixin);\n        var FunnelPlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createFunnelChart(this.series);\n            },\n            createFunnelChart: function (series) {\n                var firstSeries = series[0];\n                var funnelChart = new FunnelChart(this, {\n                    series: series,\n                    legend: this.options.legend,\n                    neckRatio: firstSeries.neckRatio,\n                    dynamicHeight: firstSeries.dynamicHeight,\n                    dynamicSlope: firstSeries.dynamicSlope,\n                    segmentSpacing: firstSeries.segmentSpacing,\n                    highlight: firstSeries.highlight\n                });\n                this.appendChart(funnelChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var COLOR = 'color';\n        var FIRST = 'first';\n        var FROM = 'from';\n        var MAX = 'max';\n        var MIN = 'min';\n        var NOTE_TEXT = 'noteText';\n        var SUMMARY_FIELD = 'summary';\n        var TO = 'to';\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        PlotAreaFactory.current.register(FunnelPlotArea, [FUNNEL]);\n        PlotAreaFactory.current.register(PolarPlotArea, [\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ]);\n        PlotAreaFactory.current.register(RadarPlotArea, [\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        SeriesBinder.current.register([\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ], [\n            X,\n            Y\n        ], [COLOR]);\n        SeriesBinder.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], [VALUE], [COLOR]);\n        SeriesBinder.current.register([FUNNEL], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            'visible'\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        DefaultAggregates.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], {\n            value: MAX,\n            color: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        var AXIS_NAMES = [\n            CATEGORY,\n            VALUE,\n            X,\n            Y\n        ];\n        var MOUSEMOVE = 'mousemove';\n        var CONTEXTMENU = 'contextmenu';\n        var MOUSEMOVE_DELAY = 20;\n        var Chart = Class.extend({\n            init: function (element, userOptions, themeOptions, context) {\n                var this$1 = this;\n                if (context === void 0) {\n                    context = {};\n                }\n                this.observers = [];\n                this.addObserver(context.observer);\n                this.chartService = new services.ChartService(this, context);\n                this.chartService.theme = themeOptions;\n                this._initElement(element);\n                var options = deepExtend({}, this.options, userOptions);\n                this._originalOptions = deepExtend({}, options);\n                this._theme = themeOptions;\n                this._initTheme(options, themeOptions);\n                this._initSurface();\n                this._initHandlers();\n                this._bindCategories();\n                dataviz.FontLoader.preloadFonts(userOptions, function () {\n                    if (!this$1._destroyed) {\n                        this$1._redraw();\n                        this$1._attachEvents();\n                    }\n                });\n            },\n            _initElement: function (element) {\n                this._setElementClass(element);\n                element.style.position = 'relative';\n                while (element.firstChild) {\n                    element.removeChild(element.firstChild);\n                }\n                this.element = element;\n            },\n            _setElementClass: function (element) {\n                dataviz.addClass(element, 'k-chart');\n            },\n            _initTheme: function (options, themeOptions) {\n                var seriesCopies = [];\n                var series = options.series || [];\n                for (var i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                this._applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    delete options.seriesColors;\n                }\n                this.options = deepExtend({}, themeOptions, options);\n                this._applySeriesColors();\n            },\n            getSize: function () {\n                return {\n                    width: this.element.offsetWidth,\n                    height: this.element.offsetHeight\n                };\n            },\n            resize: function (force) {\n                var size = this.getSize();\n                var currentSize = this._size;\n                if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n                    this._size = size;\n                    this._resize(size, force);\n                    this.trigger('resize', size);\n                }\n            },\n            _resize: function () {\n                this._noTransitionsRedraw();\n            },\n            redraw: function (paneName) {\n                this._applyDefaults(this.options);\n                this._applySeriesColors();\n                if (paneName) {\n                    var plotArea = this._model._plotArea;\n                    var pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    this._redraw();\n                }\n            },\n            getAxis: function (name) {\n                var axes = this._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    if (axes[idx].options.name === name) {\n                        return new ChartAxis(axes[idx]);\n                    }\n                }\n            },\n            findAxisByName: function (name) {\n                return this.getAxis(name);\n            },\n            plotArea: function () {\n                return new ChartPlotArea(this._plotArea);\n            },\n            toggleHighlight: function (show, filter) {\n                var plotArea = this._plotArea;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var points;\n                if (isFunction(filter)) {\n                    points = plotArea.filterPoints(filter);\n                } else {\n                    var seriesName, categoryName;\n                    if (isObject(filter)) {\n                        seriesName = filter.series;\n                        categoryName = filter.category;\n                    } else {\n                        seriesName = categoryName = filter;\n                    }\n                    if (firstSeries.type === DONUT) {\n                        points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                    } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                        points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                    } else {\n                        points = plotArea.pointsBySeriesName(seriesName);\n                    }\n                }\n                if (points) {\n                    this._togglePointsHighlight(show, points);\n                }\n            },\n            _togglePointsHighlight: function (show, points) {\n                var highlight = this._highlight;\n                for (var idx = 0; idx < points.length; idx++) {\n                    highlight.togglePointHighlight(points[idx], show);\n                }\n            },\n            showTooltip: function (filter) {\n                var shared = this._sharedTooltip();\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var plotArea = ref._plotArea;\n                var point, categoryIndex;\n                if (isFunction(filter)) {\n                    point = plotArea.findPoint(filter);\n                    if (point && shared) {\n                        categoryIndex = point.categoryIx;\n                    }\n                } else if (shared && defined(filter)) {\n                    categoryIndex = plotArea.categoryAxis.categoryIndex(filter);\n                }\n                if (shared) {\n                    if (categoryIndex >= 0) {\n                        var points = this._plotArea.pointsByCategoryIndex(categoryIndex);\n                        tooltip.showAt(points);\n                    }\n                } else if (point) {\n                    tooltip.show(point);\n                }\n            },\n            hideTooltip: function () {\n                this._tooltip.hide();\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea;\n                if (chartArea.width) {\n                    dataviz.elementSize(wrap, { width: chartArea.width });\n                }\n                if (chartArea.height) {\n                    dataviz.elementSize(wrap, { height: chartArea.height });\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    if (surface) {\n                        surface.destroy();\n                    }\n                    this.surface = drawing.Surface.create(wrap, { type: this.options.renderAs });\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var model = this._getModel();\n                this._destroyView();\n                this._model = model;\n                this._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                this._initSurface();\n                this.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                this._tooltip = this._createTooltip();\n                this._highlight = new Highlight();\n                this._setupSelection();\n                this._createPannable();\n                this._createZoomSelection();\n                this._createMousewheelZoom();\n                this.trigger(RENDER);\n                if (!this._navState) {\n                    this._cancelDomEvents();\n                }\n            },\n            exportVisual: function (options) {\n                var visual;\n                if (options && (options.width || options.height)) {\n                    var chartArea = this.options.chartArea;\n                    var originalChartArea = this._originalOptions.chartArea;\n                    deepExtend(chartArea, options);\n                    var model = this._getModel();\n                    chartArea.width = originalChartArea.width;\n                    chartArea.height = originalChartArea.height;\n                    model.renderVisual();\n                    visual = model.visual;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                return this._plotArea instanceof CategoricalPlotArea && this.options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _createTooltip: function () {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var tooltip;\n                if (this._sharedTooltip()) {\n                    tooltip = new SharedTooltip(this._plotArea, tooltipOptions);\n                } else {\n                    tooltip = new Tooltip(this.chartService, tooltipOptions);\n                }\n                return tooltip;\n            },\n            _applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            _applySeriesColors: function () {\n                var options = this.options;\n                var series = options.series;\n                var colors = options.seriesColors || [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var seriesColor = colors[i % colors.length];\n                    var defaults = currentSeries._defaults;\n                    currentSeries.color = currentSeries.color || seriesColor;\n                    if (defaults) {\n                        defaults.color = defaults.color || seriesColor;\n                    }\n                }\n            },\n            _getModel: function () {\n                var options = this.options;\n                var plotArea = this._createPlotArea();\n                var model = new dataviz.RootElement(this._modelOptions());\n                model.chart = this;\n                model._plotArea = plotArea;\n                dataviz.Title.buildTitle(options.title, model);\n                if (options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend, this.chartService));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var element = ref.element;\n                var size = dataviz.elementSize(element);\n                this._size = null;\n                return deepExtend({\n                    width: Math.floor(size.width) || datavizConstants.DEFAULT_WIDTH,\n                    height: Math.floor(size.height) || datavizConstants.DEFAULT_HEIGHT,\n                    transitions: options.transitions\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var options = this.options;\n                var plotArea = PlotAreaFactory.current.create(skipSeries ? [] : options.series, options, this.chartService);\n                return plotArea;\n            },\n            _hasSelection: function () {\n                return this._selections && this._selections.length;\n            },\n            _setupSelection: function () {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref._plotArea.axes;\n                var selections = this._selections = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        var min = 0;\n                        var max = options.categories.length - 1;\n                        if (axis instanceof DateCategoryAxis) {\n                            min = options.categories[min];\n                            max = options.categories[max];\n                        }\n                        if (!options.justified) {\n                            if (axis instanceof DateCategoryAxis) {\n                                max = dataviz.addDuration(max, 1, options.baseUnit, options.weekStartDay);\n                            } else {\n                                max++;\n                            }\n                        }\n                        var selection = new Selection(this$1, axis, deepExtend({\n                            min: min,\n                            max: max\n                        }, options.select));\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _initHandlers: function () {\n                this._clickHandler = this._click.bind(this);\n                this._mousewheelHandler = this._mousewheel.bind(this);\n                this._surfaceMouseenterHandler = this._mouseover.bind(this);\n                this._surfaceMouseleaveHandler = this._mouseout.bind(this);\n                this._mousemove = kendo.throttle(this._mousemove.bind(this), MOUSEMOVE_DELAY);\n            },\n            addObserver: function (observer) {\n                if (observer) {\n                    this.observers.push(observer);\n                }\n            },\n            removeObserver: function (observer) {\n                var index = this.observers.indexOf(observer);\n                if (index >= 0) {\n                    this.observers.splice(index, 1);\n                }\n            },\n            requiresHandlers: function (eventNames) {\n                var observers = this.observers;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].requiresHandlers(eventNames)) {\n                        return true;\n                    }\n                }\n            },\n            trigger: function (name, args) {\n                if (args === void 0) {\n                    args = {};\n                }\n                if (name === SHOW_TOOLTIP) {\n                    args.anchor.point = this._toDocumentCoordinates(args.anchor.point);\n                }\n                args.sender = this;\n                var observers = this.observers;\n                var isDefaultPrevented = false;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].trigger(name, args)) {\n                        isDefaultPrevented = true;\n                    }\n                }\n                return isDefaultPrevented;\n            },\n            _attachEvents: function () {\n                var ref = this;\n                var element = ref.element;\n                var surface = ref.surface;\n                surface.bind('mouseenter', this._surfaceMouseenterHandler);\n                surface.bind('mouseleave', this._surfaceMouseleaveHandler);\n                var obj;\n                bindEvents(element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n                this.domEvents = services.DomEventsBuilder.create(this.element, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            _cancelDomEvents: function () {\n                if (this.domEvents && this.domEvents.cancel) {\n                    this.domEvents.cancel();\n                }\n            },\n            _gesturestart: function (e) {\n                if (this._mousewheelZoom && !this._stopDragEvent(e)) {\n                    this._gestureDistance = e.distance;\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                }\n            },\n            _gestureend: function (e) {\n                if (this._zooming && !this._stopDragEvent(e)) {\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                    this._zooming = false;\n                    this.trigger(ZOOM_END, {});\n                }\n            },\n            _gesturechange: function (e) {\n                var mousewheelZoom = this._mousewheelZoom;\n                if (mousewheelZoom && !this._stopDragEvent(e)) {\n                    e.preventDefault();\n                    var previousGestureDistance = this._gestureDistance;\n                    var scaleDelta = -e.distance / previousGestureDistance + 1;\n                    if (Math.abs(scaleDelta) >= 0.1) {\n                        scaleDelta = Math.round(scaleDelta * 10);\n                        this._gestureDistance = e.distance;\n                        var args = {\n                            delta: scaleDelta,\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        };\n                        if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                            if (!this._zooming) {\n                                this._zooming = true;\n                            }\n                            var ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                            if (ranges && !this.trigger(ZOOM, args)) {\n                                mousewheelZoom.zoom();\n                            }\n                        }\n                    }\n                }\n            },\n            _mouseout: function (e) {\n                if (e.element) {\n                    var element = this._drawingChartElement(e.element, e);\n                    if (element && element.leave) {\n                        element.leave(this, e.originalEvent);\n                    }\n                }\n            },\n            _start: function (e) {\n                var coords = this._eventCoordinates(e);\n                if (this._stopDragEvent(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (this.requiresHandlers([\n                        DRAG_START,\n                        DRAG,\n                        DRAG_END\n                    ])) {\n                    this._startNavigation(e, coords, DRAG_START);\n                }\n                if (this._pannable && this._pannable.start(e)) {\n                    this.surface.suspendTracking();\n                    this._unsetActivePoint();\n                    this._suppressHover = true;\n                }\n                if (this._zoomSelection) {\n                    if (this._zoomSelection.start(e)) {\n                        this.trigger(ZOOM_START, {\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _move: function (e) {\n                var ref = this;\n                var state = ref._navState;\n                var pannable = ref._pannable;\n                if (this._stopDragEvent(e)) {\n                    return;\n                }\n                if (pannable) {\n                    var ranges = pannable.move(e);\n                    if (ranges && !this.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    var ranges$1 = {};\n                    var axes = state.axes;\n                    for (var i = 0; i < axes.length; i++) {\n                        var currentAxis = axes[i];\n                        var axisName = currentAxis.options.name;\n                        if (axisName) {\n                            var axis = currentAxis.options.vertical ? e.y : e.x;\n                            var delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges$1[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges$1;\n                    this.trigger(DRAG, {\n                        axisRanges: ranges$1,\n                        originalEvent: e\n                    });\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                if (this._stopDragEvent(e)) {\n                    return;\n                }\n                var pannable = this._pannable;\n                if (pannable && pannable.end(e)) {\n                    this.surface.resumeTracking();\n                    this.trigger(DRAG_END, {\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                } else {\n                    this._endNavigation(e, DRAG_END);\n                }\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                        this.trigger(ZOOM_END, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _stopDragEvent: function () {\n                return this._hasSelection();\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                var mousewheelZoom = this._mousewheelZoom;\n                var coords = this._eventCoordinates(e);\n                if (!this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (mousewheelZoom) {\n                    var args = {\n                        delta: delta,\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    };\n                    if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                        e.preventDefault();\n                        if (!this._zooming) {\n                            this._unsetActivePoint();\n                            this.surface.suspendTracking();\n                            this._zooming = true;\n                        }\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        args.axisRanges = mousewheelZoom.updateRanges(delta);\n                        if (args.axisRanges && !this.trigger(ZOOM, args)) {\n                            mousewheelZoom.zoom();\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1.trigger(ZOOM_END, args);\n                            this$1._zooming = false;\n                            if (this$1.surface) {\n                                this$1.surface.resumeTracking();\n                            }\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                } else {\n                    var state = this._navState;\n                    if (!state) {\n                        var prevented = this._startNavigation(e, coords, ZOOM_START);\n                        if (!prevented) {\n                            state = this._navState;\n                        }\n                    }\n                    if (state) {\n                        var totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        var axes = this._navState.axes;\n                        var ranges = {};\n                        for (var i = 0; i < axes.length; i++) {\n                            var currentAxis = axes[i];\n                            var axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        this.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, coords, chartEvent) {\n                var plotArea = this._model._plotArea;\n                var pane = plotArea.findPointPane(coords);\n                var axes = plotArea.axes.slice(0);\n                if (!pane) {\n                    return;\n                }\n                var ranges = axisRanges(axes);\n                var prevented = this.trigger(chartEvent, {\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n                if (prevented) {\n                    this._cancelDomEvents();\n                } else {\n                    this._suppressHover = true;\n                    this._unsetActivePoint();\n                    this._navState = {\n                        axisRanges: ranges,\n                        pane: pane,\n                        axes: axes\n                    };\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                if (this._navState) {\n                    this.trigger(chartEvent, {\n                        axisRanges: this._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                    this._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (element) {\n                    return this._drawingChartElement(element, e, match);\n                }\n            },\n            _drawingChartElement: function (element, e, match) {\n                var current = element;\n                var chartElement;\n                while (current && !chartElement) {\n                    chartElement = current.chartElement;\n                    current = current.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var coordinates = dataviz.eventCoordinates(e);\n                return this._toModelCoordinates(coordinates.x, coordinates.y);\n            },\n            _elementPadding: function () {\n                if (!this._padding) {\n                    var ref = elementStyles(this.element, [\n                        'paddingLeft',\n                        'paddingTop'\n                    ]);\n                    var paddingLeft = ref.paddingLeft;\n                    var paddingTop = ref.paddingTop;\n                    this._padding = {\n                        top: paddingTop,\n                        left: paddingLeft\n                    };\n                }\n                return this._padding;\n            },\n            _toDocumentCoordinates: function (point) {\n                var padding = this._elementPadding();\n                var offset = dataviz.elementOffset(this.element);\n                return {\n                    left: round(point.x + padding.left + offset.left),\n                    top: round(point.y + padding.top + offset.top)\n                };\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element;\n                var offset = dataviz.elementOffset(element);\n                var padding = this._elementPadding();\n                return new Point(clientX - offset.left - padding.left, clientY - offset.top - padding.top);\n            },\n            _tap: function (e) {\n                var this$1 = this;\n                var drawingElement = this.surface.eventTarget(e);\n                var element = this._drawingChartElement(drawingElement, e);\n                if (this._activePoint === element) {\n                    this._propagateClick(element, e);\n                } else {\n                    if (!this._startHover(drawingElement, e)) {\n                        this._unsetActivePoint();\n                    }\n                    this._propagateClick(element, e);\n                }\n                this.handlingTap = true;\n                setTimeout(function () {\n                    this$1.handlingTap = false;\n                }, 0);\n            },\n            _click: function (e) {\n                var element = this._getChartElement(e);\n                this._propagateClick(element, e);\n            },\n            _propagateClick: function (element, e) {\n                var this$1 = this;\n                var current = element;\n                while (current) {\n                    if (current.click) {\n                        current.click(this$1, e);\n                    }\n                    current = current.parent;\n                }\n            },\n            _startHover: function (element, e) {\n                var chartElement = this._drawingChartElement(element, e);\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (this._suppressHover || !highlight || highlight.isHighlighted(chartElement) || this._sharedTooltip()) {\n                    return false;\n                }\n                var point = this._drawingChartElement(element, e, function (element) {\n                    return element.hover && !(element instanceof PlotAreaBase);\n                });\n                if (point && !point.hover(this, e)) {\n                    this._activePoint = point;\n                    var tooltipOptions = deepExtend({}, tooltipOptions, point.options.tooltip);\n                    if (tooltipOptions.visible) {\n                        tooltip.show(point);\n                    }\n                    highlight.show(point);\n                    return point;\n                }\n            },\n            _mouseover: function (e) {\n                var point = this._startHover(e.element, e.originalEvent);\n                if (point && point.tooltipTracking) {\n                    this._mouseMoveTrackHandler = this._mouseMoveTrackHandler || this._mouseMoveTracking.bind(this);\n                    var obj;\n                    bindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                var point = ref._activePoint;\n                var coords = this._eventCoordinates(e);\n                if (this._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        var seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint !== point) {\n                            seriesPoint.hover(this, e);\n                            this._activePoint = seriesPoint;\n                            var tooltipOptions = deepExtend({}, options.tooltip, point.options.tooltip);\n                            if (tooltipOptions.visible) {\n                                tooltip.show(seriesPoint);\n                            }\n                            highlight.show(seriesPoint);\n                        }\n                    }\n                } else {\n                    var obj;\n                    unbindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                    this._unsetActivePoint();\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                this._trackCrosshairs(coords);\n                if (this._plotArea.hover) {\n                    this._plotArea.hover(this, e);\n                }\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs;\n                for (var i = 0; i < crosshairs.length; i++) {\n                    var current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e) {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var plotArea = ref._plotArea;\n                var categoryAxis = ref._plotArea.categoryAxis;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (plotArea.box.containsPoint(coords)) {\n                    var index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== this._tooltipCategoryIx) {\n                        var points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = points.map(function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                        } else {\n                            tooltip.hide();\n                        }\n                        this._tooltipCategoryIx = index;\n                    }\n                }\n            },\n            hideElements: function () {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._mousemove.cancel();\n                plotArea.hideCrosshairs();\n                highlight.hide();\n                tooltip.hide();\n                delete this._tooltipCategoryIx;\n            },\n            _unsetActivePoint: function () {\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._activePoint = null;\n                if (tooltip) {\n                    tooltip.hide();\n                }\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _deferRedraw: function () {\n                this._redraw();\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            _bindCategories: function () {\n                var this$1 = this;\n                var options = this.options;\n                var definitions = [].concat(options.categoryAxis);\n                for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    var axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        this$1._bindCategoryAxisFromSeries(axis, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesLength = series.length;\n                var uniqueCategories = {};\n                var items = [];\n                var dateAxis;\n                for (var seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    var s = series[seriesIx];\n                    var onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    var data = s.data;\n                    var dataLength = data.length;\n                    if (s.categoryField && onAxis && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        var getFn = dateAxis ? getDateField : getField;\n                        for (var dataIx = 0; dataIx < dataLength; dataIx++) {\n                            var dataRow = data[dataIx];\n                            var category = getFn(s.categoryField, dataRow, this$1.chartService.intl);\n                            if (dateAxis || !uniqueCategories[category]) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories[category] = true;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dataviz.dateComparer(a[0], b[0]);\n                        });\n                    }\n                    var result = transpose(items);\n                    axis.categories = result[0];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series);\n                var result = true;\n                for (var i = 0; i < valueFields.length; i++) {\n                    var field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _noTransitionsRedraw: function () {\n                var options = this.options;\n                var transitionsState;\n                if (options.transitions) {\n                    options.transitions = false;\n                    transitionsState = true;\n                }\n                this.redraw();\n                if (transitionsState) {\n                    options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var highlight = ref._highlight;\n                var currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                var items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    items = plotArea.findPoint(function (point) {\n                        return point.series.index === seriesIndex && point.index === pointIndex;\n                    });\n                } else {\n                    items = plotArea.pointsBySeriesIndex(seriesIndex);\n                }\n                highlight.show(items);\n            },\n            _shouldAttachMouseMove: function () {\n                return this._plotArea.crosshairs.length || this._tooltip && this._sharedTooltip() || this.requiresHandlers([PLOT_AREA_HOVER]);\n            },\n            updateMouseMoveHandler: function () {\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(this.element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n            },\n            applyOptions: function (options, theme) {\n                clearMissingValues(this._originalOptions, options);\n                this._originalOptions = deepExtend(this._originalOptions, options);\n                this.options = deepExtend({}, this._originalOptions);\n                if (theme) {\n                    this._theme = theme;\n                    this.chartService.theme = theme;\n                }\n                this._initTheme(this.options, this._theme);\n            },\n            setOptions: function (options, theme) {\n                this.applyOptions(options, theme);\n                this._bindCategories();\n                this.redraw();\n                this.updateMouseMoveHandler();\n            },\n            destroy: function () {\n                this._destroyed = true;\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this.domEvents) {\n                    this.domEvents.destroy();\n                    delete this.domEvents;\n                }\n                var obj$1;\n                unbindEvents(document, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mouseMoveTrackHandler, obj$1));\n                this._destroyView();\n                this.surface.destroy();\n                this.surface = null;\n                this._clearRedrawTimeout();\n            },\n            _destroyView: function () {\n                var ref = this;\n                var model = ref._model;\n                var selections = ref._selections;\n                if (model) {\n                    model.destroy();\n                    this._model = null;\n                }\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n                this._unsetActivePoint();\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                }\n                if (this._highlight) {\n                    this._highlight.destroy();\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.destroy();\n                    delete this._zoomSelection;\n                }\n                if (this._pannable) {\n                    this._pannable.destroy();\n                    delete this._pannable;\n                }\n                if (this._mousewheelZoom) {\n                    this._mousewheelZoom.destroy();\n                    delete this._mousewheelZoom;\n                }\n            }\n        });\n        function resolveAxisAliases(options) {\n            var aliases = AXIS_NAMES;\n            for (var idx = 0; idx < aliases.length; idx++) {\n                var alias = aliases[idx] + 'Axes';\n                if (options[alias]) {\n                    options[aliases[idx] + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            }\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            var axisName, axisDefaults, axes;\n            function mapAxisOptions(axisOptions) {\n                var axisColor = (axisOptions || {}).color || axisDefaults.color;\n                var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                    line: { color: axisColor },\n                    labels: { color: axisColor },\n                    title: { color: axisColor }\n                }, axisOptions);\n                delete result[axisName];\n                return result;\n            }\n            for (var idx = 0; idx < AXIS_NAMES.length; idx++) {\n                axisName = AXIS_NAMES[idx] + 'Axis';\n                axisDefaults = options.axisDefaults || {};\n                axes = [].concat(options[axisName]);\n                axes = axes.map(mapAxisOptions);\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            }\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series;\n            var seriesLength = series.length;\n            var seriesDefaults = options.seriesDefaults;\n            var commonDefaults = deepExtend({}, options.seriesDefaults);\n            var themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {};\n            var commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (var i = 0; i < seriesLength; i++) {\n                var seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function axisRanges(axes) {\n            var ranges = {};\n            for (var i = 0; i < axes.length; i++) {\n                var axis = axes[i];\n                var axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function sortDates(dates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            var dates = sortDates(srcDates, comparer);\n            var length = dates.length;\n            var result = length > 0 ? [dates[0]] : [];\n            for (var i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function transpose(rows) {\n            var rowCount = rows.length;\n            var result = [];\n            for (var rowIx = 0; rowIx < rowCount; rowIx++) {\n                var row = rows[rowIx];\n                var colCount = row.length;\n                for (var colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        function clearMissingValues(originalOptions, options) {\n            for (var field in options) {\n                var fieldValue = options[field];\n                var originalValue = originalOptions[field];\n                if (defined(originalValue)) {\n                    var nullValue = fieldValue === null;\n                    if (nullValue || !defined(fieldValue)) {\n                        delete originalOptions[field];\n                        if (nullValue) {\n                            delete options[field];\n                        }\n                    } else if (originalValue && isObject(fieldValue)) {\n                        if (isObject(originalValue)) {\n                            clearMissingValues(originalValue, fieldValue);\n                        }\n                    }\n                }\n            }\n        }\n        setDefaultOptions(Chart, {\n            renderAs: '',\n            chartArea: {},\n            legend: {\n                visible: true,\n                labels: {}\n            },\n            categoryAxis: {},\n            seriesDefaults: {\n                type: COLUMN,\n                data: [],\n                highlight: { visible: true },\n                labels: {},\n                negativeValues: { visible: false }\n            },\n            series: [],\n            seriesColors: null,\n            tooltip: { visible: false },\n            transitions: true,\n            valueAxis: {},\n            plotArea: {},\n            title: {},\n            xAxis: {},\n            yAxis: {},\n            panes: [{}],\n            pannable: false,\n            zoomable: false\n        });\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BoxPlotChart: BoxPlotChart,\n            BoxPlot: BoxPlot,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            Chart: Chart,\n            ChartContainer: ChartContainer,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaEventsMixin: PlotAreaEventsMixin,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            MousewheelZoom: MousewheelZoom,\n            ZoomSelection: ZoomSelection,\n            Pannable: Pannable,\n            ChartAxis: ChartAxis,\n            ChartPlotArea: ChartPlotArea,\n            anyHasZIndex: anyHasZIndex,\n            appendIfNotNull: areNumbers,\n            areNumbers: areNumbers,\n            categoriesCount: categoriesCount,\n            countNumbers: countNumbers,\n            equalsIgnoreCase: equalsIgnoreCase,\n            evalOptions: evalOptions,\n            filterSeriesByType: filterSeriesByType,\n            getDateField: getDateField,\n            getField: getField,\n            hasGradientOverlay: hasGradientOverlay,\n            hasValue: hasValue,\n            isDateAxis: isDateAxis,\n            segmentVisible: segmentVisible,\n            seriesTotal: seriesTotal,\n            singleItemOrArray: singleItemOrArray\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/chart', [\n        'dataviz/chart/kendo-chart',\n        'kendo.data',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'kendo.drawing',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var NS = '.kendoChart';\n        var kendo = window.kendo;\n        var Class = kendo.Class;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n        var dataviz = kendo.dataviz;\n        var constants = dataviz.constants;\n        var KendoChart = dataviz.Chart;\n        var SeriesBinder = dataviz.SeriesBinder;\n        var Widget = kendo.ui.Widget;\n        var DataSource = kendo.data.DataSource;\n        var deepExtend = kendo.deepExtend;\n        var defined = dataviz.defined;\n        var getField = dataviz.getField;\n        var InstanceObserver = dataviz.InstanceObserver;\n        var inArray = dataviz.inArray;\n        var services = dataviz.services;\n        var proxy = $.proxy;\n        var isArray = $.isArray;\n        var template = kendo.template;\n        var MOUSELEAVE_NS = 'mouseleave' + NS;\n        var AXIS_LABEL_CLICK = constants.AXIS_LABEL_CLICK;\n        var LEGEND_ITEM_CLICK = constants.LEGEND_ITEM_CLICK;\n        var LEGEND_ITEM_HOVER = constants.LEGEND_ITEM_HOVER;\n        var SERIES_CLICK = constants.SERIES_CLICK;\n        var SERIES_HOVER = constants.SERIES_HOVER;\n        var PLOT_AREA_CLICK = constants.PLOT_AREA_CLICK;\n        var PLOT_AREA_HOVER = constants.PLOT_AREA_HOVER;\n        var DRAG = constants.DRAG;\n        var DRAG_END = constants.DRAG_END;\n        var DRAG_START = constants.DRAG_START;\n        var ZOOM_START = constants.ZOOM_START;\n        var ZOOM = constants.ZOOM;\n        var ZOOM_END = constants.ZOOM_END;\n        var SELECT_START = constants.SELECT_START;\n        var SELECT = constants.SELECT;\n        var SELECT_END = constants.SELECT_END;\n        var RENDER = constants.RENDER;\n        var NOTE_CLICK = constants.NOTE_CLICK;\n        var NOTE_HOVER = constants.NOTE_HOVER;\n        var CHANGE = 'change';\n        var DATABOUND = 'dataBound';\n        var LEAVE = 'leave';\n        var VALUE = constants.VALUE;\n        var PIE = constants.PIE;\n        var DONUT = constants.DONUT;\n        var FUNNEL = constants.FUNNEL;\n        var Observable = kendo.Observable;\n        var TOOLTIP_ANIMATION_DURATION = 150;\n        var TOOLTIP_SHOW_DELAY = 100;\n        var TOOLTIP_INVERSE = 'k-chart-tooltip-inverse';\n        var SHARED_TOOLTIP_CLASS = 'k-chart-shared-tooltip';\n        services.DomEventsBuilder.register({\n            create: function (element, events) {\n                return new kendo.UserEvents(element, deepExtend({\n                    global: true,\n                    multiTouch: true,\n                    fastTap: true\n                }, events));\n            }\n        });\n        var ChartInstanceObserver = InstanceObserver.extend({\n            handlerMap: {\n                showTooltip: '_showTooltip',\n                hideTooltip: '_hideTooltip',\n                legendItemClick: '_onLegendItemClick',\n                render: '_onRender'\n            }\n        });\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(this, element);\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    delete userOptions.dataSource;\n                }\n                this.options = deepExtend({}, this.options, userOptions);\n                this.wrapper = this.element;\n                this._attachEvents();\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                this.bind(this.events, this.options);\n                this._initDataSource(userOptions);\n                kendo.notify(this, dataviz.ui);\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                PLOT_AREA_CLICK,\n                PLOT_AREA_HOVER,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                RENDER\n            ],\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                chartArea: {},\n                legend: {},\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {},\n                series: [],\n                seriesColors: null,\n                tooltip: {},\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            items: function () {\n                return $();\n            },\n            refresh: function () {\n                var chart = this;\n                var instance = chart._instance;\n                instance._applyDefaults(chart.options);\n                instance._applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            redraw: function (paneName) {\n                this._size = null;\n                this._instance.redraw(paneName);\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                delete options.dataSource;\n                Widget.fn._setEvents.call(chart, options);\n                this._instance.applyOptions(options, this._getThemeOptions(options));\n                this.options = this._instance.options;\n                this._tooltip.setOptions(this.options.tooltip);\n                this._sourceSeries = null;\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                chart._instance.updateMouseMoveHandler();\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                }\n                if (chart._instance) {\n                    chart._instance.destroy();\n                    delete this._instance;\n                }\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                    delete this._tooltip;\n                }\n                this._destroyCrosshairTooltips();\n                Widget.fn.destroy.call(chart);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(this, panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(this, panes[idx]);\n                }\n            },\n            findSeries: function (callback) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (callback(series[idx])) {\n                        return new ChartSeries(this, series[idx]);\n                    }\n                }\n            },\n            findSeriesByName: function (name) {\n                return this._createSeries({ name: name });\n            },\n            findSeriesByIndex: function (index) {\n                return this._createSeries({ index: index });\n            },\n            _createSeries: function (options) {\n                var seriesOptions = this._seriesOptions(options);\n                if (seriesOptions) {\n                    return new ChartSeries(this, seriesOptions);\n                }\n            },\n            _seriesOptions: function (options) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                var seriesOptions;\n                if (defined(options.index)) {\n                    seriesOptions = series[options.index];\n                } else if (defined(options.name)) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (series[idx].name === options.name) {\n                            seriesOptions = series[idx];\n                            break;\n                        }\n                    }\n                }\n                return seriesOptions;\n            },\n            _attachEvents: function () {\n                this.element.on(MOUSELEAVE_NS, proxy(this._mouseleave, this));\n            },\n            _mouseleave: function (e) {\n                var instance = this._instance;\n                var tooltip = this._tooltip;\n                var target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length) && instance && !instance.handlingTap) {\n                    instance.hideElements();\n                }\n            },\n            _getThemeOptions: function (userOptions) {\n                var themeName = (userOptions || {}).theme;\n                if (defined(themeName)) {\n                    var themes = dataviz.ui.themes || {};\n                    var theme = themes[themeName] || themes[themeName.toLowerCase()] || {};\n                    return theme.chart || {};\n                }\n            },\n            _initChart: function () {\n                this._createChart(this.options, this._getThemeOptions(this.options));\n                this.options = this._instance.options;\n            },\n            _createChart: function (options, themeOptions) {\n                this._instance = new KendoChart(this.element[0], options, themeOptions, {\n                    observer: new ChartInstanceObserver(this),\n                    sender: this\n                });\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind('change', chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                this._initChart();\n                this._initTooltip();\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            _destroyCrosshairTooltips: function () {\n                var tooltips = this._crosshairTooltips;\n                if (tooltips) {\n                    for (var key in tooltips) {\n                        tooltips[key].destroy();\n                    }\n                }\n                this._crosshairTooltips = {};\n            },\n            _getCrosshairTooltip: function (name, index) {\n                var tooltips = this._crosshairTooltips = this._crosshairTooltips || {};\n                var key = name + index;\n                var tooltip = tooltips[key];\n                if (!tooltip) {\n                    tooltip = tooltips[key] = new CrosshairTooltip(this.element);\n                }\n                return tooltip;\n            },\n            _showTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.show(e);\n                } else if (this._tooltip) {\n                    this._tooltip.show(e);\n                }\n            },\n            _hideTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.hide();\n                } else if (this._tooltip) {\n                    this._tooltip.hide(e);\n                }\n            },\n            _onRender: function (e) {\n                this._destroyCrosshairTooltips();\n                this._copyMembers(e.sender);\n                if (!this._hasDataSource || this._hasData || !this.options.autoBind) {\n                    this.trigger(RENDER);\n                }\n            },\n            _copyMembers: function (instance) {\n                this.options = instance.options;\n                this._originalOptions = instance._originalOptions;\n                this.surface = instance.surface;\n                this._plotArea = instance._plotArea;\n                this._model = instance._model;\n                this._highlight = instance._highlight;\n                this._selections = instance._selections;\n                this._pannable = instance._pannable;\n                this._zoomSelection = instance._zoomSelection;\n                this._mousewheelZoom = instance._mousewheelZoom;\n            },\n            requiresHandlers: function (names) {\n                var events = this._events;\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (defined(events[names[idx]])) {\n                        return true;\n                    }\n                }\n            },\n            _initTooltip: function () {\n                this._tooltip = this._createTooltip();\n                this._tooltip.bind(LEAVE, proxy(this._tooltipleave, this));\n            },\n            _onLegendItemClick: function (e) {\n                if (!this.trigger(LEGEND_ITEM_CLICK, e)) {\n                    this._legendItemClick(e.seriesIndex, e.pointIndex);\n                }\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this._instance, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                if ($.inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ]) >= 0) {\n                    var pointVisibility = currentSeries.pointVisibility = currentSeries.pointVisibility || {};\n                    var visible = pointVisibility[pointIndex];\n                    pointVisibility[pointIndex] = defined(visible) ? !visible : false;\n                } else {\n                    currentSeries.visible = !currentSeries.visible;\n                    this._saveGroupVisibleState(currentSeries);\n                }\n                chart._noTransitionsRedraw();\n            },\n            _createTooltip: function () {\n                return new Tooltip(this.element, this.options.tooltip);\n            },\n            _tooltipleave: function () {\n                var chart = this._instance, plotArea = chart._plotArea, highlight = chart._highlight;\n                plotArea.hideCrosshairs();\n                highlight.hide();\n            },\n            _bindData: function (e) {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], currentSeries;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        processedSeries = processedSeries.concat(groupSeries(currentSeries, data));\n                        this._applyGroupVisibleState(processedSeries, e);\n                    } else {\n                        processedSeries.push(currentSeries || []);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                this._instance._applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                this._hasData = true;\n            },\n            _onDataChanged: function (e) {\n                this._bindData(e);\n                this.trigger(DATABOUND);\n                this._redraw();\n            },\n            _applyGroupVisibleState: function (processedSeries, e) {\n                if (e && e.action) {\n                    var visibleState = this._groupVisibleState = this._groupVisibleState || {};\n                    for (var idx = 0; idx < processedSeries.length; idx++) {\n                        if (visibleState[processedSeries[idx]._groupValue] === false) {\n                            processedSeries[idx].visible = false;\n                        }\n                    }\n                } else {\n                    delete this._groupVisibleState;\n                }\n            },\n            _saveGroupVisibleState: function (series) {\n                if (defined(series._groupValue)) {\n                    if (!this._groupVisibleState) {\n                        this._groupVisibleState = {};\n                    }\n                    this._groupVisibleState[series._groupValue] = series.visible;\n                }\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else if (this._instance) {\n                    this._instance._bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            }\n        });\n        var proxyMembers = [\n            'getAxis',\n            'findAxisByName',\n            'plotArea',\n            'toggleHighlight',\n            'showTooltip',\n            'hideTooltip',\n            'exportVisual',\n            '_resize',\n            '_redraw',\n            '_noTransitionsRedraw',\n            '_legendItemHover',\n            '_eventCoordinates'\n        ];\n        function createProxyMember(name) {\n            Chart.fn[name] = function () {\n                var instance = this._instance;\n                if (instance) {\n                    return instance[name].apply(instance, arguments);\n                }\n            };\n        }\n        for (var idx = 0; idx < proxyMembers.length; idx++) {\n            createProxyMember(proxyMembers[idx]);\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!kendo.isFunction(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                seriesClone._groupValue = data[groupIx].value;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        dataviz.ui.plugin(Chart);\n        var geom = kendo.geometry;\n        var Tooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                this.setOptions(options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = Tooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = Tooltip.template = kendo.template('<div class=\\'k-tooltip k-chart-tooltip\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + '#if (d.border) {# border: #= d.border.width #px solid; #}#' + 'opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);\\'>' + '</div>', {\n                        useWithBlock: false,\n                        paramName: 'd'\n                    });\n                }\n                tooltip.element = $(tooltip.template(tooltip.options));\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n            },\n            destroy: function () {\n                this._clearShowTimeout();\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            setOptions: function (options) {\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION },\n                sharedTemplate: '<table>' + '<th colspan=\\'3\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '<td><span class=\\'k-chart-shared-tooltip-marker\\' style=\\'background-color:#:point.series.color#\\'></span></td>' + '# if(point.series.name) { # ' + '<td> #= point.series.name #:</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}'\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            getAnchor: function (size) {\n                var anchor = this.anchor;\n                var point = anchor.point;\n                var align = anchor.align;\n                var x = point.left;\n                var y = point.top;\n                if (align.horizontal === 'center') {\n                    x -= size.width / 2;\n                } else if (align.horizontal === 'right') {\n                    x -= size.width;\n                }\n                if (align.vertical === 'center') {\n                    y -= size.height / 2;\n                } else if (align.vertical === 'bottom') {\n                    y -= size.height;\n                }\n                return {\n                    x: x,\n                    y: y\n                };\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.getAnchor(size), top = anchor.y, left = anchor.x, zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, outerHeight(viewport) / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, outerWidth(viewport) / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            show: function (e) {\n                this.anchor = e.anchor;\n                this.element.css(e.style);\n                this.element.toggleClass(TOOLTIP_INVERSE, !!e.className);\n                this.element.toggleClass(SHARED_TOOLTIP_CLASS, !!e.shared);\n                var content = e.shared ? this._sharedContent(e) : this._pointContent(e.point);\n                this.element.html(content);\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function () {\n                var tooltip = this;\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                }\n            },\n            _sharedContent: function (e) {\n                var tooltip = this, template, content;\n                template = kendo.template(tooltip.options.sharedTemplate);\n                content = template({\n                    points: e.points,\n                    category: e.category,\n                    categoryText: e.categoryText,\n                    content: tooltip._pointContent\n                });\n                return content;\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: outerWidth(this.element),\n                    height: outerHeight(this.element)\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                    this.hide();\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var CrosshairTooltip = Tooltip.extend({\n            init: function (chartElement, options) {\n                Tooltip.fn.init.call(this, chartElement, options);\n                this.element.addClass('k-chart-crosshair-tooltip');\n            },\n            show: function (e) {\n                var element = this.element;\n                if (element) {\n                    this.anchor = e.anchor;\n                    this.element.css(e.style);\n                    this.element.html(this.content(e));\n                    this.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (e) {\n                var content = e.value, options = e.crosshair.options.tooltip;\n                if (options.template) {\n                    content = template(options.template)({ value: content });\n                }\n                return content;\n            },\n            hide: function () {\n                this.element.hide();\n            }\n        });\n        var ChartPane = Class.extend({\n            init: function (chart, pane) {\n                this._chart = chart;\n                this._pane = pane;\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this.name = pane.options.name;\n            },\n            series: function () {\n                var chart = this._chart;\n                var seriesByPane = chart._plotArea.groupSeriesByPane();\n                var series = seriesByPane[this.name || 'default'];\n                var result = [];\n                if (series) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        result.push(new ChartSeries(chart, series[idx]));\n                    }\n                }\n                return result;\n            }\n        });\n        var ChartSeries = Class.extend({\n            init: function (chart, options) {\n                this._chart = chart;\n                this._options = options;\n            },\n            points: function (filter) {\n                var points = this._points;\n                if (!points) {\n                    var series = this._seriesOptions();\n                    var plotArea = this._chart._plotArea;\n                    this._points = points = plotArea.pointsBySeriesIndex(series.index);\n                }\n                if (kendo.isFunction(filter)) {\n                    points = this._filterPoints(points, filter);\n                }\n                return points;\n            },\n            data: function (data) {\n                var series = this._seriesOptions();\n                if (data) {\n                    var chart = this._chart;\n                    var plotArea = chart._plotArea;\n                    series.data = data;\n                    if (series.categoryField) {\n                        var axis = plotArea.seriesCategoryAxis(series);\n                        var options = [].concat(chart.options.categoryAxis);\n                        chart._instance._bindCategoryAxisFromSeries(options[axis.axisIndex], axis.axisIndex);\n                    }\n                    chart._noTransitionsRedraw();\n                    this._clearFields();\n                }\n                return series.data;\n            },\n            findPoint: function (filter) {\n                var points = this.points();\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (filter(points[idx])) {\n                        return points[idx];\n                    }\n                }\n            },\n            toggleHighlight: function (show, elements) {\n                if (!elements) {\n                    elements = this.points();\n                } else if (kendo.isFunction(elements)) {\n                    elements = this.points(elements);\n                } else {\n                    elements = isArray(elements) ? elements : [elements];\n                }\n                this._chart._instance._togglePointsHighlight(show, elements);\n            },\n            toggleVisibility: function (visible, filter) {\n                var chart = this._chart;\n                var seriesOptions = this._seriesOptions();\n                var hasFilter = kendo.isFunction(filter);\n                if (!hasFilter) {\n                    seriesOptions.visible = visible;\n                    chart._saveGroupVisibleState(seriesOptions);\n                } else {\n                    if (inArray(seriesOptions.type, [\n                            PIE,\n                            DONUT,\n                            FUNNEL\n                        ])) {\n                        var data = this._filterData(filter);\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data[idx].visible = visible;\n                        }\n                    } else {\n                        seriesOptions.visible = function (data) {\n                            return filter(data.dataItem) ? visible : true;\n                        };\n                    }\n                }\n                chart._noTransitionsRedraw();\n                this._clearFields();\n            },\n            _filterData: function (filter) {\n                var data = this._seriesOptions().data;\n                var length = data.length;\n                var result = [];\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(data[idx])) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            _filterPoints: function (points, filter) {\n                var result = [];\n                var length = points.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(points[idx])) {\n                        result.push(points[idx]);\n                    }\n                }\n                return result;\n            },\n            _seriesOptions: function () {\n                var series = this._series;\n                if (!series) {\n                    series = this._series = this._chart._seriesOptions(this._options);\n                }\n                return series;\n            },\n            _clearFields: function () {\n                delete this._points;\n                delete this._series;\n            }\n        });\n        dataviz.Tooltip = Tooltip;\n        dataviz.CrosshairTooltip = CrosshairTooltip;\n        dataviz.ChartInstanceObserver = ChartInstanceObserver;\n        dataviz.ChartPane = ChartPane;\n        dataviz.ChartSeries = ChartSeries;\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'dataviz/chart/kendo-chart',\n        'dataviz/chart/chart'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [{\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }]\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}