{"version":3,"sources":["kendo.dataviz.diagram.js"],"names":["f","define","$","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","text","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","textContent","appendChild","body","String","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","undefined","Range","start","stop","step","rangeIntegerScale","x","k","range","j","Utils","sign","Infinity","Math","abs","findRadian","end","sngXComp","sngYComp","y","atan","PI","Easing","Ticker","diagram","dataviz","isArray","EPSILON","isNearZero","num","isDefined","obj","isUndefined","isObject","Object","has","hasOwnProperty","call","isString","prototype","toString","isBoolean","isType","type","isNumber","isNaN","parseFloat","isFinite","isEmpty","simpleExtend","destination","source","name","initArray","array","serializePoints","points","p","res","deserializePoints","s","v","split","Point","parseInt","randomInteger","lower","upper","floor","random","DFT","el","func","item","childNodes","getMatrixAngle","m","d","atan2","b","getMatrixScaling","sX","sqrt","a","c","sY","number","findAngle","center","forEach","arr","iterator","thisRef","any","predicate","remove","what","ax","indexOf","splice","contains","inArray","fold","list","acc","context","initial","arguments","find","result","index","first","constraint","insert","element","position","all","clear","bisort","sortfunc","n","addRange","apply","easeInOut","pos","cos","adapters","target","tick","interval","duration","lastTime","handlers","_this","transition","timerDelegate","onTimerEvent","addAdapter","onComplete","handler","removeHandler","grep","h","trigger","caller","onStep","seekTo","to","seekFromTo","from","max","min","Date","getTime","intervalId","setInterval","clearInterval","play","origin","initState","reverse","propagate","update","movement","now","timePassed","ui","intersectLine","start1","end1","start2","end2","isSegment","num1","num2","r","tangensdiff","normalVariable","mean","deviation","log","randomId","chars","charAt","round","PathDefiner","Rect","Size","Intersect","RectAlign","Polar","Matrix","MatrixVector","Geometry","HashTable","Dictionary","Queue","Set","Node","Link","Graph","Point2D","isFunction","HITTESTAREA","fn","plus","minus","offset","times","normalize","lengthSquared","middleOf","q","toPolar","useDegrees","halfpi","len","factor","isOnLine","temp","r1","r2","o1","u1","inflate","union","parse","tempStr","slice","xy","left","right","point","dx","dy","x1","y1","x2","y2","top","bottom","topLeft","topRight","bottomLeft","bottomRight","clone","equals","rect","rotatedBounds","angle","rotatedPoints","tl","tr","br","bl","rotate","delimiter","scale","scaleX","scaleY","staicPoint","adornerCenter","delta","scaled","thisCenter","zoom","overlaps","rectBottomRight","Empty","toRect","empty","fromPoints","lines","segments","rectWithLine","rects","rect1","rect2","intersect","reverseAngle","container","align","content","alignment","alignValues","toLowerCase","_singleAlign","_align","_left","_center","_right","stretch","_stretch","_top","middle","_middle","_bottom","alignCalc","e","applyRect","fromSVGMatrix","vm","fromMatrixVector","fromList","translation","unit","rotation","sin","scaling","nums","trim","substr","fromMatrix","_distanceToLineSquared","d2","pt1","pt2","vx","vy","dot","distanceToLine","distanceToPolyline","p1","p2","minimum","Number","MAX_VALUE","_buckets","add","_createGetBucket","_bucketExists","set","containsKey","hashId","_hash","bucket","hashes","_hashes","ht","_hashString","_objectHashId","ch","id","_hashId","Observable","dictionary","that","_hashTable","Error","forEachValue","forEachKey","keys","enqueue","next","dequeue","resource","kv","toArray","shape","links","outgoing","incoming","weight","associatedShape","bounds","data","shortForm","isVirtual","isIsolated","isLinkedTo","node","link","getComplement","getChildren","children","getParents","parents","copy","balance","owner","adjacentTo","removeLink","hasLinkTo","degree","incidentWith","getLinksWith","getNeighbors","neighbors","connection","sourceFound","targetFound","associatedConnection","getCommonNode","isBridging","v1","v2","getNodes","changeSource","changeTarget","changesNodes","w","oldSource","oldTarget","directTo","createReverseEdge","reversed","idOrDiagram","nodes","_nodeMap","_root","_hasCachedRelationships","cacheRelationships","forceRebuild","assignLevels","startNode","visited","child","level","root","found","getConnectedComponents","componentId","components","graph","componentIndex","setItemIndices","_collectConnectedNodes","addNodeAndOutgoings","setIds","nodeIndex","nextId","calcBounds","getSpanningTree","remaining","levelCount","ni","cn","newLink","treeLevels","tree","_addNode","pop","addLink","takeRandomNode","excludedNodes","incidenceLessThan","pool","isHealthy","hasNode","sourceOrLink","foundSource","foundTarget","addExistingLink","getNode","addNode","removeAllLinks","t","hasLink","linkOrId","nodeOrId","_removeNode","removeNode","areConnected","n1","n2","layoutRect","newNode","newLinks","saveMapping","save","nodeMap","linkMap","nOriginal","nCopy","linkOriginal","linkCopy","linearize","addIds","depthFirstTraversal","action","foundNode","_dftIterator","breadthFirstTraversal","queue","_stronglyConnectedComponents","excludeSingleItems","indices","lowLinks","connected","stack","component","findCycles","isAcyclic","isSubGraph","other","otherArray","thisArray","makeAcyclic","oneLink","oneNode","rev","N","intensityCatalog","flowIntensity","catalogEqualIntensity","sourceStack","targetStack","intensity","targets","li","targetLink","sources","si","sourceLink","maxdiff","ri","ril","u","vertexOrder","kk","reversedEdges","unshift","concat","Predefined","EightGraph","Mindmap","ThreeGraph","BinaryTree","levels","createBalancedTree","Linear","Tree","siblingsCount","Forest","trees","createBalancedForest","Workflow","Grid","previous","g","graphString","previousLink","part","lin","_addShape","kendoDiagram","shapeDefaults","radius","fill","undoable","addShape","_addConnection","connect","createDiagramFromGraph","doLayout","randomSize","opt","gli","sourceShape","targetShape","l","shi","clientWidth","clientHeight","color","SpringLayout","layoutGraph","limitToView","counter","lastAdded","news","parent","treeCount","createRandomConnectedGraph","nodeCount","maxIncidence","isTree","poolNode","randomAdditions","randomDiagram","shapeCount","diffNumericOptions","fields","field","elementOptions","hasChanges","sizeOptionsOrDefault","normalizeDrawingOptions","drawingOptions","getColor","TRANSPARENT","Color","toHex","lineAngle","xDiff","yDiff","deg","createSegment","Segment","toDrawingRect","Scale","Translation","Rotation","CompositeTransform","AutoSizeableMixin","Element","VisualBase","TextBlock","Rectangle","MarkerBase","CircleMarker","ArrowMarker","MarkerPathMixin","Path","Line","Polyline","Image","Group","Layout","Circle","Canvas","geometry","drawing","defined","Markers","none","arrowStart","filledCircle","arrowEnd","FULL_CIRCLE_ANGLE","START","END","WIDTH","HEIGHT","X","Y","toMatrix","format","invert","toMatrixVector","Length","ZERO","create","values","translate","transform","render","visual","_transform","_renderTransform","rotateMatrix","scaleMatrix","translatePoint","_setScale","originWidth","_originWidth","originHeight","_originHeight","_setTranslate","_initSize","autoSize","_measure","_updateSize","_diffNumericOptions","_originSize","visible","drawingContainer","redraw","drawingElement","matrix","_hover","force","startPoint","_measured","_boundingBox","rawBBox","stroke","opacity","_fill","_stroke","show","hover","strokeOptions","dashType","fillOptions","gradient","GradientClass","RadialGradient","LinearGradient","_textColor","_font","_initText","fontSize","fontFamily","Text","font","fontOptions","fontStyle","fontWeight","sizeChanged","textOptions","_initPath","_setPosition","_drawPath","closed","sizeOptions","elements","anchor","_transformToPath","path","transformCopy","positionMarker","targetSegment","_linePoints","endPoint","nextSegment","prevSegment","controlOut","controlIn","_getPath","MultiPath","paths","_normalizeMarkerOptions","startCap","endCap","_removeMarker","_markers","_createMarkers","_createMarker","markerType","append","_positionMarker","_capMap","_redrawMarker","pathChange","pathOptions","cap","pathCapType","optionsCap","created","_redrawMarkers","_createElements","_setData","multipath","_updatePath","_pointsDiffer","currentPoints","differ","_initImage","src","_rect","_childrenChange","_remove","removeAt","toFront","visuals","toBack","_reorderChildren","toIndex","group","drawingChildren","fixedPosition","boundingBox","childBoundingBox","_includeInBBox","clippedBBox","drawingRect","reflow","_initCircle","circleOptions","move","_circle","setRadius","surface","Surface","_translate","_viewBox","viewBox","setSize","draw","insertBefore","destroy","clearHtml","testKey","toUpperCase","hitToOppositeSide","hit","canDrag","editable","drag","hitTestShapeConnectors","connector","idx","connectors","HIT_TEST_DISTANCE","noMeta","meta","ctrlKey","altKey","shiftKey","PositionAdapter","LayoutUndoUnit","CompositeUnit","ConnectionEditUnit","ConnectionEditUndoUnit","DeleteConnectionUnit","DeleteShapeUnit","TransformUnit","AddConnectionUnit","AddShapeUnit","PanUndoUnit","RotateUnit","ToFrontUnit","ToBackUnit","UndoRedoService","EmptyTool","ScrollerTool","PointerTool","SelectionTool","ConnectionTool","ConnectionEditTool","ToolService","ConnectionRouterBase","LinearConnectionRouter","PolylineRouter","CascadingRouter","AdornerBase","ConnectionEditAdorner","ConnectorsAdorner","ResizingAdorner","Selector","ConnectorVisual","Movable","browser","support","proxy","Cursors","arrow","grip","cross","select","south","east","west","north","rowresize","colresize","AUTO","TOP","RIGHT","LEFT","BOTTOM","DEFAULT_SNAP_SIZE","DEFAULT_SNAP_ANGLE","DRAG_START","DRAG","DRAG_END","ITEMROTATE","ITEMBOUNDSCHANGE","MIN_SNAP_SIZE","MIN_SNAP_ANGLE","MOUSE_ENTER","MOUSE_LEAVE","ZOOM_START","ZOOM_END","SCROLL_MIN","SCROLL_MAX","FRICTION","FRICTION_MOBILE","VELOCITY_MULTIPLIER","PAN","ROTATED","SOURCE","TARGET","HANDLE_NAMES","-1","1","layoutState","pusher","getShapeById","subjects","froms","tos","initialState","finalState","animate","_initialState","_finalState","title","undo","setState","redo","state","ticker","conn","units","undoUnit","redoSource","redoTarget","_redoSource","_redoTarget","_undoSource","_undoTarget","_updateConnector","updateModel","undoSource","undoTarget","targetConnector","shapes","undoStates","adorner","redoStates","layout","refreshBounds","refresh","deselect","initialPosition","finalPosition","finalPos","pan","undoRotates","redoRotates","redoAngle","_angle","_innerBounds","_initialize","items","initialIndices","_toIndex","bind","events","capacity","begin","composite","cancel","commit","execute","_restart","addCompositeItem","count","toolService","tryActivate","getCursor","canvas","scroller","virtualScroll","tool","friction","mobileOS","scrollable","kendoMobileScroller","velocityMultiplier","mousewheelScrolling","scroll","_move","movableCanvas","dimension","makeVirtual","virtualSize","dimensions","disable","pannable","enabled","hoveredItem","hoveredAdorner","_hoveredConnector","enable","args","scrollPos","scrollLeft","scrollTop","_storePan","moveTo","_pan","selectSingle","handle","_hitTest","_resizingAdorner","isDragHandle","connections","undoRedoService","_getCursor","selectable","multiple","selector","isSelected","selectArea","_createConnection","_c","connectionHandle","_connectionManipulation","_removeHover","activeConnection","_cachedTouchTarget","cachedTouchTarget","sourceConnector","Shape","getConnector","_syncConnectionChanges","_connectorsAdorner","isActive","handleName","tools","activeTool","_updateHoveredItem","_activateTool","_updateCursor","focus","suspendTracking","updateHovered","resumeTracking","keyDown","toRemove","metaKey","_triggerRemove","_syncChanges","_destroyToolBar","_discardNewConnection","selectAll","cut","paste","wheel","z","zoomRate","zoomOptions","zoomMin","zoomMax","setTool","addToSelection","newConnection","cursor","css","msie","version","disabledShape","isNew","selectedConnections","_visible","_selectedItems","Connection","_hitTestItems","_hitTestElements","mainLayer","shapeIdx","connectionIdx","shapeHit","connectionHit","hitTest","rec","getBounds","allPoints","route","SAME_SIDE_DISTANCE_RATIO","routePoints","_connectorPoints","_floatingPoints","_resolvedSourceConnector","_resolvedTargetConnector","sourcePoint","targetPoint","_connectorSides","axis","boundsPoint","secondarySign","_connectorSide","sideDistance","minSide","side","shapeBounds","sides","MAX_NUM","_sameSideDistance","pointX","pointY","sourceConnectorSide","targetConnectorSide","deltaX","deltaY","sameSideDistance","shiftX","shiftY","cascadeStartHorizontal","_startHorizontal","sourceSide","horizontal","_adorners","sp","tp","_ts","spVisual","handles","epVisual","_initialSource","_initialTarget","ts","radiusX","radiusY","sourcePointDistance","distanceTo","targetPointDistance","sourceHandle","targetHandle","modelToLayer","_refreshHandler","ctr","_clearVisual","_keepCachedTouchTarget","visualChildren","childrenCount","unbind","each","_manipulating","_initSelection","_createHandles","selected","_internalChange","_rotatedHandler","_resizable","resize","_handleOptions","_bounds","handleBounds","handlesCount","_getHandleBounds","_rotationOffset","_startAngle","_rotates","_positions","initialRotates","initialStates","handleOptions","_sp","_cp","_lp","shapeStates","visibleHandles","currentAngle","dragging","newBounds","staticPoint","thr","newCenter","oldBounds","dtl","dbr","changed","_truncateAngle","_rotating","shouldSnap","_truncateDistance","_displaceBounds","minWidth","minHeight","states","_truncatePositionToGuides","ruler","truncatePositionToGuides","_truncateSizeToGuides","truncateSizeToGuides","snap","snapOptions","snapAngle","snapSize","_diffStates","_syncShapeChanges","thumb","rotationThumb","_rotationThumbBounds","_ep","_adorn","visualBounds","modelToView","relative","_visualBounds","HyperTree","DEG_TO_RAD","LayoutBase","defaultOptions","subtype","roots","nodeDistance","iterations","horizontalSeparation","verticalSeparation","underneathVerticalTopOffset","underneathHorizontalOffset","underneathVerticalSeparation","grid","offsetX","offsetY","componentSpacingX","componentSpacingY","layerSeparation","layeredIterations","startRadialAngle","endRadialAngle","radialSeparation","radialFirstLevelSeparation","keepComponentsInOneRadialLayout","ignoreContainers","layoutContainerChildren","ignoreInvisible","animateTransitions","gridLayoutComponents","maxWidth","startX","startY","resultLinkSet","resultNodeSet","boundingRect","currentHeight","currentWidth","moveToOffset","nodeBounds","newpoints","pt","deltax","deltay","currentHorizontalOffset","transferOptions","DiagramToHyperTreeAdapter","shapeMap","edges","edgeMap","finalNodes","finalLinks","ignoredConnections","ignoredShapes","hyperMap","hyperTree","finalGraph","convert","_renormalizeShapes","_renormalizeConnections","mapConnection","mapShape","getEdge","listToRoot","containerGraph","parentContainer","firstNonIgnorableContainer","isContainer","_isIgnorableItem","isContainerConnection","isDescendantOf","scope","containers","isIgnorableItem","isCollapsed","_isVisible","_isTop","isShapeMapped","leastCommonAncestor","al","xa","xb","_isCollapsed","sink","sourceNode","sinkNode","newEdge","areConnectedAlready","adapter","finalNodeSet","LayoutState","initialTemperature","guessBounds","temperature","_expectedBounds","refineStage","_repulsion","_attraction","_shake","rho","alpha","_InverseSquareForce","wn","hn","wm","hm","pow","_SquareForce","distance","av","squareSize","ratio","multiplier","area","ceil","TreeLayoutProcessor","treeGraph","layoutSwitch","layoutLeft","setChildrenDirection","setChildrenLayout","TreeDirection","Width","arrange","layoutRight","layoutUp","up","layoutDown","down","treeDirection","layoutRadialTree","startAngle","endAngle","previousRoot","maxDepth","calculateAngularWidth","radialLayout","Angle","tipOverTree","startFromLevel","aw","diameter","sectorAngle","sortChildren","pl","nl","col","basevalue","normalizeAngle","childNode","cp","childAngleFraction","deltaTheta","deltaThetaHalf","parentSector","fraction","sorted","setPolarLocation","BoundingRectangle","direction","includeStart","rootDirection","rootLayout","childrenLayout","givenSize","shapeWidth","shapeHeight","AngleToParent","SectorAngle","pp","childrenwidth","selfLocation","single","male","female","leftcount","tipOverTreeStartLevel","TreeLayout","layoutComponents","getTree","givenRootShape","getTreeForRoot","LayeredLayout","_initRuntimeProperties","layer","downstreamLinkCount","upstreamLinkCount","uBaryCenter","dBaryCenter","upstreamPriority","downstreamPriority","gridPosition","_prepare","targetLayer","sortedNodes","minLayer","layerMap","layerCount","shift","o2","o1layer","o2layer","layers","linksTo","_dummify","_optimizeCrossings","_swapPairs","arrangeNodes","_moveThingsAround","_dedummify","setMinDist","minDist","layerIndex","minDistances","getMinDist","dist","i1","i2","placeLeftToRight","leftClasses","classNodes","rightSibling","D","neighbor","leftPos","placeLeft","POSITIVE_INFINITY","nodeLeftClass","upNodes","downNodes","intDiv","placeRightToLeft","rightClasses","leftSibling","rightPos","placeRight","NEGATIVE_INFINITY","nodeRightClass","_getLeftWing","leftWing","computeClasses","_getRightWing","rightWing","wingPair","ndsinl","vnode","wings","currentWing","wing","_nodesInLink","classIndex","_isVerticalLayout","_isHorizontalLayout","_isIncreasingLayout","maximumHeight","ctx","MIN_VALUE","currentNode","currDown","downNode","order","placed","sequenceStart","sequenceEnd","directions","fromLayerIndex","reachedFinalLayerIndex","layerIncrement","_gridPositionComparer","dest","virtualStartIndex","virtualStart","sequence","virtualEnd","virtualEndIndex","_firstVirtualNode","_sequencer","nextVirtualNode","adjustDirections","prevBridge","prevBridgeTarget","nextBridge","nextBridgeTarget","clayer","j1","j2","getNeighborOnLayer","dir","_sequenceSingle","combineSequences","pair","rightHeap","leftRes","rightRes","leftHeap","_positionDescendingComparer","_positionAscendingComparer","leftClass","_getComposite","rightClass","maxLayoutIterations","it","gridPos","layoutLayer","iconsidered","considered","n1Priority","n2Priority","nodeGridPos","nodeBaryCenter","calcBaryCenter","nodePriority","moveRight","moveLeft","calcDownData","calcUpData","priority","rightNode","rightNodePriority","leftNode","leftNodePriority","mapVirtualNode","nodeToLinkMap","linkToNodeMap","addLinkBetweenLayers","o","oLayer","dLayer","oPos","dPos","upLayer","downLayer","depthOfDumminess","prevLink","dedum","moves","maxIterations","iter","optimizeLayerCrossings","sum","total","presorted","inode","compareValue","n1BaryCenter","n2BaryCenter","compareByIndex","downwards","secondPass","hasSwapped","calcCrossings","memCrossings","crossBefore","node1","node2","node1GridPos","node2GridPos","crossAfter","revert","countLinksCrossingBetweenTwoLayers","ulayer","dlayer","link1","link2","n11","n12","n21","n22","l1","l2","n11gp","n12gp","n21gp","n22gp","crossings","numerator","denominator","graphOrNodes","capture","diagramOrGraphOrNodes","Array","GraphAdapter","mwDelta","origEvent","originalEvent","wheelDelta","math","detail","isAutoConnector","closestConnector","resCtr","minimumDistance","MAXINT","indicesOfItems","filterShapeDataItem","dataItem","filterConnectionDataItem","fromConnector","fromX","fromY","toConnector","toX","toY","connectionSelector","textField","model","dataSource","reader","idField","appendTo","kendoDropDownList","dataValueField","dataTextField","toJSON","optionLabel","valuePrimitive","InactiveItem","callbacks","InactiveItemsCollection","cloneDataItem","Model","_defaultId","splitDiagramElements","createModel","ObservableObject","clearField","copyDefaultOptions","mainOptions","translateToOrigin","bbox","preventDefault","defaultButtons","DiagramElement","Connector","Diagram","DiagramToolBar","Editor","PopupEditor","QuadRoot","QuadNode","ShapesQuadTree","geom","Widget","outerWidth","_outerWidth","outerHeight","_outerHeight","HierarchicalDataSource","isPlainObject","NS","CASCADING","CHANGE","CLICK","ERROR","SELECT","NONE","DEFAULT_CANVAS_WIDTH","DEFAULT_CANVAS_HEIGHT","DEFAULT_SHAPE_TYPE","DEFAULT_SHAPE_WIDTH","DEFAULT_SHAPE_HEIGHT","DEFAULT_SHAPE_MINWIDTH","DEFAULT_SHAPE_MINHEIGHT","DEFAULT_SHAPE_POSITION","DEFAULT_CONNECTION_BACKGROUND","ABSOLUTE","TRANSFORMED","MOUSEWHEEL_NS","MOBILE_ZOOM_RATE","MOBILE_PAN_DISTANCE","BUTTON_TEMPLATE","CONNECTION_CONTENT_OFFSET","DefaultConnectors","getPosition","imageClass","className","iconClass","extra","defaults","_template","serializable","serialize","json","_content","contentOptions","contentVisual","_contentVisual","_updateContentVisual","_createContentVisual","elementTemplate","template","paramName","_canSelect","shapeId","updateOptionsFromModel","createShapeVisual","updateBounds","_createConnectors","_setOptionsFromModel","modelOptions","redrawVisual","_isEditable","_redrawVisual","syncChanges","_suspendModelRefresh","_resumeModelRefresh","_rotate","_alignContent","containerRect","aligner","contentBounds","contentRect","alignedBounds","connectorDefaults","_transformedBounds","_rotatedBounds","_setBounds","_triggerBoundsChange","_layouting","refreshConnections","deselected","_internalSelection","_selectionChanged","sc","deltaAngle","newPosition","con","cons","nameOrPoint","toLocaleLowerCase","fnName","_transformPoint","shapeOptions","boundsChange","shapeVisual","_visualOptions","_updateConnectors","_showConnectors","rotatedPoint","visualOptions","visualTemplate","_initRouter","_sourcePoint","_targetPoint","_setSource","_setTarget","definers","dataMap","_dataMap","connectionsDataSource","getByUid","uid","shapeSource","defaultConnector","_removeFromSourceConnector","_clearSourceConnector","_setFromOptions","fromPoint","sourceDefiner","_sourceDefiner","shapeTarget","_removeFromTargetConnector","_clearTargetConnector","_setToOptions","toPoint","targetDefiner","_targetDefiner","instance","connectorName","setNewTarget","inactiveItem","_inactiveShapeItems","_deferredConnectionUpdates","onActivate","endIdx","startIdx","alignToPath","midIdx","selection","_router","definition","pts","_resolveConnectors","_refreshPath","sourceConnectors","targetConnectors","_resolveAutoConnectors","minNonConflictSource","minNonConflictTarget","minSource","minTarget","sourceIdx","targetIdx","minNonConflict","_testRoutePoints","exclude","router","passRoute","_getRouteExclude","_shapesQuadTree","hitTestRect","_isPointInsideShape","boundsX","boundsY","userOptions","_initTheme","_initElements","_extendLayoutOptions","_initDefaults","_interactionDefaults","_initCanvas","adornerLayer","_createHandlers","_clipboard","pauseMouseHandlers","_fetchFreshData","_createGlobalToolBar","_createOptionElements","theme","draggable","autoBind","tooltip","connectionDefaults","toolBar","click","_toolBarClick","modal","textAlign","prepend","_resize","createShape","view","editor","_createShape","edit","createConnection","_connectionsDataMap","addConnection","editModel","editorType","editors","connectionSelectorHandler","cancelEdit","shapeEditors","shapeTemplate","connectionEditors","connectionTemplate","_update","_cancel","_editArgs","_getEditDataSource","cancelChanges","_destroyEditor","saveEdit","sync","wrapper","close","attr","addClass","userShapeDefaults","mobile","canvasContainer","viewPort","viewport","on","_wheel","_keydown","_userEvents","UserEvents","multiTouch","fastTap","tap","_tap","_dragStart","_drag","_dragEnd","gesturestart","_gestureStart","gesturechange","_gestureChange","gestureend","_gestureEnd","_mouseover","_mouseout","_mouseMove","_mouseDown","_mouseUp","_syncHandler","_resizeHandler","onResize","event","_pauseMouseHandlers","_eventPositions","_meta","_createToolBar","ctrlPressed","focused","keyCode","touch","pageX","pageY","documentToModel","initialCenter","eventArgs","_gesture","_initialCenter","zoomedPoint","previousGesture","documentToView","scaleDelta","_zoom","updateZoom","_getValidZoom","_panTransform","_updateAdorners","_kendoNode","srcElement","themes","themeName","themeOptions","shapesLength","_createShapes","_createConnections","_findConnectionTarget","unbindResize","off","destroyScroller","_destroyGlobalToolBar","is","_activeElement","scrollContainer","offsets","documentElement","scrollHeight","load","setOptions","added","removed","_removeItem","_removeShapeDataItem","_removeConnectionDataItem","_getDiagramItems","_fixOrdering","bringIntoView","original","newPan","_zoomMainLayer","alignShapes","val","viewportVector","raw","hideTooltip","_getPan","animatedScrollTo","scrollTo","_copyOffset","copied","mapping","_updateCopiedConnection","sourceConnection","di","_containerOffset","containerOffset","viewToDocument","viewToModel","_transformWithMatrix","_matrixInvert","_matrix","_layerMatrix","layerToModel","_layerMatrixInvert","viewPoint","modelToDocument","setDataSource","_dataSource","fetch","setConnectionsDataSource","_connectionDataSource","_redrawConnections","getShapeByModelId","getShapeByModelUid","getConnectionByModelId","getConnectionByModelUid","_transformMainLayer","_finishPan","NaN","_storeViewMatrix","_storeLayerMatrix","canvasTransform","shapePos","conPos","removedConnections","_removeShape","_removeConnection","_removeDataItems","recursive","_removeShapeConnections","hasChildren","loaded","_addDataItem","_addDataItemByUid","_addDataItems","parentShape","_refreshSource","dataBound","_bindingRoots","_addItem","preventClosing","padding","popupWidth","popupHeight","connectionBounds","singleToolBar","_popup","showAt","one","_normalizePointZoom","undone","redone","_loadingShapes","_loadingConnections","dsOptions","ds","_shapesRefreshHandler","_shapesRequestStartHandler","_shapesErrorHandler","_refreshShapes","_shapesRequestStart","_error","DataSource","_treeDataSource","_connectionsRefreshHandler","_connectionsRequestStartHandler","_connectionsErrorHandler","_refreshConnections","_connectionsRequestStart","_connectionsError","_shouldRefresh","_removeShapes","_updateShapes","_syncShapes","_suspended","_rebindShapesAndConnections","_addShapes","_addConnections","inactiveItems","activate","dataItems","_removeConnections","_updateConnections","_addConnectionDataItem","_validateConnector","_unbindDataSource","_errorHandler","adorners","_refresh","hide","exportDOMVisual","scrollOffset","viewRect","clipPath","fromRect","wrap","clipWrap","clip","exportVisual","when","then","deferredConnectionUpdates","ExportMixin","PDFMixin","_tools","createToolBar","createTools","appendTools","createPopup","kendoPopup","getKendoPopup","buttons","_toolBar","kendoToolBar","resizable","getKendoToolBar","createTool","toolName","attributes","_setAttributes","open","newGroup","editTool","icon","showText","deleteTool","rotateAnticlockwiseTool","_appendGroup","_rotateGroup","rotateClockwiseTool","createShapeTool","_createGroup","createConnectionTool","undoTool","_historyGroup","redoTool","prop","_getAttributes","eventData","selectedElements","delete","selectedElemens","rotateClockwise","rotateAnticlockwise","_getFields","_initContainer","createEditable","Editable","clearContainer","modelFields","columns","formContent","_renderTemplate","_renderFields","_renderButtons","Window","userTriggered","sender","_cancelClick","_attachButtonEvents","unescape","form","_createButton","_cancelClickHandler","_updateClickHandler","_updateClick","_editUpdateClickHandler","callback","deffered","Deferred","deferred","resolve","_add","_quadNode","_testRect","inBounds","nodeRect","nodeBottomRight","overlapsBounds","inserted","_initChildren","childIdx","halfWidth","halfHeight","ROOT_SIZE","boundsChangeHandler","_boundsChange","initRoots","rootMap","rootSize","sectors","getSectors","inRoot","bottomX","bottomY","xIdx","yIdx","plugin"],"mappings":"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","file":"kendo.dataviz.diagram.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                measureBox.textContent = text;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (String(text).length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/utils', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram = {}, deepExtend = kendo.deepExtend, isArray = $.isArray, EPSILON = 0.000001;\n        var Utils = {};\n        deepExtend(Utils, {\n            isNearZero: function (num) {\n                return Math.abs(num) < EPSILON;\n            },\n            isDefined: function (obj) {\n                return typeof obj !== 'undefined';\n            },\n            isUndefined: function (obj) {\n                return typeof obj === 'undefined' || obj === null;\n            },\n            isObject: function (obj) {\n                return obj === Object(obj);\n            },\n            has: function (obj, key) {\n                return Object.hasOwnProperty.call(obj, key);\n            },\n            isString: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object String]';\n            },\n            isBoolean: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object Boolean]';\n            },\n            isType: function (obj, type) {\n                return Object.prototype.toString.call(obj) == '[object ' + type + ']';\n            },\n            isNumber: function (obj) {\n                return !isNaN(parseFloat(obj)) && isFinite(obj);\n            },\n            isEmpty: function (obj) {\n                if (obj === null) {\n                    return true;\n                }\n                if (isArray(obj) || Utils.isString(obj)) {\n                    return obj.length === 0;\n                }\n                for (var key in obj) {\n                    if (Utils.has(obj, key)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            simpleExtend: function (destination, source) {\n                if (!Utils.isObject(source)) {\n                    return;\n                }\n                for (var name in source) {\n                    destination[name] = source[name];\n                }\n            },\n            initArray: function createIdArray(size, value) {\n                var array = [];\n                for (var i = 0; i < size; ++i) {\n                    array[i] = value;\n                }\n                return array;\n            },\n            serializePoints: function (points) {\n                var res = [];\n                for (var i = 0; i < points.length; i++) {\n                    var p = points[i];\n                    res.push(p.x + ';' + p.y);\n                }\n                return res.join(';');\n            },\n            deserializePoints: function (s) {\n                var v = s.split(';'), points = [];\n                if (v.length % 2 !== 0) {\n                    throw 'Not an array of points.';\n                }\n                for (var i = 0; i < v.length; i += 2) {\n                    points.push(new diagram.Point(parseInt(v[i], 10), parseInt(v[i + 1], 10)));\n                }\n                return points;\n            },\n            randomInteger: function (lower, upper) {\n                return parseInt(Math.floor(Math.random() * upper) + lower, 10);\n            },\n            DFT: function (el, func) {\n                func(el);\n                if (el.childNodes) {\n                    for (var i = 0; i < el.childNodes.length; i++) {\n                        var item = el.childNodes[i];\n                        this.DFT(item, func);\n                    }\n                }\n            },\n            getMatrixAngle: function (m) {\n                if (m === null || m.d === 0) {\n                    return 0;\n                }\n                return Math.atan2(m.b, m.d) * 180 / Math.PI;\n            },\n            getMatrixScaling: function (m) {\n                var sX = Math.sqrt(m.a * m.a + m.c * m.c);\n                var sY = Math.sqrt(m.b * m.b + m.d * m.d);\n                return [\n                    sX,\n                    sY\n                ];\n            }\n        });\n        function Range(start, stop, step) {\n            if (typeof start == 'undefined' || typeof stop == 'undefined') {\n                return [];\n            }\n            if (step && Utils.sign(stop - start) != Utils.sign(step)) {\n                throw 'The sign of the increment should allow to reach the stop-value.';\n            }\n            step = step || 1;\n            start = start || 0;\n            stop = stop || start;\n            if ((stop - start) / step === Infinity) {\n                throw 'Infinite range defined.';\n            }\n            var range = [], i = -1, j;\n            function rangeIntegerScale(x) {\n                var k = 1;\n                while (x * k % 1) {\n                    k *= 10;\n                }\n                return k;\n            }\n            var k = rangeIntegerScale(Math.abs(step));\n            start *= k;\n            stop *= k;\n            step *= k;\n            if (start > stop && step > 0) {\n                step = -step;\n            }\n            if (step < 0) {\n                while ((j = start + step * ++i) >= stop) {\n                    range.push(j / k);\n                }\n            } else {\n                while ((j = start + step * ++i) <= stop) {\n                    range.push(j / k);\n                }\n            }\n            return range;\n        }\n        function findRadian(start, end) {\n            if (start == end) {\n                return 0;\n            }\n            var sngXComp = end.x - start.x, sngYComp = start.y - end.y, atan = Math.atan(sngXComp / sngYComp);\n            if (sngYComp >= 0) {\n                return sngXComp < 0 ? atan + 2 * Math.PI : atan;\n            }\n            return atan + Math.PI;\n        }\n        Utils.sign = function (number) {\n            return number ? number < 0 ? -1 : 1 : 0;\n        };\n        Utils.findAngle = function (center, end) {\n            return findRadian(center, end) * 180 / Math.PI;\n        };\n        Utils.forEach = function (arr, iterator, thisRef) {\n            for (var i = 0; i < arr.length; i++) {\n                iterator.call(thisRef, arr[i], i, arr);\n            }\n        };\n        Utils.any = function (arr, predicate) {\n            for (var i = 0; i < arr.length; ++i) {\n                if (predicate(arr[i])) {\n                    return arr[i];\n                }\n            }\n            return null;\n        };\n        Utils.remove = function (arr, what) {\n            var ax;\n            while ((ax = Utils.indexOf(arr, what)) !== -1) {\n                arr.splice(ax, 1);\n            }\n            return arr;\n        };\n        Utils.contains = function (arr, obj) {\n            return Utils.indexOf(arr, obj) !== -1;\n        };\n        Utils.indexOf = function (arr, what) {\n            return $.inArray(what, arr);\n        };\n        Utils.fold = function (list, iterator, acc, context) {\n            var initial = arguments.length > 2;\n            for (var i = 0; i < list.length; i++) {\n                var value = list[i];\n                if (!initial) {\n                    acc = value;\n                    initial = true;\n                } else {\n                    acc = iterator.call(context, acc, value, i, list);\n                }\n            }\n            if (!initial) {\n                throw 'Reduce of empty array with no initial value';\n            }\n            return acc;\n        };\n        Utils.find = function (arr, iterator, context) {\n            var result;\n            Utils.any(arr, function (value, index, list) {\n                if (iterator.call(context, value, index, list)) {\n                    result = value;\n                    return true;\n                }\n                return false;\n            });\n            return result;\n        };\n        Utils.first = function (arr, constraint, context) {\n            if (arr.length === 0) {\n                return null;\n            }\n            if (Utils.isUndefined(constraint)) {\n                return arr[0];\n            }\n            return Utils.find(arr, constraint, context);\n        };\n        Utils.insert = function (arr, element, position) {\n            arr.splice(position, 0, element);\n            return arr;\n        };\n        Utils.all = function (arr, iterator, context) {\n            var result = true;\n            var value;\n            for (var i = 0; i < arr.length; i++) {\n                value = arr[i];\n                result = result && iterator.call(context, value, i, arr);\n                if (!result) {\n                    break;\n                }\n            }\n            return result;\n        };\n        Utils.clear = function (arr) {\n            arr.splice(0, arr.length);\n        };\n        Utils.bisort = function (a, b, sortfunc) {\n            if (Utils.isUndefined(a)) {\n                throw 'First array is not specified.';\n            }\n            if (Utils.isUndefined(b)) {\n                throw 'Second array is not specified.';\n            }\n            if (a.length != b.length) {\n                throw 'The two arrays should have equal length';\n            }\n            var all = [], i;\n            for (i = 0; i < a.length; i++) {\n                all.push({\n                    'x': a[i],\n                    'y': b[i]\n                });\n            }\n            if (Utils.isUndefined(sortfunc)) {\n                all.sort(function (m, n) {\n                    return m.x - n.x;\n                });\n            } else {\n                all.sort(function (m, n) {\n                    return sortfunc(m.x, n.x);\n                });\n            }\n            Utils.clear(a);\n            Utils.clear(b);\n            for (i = 0; i < all.length; i++) {\n                a.push(all[i].x);\n                b.push(all[i].y);\n            }\n        };\n        Utils.addRange = function (arr, range) {\n            arr.push.apply(arr, range);\n        };\n        var Easing = {\n            easeInOut: function (pos) {\n                return -Math.cos(pos * Math.PI) / 2 + 0.5;\n            }\n        };\n        var Ticker = kendo.Class.extend({\n            init: function () {\n                this.adapters = [];\n                this.target = 0;\n                this.tick = 0;\n                this.interval = 20;\n                this.duration = 800;\n                this.lastTime = null;\n                this.handlers = [];\n                var _this = this;\n                this.transition = Easing.easeInOut;\n                this.timerDelegate = function () {\n                    _this.onTimerEvent();\n                };\n            },\n            addAdapter: function (a) {\n                this.adapters.push(a);\n            },\n            onComplete: function (handler) {\n                this.handlers.push(handler);\n            },\n            removeHandler: function (handler) {\n                this.handlers = $.grep(this.handlers, function (h) {\n                    return h !== handler;\n                });\n            },\n            trigger: function () {\n                var _this = this;\n                if (this.handlers) {\n                    Utils.forEach(this.handlers, function (h) {\n                        return h.call(_this.caller !== null ? _this.caller : _this);\n                    });\n                }\n            },\n            onStep: function () {\n            },\n            seekTo: function (to) {\n                this.seekFromTo(this.tick, to);\n            },\n            seekFromTo: function (from, to) {\n                this.target = Math.max(0, Math.min(1, to));\n                this.tick = Math.max(0, Math.min(1, from));\n                this.lastTime = new Date().getTime();\n                if (!this.intervalId) {\n                    this.intervalId = window.setInterval(this.timerDelegate, this.interval);\n                }\n            },\n            stop: function () {\n                if (this.intervalId) {\n                    window.clearInterval(this.intervalId);\n                    this.intervalId = null;\n                    this.trigger();\n                }\n            },\n            play: function (origin) {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                if (origin !== null) {\n                    this.caller = origin;\n                }\n                this.initState();\n                this.seekFromTo(0, 1);\n            },\n            reverse: function () {\n                this.seekFromTo(1, 0);\n            },\n            initState: function () {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].initState();\n                }\n            },\n            propagate: function () {\n                var value = this.transition(this.tick);\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].update(value);\n                }\n            },\n            onTimerEvent: function () {\n                var now = new Date().getTime();\n                var timePassed = now - this.lastTime;\n                this.lastTime = now;\n                var movement = timePassed / this.duration * (this.tick < this.target ? 1 : -1);\n                if (Math.abs(movement) >= Math.abs(this.tick - this.target)) {\n                    this.tick = this.target;\n                } else {\n                    this.tick += movement;\n                }\n                try {\n                    this.propagate();\n                } finally {\n                    this.onStep.call(this);\n                    if (this.target == this.tick) {\n                        this.stop();\n                    }\n                }\n            }\n        });\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Utils: Utils,\n            Range: Range,\n            Ticker: Ticker\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/math', [\n        'dataviz/diagram/utils',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, dataviz = kendo.dataviz, Utils = diagram.Utils, Point = dataviz.Point2D, isFunction = kendo.isFunction, contains = Utils.contains, map = $.map;\n        var HITTESTAREA = 3, EPSILON = 0.000001;\n        deepExtend(Point.fn, {\n            plus: function (p) {\n                return new Point(this.x + p.x, this.y + p.y);\n            },\n            minus: function (p) {\n                return new Point(this.x - p.x, this.y - p.y);\n            },\n            offset: function (value) {\n                return new Point(this.x - value, this.y - value);\n            },\n            times: function (s) {\n                return new Point(this.x * s, this.y * s);\n            },\n            normalize: function () {\n                if (this.length() === 0) {\n                    return new Point();\n                }\n                return this.times(1 / this.length());\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            toString: function () {\n                return '(' + this.x + ',' + this.y + ')';\n            },\n            lengthSquared: function () {\n                return this.x * this.x + this.y * this.y;\n            },\n            middleOf: function MiddleOf(p, q) {\n                return new Point(q.x - p.x, q.y - p.y).times(0.5).plus(p);\n            },\n            toPolar: function (useDegrees) {\n                var factor = 1;\n                if (useDegrees) {\n                    factor = 180 / Math.PI;\n                }\n                var a = Math.atan2(Math.abs(this.y), Math.abs(this.x));\n                var halfpi = Math.PI / 2;\n                var len = this.length();\n                if (this.x === 0) {\n                    if (this.y === 0) {\n                        return new Polar(0, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * halfpi);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * 3 * halfpi);\n                    }\n                } else if (this.x > 0) {\n                    if (this.y === 0) {\n                        return new Polar(len, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * a);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (4 * halfpi - a));\n                    }\n                } else {\n                    if (this.y === 0) {\n                        return new Polar(len, 2 * halfpi);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * (2 * halfpi - a));\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (2 * halfpi + a));\n                    }\n                }\n            },\n            isOnLine: function (from, to) {\n                if (from.x > to.x) {\n                    var temp = to;\n                    to = from;\n                    from = temp;\n                }\n                var r1 = new Rect(from.x, from.y).inflate(HITTESTAREA, HITTESTAREA), r2 = new Rect(to.x, to.y).inflate(HITTESTAREA, HITTESTAREA), o1, u1;\n                if (r1.union(r2).contains(this)) {\n                    if (from.x === to.x || from.y === to.y) {\n                        return true;\n                    } else if (from.y < to.y) {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - r1.y) / (r2.y - r1.y);\n                    } else {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - r1.y) / (r2.y - r1.y);\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                    }\n                    return this.x > o1 && this.x < u1;\n                }\n                return false;\n            }\n        });\n        deepExtend(Point, {\n            parse: function (str) {\n                var tempStr = str.slice(1, str.length - 1), xy = tempStr.split(','), x = parseInt(xy[0], 10), y = parseInt(xy[1], 10);\n                if (!isNaN(x) && !isNaN(y)) {\n                    return new Point(x, y);\n                }\n            }\n        });\n        var PathDefiner = Class.extend({\n            init: function (p, left, right) {\n                this.point = p;\n                this.left = left;\n                this.right = right;\n            }\n        });\n        var Rect = Class.extend({\n            init: function (x, y, width, height) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.width = width || 0;\n                this.height = height || 0;\n            },\n            contains: function (point) {\n                return point.x >= this.x && point.x <= this.x + this.width && point.y >= this.y && point.y <= this.y + this.height;\n            },\n            inflate: function (dx, dy) {\n                if (dy === undefined) {\n                    dy = dx;\n                }\n                this.x -= dx;\n                this.y -= dy;\n                this.width += 2 * dx + 1;\n                this.height += 2 * dy + 1;\n                return this;\n            },\n            offset: function (dx, dy) {\n                var x = dx, y = dy;\n                if (dx instanceof Point) {\n                    x = dx.x;\n                    y = dx.y;\n                }\n                this.x += x;\n                this.y += y;\n                return this;\n            },\n            union: function (r) {\n                var x1 = Math.min(this.x, r.x);\n                var y1 = Math.min(this.y, r.y);\n                var x2 = Math.max(this.x + this.width, r.x + r.width);\n                var y2 = Math.max(this.y + this.height, r.y + r.height);\n                return new Rect(x1, y1, x2 - x1, y2 - y1);\n            },\n            center: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height / 2);\n            },\n            top: function () {\n                return new Point(this.x + this.width / 2, this.y);\n            },\n            right: function () {\n                return new Point(this.x + this.width, this.y + this.height / 2);\n            },\n            bottom: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height);\n            },\n            left: function () {\n                return new Point(this.x, this.y + this.height / 2);\n            },\n            topLeft: function () {\n                return new Point(this.x, this.y);\n            },\n            topRight: function () {\n                return new Point(this.x + this.width, this.y);\n            },\n            bottomLeft: function () {\n                return new Point(this.x, this.y + this.height);\n            },\n            bottomRight: function () {\n                return new Point(this.x + this.width, this.y + this.height);\n            },\n            clone: function () {\n                return new Rect(this.x, this.y, this.width, this.height);\n            },\n            isEmpty: function () {\n                return !this.width && !this.height;\n            },\n            equals: function (rect) {\n                return this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height;\n            },\n            rotatedBounds: function (angle) {\n                var rect = this.clone(), points = this.rotatedPoints(angle), tl = points[0], tr = points[1], br = points[2], bl = points[3];\n                rect.x = Math.min(br.x, tl.x, tr.x, bl.x);\n                rect.y = Math.min(br.y, tl.y, tr.y, bl.y);\n                rect.width = Math.max(br.x, tl.x, tr.x, bl.x) - rect.x;\n                rect.height = Math.max(br.y, tl.y, tr.y, bl.y) - rect.y;\n                return rect;\n            },\n            rotatedPoints: function (angle) {\n                var rect = this, c = rect.center(), br = rect.bottomRight().rotate(c, 360 - angle), tl = rect.topLeft().rotate(c, 360 - angle), tr = rect.topRight().rotate(c, 360 - angle), bl = rect.bottomLeft().rotate(c, 360 - angle);\n                return [\n                    tl,\n                    tr,\n                    br,\n                    bl\n                ];\n            },\n            toString: function (delimiter) {\n                delimiter = delimiter || ' ';\n                return this.x + delimiter + this.y + delimiter + this.width + delimiter + this.height;\n            },\n            scale: function (scaleX, scaleY, staicPoint, adornerCenter, angle) {\n                var tl = this.topLeft();\n                var thisCenter = this.center();\n                tl.rotate(thisCenter, 360 - angle).rotate(adornerCenter, angle);\n                var delta = staicPoint.minus(tl);\n                var scaled = new Point(delta.x * scaleX, delta.y * scaleY);\n                var position = delta.minus(scaled);\n                tl = tl.plus(position);\n                tl.rotate(adornerCenter, 360 - angle).rotate(thisCenter, angle);\n                this.x = tl.x;\n                this.y = tl.y;\n                this.width *= scaleX;\n                this.height *= scaleY;\n            },\n            zoom: function (zoom) {\n                this.x *= zoom;\n                this.y *= zoom;\n                this.width *= zoom;\n                this.height *= zoom;\n                return this;\n            },\n            overlaps: function (rect) {\n                var bottomRight = this.bottomRight();\n                var rectBottomRight = rect.bottomRight();\n                var overlaps = !(bottomRight.x < rect.x || bottomRight.y < rect.y || rectBottomRight.x < this.x || rectBottomRight.y < this.y);\n                return overlaps;\n            }\n        });\n        var Size = Class.extend({\n            init: function (width, height) {\n                this.width = width;\n                this.height = height;\n            }\n        });\n        Size.prototype.Empty = new Size(0, 0);\n        Rect.toRect = function (rect) {\n            if (!(rect instanceof Rect)) {\n                rect = new Rect(rect.x, rect.y, rect.width, rect.height);\n            }\n            return rect;\n        };\n        Rect.empty = function () {\n            return new Rect(0, 0, 0, 0);\n        };\n        Rect.fromPoints = function (p, q) {\n            if (isNaN(p.x) || isNaN(p.y) || isNaN(q.x) || isNaN(q.y)) {\n                throw 'Some values are NaN.';\n            }\n            return new Rect(Math.min(p.x, q.x), Math.min(p.y, q.y), Math.abs(p.x - q.x), Math.abs(p.y - q.y));\n        };\n        function isNearZero(num) {\n            return Math.abs(num) < EPSILON;\n        }\n        function intersectLine(start1, end1, start2, end2, isSegment) {\n            var tangensdiff = (end1.x - start1.x) * (end2.y - start2.y) - (end1.y - start1.y) * (end2.x - start2.x);\n            if (isNearZero(tangensdiff)) {\n                return;\n            }\n            var num1 = (start1.y - start2.y) * (end2.x - start2.x) - (start1.x - start2.x) * (end2.y - start2.y);\n            var num2 = (start1.y - start2.y) * (end1.x - start1.x) - (start1.x - start2.x) * (end1.y - start1.y);\n            var r = num1 / tangensdiff;\n            var s = num2 / tangensdiff;\n            if (isSegment && (r < 0 || r > 1 || s < 0 || s > 1)) {\n                return;\n            }\n            return new Point(start1.x + r * (end1.x - start1.x), start1.y + r * (end1.y - start1.y));\n        }\n        var Intersect = {\n            lines: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2);\n            },\n            segments: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2, true);\n            },\n            rectWithLine: function (rect, start, end) {\n                return Intersect.segments(start, end, rect.topLeft(), rect.topRight()) || Intersect.segments(start, end, rect.topRight(), rect.bottomRight()) || Intersect.segments(start, end, rect.bottomLeft(), rect.bottomRight()) || Intersect.segments(start, end, rect.topLeft(), rect.bottomLeft());\n            },\n            rects: function (rect1, rect2, angle) {\n                var tl = rect2.topLeft(), tr = rect2.topRight(), bl = rect2.bottomLeft(), br = rect2.bottomRight();\n                var center = rect2.center();\n                if (angle) {\n                    tl = tl.rotate(center, angle);\n                    tr = tr.rotate(center, angle);\n                    bl = bl.rotate(center, angle);\n                    br = br.rotate(center, angle);\n                }\n                var intersect = rect1.contains(tl) || rect1.contains(tr) || rect1.contains(bl) || rect1.contains(br) || Intersect.rectWithLine(rect1, tl, tr) || Intersect.rectWithLine(rect1, tl, bl) || Intersect.rectWithLine(rect1, tr, br) || Intersect.rectWithLine(rect1, bl, br);\n                if (!intersect) {\n                    tl = rect1.topLeft();\n                    tr = rect1.topRight();\n                    bl = rect1.bottomLeft();\n                    br = rect1.bottomRight();\n                    if (angle) {\n                        var reverseAngle = 360 - angle;\n                        tl = tl.rotate(center, reverseAngle);\n                        tr = tr.rotate(center, reverseAngle);\n                        bl = bl.rotate(center, reverseAngle);\n                        br = br.rotate(center, reverseAngle);\n                    }\n                    intersect = rect2.contains(tl) || rect2.contains(tr) || rect2.contains(bl) || rect2.contains(br);\n                }\n                return intersect;\n            }\n        };\n        var RectAlign = Class.extend({\n            init: function (container) {\n                this.container = Rect.toRect(container);\n            },\n            align: function (content, alignment) {\n                var alignValues = alignment.toLowerCase().split(' ');\n                for (var i = 0; i < alignValues.length; i++) {\n                    content = this._singleAlign(content, alignValues[i]);\n                }\n                return content;\n            },\n            _singleAlign: function (content, alignment) {\n                if (isFunction(this[alignment])) {\n                    return this[alignment](content);\n                } else {\n                    return content;\n                }\n            },\n            left: function (content) {\n                return this._align(content, this._left);\n            },\n            center: function (content) {\n                return this._align(content, this._center);\n            },\n            right: function (content) {\n                return this._align(content, this._right);\n            },\n            stretch: function (content) {\n                return this._align(content, this._stretch);\n            },\n            top: function (content) {\n                return this._align(content, this._top);\n            },\n            middle: function (content) {\n                return this._align(content, this._middle);\n            },\n            bottom: function (content) {\n                return this._align(content, this._bottom);\n            },\n            _left: function (container, content) {\n                content.x = container.x;\n            },\n            _center: function (container, content) {\n                content.x = (container.width - content.width) / 2 || 0;\n            },\n            _right: function (container, content) {\n                content.x = container.width - content.width;\n            },\n            _top: function (container, content) {\n                content.y = container.y;\n            },\n            _middle: function (container, content) {\n                content.y = (container.height - content.height) / 2 || 0;\n            },\n            _bottom: function (container, content) {\n                content.y = container.height - content.height;\n            },\n            _stretch: function (container, content) {\n                content.x = 0;\n                content.y = 0;\n                content.height = container.height;\n                content.width = container.width;\n            },\n            _align: function (content, alignCalc) {\n                content = Rect.toRect(content);\n                alignCalc(this.container, content);\n                return content;\n            }\n        });\n        var Polar = Class.extend({\n            init: function (r, a) {\n                this.r = r;\n                this.angle = a;\n            }\n        });\n        var Matrix = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            plus: function (m) {\n                this.a += m.a;\n                this.b += m.b;\n                this.c += m.c;\n                this.d += m.d;\n                this.e += m.e;\n                this.f += m.f;\n            },\n            minus: function (m) {\n                this.a -= m.a;\n                this.b -= m.b;\n                this.c -= m.c;\n                this.d -= m.d;\n                this.e -= m.e;\n                this.f -= m.f;\n            },\n            times: function (m) {\n                return new Matrix(this.a * m.a + this.c * m.b, this.b * m.a + this.d * m.b, this.a * m.c + this.c * m.d, this.b * m.c + this.d * m.d, this.a * m.e + this.c * m.f + this.e, this.b * m.e + this.d * m.f + this.f);\n            },\n            apply: function (p) {\n                return new Point(this.a * p.x + this.c * p.y + this.e, this.b * p.x + this.d * p.y + this.f);\n            },\n            applyRect: function (r) {\n                return Rect.fromPoints(this.apply(r.topLeft()), this.apply(r.bottomRight()));\n            },\n            toString: function () {\n                return 'matrix(' + this.a + ' ' + this.b + ' ' + this.c + ' ' + this.d + ' ' + this.e + ' ' + this.f + ')';\n            }\n        });\n        deepExtend(Matrix, {\n            fromSVGMatrix: function (vm) {\n                var m = new Matrix();\n                m.a = vm.a;\n                m.b = vm.b;\n                m.c = vm.c;\n                m.d = vm.d;\n                m.e = vm.e;\n                m.f = vm.f;\n                return m;\n            },\n            fromMatrixVector: function (v) {\n                var m = new Matrix();\n                m.a = v.a;\n                m.b = v.b;\n                m.c = v.c;\n                m.d = v.d;\n                m.e = v.e;\n                m.f = v.f;\n                return m;\n            },\n            fromList: function (v) {\n                if (v.length !== 6) {\n                    throw 'The given list should consist of six elements.';\n                }\n                var m = new Matrix();\n                m.a = v[0];\n                m.b = v[1];\n                m.c = v[2];\n                m.d = v[3];\n                m.e = v[4];\n                m.f = v[5];\n                return m;\n            },\n            translation: function (x, y) {\n                var m = new Matrix();\n                m.a = 1;\n                m.b = 0;\n                m.c = 0;\n                m.d = 1;\n                m.e = x;\n                m.f = y;\n                return m;\n            },\n            unit: function () {\n                return new Matrix(1, 0, 0, 1, 0, 0);\n            },\n            rotation: function (angle, x, y) {\n                var m = new Matrix();\n                m.a = Math.cos(angle * Math.PI / 180);\n                m.b = Math.sin(angle * Math.PI / 180);\n                m.c = -m.b;\n                m.d = m.a;\n                m.e = x - x * m.a + y * m.b || 0;\n                m.f = y - y * m.a - x * m.b || 0;\n                return m;\n            },\n            scaling: function (scaleX, scaleY) {\n                var m = new Matrix();\n                m.a = scaleX;\n                m.b = 0;\n                m.c = 0;\n                m.d = scaleY;\n                m.e = 0;\n                m.f = 0;\n                return m;\n            },\n            parse: function (v) {\n                var parts, nums;\n                if (v) {\n                    v = v.trim();\n                    if (v.slice(0, 6).toLowerCase() === 'matrix') {\n                        nums = v.slice(7, v.length - 1).trim();\n                        parts = nums.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                        parts = nums.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.slice(0, 1) === '(' && v.slice(v.length - 1) === ')') {\n                        v = v.substr(1, v.length - 1);\n                    }\n                    if (v.indexOf(',') > 0) {\n                        parts = v.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.indexOf(' ') > 0) {\n                        parts = v.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                }\n                return parts;\n            }\n        });\n        var MatrixVector = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            fromMatrix: function FromMatrix(m) {\n                var v = new MatrixVector();\n                v.a = m.a;\n                v.b = m.b;\n                v.c = m.c;\n                v.d = m.d;\n                v.e = m.e;\n                v.f = m.f;\n                return v;\n            }\n        });\n        function normalVariable(mean, deviation) {\n            var x, y, r;\n            do {\n                x = Math.random() * 2 - 1;\n                y = Math.random() * 2 - 1;\n                r = x * x + y * y;\n            } while (!r || r > 1);\n            return mean + deviation * x * Math.sqrt(-2 * Math.log(r) / r);\n        }\n        function randomId(length) {\n            if (Utils.isUndefined(length)) {\n                length = 10;\n            }\n            var result = '';\n            var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n            for (var i = length; i > 0; --i) {\n                result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n            }\n            return result;\n        }\n        var Geometry = {\n            _distanceToLineSquared: function (p, a, b) {\n                function d2(pt1, pt2) {\n                    return (pt1.x - pt2.x) * (pt1.x - pt2.x) + (pt1.y - pt2.y) * (pt1.y - pt2.y);\n                }\n                if (a === b) {\n                    return d2(p, a);\n                }\n                var vx = b.x - a.x, vy = b.y - a.y, dot = (p.x - a.x) * vx + (p.y - a.y) * vy;\n                if (dot < 0) {\n                    return d2(a, p);\n                }\n                dot = (b.x - p.x) * vx + (b.y - p.y) * vy;\n                if (dot < 0) {\n                    return d2(b, p);\n                }\n                dot = (b.x - p.x) * vy - (b.y - p.y) * vx;\n                return dot * dot / (vx * vx + vy * vy);\n            },\n            distanceToLine: function (p, a, b) {\n                return Math.sqrt(this._distanceToLineSquared(p, a, b));\n            },\n            distanceToPolyline: function (p, points) {\n                var minimum = Number.MAX_VALUE;\n                if (Utils.isUndefined(points) || points.length === 0) {\n                    return Number.MAX_VALUE;\n                }\n                for (var s = 0; s < points.length - 1; s++) {\n                    var p1 = points[s];\n                    var p2 = points[s + 1];\n                    var d = this._distanceToLineSquared(p, p1, p2);\n                    if (d < minimum) {\n                        minimum = d;\n                    }\n                }\n                return Math.sqrt(minimum);\n            }\n        };\n        var HashTable = kendo.Class.extend({\n            init: function () {\n                this._buckets = [];\n                this.length = 0;\n            },\n            add: function (key, value) {\n                var obj = this._createGetBucket(key);\n                if (Utils.isDefined(value)) {\n                    obj.value = value;\n                }\n                return obj;\n            },\n            get: function (key) {\n                if (this._bucketExists(key)) {\n                    return this._createGetBucket(key);\n                }\n                return null;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            containsKey: function (key) {\n                return this._bucketExists(key);\n            },\n            remove: function (key) {\n                if (this._bucketExists(key)) {\n                    var hashId = this._hash(key);\n                    delete this._buckets[hashId];\n                    this.length--;\n                    return key;\n                }\n            },\n            forEach: function (func) {\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    func(bucket);\n                }\n            },\n            clone: function () {\n                var ht = new HashTable();\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    ht.add(bucket.key, bucket.value);\n                }\n                return ht;\n            },\n            _hashes: function () {\n                var hashes = [];\n                for (var hash in this._buckets) {\n                    if (this._buckets.hasOwnProperty(hash)) {\n                        hashes.push(hash);\n                    }\n                }\n                return hashes;\n            },\n            _bucketExists: function (key) {\n                var hashId = this._hash(key);\n                return Utils.isDefined(this._buckets[hashId]);\n            },\n            _createGetBucket: function (key) {\n                var hashId = this._hash(key);\n                var bucket = this._buckets[hashId];\n                if (Utils.isUndefined(bucket)) {\n                    bucket = { key: key };\n                    this._buckets[hashId] = bucket;\n                    this.length++;\n                }\n                return bucket;\n            },\n            _hash: function (key) {\n                if (Utils.isNumber(key)) {\n                    return key;\n                }\n                if (Utils.isString(key)) {\n                    return this._hashString(key);\n                }\n                if (Utils.isObject(key)) {\n                    return this._objectHashId(key);\n                }\n                throw 'Unsupported key type.';\n            },\n            _hashString: function (s) {\n                var result = 0;\n                if (s.length === 0) {\n                    return result;\n                }\n                for (var i = 0; i < s.length; i++) {\n                    var ch = s.charCodeAt(i);\n                    result = result * 32 - result + ch;\n                }\n                return result;\n            },\n            _objectHashId: function (key) {\n                var id = key._hashId;\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                    key._hashId = id;\n                }\n                return id;\n            }\n        });\n        var Dictionary = kendo.Observable.extend({\n            init: function (dictionary) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(dictionary)) {\n                    if ($.isArray(dictionary)) {\n                        for (var i = 0; i < dictionary.length; i++) {\n                            this.add(dictionary[i]);\n                        }\n                    } else {\n                        dictionary.forEach(function (k, v) {\n                            this.add(k, v);\n                        }, this);\n                    }\n                }\n            },\n            add: function (key, value) {\n                var entry = this._hashTable.get(key);\n                if (!entry) {\n                    entry = this._hashTable.add(key);\n                    this.length++;\n                    this.trigger('changed');\n                }\n                entry.value = value;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            get: function (key) {\n                var entry = this._hashTable.get(key);\n                if (entry) {\n                    return entry.value;\n                }\n                throw new Error('Cannot find key ' + key);\n            },\n            containsKey: function (key) {\n                return this._hashTable.containsKey(key);\n            },\n            remove: function (key) {\n                if (this.containsKey(key)) {\n                    this.trigger('changed');\n                    this.length--;\n                    return this._hashTable.remove(key);\n                }\n            },\n            forEach: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key, entry.value);\n                });\n            },\n            forEachValue: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.value);\n                });\n            },\n            forEachKey: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key);\n                });\n            },\n            keys: function () {\n                var keys = [];\n                this.forEachKey(function (key) {\n                    keys.push(key);\n                });\n                return keys;\n            }\n        });\n        var Queue = kendo.Class.extend({\n            init: function () {\n                this._tail = null;\n                this._head = null;\n                this.length = 0;\n            },\n            enqueue: function (value) {\n                var entry = {\n                    value: value,\n                    next: null\n                };\n                if (!this._head) {\n                    this._head = entry;\n                    this._tail = this._head;\n                } else {\n                    this._tail.next = entry;\n                    this._tail = this._tail.next;\n                }\n                this.length++;\n            },\n            dequeue: function () {\n                if (this.length < 1) {\n                    throw new Error('The queue is empty.');\n                }\n                var value = this._head.value;\n                this._head = this._head.next;\n                this.length--;\n                return value;\n            },\n            contains: function (item) {\n                var current = this._head;\n                while (current) {\n                    if (current.value === item) {\n                        return true;\n                    }\n                    current = current.next;\n                }\n                return false;\n            }\n        });\n        var Set = kendo.Observable.extend({\n            init: function (resource) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(resource)) {\n                    if (resource instanceof HashTable) {\n                        resource.forEach(function (d) {\n                            this.add(d);\n                        });\n                    } else if (resource instanceof Dictionary) {\n                        resource.forEach(function (k, v) {\n                            this.add({\n                                key: k,\n                                value: v\n                            });\n                        }, this);\n                    }\n                }\n            },\n            contains: function (item) {\n                return this._hashTable.containsKey(item);\n            },\n            add: function (item) {\n                var entry = this._hashTable.get(item);\n                if (!entry) {\n                    this._hashTable.add(item, item);\n                    this.length++;\n                    this.trigger('changed');\n                }\n            },\n            get: function (item) {\n                if (this.contains(item)) {\n                    return this._hashTable.get(item).value;\n                } else {\n                    return null;\n                }\n            },\n            hash: function (item) {\n                return this._hashTable._hash(item);\n            },\n            remove: function (item) {\n                if (this.contains(item)) {\n                    this._hashTable.remove(item);\n                    this.length--;\n                    this.trigger('changed');\n                }\n            },\n            forEach: function (func, context) {\n                this._hashTable.forEach(function (kv) {\n                    func(kv.value);\n                }, context);\n            },\n            toArray: function () {\n                var r = [];\n                this.forEach(function (d) {\n                    r.push(d);\n                });\n                return r;\n            }\n        });\n        var Node = kendo.Class.extend({\n            init: function (id, shape) {\n                this.links = [];\n                this.outgoing = [];\n                this.incoming = [];\n                this.weight = 1;\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(shape)) {\n                    this.associatedShape = shape;\n                    var b = shape.bounds();\n                    this.width = b.width;\n                    this.height = b.height;\n                    this.x = b.x;\n                    this.y = b.y;\n                } else {\n                    this.associatedShape = null;\n                }\n                this.data = null;\n                this.type = 'Node';\n                this.shortForm = 'Node \\'' + this.id + '\\'';\n                this.isVirtual = false;\n            },\n            isIsolated: function () {\n                return Utils.isEmpty(this.links);\n            },\n            bounds: function (r) {\n                if (!Utils.isDefined(r)) {\n                    return new diagram.Rect(this.x, this.y, this.width, this.height);\n                }\n                this.x = r.x;\n                this.y = r.y;\n                this.width = r.width;\n                this.height = r.height;\n            },\n            isLinkedTo: function (node) {\n                var that = this;\n                return Utils.any(that.links, function (link) {\n                    return link.getComplement(that) === node;\n                });\n            },\n            getChildren: function () {\n                if (this.outgoing.length === 0) {\n                    return [];\n                }\n                var children = [];\n                for (var i = 0, len = this.outgoing.length; i < len; i++) {\n                    var link = this.outgoing[i];\n                    children.push(link.getComplement(this));\n                }\n                return children;\n            },\n            getParents: function () {\n                if (this.incoming.length === 0) {\n                    return [];\n                }\n                var parents = [];\n                for (var i = 0, len = this.incoming.length; i < len; i++) {\n                    var link = this.incoming[i];\n                    parents.push(link.getComplement(this));\n                }\n                return parents;\n            },\n            clone: function () {\n                var copy = new Node();\n                if (Utils.isDefined(this.weight)) {\n                    copy.weight = this.weight;\n                }\n                if (Utils.isDefined(this.balance)) {\n                    copy.balance = this.balance;\n                }\n                if (Utils.isDefined(this.owner)) {\n                    copy.owner = this.owner;\n                }\n                copy.associatedShape = this.associatedShape;\n                copy.x = this.x;\n                copy.y = this.y;\n                copy.width = this.width;\n                copy.height = this.height;\n                return copy;\n            },\n            adjacentTo: function (node) {\n                return this.isLinkedTo(node) !== null;\n            },\n            removeLink: function (link) {\n                if (link.source === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.outgoing, link);\n                    link.source = null;\n                }\n                if (link.target === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.incoming, link);\n                    link.target = null;\n                }\n            },\n            hasLinkTo: function (node) {\n                return Utils.any(this.outgoing, function (link) {\n                    return link.target === node;\n                });\n            },\n            degree: function () {\n                return this.links.length;\n            },\n            incidentWith: function (link) {\n                return contains(this.links, link);\n            },\n            getLinksWith: function (node) {\n                return Utils.all(this.links, function (link) {\n                    return link.getComplement(this) === node;\n                }, this);\n            },\n            getNeighbors: function () {\n                var neighbors = [];\n                Utils.forEach(this.incoming, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                Utils.forEach(this.outgoing, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                return neighbors;\n            }\n        });\n        var Link = kendo.Class.extend({\n            init: function (source, target, id, connection) {\n                if (Utils.isUndefined(source)) {\n                    throw 'The source of the new link is not set.';\n                }\n                if (Utils.isUndefined(target)) {\n                    throw 'The target of the new link is not set.';\n                }\n                var sourceFound, targetFound;\n                if (Utils.isString(source)) {\n                    sourceFound = new Node(source);\n                } else {\n                    sourceFound = source;\n                }\n                if (Utils.isString(target)) {\n                    targetFound = new Node(target);\n                } else {\n                    targetFound = target;\n                }\n                this.source = sourceFound;\n                this.target = targetFound;\n                this.source.links.push(this);\n                this.target.links.push(this);\n                this.source.outgoing.push(this);\n                this.target.incoming.push(this);\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(connection)) {\n                    this.associatedConnection = connection;\n                } else {\n                    this.associatedConnection = null;\n                }\n                this.type = 'Link';\n                this.shortForm = 'Link \\'' + this.source.id + '->' + this.target.id + '\\'';\n            },\n            getComplement: function (node) {\n                if (this.source !== node && this.target !== node) {\n                    throw 'The given node is not incident with this link.';\n                }\n                return this.source === node ? this.target : this.source;\n            },\n            getCommonNode: function (link) {\n                if (this.source === link.source || this.source === link.target) {\n                    return this.source;\n                }\n                if (this.target === link.source || this.target === link.target) {\n                    return this.target;\n                }\n                return null;\n            },\n            isBridging: function (v1, v2) {\n                return this.source === v1 && this.target === v2 || this.source === v2 && this.target === v1;\n            },\n            getNodes: function () {\n                return [\n                    this.source,\n                    this.target\n                ];\n            },\n            incidentWith: function (node) {\n                return this.source === node || this.target === node;\n            },\n            adjacentTo: function (link) {\n                return contains(this.source.links, link) || contains(this.target.links, link);\n            },\n            changeSource: function (node) {\n                Utils.remove(this.source.links, this);\n                Utils.remove(this.source.outgoing, this);\n                node.links.push(this);\n                node.outgoing.push(this);\n                this.source = node;\n            },\n            changeTarget: function (node) {\n                Utils.remove(this.target.links, this);\n                Utils.remove(this.target.incoming, this);\n                node.links.push(this);\n                node.incoming.push(this);\n                this.target = node;\n            },\n            changesNodes: function (v, w) {\n                if (this.source === v) {\n                    this.changeSource(w);\n                } else if (this.target === v) {\n                    this.changeTarget(w);\n                }\n            },\n            reverse: function () {\n                var oldSource = this.source;\n                var oldTarget = this.target;\n                this.source = oldTarget;\n                Utils.remove(oldSource.outgoing, this);\n                this.source.outgoing.push(this);\n                this.target = oldSource;\n                Utils.remove(oldTarget.incoming, this);\n                this.target.incoming.push(this);\n                return this;\n            },\n            directTo: function (target) {\n                if (this.source !== target && this.target !== target) {\n                    throw 'The given node is not incident with this link.';\n                }\n                if (this.target !== target) {\n                    this.reverse();\n                }\n            },\n            createReverseEdge: function () {\n                var r = this.clone();\n                r.reverse();\n                r.reversed = true;\n                return r;\n            },\n            clone: function () {\n                var clone = new Link(this.source, this.target);\n                return clone;\n            }\n        });\n        var Graph = kendo.Class.extend({\n            init: function (idOrDiagram) {\n                this.links = [];\n                this.nodes = [];\n                this._nodeMap = new Dictionary();\n                this.diagram = null;\n                this._root = null;\n                if (Utils.isDefined(idOrDiagram)) {\n                    if (Utils.isString(idOrDiagram)) {\n                        this.id = idOrDiagram;\n                    } else {\n                        this.diagram = idOrDiagram;\n                        this.id = idOrDiagram.id;\n                    }\n                } else {\n                    this.id = randomId();\n                }\n                this.bounds = new Rect();\n                this._hasCachedRelationships = false;\n                this.type = 'Graph';\n            },\n            cacheRelationships: function (forceRebuild) {\n                if (Utils.isUndefined(forceRebuild)) {\n                    forceRebuild = false;\n                }\n                if (this._hasCachedRelationships && !forceRebuild) {\n                    return;\n                }\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    node.children = this.getChildren(node);\n                    node.parents = this.getParents(node);\n                }\n                this._hasCachedRelationships = true;\n            },\n            assignLevels: function (startNode, offset, visited) {\n                if (!startNode) {\n                    throw 'Start node not specified.';\n                }\n                if (Utils.isUndefined(offset)) {\n                    offset = 0;\n                }\n                this.cacheRelationships();\n                if (Utils.isUndefined(visited)) {\n                    visited = new Dictionary();\n                    Utils.forEach(this.nodes, function (n) {\n                        visited.add(n, false);\n                    });\n                }\n                visited.set(startNode, true);\n                startNode.level = offset;\n                var children = startNode.children;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (!child || visited.get(child)) {\n                        continue;\n                    }\n                    this.assignLevels(child, offset + 1, visited);\n                }\n            },\n            root: function (value) {\n                if (Utils.isUndefined(value)) {\n                    if (!this._root) {\n                        var found = Utils.first(this.nodes, function (n) {\n                            return n.incoming.length === 0;\n                        });\n                        if (found) {\n                            return found;\n                        }\n                        return Utils.first(this.nodes);\n                    } else {\n                        return this._root;\n                    }\n                } else {\n                    this._root = value;\n                }\n            },\n            getConnectedComponents: function () {\n                this.componentIndex = 0;\n                this.setItemIndices();\n                var componentId = Utils.initArray(this.nodes.length, -1);\n                for (var v = 0; v < this.nodes.length; v++) {\n                    if (componentId[v] === -1) {\n                        this._collectConnectedNodes(componentId, v);\n                        this.componentIndex++;\n                    }\n                }\n                var components = [], i;\n                for (i = 0; i < this.componentIndex; ++i) {\n                    components[i] = new Graph();\n                }\n                for (i = 0; i < componentId.length; ++i) {\n                    var graph = components[componentId[i]];\n                    graph.addNodeAndOutgoings(this.nodes[i]);\n                }\n                components.sort(function (a, b) {\n                    return b.nodes.length - a.nodes.length;\n                });\n                return components;\n            },\n            _collectConnectedNodes: function (setIds, nodeIndex) {\n                setIds[nodeIndex] = this.componentIndex;\n                var node = this.nodes[nodeIndex];\n                Utils.forEach(node.links, function (link) {\n                    var next = link.getComplement(node);\n                    var nextId = next.index;\n                    if (setIds[nextId] === -1) {\n                        this._collectConnectedNodes(setIds, nextId);\n                    }\n                }, this);\n            },\n            calcBounds: function () {\n                if (this.isEmpty()) {\n                    this.bounds = new Rect();\n                    return this.bounds;\n                }\n                var b = null;\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (!b) {\n                        b = node.bounds();\n                    } else {\n                        b = b.union(node.bounds());\n                    }\n                }\n                this.bounds = b;\n                return this.bounds;\n            },\n            getSpanningTree: function (root) {\n                var tree = new Graph();\n                var map = new Dictionary(), source, target;\n                tree.root = root.clone();\n                tree.root.level = 0;\n                tree.root.id = root.id;\n                map.add(root, tree.root);\n                root.level = 0;\n                var visited = [];\n                var remaining = [];\n                tree._addNode(tree.root);\n                visited.push(root);\n                remaining.push(root);\n                var levelCount = 1;\n                while (remaining.length > 0) {\n                    var next = remaining.pop();\n                    for (var ni = 0; ni < next.links.length; ni++) {\n                        var link = next.links[ni];\n                        var cn = link.getComplement(next);\n                        if (contains(visited, cn)) {\n                            continue;\n                        }\n                        cn.level = next.level + 1;\n                        if (levelCount < cn.level + 1) {\n                            levelCount = cn.level + 1;\n                        }\n                        if (!contains(remaining, cn)) {\n                            remaining.push(cn);\n                        }\n                        if (!contains(visited, cn)) {\n                            visited.push(cn);\n                        }\n                        if (map.containsKey(next)) {\n                            source = map.get(next);\n                        } else {\n                            source = next.clone();\n                            source.level = next.level;\n                            source.id = next.id;\n                            map.add(next, source);\n                        }\n                        if (map.containsKey(cn)) {\n                            target = map.get(cn);\n                        } else {\n                            target = cn.clone();\n                            target.level = cn.level;\n                            target.id = cn.id;\n                            map.add(cn, target);\n                        }\n                        var newLink = new Link(source, target);\n                        tree.addLink(newLink);\n                    }\n                }\n                var treeLevels = [];\n                for (var i = 0; i < levelCount; i++) {\n                    treeLevels.push([]);\n                }\n                Utils.forEach(tree.nodes, function (node) {\n                    treeLevels[node.level].push(node);\n                });\n                tree.treeLevels = treeLevels;\n                tree.cacheRelationships();\n                return tree;\n            },\n            takeRandomNode: function (excludedNodes, incidenceLessThan) {\n                if (Utils.isUndefined(excludedNodes)) {\n                    excludedNodes = [];\n                }\n                if (Utils.isUndefined(incidenceLessThan)) {\n                    incidenceLessThan = 4;\n                }\n                if (this.nodes.length === 0) {\n                    return null;\n                }\n                if (this.nodes.length === 1) {\n                    return contains(excludedNodes, this.nodes[0]) ? null : this.nodes[0];\n                }\n                var pool = $.grep(this.nodes, function (node) {\n                    return !contains(excludedNodes, node) && node.degree() <= incidenceLessThan;\n                });\n                if (Utils.isEmpty(pool)) {\n                    return null;\n                }\n                return pool[Utils.randomInteger(0, pool.length)];\n            },\n            isEmpty: function () {\n                return Utils.isEmpty(this.nodes);\n            },\n            isHealthy: function () {\n                return Utils.all(this.links, function (link) {\n                    return contains(this.nodes, link.source) && contains(this.nodes, link.target);\n                }, this);\n            },\n            getParents: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getParents();\n            },\n            getChildren: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getChildren();\n            },\n            addLink: function (sourceOrLink, target, owner) {\n                if (Utils.isUndefined(sourceOrLink)) {\n                    throw 'The source of the link is not defined.';\n                }\n                if (Utils.isUndefined(target)) {\n                    if (Utils.isDefined(sourceOrLink.type) && sourceOrLink.type === 'Link') {\n                        this.addExistingLink(sourceOrLink);\n                        return;\n                    } else {\n                        throw 'The target of the link is not defined.';\n                    }\n                }\n                var foundSource = this.getNode(sourceOrLink);\n                if (Utils.isUndefined(foundSource)) {\n                    foundSource = this.addNode(sourceOrLink);\n                }\n                var foundTarget = this.getNode(target);\n                if (Utils.isUndefined(foundTarget)) {\n                    foundTarget = this.addNode(target);\n                }\n                var newLink = new Link(foundSource, foundTarget);\n                if (Utils.isDefined(owner)) {\n                    newLink.owner = owner;\n                }\n                this.links.push(newLink);\n                return newLink;\n            },\n            removeAllLinks: function () {\n                while (this.links.length > 0) {\n                    var link = this.links[0];\n                    this.removeLink(link);\n                }\n            },\n            addExistingLink: function (link) {\n                if (this.hasLink(link)) {\n                    return;\n                }\n                this.links.push(link);\n                if (this.hasNode(link.source.id)) {\n                    var s = this.getNode(link.source.id);\n                    link.changeSource(s);\n                } else {\n                    this.addNode(link.source);\n                }\n                if (this.hasNode(link.target.id)) {\n                    var t = this.getNode(link.target.id);\n                    link.changeTarget(t);\n                } else {\n                    this.addNode(link.target);\n                }\n            },\n            hasLink: function (linkOrId) {\n                if (Utils.isString(linkOrId)) {\n                    return Utils.any(this.links, function (link) {\n                        return link.id === linkOrId;\n                    });\n                }\n                if (linkOrId.type === 'Link') {\n                    return contains(this.links, linkOrId);\n                }\n                throw 'The given object is neither an identifier nor a Link.';\n            },\n            getNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                if (this._nodeMap.containsKey(id)) {\n                    return this._nodeMap.get(id);\n                }\n            },\n            hasNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                return this._nodeMap.containsKey(id);\n            },\n            _addNode: function (node) {\n                this.nodes.push(node);\n                this._nodeMap.add(node.id, node);\n            },\n            _removeNode: function (node) {\n                Utils.remove(this.nodes, node);\n                this._nodeMap.remove(node.id);\n            },\n            removeNode: function (nodeOrId) {\n                var n = nodeOrId;\n                if (Utils.isString(nodeOrId)) {\n                    n = this.getNode(nodeOrId);\n                }\n                if (Utils.isDefined(n)) {\n                    var links = n.links;\n                    n.links = [];\n                    for (var i = 0, len = links.length; i < len; i++) {\n                        var link = links[i];\n                        this.removeLink(link);\n                    }\n                    this._removeNode(n);\n                } else {\n                    throw 'The identifier should be a Node or the Id (string) of a node.';\n                }\n            },\n            areConnected: function (n1, n2) {\n                return Utils.any(this.links, function (link) {\n                    return link.source == n1 && link.target == n2 || link.source == n2 && link.target == n1;\n                });\n            },\n            removeLink: function (link) {\n                Utils.remove(this.links, link);\n                Utils.remove(link.source.outgoing, link);\n                Utils.remove(link.source.links, link);\n                Utils.remove(link.target.incoming, link);\n                Utils.remove(link.target.links, link);\n            },\n            addNode: function (nodeOrId, layoutRect, owner) {\n                var newNode = null;\n                if (!Utils.isDefined(nodeOrId)) {\n                    throw 'No Node or identifier for a new Node is given.';\n                }\n                if (Utils.isString(nodeOrId)) {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = new Node(nodeOrId);\n                } else {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = nodeOrId;\n                }\n                if (Utils.isDefined(layoutRect)) {\n                    newNode.bounds(layoutRect);\n                }\n                if (Utils.isDefined(owner)) {\n                    newNode.owner = owner;\n                }\n                this._addNode(newNode);\n                return newNode;\n            },\n            addNodeAndOutgoings: function (node) {\n                if (!this.hasNode(node)) {\n                    this._addNode(node);\n                }\n                var newLinks = node.outgoing;\n                node.outgoing = [];\n                Utils.forEach(newLinks, function (link) {\n                    this.addExistingLink(link);\n                }, this);\n            },\n            setItemIndices: function () {\n                var i;\n                for (i = 0; i < this.nodes.length; ++i) {\n                    this.nodes[i].index = i;\n                }\n                for (i = 0; i < this.links.length; ++i) {\n                    this.links[i].index = i;\n                }\n            },\n            clone: function (saveMapping) {\n                var copy = new Graph();\n                var save = Utils.isDefined(saveMapping) && saveMapping === true;\n                if (save) {\n                    copy.nodeMap = new Dictionary();\n                    copy.linkMap = new Dictionary();\n                }\n                var map = new Dictionary();\n                Utils.forEach(this.nodes, function (nOriginal) {\n                    var nCopy = nOriginal.clone();\n                    map.set(nOriginal, nCopy);\n                    copy._addNode(nCopy);\n                    if (save) {\n                        copy.nodeMap.set(nCopy, nOriginal);\n                    }\n                });\n                Utils.forEach(this.links, function (linkOriginal) {\n                    if (map.containsKey(linkOriginal.source) && map.containsKey(linkOriginal.target)) {\n                        var linkCopy = copy.addLink(map.get(linkOriginal.source), map.get(linkOriginal.target));\n                        if (save) {\n                            copy.linkMap.set(linkCopy, linkOriginal);\n                        }\n                    }\n                });\n                return copy;\n            },\n            linearize: function (addIds) {\n                return Graph.Utils.linearize(this, addIds);\n            },\n            depthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var visited = [];\n                this._dftIterator(foundNode, action, visited);\n            },\n            _dftIterator: function (node, action, visited) {\n                action(node);\n                visited.push(node);\n                var children = node.getChildren();\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (contains(visited, child)) {\n                        continue;\n                    }\n                    this._dftIterator(child, action, visited);\n                }\n            },\n            breadthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var queue = new Queue();\n                var visited = [];\n                queue.enqueue(foundNode);\n                while (queue.length > 0) {\n                    var node = queue.dequeue();\n                    action(node);\n                    visited.push(node);\n                    var children = node.getChildren();\n                    for (var i = 0, len = children.length; i < len; i++) {\n                        var child = children[i];\n                        if (contains(visited, child) || contains(queue, child)) {\n                            continue;\n                        }\n                        queue.enqueue(child);\n                    }\n                }\n            },\n            _stronglyConnectedComponents: function (excludeSingleItems, node, indices, lowLinks, connected, stack, index) {\n                indices.add(node, index);\n                lowLinks.add(node, index);\n                index++;\n                stack.push(node);\n                var children = node.getChildren(), next;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    next = children[i];\n                    if (!indices.containsKey(next)) {\n                        this._stronglyConnectedComponents(excludeSingleItems, next, indices, lowLinks, connected, stack, index);\n                        lowLinks.add(node, Math.min(lowLinks.get(node), lowLinks.get(next)));\n                    } else if (contains(stack, next)) {\n                        lowLinks.add(node, Math.min(lowLinks.get(node), indices.get(next)));\n                    }\n                }\n                if (lowLinks.get(node) === indices.get(node)) {\n                    var component = [];\n                    do {\n                        next = stack.pop();\n                        component.push(next);\n                    } while (next !== node);\n                    if (!excludeSingleItems || component.length > 1) {\n                        connected.push(component);\n                    }\n                }\n            },\n            findCycles: function (excludeSingleItems) {\n                if (Utils.isUndefined(excludeSingleItems)) {\n                    excludeSingleItems = true;\n                }\n                var indices = new Dictionary();\n                var lowLinks = new Dictionary();\n                var connected = [];\n                var stack = [];\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (indices.containsKey(node)) {\n                        continue;\n                    }\n                    this._stronglyConnectedComponents(excludeSingleItems, node, indices, lowLinks, connected, stack, 0);\n                }\n                return connected;\n            },\n            isAcyclic: function () {\n                return Utils.isEmpty(this.findCycles());\n            },\n            isSubGraph: function (other) {\n                var otherArray = other.linearize();\n                var thisArray = this.linearize();\n                return Utils.all(otherArray, function (s) {\n                    return contains(thisArray, s);\n                });\n            },\n            makeAcyclic: function () {\n                if (this.isEmpty() || this.nodes.length <= 1 || this.links.length <= 1) {\n                    return [];\n                }\n                if (this.nodes.length == 2) {\n                    var result = [];\n                    if (this.links.length > 1) {\n                        var oneLink = this.links[0];\n                        var oneNode = oneLink.source;\n                        for (var i = 0, len = this.links.length; i < len; i++) {\n                            var link = this.links[i];\n                            if (link.source == oneNode) {\n                                continue;\n                            }\n                            var rev = link.reverse();\n                            result.push(rev);\n                        }\n                    }\n                    return result;\n                }\n                var copy = this.clone(true);\n                var N = this.nodes.length;\n                var intensityCatalog = new Dictionary();\n                var flowIntensity = function (node) {\n                    if (node.outgoing.length === 0) {\n                        return 2 - N;\n                    } else if (node.incoming.length === 0) {\n                        return N - 2;\n                    } else {\n                        return node.outgoing.length - node.incoming.length;\n                    }\n                };\n                var catalogEqualIntensity = function (node, intensityCatalog) {\n                    var intensity = flowIntensity(node, N);\n                    if (!intensityCatalog.containsKey(intensity)) {\n                        intensityCatalog.set(intensity, []);\n                    }\n                    intensityCatalog.get(intensity).push(node);\n                };\n                Utils.forEach(copy.nodes, function (v) {\n                    catalogEqualIntensity(v, intensityCatalog);\n                });\n                var sourceStack = [];\n                var targetStack = [];\n                while (copy.nodes.length > 0) {\n                    var source, target, intensity;\n                    if (intensityCatalog.containsKey(2 - N)) {\n                        var targets = intensityCatalog.get(2 - N);\n                        while (targets.length > 0) {\n                            target = targets.pop();\n                            for (var li = 0; li < target.links.length; li++) {\n                                var targetLink = target.links[li];\n                                source = targetLink.getComplement(target);\n                                intensity = flowIntensity(source, N);\n                                Utils.remove(intensityCatalog.get(intensity), source);\n                                source.removeLink(targetLink);\n                                catalogEqualIntensity(source, intensityCatalog);\n                            }\n                            copy._removeNode(target);\n                            targetStack.unshift(target);\n                        }\n                    }\n                    if (intensityCatalog.containsKey(N - 2)) {\n                        var sources = intensityCatalog.get(N - 2);\n                        while (sources.length > 0) {\n                            source = sources.pop();\n                            for (var si = 0; si < source.links.length; si++) {\n                                var sourceLink = source.links[si];\n                                target = sourceLink.getComplement(source);\n                                intensity = flowIntensity(target, N);\n                                Utils.remove(intensityCatalog.get(intensity), target);\n                                target.removeLink(sourceLink);\n                                catalogEqualIntensity(target, intensityCatalog);\n                            }\n                            sourceStack.push(source);\n                            copy._removeNode(source);\n                        }\n                    }\n                    if (copy.nodes.length > 0) {\n                        for (var k = N - 3; k > 2 - N; k--) {\n                            if (intensityCatalog.containsKey(k) && intensityCatalog.get(k).length > 0) {\n                                var maxdiff = intensityCatalog.get(k);\n                                var v = maxdiff.pop();\n                                for (var ri = 0; ri < v.links.length; ri++) {\n                                    var ril = v.links[ri];\n                                    var u = ril.getComplement(v);\n                                    intensity = flowIntensity(u, N);\n                                    Utils.remove(intensityCatalog.get(intensity), u);\n                                    u.removeLink(ril);\n                                    catalogEqualIntensity(u, intensityCatalog);\n                                }\n                                sourceStack.push(v);\n                                copy._removeNode(v);\n                                break;\n                            }\n                        }\n                    }\n                }\n                sourceStack = sourceStack.concat(targetStack);\n                var vertexOrder = new Dictionary();\n                for (var kk = 0; kk < this.nodes.length; kk++) {\n                    vertexOrder.set(copy.nodeMap.get(sourceStack[kk]), kk);\n                }\n                var reversedEdges = [];\n                Utils.forEach(this.links, function (link) {\n                    if (vertexOrder.get(link.source) > vertexOrder.get(link.target)) {\n                        link.reverse();\n                        reversedEdges.push(link);\n                    }\n                });\n                return reversedEdges;\n            }\n        });\n        Graph.Predefined = {\n            EightGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->4',\n                    '4->1',\n                    '3->5',\n                    '5->6',\n                    '6->7',\n                    '7->3'\n                ]);\n            },\n            Mindmap: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '0->2',\n                    '0->3',\n                    '0->4',\n                    '0->5',\n                    '1->6',\n                    '1->7',\n                    '7->8',\n                    '2->9',\n                    '9->10',\n                    '9->11',\n                    '3->12',\n                    '12->13',\n                    '13->14',\n                    '4->15',\n                    '4->16',\n                    '15->17',\n                    '15->18',\n                    '18->19',\n                    '18->20',\n                    '14->21',\n                    '14->22',\n                    '5->23',\n                    '23->24',\n                    '23->25',\n                    '6->26'\n                ]);\n            },\n            ThreeGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->1'\n                ]);\n            },\n            BinaryTree: function (levels) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 5;\n                }\n                return Graph.Utils.createBalancedTree(levels, 2);\n            },\n            Linear: function (length) {\n                if (Utils.isUndefined(length)) {\n                    length = 10;\n                }\n                return Graph.Utils.createBalancedTree(length, 1);\n            },\n            Tree: function (levels, siblingsCount) {\n                return Graph.Utils.createBalancedTree(levels, siblingsCount);\n            },\n            Forest: function (levels, siblingsCount, trees) {\n                return Graph.Utils.createBalancedForest(levels, siblingsCount, trees);\n            },\n            Workflow: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '1->2',\n                    '2->3',\n                    '1->4',\n                    '4->3',\n                    '3->5',\n                    '5->6',\n                    '6->3',\n                    '6->7',\n                    '5->4'\n                ]);\n            },\n            Grid: function (n, m) {\n                var g = new diagram.Graph();\n                if (n <= 0 && m <= 0) {\n                    return g;\n                }\n                for (var i = 0; i < n + 1; i++) {\n                    var previous = null;\n                    for (var j = 0; j < m + 1; j++) {\n                        var node = new Node(i.toString() + '.' + j.toString());\n                        g.addNode(node);\n                        if (previous) {\n                            g.addLink(previous, node);\n                        }\n                        if (i > 0) {\n                            var left = g.getNode((i - 1).toString() + '.' + j.toString());\n                            g.addLink(left, node);\n                        }\n                        previous = node;\n                    }\n                }\n                return g;\n            }\n        };\n        Graph.Utils = {\n            parse: function (graphString) {\n                var previousLink, graph = new diagram.Graph(), parts = graphString.slice();\n                for (var i = 0, len = parts.length; i < len; i++) {\n                    var part = parts[i];\n                    if (Utils.isString(part)) {\n                        if (part.indexOf('->') < 0) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        var p = part.split('->');\n                        if (p.length != 2) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        previousLink = new Link(p[0], p[1]);\n                        graph.addLink(previousLink);\n                    }\n                    if (Utils.isObject(part)) {\n                        if (!previousLink) {\n                            throw 'Specification found before Link definition.';\n                        }\n                        kendo.deepExtend(previousLink, part);\n                    }\n                }\n                return graph;\n            },\n            linearize: function (graph, addIds) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'Expected an instance of a Graph object in slot one.';\n                }\n                if (Utils.isUndefined(addIds)) {\n                    addIds = false;\n                }\n                var lin = [];\n                for (var i = 0, len = graph.links.length; i < len; i++) {\n                    var link = graph.links[i];\n                    lin.push(link.source.id + '->' + link.target.id);\n                    if (addIds) {\n                        lin.push({ id: link.id });\n                    }\n                }\n                return lin;\n            },\n            _addShape: function (kendoDiagram, p, id, shapeDefaults) {\n                if (Utils.isUndefined(p)) {\n                    p = new diagram.Point(0, 0);\n                }\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                }\n                shapeDefaults = kendo.deepExtend({\n                    width: 20,\n                    height: 20,\n                    id: id,\n                    radius: 10,\n                    fill: '#778899',\n                    data: 'circle',\n                    undoable: false,\n                    x: p.x,\n                    y: p.y\n                }, shapeDefaults);\n                return kendoDiagram.addShape(shapeDefaults);\n            },\n            _addConnection: function (diagram, from, to, options) {\n                return diagram.connect(from, to, options);\n            },\n            createDiagramFromGraph: function (diagram, graph, doLayout, randomSize) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'The diagram surface is undefined.';\n                }\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph specification defined.';\n                }\n                if (Utils.isUndefined(doLayout)) {\n                    doLayout = true;\n                }\n                if (Utils.isUndefined(randomSize)) {\n                    randomSize = false;\n                }\n                var width = diagram.element.clientWidth || 200;\n                var height = diagram.element.clientHeight || 200;\n                var map = [], node, shape;\n                for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                    node = graph.nodes[i];\n                    var p = node.position;\n                    if (Utils.isUndefined(p)) {\n                        if (Utils.isDefined(node.x) && Utils.isDefined(node.y)) {\n                            p = new Point(node.x, node.y);\n                        } else {\n                            p = new Point(Utils.randomInteger(10, width - 20), Utils.randomInteger(10, height - 20));\n                        }\n                    }\n                    var opt = {};\n                    if (node.id === '0') {\n                    } else if (randomSize) {\n                        kendo.deepExtend(opt, {\n                            width: Math.random() * 150 + 20,\n                            height: Math.random() * 80 + 50,\n                            data: 'rectangle',\n                            fill: { color: '#778899' }\n                        });\n                    }\n                    shape = this._addShape(diagram, p, node.id, opt);\n                    var bounds = shape.bounds();\n                    if (Utils.isDefined(bounds)) {\n                        node.x = bounds.x;\n                        node.y = bounds.y;\n                        node.width = bounds.width;\n                        node.height = bounds.height;\n                    }\n                    map[node.id] = shape;\n                }\n                for (var gli = 0; gli < graph.links.length; gli++) {\n                    var link = graph.links[gli];\n                    var sourceShape = map[link.source.id];\n                    if (Utils.isUndefined(sourceShape)) {\n                        continue;\n                    }\n                    var targetShape = map[link.target.id];\n                    if (Utils.isUndefined(targetShape)) {\n                        continue;\n                    }\n                    this._addConnection(diagram, sourceShape, targetShape, { id: link.id });\n                }\n                if (doLayout) {\n                    var l = new diagram.SpringLayout(diagram);\n                    l.layoutGraph(graph, { limitToView: false });\n                    for (var shi = 0; shi < graph.nodes.length; shi++) {\n                        node = graph.nodes[shi];\n                        shape = map[node.id];\n                        shape.bounds(new Rect(node.x, node.y, node.width, node.height));\n                    }\n                }\n            },\n            createBalancedTree: function (levels, siblingsCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                g.root = root;\n                lastAdded.push(root);\n                for (var i = 0; i < levels; i++) {\n                    news = [];\n                    for (var j = 0; j < lastAdded.length; j++) {\n                        var parent = lastAdded[j];\n                        for (var k = 0; k < siblingsCount; k++) {\n                            var item = new Node((++counter).toString());\n                            g.addLink(parent, item);\n                            news.push(item);\n                        }\n                    }\n                    lastAdded = news;\n                }\n                return g;\n            },\n            createBalancedForest: function (levels, siblingsCount, treeCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                if (Utils.isUndefined(treeCount)) {\n                    treeCount = 5;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0 || treeCount <= 0) {\n                    return g;\n                }\n                for (var t = 0; t < treeCount; t++) {\n                    var root = new Node((++counter).toString());\n                    g.addNode(root);\n                    lastAdded = [root];\n                    for (var i = 0; i < levels; i++) {\n                        news = [];\n                        for (var j = 0; j < lastAdded.length; j++) {\n                            var parent = lastAdded[j];\n                            for (var k = 0; k < siblingsCount; k++) {\n                                var item = new Node((++counter).toString());\n                                g.addLink(parent, item);\n                                news.push(item);\n                            }\n                        }\n                        lastAdded = news;\n                    }\n                }\n                return g;\n            },\n            createRandomConnectedGraph: function (nodeCount, maxIncidence, isTree) {\n                if (Utils.isUndefined(nodeCount)) {\n                    nodeCount = 40;\n                }\n                if (Utils.isUndefined(maxIncidence)) {\n                    maxIncidence = 4;\n                }\n                if (Utils.isUndefined(isTree)) {\n                    isTree = false;\n                }\n                var g = new diagram.Graph(), counter = -1;\n                if (nodeCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                if (nodeCount === 1) {\n                    return g;\n                }\n                if (nodeCount > 1) {\n                    for (var i = 1; i < nodeCount; i++) {\n                        var poolNode = g.takeRandomNode([], maxIncidence);\n                        if (!poolNode) {\n                            break;\n                        }\n                        var newNode = g.addNode(i.toString());\n                        g.addLink(poolNode, newNode);\n                    }\n                    if (!isTree && nodeCount > 1) {\n                        var randomAdditions = Utils.randomInteger(1, nodeCount);\n                        for (var ri = 0; ri < randomAdditions; ri++) {\n                            var n1 = g.takeRandomNode([], maxIncidence);\n                            var n2 = g.takeRandomNode([], maxIncidence);\n                            if (n1 && n2 && !g.areConnected(n1, n2)) {\n                                g.addLink(n1, n2);\n                            }\n                        }\n                    }\n                    return g;\n                }\n            },\n            randomDiagram: function (diagram, shapeCount, maxIncidence, isTree, randomSize) {\n                var g = kendo.dataviz.diagram.Graph.Utils.createRandomConnectedGraph(shapeCount, maxIncidence, isTree);\n                Graph.Utils.createDiagramFromGraph(diagram, g, false, randomSize);\n            }\n        };\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Point: Point,\n            Intersect: Intersect,\n            Geometry: Geometry,\n            Rect: Rect,\n            Size: Size,\n            RectAlign: RectAlign,\n            Matrix: Matrix,\n            MatrixVector: MatrixVector,\n            normalVariable: normalVariable,\n            randomId: randomId,\n            Dictionary: Dictionary,\n            HashTable: HashTable,\n            Queue: Queue,\n            Set: Set,\n            Node: Node,\n            Link: Link,\n            Graph: Graph,\n            PathDefiner: PathDefiner\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/svg', [\n        'kendo.drawing',\n        'dataviz/diagram/math'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, Point = diagram.Point, Rect = diagram.Rect, Matrix = diagram.Matrix, Utils = diagram.Utils, isNumber = Utils.isNumber, isString = Utils.isString, MatrixVector = diagram.MatrixVector, g = kendo.geometry, d = kendo.drawing, defined = d.util.defined, inArray = $.inArray;\n        var TRANSPARENT = 'transparent', Markers = {\n                none: 'none',\n                arrowStart: 'ArrowStart',\n                filledCircle: 'FilledCircle',\n                arrowEnd: 'ArrowEnd'\n            }, FULL_CIRCLE_ANGLE = 360, START = 'start', END = 'end', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y';\n        diagram.Markers = Markers;\n        function diffNumericOptions(options, fields) {\n            var elementOptions = this.options;\n            var hasChanges = false;\n            var value, field;\n            for (var i = 0; i < fields.length; i++) {\n                field = fields[i];\n                value = options[field];\n                if (isNumber(value) && elementOptions[field] !== value) {\n                    elementOptions[field] = value;\n                    hasChanges = true;\n                }\n            }\n            return hasChanges;\n        }\n        var Scale = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrix: function () {\n                return Matrix.scaling(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('scale({0},{1})', this.x, this.y);\n            },\n            invert: function () {\n                return new Scale(1 / this.x, 1 / this.y);\n            }\n        });\n        var Translation = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrixVector: function () {\n                return new MatrixVector(0, 0, 0, 0, this.x, this.y);\n            },\n            toMatrix: function () {\n                return Matrix.translation(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('translate({0},{1})', this.x, this.y);\n            },\n            plus: function (delta) {\n                this.x += delta.x;\n                this.y += delta.y;\n            },\n            times: function (factor) {\n                this.x *= factor;\n                this.y *= factor;\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            normalize: function () {\n                if (this.Length === 0) {\n                    return;\n                }\n                this.times(1 / this.length());\n            },\n            invert: function () {\n                return new Translation(-this.x, -this.y);\n            }\n        });\n        var Rotation = Class.extend({\n            init: function (angle, x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.angle = angle;\n            },\n            toString: function () {\n                if (this.x && this.y) {\n                    return kendo.format('rotate({0},{1},{2})', this.angle, this.x, this.y);\n                } else {\n                    return kendo.format('rotate({0})', this.angle);\n                }\n            },\n            toMatrix: function () {\n                return Matrix.rotation(this.angle, this.x, this.y);\n            },\n            center: function () {\n                return new Point(this.x, this.y);\n            },\n            invert: function () {\n                return new Rotation(FULL_CIRCLE_ANGLE - this.angle, this.x, this.y);\n            }\n        });\n        Rotation.ZERO = new Rotation(0);\n        Rotation.create = function (rotation) {\n            return new Rotation(rotation.angle, rotation.x, rotation.y);\n        };\n        Rotation.parse = function (str) {\n            var values = str.slice(1, str.length - 1).split(','), angle = values[0], x = values[1], y = values[2];\n            var rotation = new Rotation(angle, x, y);\n            return rotation;\n        };\n        var CompositeTransform = Class.extend({\n            init: function (x, y, scaleX, scaleY, angle, center) {\n                this.translate = new Translation(x, y);\n                if (scaleX !== undefined && scaleY !== undefined) {\n                    this.scale = new Scale(scaleX, scaleY);\n                }\n                if (angle !== undefined) {\n                    this.rotate = center ? new Rotation(angle, center.x, center.y) : new Rotation(angle);\n                }\n            },\n            toString: function () {\n                var toString = function (transform) {\n                    return transform ? transform.toString() : '';\n                };\n                return toString(this.translate) + toString(this.rotate) + toString(this.scale);\n            },\n            render: function (visual) {\n                visual._transform = this;\n                visual._renderTransform();\n            },\n            toMatrix: function () {\n                var m = Matrix.unit();\n                if (this.translate) {\n                    m = m.times(this.translate.toMatrix());\n                }\n                if (this.rotate) {\n                    m = m.times(this.rotate.toMatrix());\n                }\n                if (this.scale) {\n                    m = m.times(this.scale.toMatrix());\n                }\n                return m;\n            },\n            invert: function () {\n                var rotate = this.rotate ? this.rotate.invert() : undefined, rotateMatrix = rotate ? rotate.toMatrix() : Matrix.unit(), scale = this.scale ? this.scale.invert() : undefined, scaleMatrix = scale ? scale.toMatrix() : Matrix.unit();\n                var translatePoint = new Point(-this.translate.x, -this.translate.y);\n                translatePoint = rotateMatrix.times(scaleMatrix).apply(translatePoint);\n                var translate = new Translation(translatePoint.x, translatePoint.y);\n                var transform = new CompositeTransform();\n                transform.translate = translate;\n                transform.rotate = rotate;\n                transform.scale = scale;\n                return transform;\n            }\n        });\n        var AutoSizeableMixin = {\n            _setScale: function () {\n                var options = this.options;\n                var originWidth = this._originWidth;\n                var originHeight = this._originHeight;\n                var scaleX = options.width / originWidth;\n                var scaleY = options.height / originHeight;\n                if (!isNumber(scaleX)) {\n                    scaleX = 1;\n                }\n                if (!isNumber(scaleY)) {\n                    scaleY = 1;\n                }\n                this._transform.scale = new Scale(scaleX, scaleY);\n            },\n            _setTranslate: function () {\n                var options = this.options;\n                var x = options.x || 0;\n                var y = options.y || 0;\n                this._transform.translate = new Translation(x, y);\n            },\n            _initSize: function () {\n                var options = this.options;\n                var transform = false;\n                if (options.autoSize !== false && (defined(options.width) || defined(options.height))) {\n                    this._measure(true);\n                    this._setScale();\n                    transform = true;\n                }\n                if (defined(options.x) || defined(options.y)) {\n                    this._setTranslate();\n                    transform = true;\n                }\n                if (transform) {\n                    this._renderTransform();\n                }\n            },\n            _updateSize: function (options) {\n                var update = false;\n                if (this.options.autoSize !== false && this._diffNumericOptions(options, [\n                        WIDTH,\n                        HEIGHT\n                    ])) {\n                    update = true;\n                    this._measure(true);\n                    this._setScale();\n                }\n                if (this._diffNumericOptions(options, [\n                        X,\n                        Y\n                    ])) {\n                    update = true;\n                    this._setTranslate();\n                }\n                if (update) {\n                    this._renderTransform();\n                }\n                return update;\n            }\n        };\n        var Element = Class.extend({\n            init: function (options) {\n                var element = this;\n                element.options = deepExtend({}, element.options, options);\n                element.id = element.options.id;\n                element._originSize = Rect.empty();\n                element._transform = new CompositeTransform();\n            },\n            visible: function (value) {\n                return this.drawingContainer().visible(value);\n            },\n            redraw: function (options) {\n                if (options && options.id) {\n                    this.id = options.id;\n                }\n            },\n            position: function (x, y) {\n                var options = this.options;\n                if (!defined(x)) {\n                    return new Point(options.x, options.y);\n                }\n                if (defined(y)) {\n                    options.x = x;\n                    options.y = y;\n                } else if (x instanceof Point) {\n                    options.x = x.x;\n                    options.y = x.y;\n                }\n                this._transform.translate = new Translation(options.x, options.y);\n                this._renderTransform();\n            },\n            rotate: function (angle, center) {\n                if (defined(angle)) {\n                    this._transform.rotate = new Rotation(angle, center.x, center.y);\n                    this._renderTransform();\n                }\n                return this._transform.rotate || Rotation.ZERO;\n            },\n            drawingContainer: function () {\n                return this.drawingElement;\n            },\n            _renderTransform: function () {\n                var matrix = this._transform.toMatrix();\n                this.drawingContainer().transform(new g.Matrix(matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f));\n            },\n            _hover: function () {\n            },\n            _diffNumericOptions: diffNumericOptions,\n            _measure: function (force) {\n                var rect;\n                if (!this._measured || force) {\n                    var box = this._boundingBox() || new g.Rect();\n                    var startPoint = box.topLeft();\n                    rect = new Rect(startPoint.x, startPoint.y, box.width(), box.height());\n                    this._originSize = rect;\n                    this._originWidth = rect.width;\n                    this._originHeight = rect.height;\n                    this._measured = true;\n                } else {\n                    rect = this._originSize;\n                }\n                return rect;\n            },\n            _boundingBox: function () {\n                return this.drawingElement.rawBBox();\n            }\n        });\n        var VisualBase = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                options = this.options;\n                options.fill = normalizeDrawingOptions(options.fill);\n                options.stroke = normalizeDrawingOptions(options.stroke);\n            },\n            options: {\n                stroke: {\n                    color: 'gray',\n                    width: 1\n                },\n                fill: { color: TRANSPARENT }\n            },\n            fill: function (color, opacity) {\n                this._fill({\n                    color: getColor(color),\n                    opacity: opacity\n                });\n            },\n            stroke: function (color, width, opacity) {\n                this._stroke({\n                    color: getColor(color),\n                    width: width,\n                    opacity: opacity\n                });\n            },\n            redraw: function (options) {\n                if (options) {\n                    var stroke = options.stroke;\n                    var fill = options.fill;\n                    if (stroke) {\n                        this._stroke(normalizeDrawingOptions(stroke));\n                    }\n                    if (fill) {\n                        this._fill(normalizeDrawingOptions(fill));\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _hover: function (show) {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var hover = options.hover;\n                if (hover && hover.fill) {\n                    var fill = show ? normalizeDrawingOptions(hover.fill) : options.fill;\n                    drawingElement.fill(fill.color, fill.opacity);\n                }\n            },\n            _stroke: function (strokeOptions) {\n                var options = this.options;\n                deepExtend(options, { stroke: strokeOptions });\n                strokeOptions = options.stroke;\n                var stroke = null;\n                if (strokeOptions.width > 0) {\n                    stroke = {\n                        color: strokeOptions.color,\n                        width: strokeOptions.width,\n                        opacity: strokeOptions.opacity,\n                        dashType: strokeOptions.dashType\n                    };\n                }\n                this.drawingElement.options.set('stroke', stroke);\n            },\n            _fill: function (fillOptions) {\n                var options = this.options;\n                deepExtend(options, { fill: fillOptions || {} });\n                var fill = options.fill;\n                if (fill.gradient) {\n                    var gradient = fill.gradient;\n                    var GradientClass = gradient.type === 'radial' ? d.RadialGradient : d.LinearGradient;\n                    this.drawingElement.fill(new GradientClass(gradient));\n                } else {\n                    this.drawingElement.fill(fill.color, fill.opacity);\n                }\n            }\n        });\n        var TextBlock = VisualBase.extend({\n            init: function (options) {\n                options = this._textColor(options);\n                VisualBase.fn.init.call(this, options);\n                this._font();\n                this._initText();\n                this._initSize();\n            },\n            options: {\n                fontSize: 15,\n                fontFamily: 'sans-serif',\n                stroke: { width: 0 },\n                fill: { color: 'black' },\n                autoSize: true\n            },\n            _initText: function () {\n                var options = this.options;\n                this.drawingElement = new d.Text(defined(options.text) ? options.text : '', new g.Point(), { font: options.font });\n                this._fill();\n                this._stroke();\n            },\n            _textColor: function (options) {\n                if (options && options.color) {\n                    options = deepExtend({}, options, { fill: { color: options.color } });\n                }\n                return options;\n            },\n            _font: function () {\n                var options = this.options;\n                if (options.fontFamily && defined(options.fontSize)) {\n                    var fontOptions = [];\n                    if (options.fontStyle) {\n                        fontOptions.push(options.fontStyle);\n                    }\n                    if (options.fontWeight) {\n                        fontOptions.push(options.fontWeight);\n                    }\n                    fontOptions.push(options.fontSize + (isNumber(options.fontSize) ? 'px' : ''));\n                    fontOptions.push(options.fontFamily);\n                    options.font = fontOptions.join(' ');\n                } else {\n                    delete options.font;\n                }\n            },\n            content: function (text) {\n                return this.drawingElement.content(text);\n            },\n            redraw: function (options) {\n                if (options) {\n                    var sizeChanged = false;\n                    var textOptions = this.options;\n                    options = this._textColor(options);\n                    VisualBase.fn.redraw.call(this, options);\n                    if (options.fontFamily || defined(options.fontSize) || options.fontStyle || options.fontWeight) {\n                        deepExtend(textOptions, {\n                            fontFamily: options.fontFamily,\n                            fontSize: options.fontSize,\n                            fontStyle: options.fontStyle,\n                            fontWeight: options.fontWeight\n                        });\n                        this._font();\n                        this.drawingElement.options.set('font', textOptions.font);\n                        sizeChanged = true;\n                    }\n                    if (options.text) {\n                        this.content(options.text);\n                        sizeChanged = true;\n                    }\n                    if (!this._updateSize(options) && sizeChanged) {\n                        this._initSize();\n                    }\n                }\n            }\n        });\n        deepExtend(TextBlock.fn, AutoSizeableMixin);\n        var Rectangle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initPath();\n                this._setPosition();\n            },\n            _setPosition: function () {\n                var options = this.options;\n                var x = options.x;\n                var y = options.y;\n                if (defined(x) || defined(y)) {\n                    this.position(x || 0, y || 0);\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT\n                        ])) {\n                        this._drawPath();\n                    }\n                    if (this._diffNumericOptions(options, [\n                            X,\n                            Y\n                        ])) {\n                        this._setPosition();\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({\n                    stroke: options.stroke,\n                    closed: true\n                });\n                this._fill();\n                this._drawPath();\n            },\n            _drawPath: function () {\n                var drawingElement = this.drawingElement;\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var width = sizeOptions.width;\n                var height = sizeOptions.height;\n                drawingElement.segments.elements([\n                    createSegment(0, 0),\n                    createSegment(width, 0),\n                    createSegment(width, height),\n                    createSegment(0, height)\n                ]);\n            }\n        });\n        var MarkerBase = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                var anchor = this.options.anchor;\n                this.anchor = new g.Point(anchor.x, anchor.y);\n                this.createElement();\n            },\n            options: {\n                stroke: {\n                    color: TRANSPARENT,\n                    width: 0\n                },\n                fill: { color: 'black' }\n            },\n            _transformToPath: function (point, path) {\n                var transform = path.transform();\n                if (point && transform) {\n                    point = point.transformCopy(transform);\n                }\n                return point;\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.position) {\n                        this.options.position = options.position;\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            }\n        });\n        var CircleMarker = MarkerBase.extend({\n            options: {\n                radius: 4,\n                anchor: {\n                    x: 0,\n                    y: 0\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = new d.Circle(new g.Circle(this.anchor, options.radius), {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var options = this.options;\n                var position = options.position;\n                var segments = path.segments;\n                var targetSegment;\n                var point;\n                if (position == START) {\n                    targetSegment = segments[0];\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                }\n                if (targetSegment) {\n                    point = this._transformToPath(targetSegment.anchor(), path);\n                    this.drawingElement.transform(g.transform().translate(point.x, point.y));\n                }\n            }\n        });\n        var ArrowMarker = MarkerBase.extend({\n            options: {\n                path: 'M 0 0 L 10 5 L 0 10 L 3 5 z',\n                anchor: {\n                    x: 10,\n                    y: 5\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.path, {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var points = this._linePoints(path);\n                var start = points.start;\n                var end = points.end;\n                var transform = g.transform();\n                if (start) {\n                    transform.rotate(lineAngle(start, end), end);\n                }\n                if (end) {\n                    var anchor = this.anchor;\n                    var translate = end.clone().translate(-anchor.x, -anchor.y);\n                    transform.translate(translate.x, translate.y);\n                }\n                this.drawingElement.transform(transform);\n            },\n            _linePoints: function (path) {\n                var options = this.options;\n                var segments = path.segments;\n                var startPoint, endPoint, targetSegment;\n                if (options.position == START) {\n                    targetSegment = segments[0];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlOut();\n                        var nextSegment = segments[1];\n                        if (!startPoint && nextSegment) {\n                            startPoint = nextSegment.anchor();\n                        }\n                    }\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlIn();\n                        var prevSegment = segments[segments.length - 2];\n                        if (!startPoint && prevSegment) {\n                            startPoint = prevSegment.anchor();\n                        }\n                    }\n                }\n                if (endPoint) {\n                    return {\n                        start: this._transformToPath(startPoint, path),\n                        end: this._transformToPath(endPoint, path)\n                    };\n                }\n            }\n        });\n        var MarkerPathMixin = {\n            _getPath: function (position) {\n                var path = this.drawingElement;\n                if (path instanceof d.MultiPath) {\n                    if (position == START) {\n                        path = path.paths[0];\n                    } else {\n                        path = path.paths[path.paths.length - 1];\n                    }\n                }\n                if (path && path.segments.length) {\n                    return path;\n                }\n            },\n            _normalizeMarkerOptions: function (options) {\n                var startCap = options.startCap;\n                var endCap = options.endCap;\n                if (isString(startCap)) {\n                    options.startCap = { type: startCap };\n                }\n                if (isString(endCap)) {\n                    options.endCap = { type: endCap };\n                }\n            },\n            _removeMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    this.drawingContainer().remove(marker.drawingElement);\n                    delete this._markers[position];\n                }\n            },\n            _createMarkers: function () {\n                var options = this.options;\n                this._normalizeMarkerOptions(options);\n                this._markers = {};\n                this._markers[START] = this._createMarker(options.startCap, START);\n                this._markers[END] = this._createMarker(options.endCap, END);\n            },\n            _createMarker: function (options, position) {\n                var type = (options || {}).type;\n                var path = this._getPath(position);\n                var markerType, marker;\n                if (!path) {\n                    this._removeMarker(position);\n                    return;\n                }\n                if (type == Markers.filledCircle) {\n                    markerType = CircleMarker;\n                } else if (type == Markers.arrowStart || type == Markers.arrowEnd) {\n                    markerType = ArrowMarker;\n                } else {\n                    this._removeMarker(position);\n                }\n                if (markerType) {\n                    marker = new markerType(deepExtend({}, options, { position: position }));\n                    marker.positionMarker(path);\n                    this.drawingContainer().append(marker.drawingElement);\n                    return marker;\n                }\n            },\n            _positionMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    var path = this._getPath(position);\n                    if (path) {\n                        marker.positionMarker(path);\n                    } else {\n                        this._removeMarker(position);\n                    }\n                }\n            },\n            _capMap: {\n                start: 'startCap',\n                end: 'endCap'\n            },\n            _redrawMarker: function (pathChange, position, options) {\n                this._normalizeMarkerOptions(options);\n                var pathOptions = this.options;\n                var cap = this._capMap[position];\n                var pathCapType = (pathOptions[cap] || {}).type;\n                var optionsCap = options[cap];\n                var created = false;\n                if (optionsCap) {\n                    pathOptions[cap] = deepExtend({}, pathOptions[cap], optionsCap);\n                    if (optionsCap.type && pathCapType != optionsCap.type) {\n                        this._removeMarker(position);\n                        this._markers[position] = this._createMarker(pathOptions[cap], position);\n                        created = true;\n                    } else if (this._markers[position]) {\n                        this._markers[position].redraw(optionsCap);\n                    }\n                } else if (pathChange && !this._markers[position] && pathOptions[cap]) {\n                    this._markers[position] = this._createMarker(pathOptions[cap], position);\n                    created = true;\n                }\n                return created;\n            },\n            _redrawMarkers: function (pathChange, options) {\n                if (!this._redrawMarker(pathChange, START, options) && pathChange) {\n                    this._positionMarker(START);\n                }\n                if (!this._redrawMarker(pathChange, END, options) && pathChange) {\n                    this._positionMarker(END);\n                }\n            }\n        };\n        var Path = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._createElements();\n                this._initSize();\n            },\n            options: { autoSize: true },\n            drawingContainer: function () {\n                return this.container;\n            },\n            data: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (options.data != value) {\n                        options.data = value;\n                        this._setData(value);\n                        this._initSize();\n                        this._redrawMarkers(true, {});\n                    }\n                } else {\n                    return options.data;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    var pathOptions = this.options;\n                    var data = options.data;\n                    if (defined(data) && pathOptions.data != data) {\n                        pathOptions.data = data;\n                        this._setData(data);\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._updateSize(options);\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _createElements: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.data || '', { stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                this._createMarkers();\n            },\n            _setData: function (data) {\n                var drawingElement = this.drawingElement;\n                var multipath = d.Path.parse(data || '');\n                var paths = multipath.paths.slice(0);\n                multipath.paths.elements([]);\n                drawingElement.paths.elements(paths);\n            }\n        });\n        deepExtend(Path.fn, AutoSizeableMixin);\n        deepExtend(Path.fn, MarkerPathMixin);\n        var Line = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            redraw: function (options) {\n                if (options) {\n                    options = options || {};\n                    var from = options.from;\n                    var to = options.to;\n                    if (from) {\n                        this.options.from = from;\n                    }\n                    if (to) {\n                        this.options.to = to;\n                    }\n                    if (from || to) {\n                        this._drawPath();\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this._drawPath();\n                this.container.append(drawingElement);\n            },\n            _drawPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement;\n                var from = options.from || new Point();\n                var to = options.to || new Point();\n                drawingElement.segments.elements([\n                    createSegment(from.x, from.y),\n                    createSegment(to.x, to.y)\n                ]);\n            }\n        });\n        deepExtend(Line.fn, MarkerPathMixin);\n        var Polyline = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            points: function (points) {\n                var options = this.options;\n                if (points) {\n                    options.points = points;\n                    this._updatePath();\n                } else {\n                    return options.points;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    var points = options.points;\n                    VisualBase.fn.redraw.call(this, options);\n                    if (points && this._pointsDiffer(points)) {\n                        this.points(points);\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                if (options.points) {\n                    this._updatePath();\n                }\n            },\n            _pointsDiffer: function (points) {\n                var currentPoints = this.options.points;\n                var differ = currentPoints.length !== points.length;\n                if (!differ) {\n                    for (var i = 0; i < points.length; i++) {\n                        if (currentPoints[i].x !== points[i].x || currentPoints[i].y !== points[i].y) {\n                            differ = true;\n                            break;\n                        }\n                    }\n                }\n                return differ;\n            },\n            _updatePath: function () {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var points = options.points;\n                var segments = [];\n                var point;\n                for (var i = 0; i < points.length; i++) {\n                    point = points[i];\n                    segments.push(createSegment(point.x, point.y));\n                }\n                drawingElement.segments.elements(segments);\n            },\n            options: { points: [] }\n        });\n        deepExtend(Polyline.fn, MarkerPathMixin);\n        var Image = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                this._initImage();\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.source) {\n                        this.drawingElement.src(options.source);\n                    }\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.drawingElement.rect(this._rect());\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _initImage: function () {\n                var options = this.options;\n                var rect = this._rect();\n                this.drawingElement = new d.Image(options.source, rect, {});\n            },\n            _rect: function () {\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var origin = new g.Point(sizeOptions.x, sizeOptions.y);\n                var size = new g.Size(sizeOptions.width, sizeOptions.height);\n                return new g.Rect(origin, size);\n            }\n        });\n        var Group = Element.extend({\n            init: function (options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Group();\n                this._initSize();\n            },\n            options: { autoSize: false },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                this.children.push(visual);\n                this._childrenChange = true;\n            },\n            remove: function (visual) {\n                if (this._remove(visual)) {\n                    this._childrenChange = true;\n                }\n            },\n            _remove: function (visual) {\n                var index = inArray(visual, this.children);\n                if (index >= 0) {\n                    this.drawingElement.removeAt(index);\n                    this.children.splice(index, 1);\n                    return true;\n                }\n            },\n            clear: function () {\n                this.drawingElement.clear();\n                this.children = [];\n                this._childrenChange = true;\n            },\n            toFront: function (visuals) {\n                var visual;\n                for (var i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    if (this._remove(visual)) {\n                        this.append(visual);\n                    }\n                }\n            },\n            toBack: function (visuals) {\n                this._reorderChildren(visuals, 0);\n            },\n            toIndex: function (visuals, indices) {\n                this._reorderChildren(visuals, indices);\n            },\n            _reorderChildren: function (visuals, indices) {\n                var group = this.drawingElement;\n                var drawingChildren = group.children.slice(0);\n                var children = this.children;\n                var fixedPosition = isNumber(indices);\n                var i, index, toIndex, drawingElement, visual;\n                for (i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    drawingElement = visual.drawingContainer();\n                    index = inArray(visual, children);\n                    if (index >= 0) {\n                        drawingChildren.splice(index, 1);\n                        children.splice(index, 1);\n                        toIndex = fixedPosition ? indices : indices[i];\n                        drawingChildren.splice(toIndex, 0, drawingElement);\n                        children.splice(toIndex, 0, visual);\n                    }\n                }\n                group.clear();\n                group.append.apply(group, drawingChildren);\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (this._childrenChange) {\n                        this._childrenChange = false;\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                    } else {\n                        this._updateSize(options);\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _boundingBox: function () {\n                var children = this.children;\n                var boundingBox;\n                var visual, childBoundingBox;\n                for (var i = 0; i < children.length; i++) {\n                    visual = children[i];\n                    if (visual.visible() && visual._includeInBBox !== false) {\n                        childBoundingBox = visual.drawingContainer().clippedBBox(null);\n                        if (childBoundingBox) {\n                            if (boundingBox) {\n                                boundingBox = g.Rect.union(boundingBox, childBoundingBox);\n                            } else {\n                                boundingBox = childBoundingBox;\n                            }\n                        }\n                    }\n                }\n                return boundingBox;\n            }\n        });\n        deepExtend(Group.fn, AutoSizeableMixin);\n        var Layout = Group.extend({\n            init: function (rect, options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Layout(toDrawingRect(rect), options);\n                this._initSize();\n            },\n            rect: function (rect) {\n                if (rect) {\n                    this.drawingElement.rect(toDrawingRect(rect));\n                } else {\n                    var drawingRect = this.drawingElement.rect();\n                    if (drawingRect) {\n                        return new Rect(drawingRect.origin.x, drawingRect.origin.y, drawingRect.size.width, drawingRect.size.height);\n                    }\n                }\n            },\n            reflow: function () {\n                this.drawingElement.reflow();\n            },\n            redraw: function (options) {\n                kendo.deepExtend(this.drawingElement.options, options);\n                Group.fn.redraw.call(this, options);\n            }\n        });\n        var Circle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initCircle();\n                this._initSize();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var circleOptions = this.options;\n                    if (options.center) {\n                        deepExtend(circleOptions, { center: options.center });\n                        this._center.move(circleOptions.center.x, circleOptions.center.y);\n                    }\n                    if (this._diffNumericOptions(options, ['radius'])) {\n                        this._circle.setRadius(circleOptions.radius);\n                    }\n                    this._updateSize(options);\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initCircle: function () {\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var radius = options.radius;\n                if (!defined(radius)) {\n                    if (!defined(width)) {\n                        width = height;\n                    }\n                    if (!defined(height)) {\n                        height = width;\n                    }\n                    options.radius = radius = Math.min(width, height) / 2;\n                }\n                var center = options.center || {\n                    x: radius,\n                    y: radius\n                };\n                this._center = new g.Point(center.x, center.y);\n                this._circle = new g.Circle(this._center, radius);\n                this.drawingElement = new d.Circle(this._circle, { stroke: options.stroke });\n                this._fill();\n            }\n        });\n        deepExtend(Circle.fn, AutoSizeableMixin);\n        var Canvas = Class.extend({\n            init: function (element, options) {\n                options = options || {};\n                this.element = element;\n                this.surface = d.Surface.create(element, options);\n                if (kendo.isFunction(this.surface.translate)) {\n                    this.translate = this._translate;\n                }\n                this.drawingElement = new d.Group();\n                this._viewBox = new Rect(0, 0, options.width, options.height);\n                this.size(this._viewBox);\n            },\n            bounds: function () {\n                var box = this.drawingElement.clippedBBox();\n                return new Rect(0, 0, box.width(), box.height());\n            },\n            size: function (size) {\n                var viewBox = this._viewBox;\n                if (defined(size)) {\n                    viewBox.width = size.width;\n                    viewBox.height = size.height;\n                    this.surface.setSize(size);\n                }\n                return {\n                    width: viewBox.width,\n                    height: viewBox.height\n                };\n            },\n            _translate: function (x, y) {\n                var viewBox = this._viewBox;\n                if (defined(x) && defined(y)) {\n                    viewBox.x = x;\n                    viewBox.y = y;\n                    this.surface.translate({\n                        x: x,\n                        y: y\n                    });\n                }\n                return {\n                    x: viewBox.x,\n                    y: viewBox.y\n                };\n            },\n            draw: function () {\n                this.surface.draw(this.drawingElement);\n            },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                return this;\n            },\n            remove: function (visual) {\n                this.drawingElement.remove(visual.drawingContainer());\n            },\n            insertBefore: function () {\n            },\n            clear: function () {\n                this.drawingElement.clear();\n            },\n            destroy: function (clearHtml) {\n                this.surface.destroy();\n                if (clearHtml) {\n                    $(this.element).remove();\n                }\n            }\n        });\n        function sizeOptionsOrDefault(options) {\n            return {\n                x: options.x || 0,\n                y: options.y || 0,\n                width: options.width || 0,\n                height: options.height || 0\n            };\n        }\n        function normalizeDrawingOptions(options) {\n            if (options) {\n                var drawingOptions = options;\n                if (isString(drawingOptions)) {\n                    drawingOptions = { color: drawingOptions };\n                }\n                if (drawingOptions.color) {\n                    drawingOptions.color = getColor(drawingOptions.color);\n                }\n                return drawingOptions;\n            }\n        }\n        function getColor(value) {\n            var color;\n            if (value != TRANSPARENT) {\n                color = new d.Color(value).toHex();\n            } else {\n                color = value;\n            }\n            return color;\n        }\n        function lineAngle(p1, p2) {\n            var xDiff = p2.x - p1.x;\n            var yDiff = p2.y - p1.y;\n            var angle = d.util.deg(Math.atan2(yDiff, xDiff));\n            return angle;\n        }\n        function createSegment(x, y) {\n            return new d.Segment(new g.Point(x, y));\n        }\n        function toDrawingRect(rect) {\n            if (rect) {\n                return new g.Rect([\n                    rect.x,\n                    rect.y\n                ], [\n                    rect.width,\n                    rect.height\n                ]);\n            }\n        }\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            diffNumericOptions: diffNumericOptions,\n            Element: Element,\n            Scale: Scale,\n            Translation: Translation,\n            Rotation: Rotation,\n            Circle: Circle,\n            Group: Group,\n            Rectangle: Rectangle,\n            Canvas: Canvas,\n            Path: Path,\n            Layout: Layout,\n            Line: Line,\n            MarkerBase: MarkerBase,\n            ArrowMarker: ArrowMarker,\n            CircleMarker: CircleMarker,\n            Polyline: Polyline,\n            CompositeTransform: CompositeTransform,\n            TextBlock: TextBlock,\n            Image: Image,\n            VisualBase: VisualBase\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/services', [\n        'kendo.drawing',\n        'dataviz/diagram/svg'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, dataviz = kendo.dataviz, diagram = dataviz.diagram, Class = kendo.Class, Group = diagram.Group, Rect = diagram.Rect, Rectangle = diagram.Rectangle, Utils = diagram.Utils, isUndefined = Utils.isUndefined, Point = diagram.Point, Circle = diagram.Circle, Ticker = diagram.Ticker, deepExtend = kendo.deepExtend, Movable = kendo.ui.Movable, browser = kendo.support.browser, util = kendo.drawing.util, defined = util.defined, inArray = $.inArray, proxy = $.proxy;\n        var Cursors = {\n                arrow: 'default',\n                grip: 'pointer',\n                cross: 'pointer',\n                add: 'pointer',\n                move: 'move',\n                select: 'pointer',\n                south: 's-resize',\n                east: 'e-resize',\n                west: 'w-resize',\n                north: 'n-resize',\n                rowresize: 'row-resize',\n                colresize: 'col-resize'\n            }, HIT_TEST_DISTANCE = 10, AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', DEFAULT_SNAP_SIZE = 10, DEFAULT_SNAP_ANGLE = 10, DRAG_START = 'dragStart', DRAG = 'drag', DRAG_END = 'dragEnd', ITEMROTATE = 'itemRotate', ITEMBOUNDSCHANGE = 'itemBoundsChange', MIN_SNAP_SIZE = 5, MIN_SNAP_ANGLE = 5, MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', SCROLL_MIN = -20000, SCROLL_MAX = 20000, FRICTION = 0.9, FRICTION_MOBILE = 0.93, VELOCITY_MULTIPLIER = 5, TRANSPARENT = 'transparent', PAN = 'pan', ROTATED = 'rotated', SOURCE = 'source', TARGET = 'target', HANDLE_NAMES = {\n                '-1': SOURCE,\n                '1': TARGET\n            };\n        diagram.Cursors = Cursors;\n        var PositionAdapter = kendo.Class.extend({\n            init: function (layoutState) {\n                this.layoutState = layoutState;\n                this.diagram = layoutState.diagram;\n            },\n            initState: function () {\n                this.froms = [];\n                this.tos = [];\n                this.subjects = [];\n                function pusher(id, bounds) {\n                    var shape = this.diagram.getShapeById(id);\n                    if (shape) {\n                        this.subjects.push(shape);\n                        this.froms.push(shape.bounds().topLeft());\n                        this.tos.push(bounds.topLeft());\n                    }\n                }\n                this.layoutState.nodeMap.forEach(pusher, this);\n            },\n            update: function (tick) {\n                if (this.subjects.length <= 0) {\n                    return;\n                }\n                for (var i = 0; i < this.subjects.length; i++) {\n                    this.subjects[i].position(new Point(this.froms[i].x + (this.tos[i].x - this.froms[i].x) * tick, this.froms[i].y + (this.tos[i].y - this.froms[i].y) * tick));\n                }\n            }\n        });\n        var LayoutUndoUnit = Class.extend({\n            init: function (initialState, finalState, animate) {\n                if (isUndefined(animate)) {\n                    this.animate = false;\n                } else {\n                    this.animate = animate;\n                }\n                this._initialState = initialState;\n                this._finalState = finalState;\n                this.title = 'Diagram layout';\n            },\n            undo: function () {\n                this.setState(this._initialState);\n            },\n            redo: function () {\n                this.setState(this._finalState);\n            },\n            setState: function (state) {\n                var diagram = state.diagram;\n                if (this.animate) {\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        conn.visible(false);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                    var ticker = new Ticker();\n                    ticker.addAdapter(new PositionAdapter(state));\n                    ticker.onComplete(function () {\n                        state.linkMap.forEach(function (id) {\n                            var conn = diagram.getShapeById(id);\n                            conn.visible(true);\n                        });\n                    });\n                    ticker.play();\n                } else {\n                    state.nodeMap.forEach(function (id, bounds) {\n                        var shape = diagram.getShapeById(id);\n                        if (shape) {\n                            shape.position(bounds.topLeft());\n                        }\n                    });\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                }\n            }\n        });\n        var CompositeUnit = Class.extend({\n            init: function (unit) {\n                this.units = [];\n                this.title = 'Composite unit';\n                if (unit !== undefined) {\n                    this.units.push(unit);\n                }\n            },\n            add: function (undoUnit) {\n                this.units.push(undoUnit);\n            },\n            undo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].undo();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].redo();\n                }\n            }\n        });\n        var ConnectionEditUnit = Class.extend({\n            init: function (item, redoSource, redoTarget) {\n                this.item = item;\n                this._redoSource = redoSource;\n                this._redoTarget = redoTarget;\n                if (defined(redoSource)) {\n                    this._undoSource = item.source();\n                }\n                if (defined(redoTarget)) {\n                    this._undoTarget = item.target();\n                }\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                if (this._undoSource !== undefined) {\n                    this.item._updateConnector(this._undoSource, 'source');\n                }\n                if (this._undoTarget !== undefined) {\n                    this.item._updateConnector(this._undoTarget, 'target');\n                }\n                this.item.updateModel();\n            },\n            redo: function () {\n                if (this._redoSource !== undefined) {\n                    this.item._updateConnector(this._redoSource, 'source');\n                }\n                if (this._redoTarget !== undefined) {\n                    this.item._updateConnector(this._redoTarget, 'target');\n                }\n                this.item.updateModel();\n            }\n        });\n        var ConnectionEditUndoUnit = Class.extend({\n            init: function (item, undoSource, undoTarget) {\n                this.item = item;\n                this._undoSource = undoSource;\n                this._undoTarget = undoTarget;\n                this._redoSource = item.source();\n                this._redoTarget = item.target();\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                this.item._updateConnector(this._undoSource, 'source');\n                this.item._updateConnector(this._undoTarget, 'target');\n                this.item.updateModel();\n            },\n            redo: function () {\n                this.item._updateConnector(this._redoSource, 'source');\n                this.item._updateConnector(this._redoTarget, 'target');\n                this.item.updateModel();\n            }\n        });\n        var DeleteConnectionUnit = Class.extend({\n            init: function (connection) {\n                this.connection = connection;\n                this.diagram = connection.diagram;\n                this.targetConnector = connection.targetConnector;\n                this.title = 'Delete connection';\n            },\n            undo: function () {\n                this.diagram._addConnection(this.connection, false);\n            },\n            redo: function () {\n                this.diagram.remove(this.connection, false);\n            }\n        });\n        var DeleteShapeUnit = Class.extend({\n            init: function (shape) {\n                this.shape = shape;\n                this.diagram = shape.diagram;\n                this.title = 'Deletion';\n            },\n            undo: function () {\n                this.diagram._addShape(this.shape, false);\n                this.shape.select(false);\n            },\n            redo: function () {\n                this.shape.select(false);\n                this.diagram.remove(this.shape, false);\n            }\n        });\n        var TransformUnit = Class.extend({\n            init: function (shapes, undoStates, adorner) {\n                this.shapes = shapes;\n                this.undoStates = undoStates;\n                this.title = 'Transformation';\n                this.redoStates = [];\n                this.adorner = adorner;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoStates.push(shape.bounds());\n                }\n            },\n            undo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.undoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.redoStates[i], this.undoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.redoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.undoStates[i], this.redoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var AddConnectionUnit = Class.extend({\n            init: function (connection, diagram) {\n                this.connection = connection;\n                this.diagram = diagram;\n                this.title = 'New connection';\n            },\n            undo: function () {\n                this.diagram.remove(this.connection, false);\n            },\n            redo: function () {\n                this.diagram._addConnection(this.connection, false);\n            }\n        });\n        var AddShapeUnit = Class.extend({\n            init: function (shape, diagram) {\n                this.shape = shape;\n                this.diagram = diagram;\n                this.title = 'New shape';\n            },\n            undo: function () {\n                this.diagram.deselect();\n                this.diagram.remove(this.shape, false);\n            },\n            redo: function () {\n                this.diagram._addShape(this.shape, false);\n            }\n        });\n        var PanUndoUnit = Class.extend({\n            init: function (initialPosition, finalPosition, diagram) {\n                this.initial = initialPosition;\n                this.finalPos = finalPosition;\n                this.diagram = diagram;\n                this.title = 'Pan Unit';\n            },\n            undo: function () {\n                this.diagram.pan(this.initial);\n            },\n            redo: function () {\n                this.diagram.pan(this.finalPos);\n            }\n        });\n        var RotateUnit = Class.extend({\n            init: function (adorner, shapes, undoRotates) {\n                this.shapes = shapes;\n                this.undoRotates = undoRotates;\n                this.title = 'Rotation';\n                this.redoRotates = [];\n                this.redoAngle = adorner._angle;\n                this.adorner = adorner;\n                this.center = adorner._innerBounds.center();\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoRotates.push(shape.rotate().angle);\n                }\n            },\n            undo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.undoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.redoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var ToFrontUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toFront(this.items, false);\n            }\n        });\n        var ToBackUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toBack(this.items, false);\n            }\n        });\n        var UndoRedoService = kendo.Observable.extend({\n            init: function (options) {\n                kendo.Observable.fn.init.call(this, options);\n                this.bind(this.events, options);\n                this.stack = [];\n                this.index = 0;\n                this.capacity = 100;\n            },\n            events: [\n                'undone',\n                'redone'\n            ],\n            begin: function () {\n                this.composite = new CompositeUnit();\n            },\n            cancel: function () {\n                this.composite = undefined;\n            },\n            commit: function (execute) {\n                if (this.composite.units.length > 0) {\n                    this._restart(this.composite, execute);\n                }\n                this.composite = undefined;\n            },\n            addCompositeItem: function (undoUnit) {\n                if (this.composite) {\n                    this.composite.add(undoUnit);\n                } else {\n                    this.add(undoUnit);\n                }\n            },\n            add: function (undoUnit, execute) {\n                this._restart(undoUnit, execute);\n            },\n            pop: function () {\n                if (this.index > 0) {\n                    this.stack.pop();\n                    this.index--;\n                }\n            },\n            count: function () {\n                return this.stack.length;\n            },\n            undo: function () {\n                if (this.index > 0) {\n                    this.index--;\n                    this.stack[this.index].undo();\n                    this.trigger('undone');\n                }\n            },\n            redo: function () {\n                if (this.stack.length > 0 && this.index < this.stack.length) {\n                    this.stack[this.index].redo();\n                    this.index++;\n                    this.trigger('redone');\n                }\n            },\n            _restart: function (composite, execute) {\n                this.stack.splice(this.index, this.stack.length - this.index);\n                this.stack.push(composite);\n                if (execute !== false) {\n                    this.redo();\n                } else {\n                    this.index++;\n                }\n                if (this.stack.length > this.capacity) {\n                    this.stack.splice(0, this.stack.length - this.capacity);\n                    this.index = this.capacity;\n                }\n            },\n            clear: function () {\n                this.stack = [];\n                this.index = 0;\n            }\n        });\n        var EmptyTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            start: function () {\n            },\n            move: function () {\n            },\n            end: function () {\n            },\n            tryActivate: function () {\n                return false;\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ScrollerTool = EmptyTool.extend({\n            init: function (toolService) {\n                var tool = this;\n                var friction = kendo.support.mobileOS ? FRICTION_MOBILE : FRICTION;\n                EmptyTool.fn.init.call(tool, toolService);\n                var diagram = tool.toolService.diagram, canvas = diagram.canvas;\n                var scroller = diagram.scroller = tool.scroller = $(diagram.scrollable).kendoMobileScroller({\n                    friction: friction,\n                    velocityMultiplier: VELOCITY_MULTIPLIER,\n                    mousewheelScrolling: false,\n                    zoom: false,\n                    scroll: proxy(tool._move, tool)\n                }).data('kendoMobileScroller');\n                if (canvas.translate) {\n                    tool.movableCanvas = new Movable(canvas.element);\n                }\n                var virtualScroll = function (dimension, min, max) {\n                    dimension.makeVirtual();\n                    dimension.virtualSize(min || SCROLL_MIN, max || SCROLL_MAX);\n                };\n                virtualScroll(scroller.dimensions.x);\n                virtualScroll(scroller.dimensions.y);\n                scroller.disable();\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var options = toolService.diagram.options.pannable;\n                var enabled = meta.ctrlKey;\n                if (defined(options.key)) {\n                    if (!options.key || options.key == 'none') {\n                        enabled = noMeta(meta) && !defined(toolService.hoveredItem);\n                    } else {\n                        enabled = meta[options.key + 'Key'];\n                    }\n                }\n                return options !== false && enabled && !defined(toolService.hoveredAdorner) && !defined(toolService._hoveredConnector);\n            },\n            start: function () {\n                this.scroller.enable();\n            },\n            move: function () {\n            },\n            _move: function (args) {\n                var tool = this, diagram = tool.toolService.diagram, canvas = diagram.canvas, scrollPos = new Point(args.scrollLeft, args.scrollTop);\n                if (canvas.translate) {\n                    diagram._storePan(scrollPos.times(-1));\n                    tool.movableCanvas.moveTo(scrollPos);\n                    canvas.translate(scrollPos.x, scrollPos.y);\n                } else {\n                    scrollPos = scrollPos.plus(diagram._pan.times(-1));\n                }\n                diagram.trigger(PAN, { pan: scrollPos });\n            },\n            end: function () {\n                this.scroller.disable();\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        var PointerTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function () {\n                return true;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, hoveredItem = toolService.hoveredItem;\n                if (hoveredItem) {\n                    toolService.selectSingle(hoveredItem, meta);\n                    if (hoveredItem.adorner) {\n                        this.adorner = hoveredItem.adorner;\n                        this.handle = this.adorner._hitTest(p);\n                    }\n                }\n                if (!this.handle) {\n                    this.handle = diagram._resizingAdorner._hitTest(p);\n                    if (this.handle) {\n                        this.adorner = diagram._resizingAdorner;\n                    }\n                }\n                if (this.adorner) {\n                    if (!this.adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_START, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        })) {\n                        this.adorner.start(p);\n                    } else {\n                        toolService.startPoint = p;\n                        toolService.end(p);\n                    }\n                }\n            },\n            move: function (p) {\n                if (this.adorner) {\n                    this.adorner.move(this.handle, p);\n                    if (this.adorner.isDragHandle(this.handle)) {\n                        this.toolService.diagram.trigger(DRAG, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        });\n                    }\n                }\n            },\n            end: function () {\n                var diagram = this.toolService.diagram, adorner = this.adorner, unit;\n                if (adorner) {\n                    if (!adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_END, {\n                            shapes: adorner.shapes,\n                            connections: []\n                        })) {\n                        unit = adorner.stop();\n                        if (unit) {\n                            diagram.undoRedoService.add(unit, false);\n                        }\n                    } else {\n                        adorner.cancel();\n                    }\n                }\n                this.adorner = undefined;\n                this.handle = undefined;\n            },\n            getCursor: function (p) {\n                return this.toolService.hoveredItem ? this.toolService.hoveredItem._getCursor(p) : Cursors.arrow;\n            }\n        });\n        var SelectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var selectable = toolService.diagram.options.selectable;\n                var enabled = selectable && selectable.multiple !== false;\n                if (enabled) {\n                    if (selectable.key && selectable.key != 'none') {\n                        enabled = meta[selectable.key + 'Key'];\n                    } else {\n                        enabled = noMeta(meta);\n                    }\n                }\n                return enabled && !defined(toolService.hoveredItem) && !defined(toolService.hoveredAdorner);\n            },\n            start: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.deselect();\n                diagram.selector.start(p);\n            },\n            move: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.selector.move(p);\n            },\n            end: function (p, meta) {\n                var diagram = this.toolService.diagram, hoveredItem = this.toolService.hoveredItem;\n                var rect = diagram.selector.bounds();\n                if ((!hoveredItem || !hoveredItem.isSelected) && !meta.ctrlKey) {\n                    diagram.deselect();\n                }\n                if (!rect.isEmpty()) {\n                    diagram.selectArea(rect);\n                }\n                diagram.selector.end();\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function () {\n                return this.toolService._hoveredConnector;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, connector = toolService._hoveredConnector, connection = diagram._createConnection({}, connector._c, p);\n                if (canDrag(connection) && !diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: TARGET\n                    }) && diagram._addConnection(connection)) {\n                    toolService._connectionManipulation(connection, connector._c.shape, true);\n                    toolService._removeHover();\n                    toolService.selectSingle(toolService.activeConnection, meta);\n                    if (meta.type == 'touchmove') {\n                        diagram._cachedTouchTarget = connector.visual;\n                    }\n                } else {\n                    connection.source(null);\n                    toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var toolService = this.toolService;\n                var connection = toolService.activeConnection;\n                connection.target(p);\n                toolService.diagram.trigger(DRAG, {\n                    shapes: [],\n                    connections: [connection],\n                    connectionHandle: TARGET\n                });\n                return true;\n            },\n            end: function (p) {\n                var toolService = this.toolService, d = toolService.diagram, connection = toolService.activeConnection, hoveredItem = toolService.hoveredItem, connector = toolService._hoveredConnector, target, cachedTouchTarget = d._cachedTouchTarget;\n                if (!connection) {\n                    return;\n                }\n                if (connector && connector._c != connection.sourceConnector) {\n                    target = connector._c;\n                } else if (hoveredItem && hoveredItem instanceof diagram.Shape) {\n                    target = hoveredItem.getConnector(AUTO) || hoveredItem.getConnector(p);\n                } else {\n                    target = p;\n                }\n                connection.target(target);\n                if (!d.trigger(DRAG_END, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: TARGET\n                    })) {\n                    connection.updateModel();\n                    d._syncConnectionChanges();\n                } else {\n                    d.remove(connection, false);\n                    d.undoRedoService.pop();\n                }\n                toolService._connectionManipulation();\n                if (cachedTouchTarget) {\n                    d._connectorsAdorner.visual.remove(cachedTouchTarget);\n                    d._cachedTouchTarget = null;\n                }\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionEditTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, selectable = diagram.options.selectable, item = toolService.hoveredItem, isActive = selectable !== false && item && item.path && !(item.isSelected && meta.ctrlKey);\n                if (isActive) {\n                    this._c = item;\n                }\n                return isActive;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService;\n                var connection = this._c;\n                toolService.selectSingle(connection, meta);\n                var adorner = connection.adorner;\n                var handle, name;\n                if (adorner) {\n                    handle = adorner._hitTest(p);\n                    name = HANDLE_NAMES[handle];\n                }\n                if (canDrag(connection) && adorner && !toolService.diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: name\n                    })) {\n                    this.handle = handle;\n                    this.handleName = name;\n                    adorner.start(p);\n                } else {\n                    toolService.startPoint = p;\n                    toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var adorner = this._c.adorner;\n                if (canDrag(this._c) && adorner) {\n                    adorner.move(this.handle, p);\n                    this.toolService.diagram.trigger(DRAG, {\n                        shapes: [],\n                        connections: [this._c],\n                        connectionHandle: this.handleName\n                    });\n                    return true;\n                }\n            },\n            end: function (p) {\n                var connection = this._c;\n                var adorner = connection.adorner;\n                var toolService = this.toolService;\n                var diagram = toolService.diagram;\n                if (adorner) {\n                    if (canDrag(connection)) {\n                        var unit = adorner.stop(p);\n                        if (!diagram.trigger(DRAG_END, {\n                                shapes: [],\n                                connections: [connection],\n                                connectionHandle: this.handleName\n                            })) {\n                            diagram.undoRedoService.add(unit, false);\n                            connection.updateModel();\n                            diagram._syncConnectionChanges();\n                        } else {\n                            unit.undo();\n                        }\n                    }\n                }\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        function testKey(key, str) {\n            return str.charCodeAt(0) == key || str.toUpperCase().charCodeAt(0) == key;\n        }\n        var ToolService = Class.extend({\n            init: function (diagram) {\n                this.diagram = diagram;\n                this.tools = [\n                    new ScrollerTool(this),\n                    new ConnectionEditTool(this),\n                    new ConnectionTool(this),\n                    new SelectionTool(this),\n                    new PointerTool(this)\n                ];\n                this.activeTool = undefined;\n            },\n            start: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this._updateHoveredItem(p);\n                this._activateTool(p, meta);\n                this.activeTool.start(p, meta);\n                this._updateCursor(p);\n                this.diagram.focus();\n                this.diagram.canvas.surface.suspendTracking();\n                this.startPoint = p;\n                return true;\n            },\n            move: function (p, meta) {\n                meta = deepExtend({}, meta);\n                var updateHovered = true;\n                if (this.activeTool) {\n                    updateHovered = this.activeTool.move(p, meta);\n                }\n                if (updateHovered) {\n                    this._updateHoveredItem(p);\n                }\n                this._updateCursor(p);\n                return true;\n            },\n            end: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this.diagram.canvas.surface.resumeTracking();\n                this.activeTool = undefined;\n                this._updateCursor(p);\n                return true;\n            },\n            keyDown: function (key, meta) {\n                var diagram = this.diagram;\n                meta = deepExtend({\n                    ctrlKey: false,\n                    metaKey: false,\n                    altKey: false\n                }, meta);\n                if ((meta.ctrlKey || meta.metaKey) && !meta.altKey) {\n                    if (testKey(key, 'a')) {\n                        diagram.selectAll();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'z')) {\n                        diagram.undo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'y')) {\n                        diagram.redo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'c')) {\n                        diagram.copy();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'x')) {\n                        diagram.cut();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'v')) {\n                        diagram.paste();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'l')) {\n                        diagram.layout();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'd')) {\n                        diagram._destroyToolBar();\n                        diagram.copy();\n                        diagram.paste();\n                    }\n                } else if (key === 46 || key === 8) {\n                    var toRemove = this.diagram._triggerRemove(diagram.select());\n                    if (toRemove.length) {\n                        this.diagram.remove(toRemove, true);\n                        this.diagram._syncChanges();\n                        this.diagram._destroyToolBar();\n                    }\n                    return true;\n                } else if (key === 27) {\n                    this._discardNewConnection();\n                    diagram.deselect();\n                    diagram._destroyToolBar();\n                    return true;\n                }\n            },\n            wheel: function (p, meta) {\n                var diagram = this.diagram, delta = meta.delta, z = diagram.zoom(), options = diagram.options, zoomRate = options.zoomRate, zoomOptions = {\n                        point: p,\n                        meta: meta,\n                        zoom: z\n                    };\n                if (diagram.trigger(ZOOM_START, zoomOptions)) {\n                    return;\n                }\n                if (delta < 0) {\n                    z += zoomRate;\n                } else {\n                    z -= zoomRate;\n                }\n                z = kendo.dataviz.round(Math.max(options.zoomMin, Math.min(options.zoomMax, z)), 2);\n                zoomOptions.zoom = z;\n                diagram.zoom(z, zoomOptions);\n                diagram.trigger(ZOOM_END, zoomOptions);\n                return true;\n            },\n            setTool: function (tool, index) {\n                tool.toolService = this;\n                this.tools[index] = tool;\n            },\n            selectSingle: function (item, meta) {\n                var diagram = this.diagram;\n                var selectable = diagram.options.selectable;\n                if (selectable && !item.isSelected && item.options.selectable !== false) {\n                    var addToSelection = meta.ctrlKey && selectable.multiple !== false;\n                    diagram.select(item, { addToSelection: addToSelection });\n                }\n            },\n            _discardNewConnection: function () {\n                if (this.newConnection) {\n                    this.diagram.remove(this.newConnection);\n                    this.newConnection = undefined;\n                }\n            },\n            _activateTool: function (p, meta) {\n                for (var i = 0; i < this.tools.length; i++) {\n                    var tool = this.tools[i];\n                    if (tool.tryActivate(p, meta)) {\n                        this.activeTool = tool;\n                        break;\n                    }\n                }\n            },\n            _updateCursor: function (p) {\n                var element = this.diagram.element;\n                var cursor = this.activeTool ? this.activeTool.getCursor(p) : this.hoveredAdorner ? this.hoveredAdorner._getCursor(p) : this.hoveredItem ? this.hoveredItem._getCursor(p) : Cursors.arrow;\n                element.css({ cursor: cursor });\n                if (browser.msie && browser.version == 7) {\n                    element[0].style.cssText = element[0].style.cssText;\n                }\n            },\n            _connectionManipulation: function (connection, disabledShape, isNew) {\n                this.activeConnection = connection;\n                this.disabledShape = disabledShape;\n                if (isNew) {\n                    this.newConnection = this.activeConnection;\n                } else {\n                    this.newConnection = undefined;\n                }\n            },\n            _updateHoveredItem: function (p) {\n                var hit = this._hitTest(p);\n                var diagram = this.diagram;\n                if (hit != this.hoveredItem && (!this.disabledShape || hit != this.disabledShape)) {\n                    if (this.hoveredItem) {\n                        diagram.trigger(MOUSE_LEAVE, { item: this.hoveredItem });\n                        this.hoveredItem._hover(false);\n                    }\n                    if (hit && hit.options.enable) {\n                        diagram.trigger(MOUSE_ENTER, { item: hit });\n                        this.hoveredItem = hit;\n                        this.hoveredItem._hover(true);\n                    } else {\n                        this.hoveredItem = undefined;\n                    }\n                }\n            },\n            _removeHover: function () {\n                if (this.hoveredItem) {\n                    this.hoveredItem._hover(false);\n                    this.hoveredItem = undefined;\n                }\n            },\n            _hitTest: function (point) {\n                var hit, d = this.diagram, item, i;\n                if (this._hoveredConnector) {\n                    this._hoveredConnector._hover(false);\n                    this._hoveredConnector = undefined;\n                }\n                if (d._connectorsAdorner._visible) {\n                    hit = d._connectorsAdorner._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n                hit = this.diagram._resizingAdorner._hitTest(point);\n                if (hit) {\n                    this.hoveredAdorner = d._resizingAdorner;\n                    if (hit.x !== 0 || hit.y !== 0) {\n                        return;\n                    }\n                    hit = undefined;\n                } else {\n                    this.hoveredAdorner = undefined;\n                }\n                if (!this.activeTool || this.activeTool.type !== 'ConnectionTool') {\n                    var selectedConnections = [];\n                    for (i = 0; i < d._selectedItems.length; i++) {\n                        item = d._selectedItems[i];\n                        if (item instanceof diagram.Connection) {\n                            selectedConnections.push(item);\n                        }\n                    }\n                    hit = this._hitTestItems(selectedConnections, point);\n                }\n                return hit || this._hitTestElements(point);\n            },\n            _hitTestElements: function (point) {\n                var diagram = this.diagram;\n                var shapeHit = this._hitTestItems(diagram.shapes, point);\n                var connectionHit = this._hitTestItems(diagram.connections, point);\n                var hit;\n                if ((!this.activeTool || this.activeTool.type != 'ConnectionTool') && shapeHit && connectionHit && !hitTestShapeConnectors(shapeHit, point)) {\n                    var mainLayer = diagram.mainLayer;\n                    var shapeIdx = inArray(shapeHit.visual, mainLayer.children);\n                    var connectionIdx = inArray(connectionHit.visual, mainLayer.children);\n                    hit = shapeIdx > connectionIdx ? shapeHit : connectionHit;\n                }\n                return hit || shapeHit || connectionHit;\n            },\n            _hitTestItems: function (array, point) {\n                var i, item, hit;\n                for (i = array.length - 1; i >= 0; i--) {\n                    item = array[i];\n                    hit = item._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n            }\n        });\n        var ConnectionRouterBase = kendo.Class.extend({\n            init: function () {\n            }\n        });\n        var LinearConnectionRouter = ConnectionRouterBase.extend({\n            init: function (connection) {\n                var that = this;\n                ConnectionRouterBase.fn.init.call(that);\n                this.connection = connection;\n            },\n            hitTest: function (p) {\n                var rec = this.getBounds().inflate(HIT_TEST_DISTANCE);\n                if (!rec.contains(p)) {\n                    return false;\n                }\n                return diagram.Geometry.distanceToPolyline(p, this.connection.allPoints()) < HIT_TEST_DISTANCE;\n            },\n            getBounds: function () {\n                var points = this.connection.allPoints(), s = points[0], e = points[points.length - 1], right = Math.max(s.x, e.x), left = Math.min(s.x, e.x), top = Math.min(s.y, e.y), bottom = Math.max(s.y, e.y);\n                for (var i = 1; i < points.length - 1; ++i) {\n                    right = Math.max(right, points[i].x);\n                    left = Math.min(left, points[i].x);\n                    top = Math.min(top, points[i].y);\n                    bottom = Math.max(bottom, points[i].y);\n                }\n                return new Rect(left, top, right - left, bottom - top);\n            }\n        });\n        var PolylineRouter = LinearConnectionRouter.extend({\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            route: function () {\n            }\n        });\n        var CascadingRouter = LinearConnectionRouter.extend({\n            SAME_SIDE_DISTANCE_RATIO: 5,\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            routePoints: function (start, end, sourceConnector, targetConnector) {\n                var result;\n                if (sourceConnector && targetConnector) {\n                    result = this._connectorPoints(start, end, sourceConnector, targetConnector);\n                } else {\n                    result = this._floatingPoints(start, end, sourceConnector);\n                }\n                return result;\n            },\n            route: function () {\n                var sourceConnector = this.connection._resolvedSourceConnector;\n                var targetConnector = this.connection._resolvedTargetConnector;\n                var start = this.connection.sourcePoint();\n                var end = this.connection.targetPoint();\n                var points = this.routePoints(start, end, sourceConnector, targetConnector);\n                this.connection.points(points);\n            },\n            _connectorSides: [\n                {\n                    name: 'Top',\n                    axis: 'y',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Left',\n                    axis: 'x',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Bottom',\n                    axis: 'y',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                },\n                {\n                    name: 'Right',\n                    axis: 'x',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                }\n            ],\n            _connectorSide: function (connector, targetPoint) {\n                var position = connector.position();\n                var shapeBounds = connector.shape.bounds(ROTATED);\n                var bounds = {\n                    topLeft: shapeBounds.topLeft(),\n                    bottomRight: shapeBounds.bottomRight()\n                };\n                var sides = this._connectorSides;\n                var min = util.MAX_NUM;\n                var sideDistance;\n                var minSide;\n                var axis;\n                var side;\n                for (var idx = 0; idx < sides.length; idx++) {\n                    side = sides[idx];\n                    axis = side.axis;\n                    sideDistance = Math.round(Math.abs(position[axis] - bounds[side.boundsPoint][axis]));\n                    if (sideDistance < min) {\n                        min = sideDistance;\n                        minSide = side;\n                    } else if (sideDistance === min && (position[axis] - targetPoint[axis]) * side.secondarySign > (position[minSide.axis] - targetPoint[minSide.axis]) * minSide.secondarySign) {\n                        minSide = side;\n                    }\n                }\n                return minSide.name;\n            },\n            _sameSideDistance: function (connector) {\n                var bounds = connector.shape.bounds(ROTATED);\n                return Math.min(bounds.width, bounds.height) / this.SAME_SIDE_DISTANCE_RATIO;\n            },\n            _connectorPoints: function (start, end, sourceConnector, targetConnector) {\n                var sourceConnectorSide = this._connectorSide(sourceConnector, end);\n                var targetConnectorSide = this._connectorSide(targetConnector, start);\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var sameSideDistance = this._sameSideDistance(sourceConnector);\n                var result = [];\n                var pointX, pointY;\n                if (sourceConnectorSide === TOP || sourceConnectorSide == BOTTOM) {\n                    if (targetConnectorSide == TOP || targetConnectorSide == BOTTOM) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == TOP) {\n                                pointY = Math.min(start.y, end.y) - sameSideDistance;\n                            } else {\n                                pointY = Math.max(start.y, end.y) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(start.x, pointY),\n                                new Point(end.x, pointY)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x, start.y + deltaY / 2),\n                                new Point(end.x, start.y + deltaY / 2)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(start.x, end.y)];\n                    }\n                } else {\n                    if (targetConnectorSide == LEFT || targetConnectorSide == RIGHT) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == LEFT) {\n                                pointX = Math.min(start.x, end.x) - sameSideDistance;\n                            } else {\n                                pointX = Math.max(start.x, end.x) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(pointX, start.y),\n                                new Point(pointX, end.y)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x + deltaX / 2, start.y),\n                                new Point(start.x + deltaX / 2, start.y + deltaY)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(end.x, start.y)];\n                    }\n                }\n                return result;\n            },\n            _floatingPoints: function (start, end, sourceConnector) {\n                var sourceConnectorSide = sourceConnector ? this._connectorSide(sourceConnector, end) : null;\n                var cascadeStartHorizontal = this._startHorizontal(start, end, sourceConnectorSide);\n                var points = [\n                    start,\n                    start,\n                    end,\n                    end\n                ];\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var length = points.length;\n                var shiftX;\n                var shiftY;\n                for (var idx = 1; idx < length - 1; ++idx) {\n                    if (cascadeStartHorizontal) {\n                        if (idx % 2 !== 0) {\n                            shiftX = deltaX / (length / 2);\n                            shiftY = 0;\n                        } else {\n                            shiftX = 0;\n                            shiftY = deltaY / ((length - 1) / 2);\n                        }\n                    } else {\n                        if (idx % 2 !== 0) {\n                            shiftX = 0;\n                            shiftY = deltaY / (length / 2);\n                        } else {\n                            shiftX = deltaX / ((length - 1) / 2);\n                            shiftY = 0;\n                        }\n                    }\n                    points[idx] = new Point(points[idx - 1].x + shiftX, points[idx - 1].y + shiftY);\n                }\n                idx--;\n                if (cascadeStartHorizontal && idx % 2 !== 0 || !cascadeStartHorizontal && idx % 2 === 0) {\n                    points[length - 2] = new Point(points[length - 1].x, points[length - 2].y);\n                } else {\n                    points[length - 2] = new Point(points[length - 2].x, points[length - 1].y);\n                }\n                return [\n                    points[1],\n                    points[2]\n                ];\n            },\n            _startHorizontal: function (start, end, sourceSide) {\n                var horizontal;\n                if (sourceSide !== null && (sourceSide === RIGHT || sourceSide === LEFT)) {\n                    horizontal = true;\n                } else {\n                    horizontal = Math.abs(start.x - end.x) > Math.abs(start.y - end.y);\n                }\n                return horizontal;\n            }\n        });\n        var AdornerBase = Class.extend({\n            init: function (diagram, options) {\n                var that = this;\n                that.diagram = diagram;\n                that.options = deepExtend({}, that.options, options);\n                that.visual = new Group();\n                that.diagram._adorners.push(that);\n            },\n            refresh: function () {\n            }\n        });\n        var ConnectionEditAdorner = AdornerBase.extend({\n            init: function (connection, options) {\n                var that = this, diagram;\n                that.connection = connection;\n                diagram = that.connection.diagram;\n                that._ts = diagram.toolService;\n                AdornerBase.fn.init.call(that, diagram, options);\n                var sp = that.connection.sourcePoint();\n                var tp = that.connection.targetPoint();\n                that.spVisual = new Circle(deepExtend(that.options.handles, { center: sp }));\n                that.epVisual = new Circle(deepExtend(that.options.handles, { center: tp }));\n                that.visual.append(that.spVisual);\n                that.visual.append(that.epVisual);\n            },\n            options: { handles: {} },\n            _getCursor: function () {\n                return Cursors.move;\n            },\n            start: function (p) {\n                this.handle = this._hitTest(p);\n                this.startPoint = p;\n                this._initialSource = this.connection.source();\n                this._initialTarget = this.connection.target();\n                switch (this.handle) {\n                case -1:\n                    if (this.connection.targetConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.targetConnector.shape);\n                    }\n                    break;\n                case 1:\n                    if (this.connection.sourceConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.sourceConnector.shape);\n                    }\n                    break;\n                }\n            },\n            move: function (handle, p) {\n                switch (handle) {\n                case -1:\n                    this.connection.source(p);\n                    break;\n                case 1:\n                    this.connection.target(p);\n                    break;\n                default:\n                    var delta = p.minus(this.startPoint);\n                    this.startPoint = p;\n                    if (!this.connection.sourceConnector) {\n                        this.connection.source(this.connection.sourcePoint().plus(delta));\n                    }\n                    if (!this.connection.targetConnector) {\n                        this.connection.target(this.connection.targetPoint().plus(delta));\n                    }\n                    break;\n                }\n                this.refresh();\n                return true;\n            },\n            stop: function (p) {\n                var ts = this.diagram.toolService, item = ts.hoveredItem, target;\n                if (ts._hoveredConnector) {\n                    target = ts._hoveredConnector._c;\n                } else if (item && item instanceof diagram.Shape) {\n                    target = item.getConnector(AUTO) || item.getConnector(p);\n                } else {\n                    target = p;\n                }\n                if (this.handle === -1) {\n                    this.connection.source(target);\n                } else if (this.handle === 1) {\n                    this.connection.target(target);\n                }\n                this.handle = undefined;\n                this._ts._connectionManipulation();\n                return new ConnectionEditUndoUnit(this.connection, this._initialSource, this._initialTarget);\n            },\n            _hitTest: function (point) {\n                var sourcePoint = this.connection.sourcePoint();\n                var targetPoint = this.connection.targetPoint();\n                var radiusX = this.options.handles.width / 2 + HIT_TEST_DISTANCE;\n                var radiusY = this.options.handles.height / 2 + HIT_TEST_DISTANCE;\n                var sourcePointDistance = sourcePoint.distanceTo(point);\n                var targetPointDistance = targetPoint.distanceTo(point);\n                var sourceHandle = new Rect(sourcePoint.x, sourcePoint.y).inflate(radiusX, radiusY).contains(point);\n                var targetHandle = new Rect(targetPoint.x, targetPoint.y).inflate(radiusX, radiusY).contains(point);\n                var handle = 0;\n                if (sourceHandle && (!targetHandle || sourcePointDistance < targetPointDistance)) {\n                    handle = -1;\n                } else if (targetHandle && (!sourceHandle || targetPointDistance < sourcePointDistance)) {\n                    handle = 1;\n                }\n                return handle;\n            },\n            refresh: function () {\n                this.spVisual.redraw({ center: this.diagram.modelToLayer(this.connection.sourcePoint()) });\n                this.epVisual.redraw({ center: this.diagram.modelToLayer(this.connection.targetPoint()) });\n            }\n        });\n        var ConnectorsAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._refreshHandler = function (e) {\n                    if (e.item == that.shape) {\n                        that.refresh();\n                    }\n                };\n            },\n            show: function (shape) {\n                var that = this, len, i, ctr;\n                that._visible = true;\n                that.shape = shape;\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                len = shape.connectors.length;\n                that.connectors = [];\n                that._clearVisual();\n                for (i = 0; i < len; i++) {\n                    ctr = new ConnectorVisual(shape.connectors[i]);\n                    that.connectors.push(ctr);\n                    that.visual.append(ctr.visual);\n                }\n                that.visual.visible(true);\n                that.refresh();\n            },\n            _clearVisual: function () {\n                var that = this;\n                if (that.diagram._cachedTouchTarget) {\n                    that._keepCachedTouchTarget();\n                } else {\n                    that.visual.clear();\n                }\n            },\n            _keepCachedTouchTarget: function () {\n                var that = this, visualChildren = that.visual.children;\n                var childrenCount = visualChildren.length;\n                var index = inArray(that.diagram._cachedTouchTarget, visualChildren);\n                for (var i = childrenCount - 1; i >= 0; i--) {\n                    if (i == index) {\n                        continue;\n                    }\n                    that.visual.remove(visualChildren[i]);\n                }\n            },\n            destroy: function () {\n                var that = this;\n                that.diagram.unbind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                that.shape = undefined;\n                that._visible = undefined;\n                that.visual.visible(false);\n            },\n            _hitTest: function (p) {\n                var ctr, i;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    if (ctr._hitTest(p)) {\n                        ctr._hover(true);\n                        this.diagram.toolService._hoveredConnector = ctr;\n                        break;\n                    }\n                }\n            },\n            refresh: function () {\n                if (this.shape) {\n                    var bounds = this.shape.bounds();\n                    bounds = this.diagram.modelToLayer(bounds);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.connectors, function () {\n                        this.refresh();\n                    });\n                }\n            }\n        });\n        function hitToOppositeSide(hit, bounds) {\n            var result;\n            if (hit.x == -1 && hit.y == -1) {\n                result = bounds.bottomRight();\n            } else if (hit.x == 1 && hit.y == 1) {\n                result = bounds.topLeft();\n            } else if (hit.x == -1 && hit.y == 1) {\n                result = bounds.topRight();\n            } else if (hit.x == 1 && hit.y == -1) {\n                result = bounds.bottomLeft();\n            } else if (hit.x === 0 && hit.y == -1) {\n                result = bounds.bottom();\n            } else if (hit.x === 0 && hit.y == 1) {\n                result = bounds.top();\n            } else if (hit.x == 1 && hit.y === 0) {\n                result = bounds.left();\n            } else if (hit.x == -1 && hit.y === 0) {\n                result = bounds.right();\n            }\n            return result;\n        }\n        var ResizingAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._manipulating = false;\n                that.map = [];\n                that.shapes = [];\n                that._initSelection();\n                that._createHandles();\n                that.redraw();\n                that.diagram.bind('select', function (e) {\n                    that._initialize(e.selected);\n                });\n                that._refreshHandler = function () {\n                    if (!that._internalChange) {\n                        that.refreshBounds();\n                        that.refresh();\n                    }\n                };\n                that._rotatedHandler = function () {\n                    if (that.shapes.length == 1) {\n                        that._angle = that.shapes[0].rotate().angle;\n                    }\n                    that._refreshHandler();\n                };\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler).bind(ITEMROTATE, that._rotatedHandler);\n                that.refreshBounds();\n                that.refresh();\n            },\n            options: {\n                handles: {\n                    fill: { color: '#fff' },\n                    stroke: { color: '#282828' },\n                    height: 7,\n                    width: 7,\n                    hover: {\n                        fill: { color: '#282828' },\n                        stroke: { color: '#282828' }\n                    }\n                },\n                selectable: {\n                    stroke: {\n                        color: '#778899',\n                        width: 1,\n                        dashType: 'dash'\n                    },\n                    fill: { color: TRANSPARENT }\n                },\n                offset: 10\n            },\n            _initSelection: function () {\n                var that = this;\n                var diagram = that.diagram;\n                var selectable = diagram.options.selectable;\n                var options = deepExtend({}, that.options.selectable, selectable);\n                that.rect = new Rectangle(options);\n                that.visual.append(that.rect);\n            },\n            _resizable: function () {\n                return this.options.editable && this.options.editable.resize !== false;\n            },\n            _handleOptions: function () {\n                return (this.options.editable.resize || {}).handles || this.options.handles;\n            },\n            _createHandles: function () {\n                var handles, item, y, x;\n                if (this._resizable()) {\n                    handles = this._handleOptions();\n                    for (x = -1; x <= 1; x++) {\n                        for (y = -1; y <= 1; y++) {\n                            if (x !== 0 || y !== 0) {\n                                item = new Rectangle(handles);\n                                item.drawingElement._hover = proxy(this._hover, this);\n                                this.map.push({\n                                    x: x,\n                                    y: y,\n                                    visual: item\n                                });\n                                this.visual.append(item);\n                            }\n                        }\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._innerBounds = value.clone();\n                    this._bounds = this.diagram.modelToLayer(value).inflate(this.options.offset, this.options.offset);\n                } else {\n                    return this._bounds;\n                }\n            },\n            _hitTest: function (p) {\n                var tp = this.diagram.modelToLayer(p), i, hit, handleBounds, handlesCount = this.map.length, handle;\n                if (this._angle) {\n                    tp = tp.clone().rotate(this._bounds.center(), this._angle);\n                }\n                if (this._resizable()) {\n                    for (i = 0; i < handlesCount; i++) {\n                        handle = this.map[i];\n                        hit = new Point(handle.x, handle.y);\n                        handleBounds = this._getHandleBounds(hit);\n                        handleBounds.offset(this._bounds.x, this._bounds.y);\n                        if (handleBounds.contains(tp)) {\n                            return hit;\n                        }\n                    }\n                }\n                if (this._bounds.contains(tp)) {\n                    return new Point(0, 0);\n                }\n            },\n            _getHandleBounds: function (p) {\n                if (this._resizable()) {\n                    var handles = this._handleOptions(), w = handles.width, h = handles.height, r = new Rect(0, 0, w, h);\n                    if (p.x < 0) {\n                        r.x = -w / 2;\n                    } else if (p.x === 0) {\n                        r.x = Math.floor(this._bounds.width / 2) - w / 2;\n                    } else if (p.x > 0) {\n                        r.x = this._bounds.width + 1 - w / 2;\n                    }\n                    if (p.y < 0) {\n                        r.y = -h / 2;\n                    } else if (p.y === 0) {\n                        r.y = Math.floor(this._bounds.height / 2) - h / 2;\n                    } else if (p.y > 0) {\n                        r.y = this._bounds.height + 1 - h / 2;\n                    }\n                    return r;\n                }\n            },\n            _getCursor: function (point) {\n                var hit = this._hitTest(point);\n                if (hit && hit.x >= -1 && hit.x <= 1 && hit.y >= -1 && hit.y <= 1 && this._resizable()) {\n                    var angle = this._angle;\n                    if (angle) {\n                        angle = 360 - angle;\n                        hit.rotate(new Point(0, 0), angle);\n                        hit = new Point(Math.round(hit.x), Math.round(hit.y));\n                    }\n                    if (hit.x == -1 && hit.y == -1) {\n                        return 'nw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == 1) {\n                        return 'se-resize';\n                    }\n                    if (hit.x == -1 && hit.y == 1) {\n                        return 'sw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == -1) {\n                        return 'ne-resize';\n                    }\n                    if (hit.x === 0 && hit.y == -1) {\n                        return 'n-resize';\n                    }\n                    if (hit.x === 0 && hit.y == 1) {\n                        return 's-resize';\n                    }\n                    if (hit.x == 1 && hit.y === 0) {\n                        return 'e-resize';\n                    }\n                    if (hit.x == -1 && hit.y === 0) {\n                        return 'w-resize';\n                    }\n                }\n                return this._manipulating ? Cursors.move : Cursors.select;\n            },\n            _initialize: function () {\n                var that = this, i, item, items = that.diagram.select();\n                that.shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof diagram.Shape) {\n                        that.shapes.push(item);\n                        item._rotationOffset = new Point();\n                    }\n                }\n                that._angle = that.shapes.length == 1 ? that.shapes[0].rotate().angle : 0;\n                that._startAngle = that._angle;\n                that._rotates();\n                that._positions();\n                that.refreshBounds();\n                that.refresh();\n                that.redraw();\n            },\n            _rotates: function () {\n                var that = this, i, shape;\n                that.initialRotates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialRotates.push(shape.rotate().angle);\n                }\n            },\n            _positions: function () {\n                var that = this, i, shape;\n                that.initialStates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialStates.push(shape.bounds());\n                }\n            },\n            _hover: function (value, element) {\n                if (this._resizable()) {\n                    var handleOptions = this._handleOptions(), hover = handleOptions.hover, stroke = handleOptions.stroke, fill = handleOptions.fill;\n                    if (value && Utils.isDefined(hover.stroke)) {\n                        stroke = deepExtend({}, stroke, hover.stroke);\n                    }\n                    if (value && Utils.isDefined(hover.fill)) {\n                        fill = hover.fill;\n                    }\n                    element.stroke(stroke.color, stroke.width, stroke.opacity);\n                    element.fill(fill.color, fill.opacity);\n                }\n            },\n            start: function (p) {\n                this._sp = p;\n                this._cp = p;\n                this._lp = p;\n                this._manipulating = true;\n                this._internalChange = true;\n                this.shapeStates = [];\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.shapeStates.push(shape.bounds());\n                }\n            },\n            redraw: function () {\n                var i, handle, visibleHandles = this._resizable();\n                for (i = 0; i < this.map.length; i++) {\n                    handle = this.map[i];\n                    handle.visual.visible(visibleHandles);\n                }\n            },\n            angle: function (value) {\n                if (defined(value)) {\n                    this._angle = value;\n                }\n                return this._angle;\n            },\n            rotate: function () {\n                var center = this._innerBounds.center();\n                var currentAngle = this.angle();\n                this._internalChange = true;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    currentAngle = (currentAngle + this.initialRotates[i] - this._startAngle) % 360;\n                    shape.rotate(currentAngle, center);\n                }\n                this.refresh();\n            },\n            move: function (handle, p) {\n                var delta, dragging, dtl = new Point(), dbr = new Point(), bounds, center, shape, i, angle, newBounds, changed = 0, staticPoint, scaleX, scaleY;\n                if (handle.y === -2 && handle.x === -1) {\n                    center = this._innerBounds.center();\n                    this._angle = this._truncateAngle(Utils.findAngle(center, p));\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        angle = (this._angle + this.initialRotates[i] - this._startAngle) % 360;\n                        shape.rotate(angle, center);\n                        if (shape.hasOwnProperty('layout')) {\n                            shape.layout(shape);\n                        }\n                        this._rotating = true;\n                    }\n                    this.refresh();\n                } else {\n                    if (this.shouldSnap()) {\n                        var thr = this._truncateDistance(p.minus(this._lp));\n                        if (thr.x === 0 && thr.y === 0) {\n                            this._cp = p;\n                            return;\n                        }\n                        delta = thr;\n                        this._lp = new Point(this._lp.x + thr.x, this._lp.y + thr.y);\n                    } else {\n                        delta = p.minus(this._cp);\n                    }\n                    if (this.isDragHandle(handle)) {\n                        dbr = dtl = delta;\n                        dragging = true;\n                    } else {\n                        if (this._angle) {\n                            delta.rotate(new Point(0, 0), this._angle);\n                        }\n                        if (handle.x == -1) {\n                            dtl.x = delta.x;\n                        } else if (handle.x == 1) {\n                            dbr.x = delta.x;\n                        }\n                        if (handle.y == -1) {\n                            dtl.y = delta.y;\n                        } else if (handle.y == 1) {\n                            dbr.y = delta.y;\n                        }\n                    }\n                    if (!dragging) {\n                        staticPoint = hitToOppositeSide(handle, this._innerBounds);\n                        scaleX = (this._innerBounds.width + delta.x * handle.x) / this._innerBounds.width;\n                        scaleY = (this._innerBounds.height + delta.y * handle.y) / this._innerBounds.height;\n                    }\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        bounds = shape.bounds();\n                        if (dragging) {\n                            if (!canDrag(shape)) {\n                                continue;\n                            }\n                            newBounds = this._displaceBounds(bounds, dtl, dbr, dragging);\n                        } else {\n                            newBounds = bounds.clone();\n                            newBounds.scale(scaleX, scaleY, staticPoint, this._innerBounds.center(), shape.rotate().angle);\n                            var newCenter = newBounds.center();\n                            newCenter.rotate(bounds.center(), -this._angle);\n                            newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                        }\n                        if (newBounds.width >= shape.options.minWidth && newBounds.height >= shape.options.minHeight) {\n                            var oldBounds = bounds;\n                            shape.bounds(newBounds);\n                            if (shape.hasOwnProperty('layout')) {\n                                shape.layout(shape, oldBounds, newBounds);\n                            }\n                            if (oldBounds.width !== newBounds.width || oldBounds.height !== newBounds.height) {\n                                shape.rotate(shape.rotate().angle);\n                            }\n                            changed += 1;\n                        }\n                    }\n                    if (changed) {\n                        if (changed == i) {\n                            newBounds = this._displaceBounds(this._innerBounds, dtl, dbr, dragging);\n                            this.bounds(newBounds);\n                        } else {\n                            this.refreshBounds();\n                        }\n                        this.refresh();\n                    }\n                    this._positions();\n                }\n                this._cp = p;\n            },\n            isDragHandle: function (handle) {\n                return handle.x === 0 && handle.y === 0;\n            },\n            cancel: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    shapes[idx].bounds(states[idx]);\n                }\n                this.refreshBounds();\n                this.refresh();\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n            },\n            _truncatePositionToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncatePositionToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateSizeToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncateSizeToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateAngle: function (a) {\n                var snap = this.snapOptions();\n                var snapAngle = Math.max(snap.angle || DEFAULT_SNAP_ANGLE, MIN_SNAP_ANGLE);\n                return snap ? Math.floor(a % 360 / snapAngle) * snapAngle : a % 360;\n            },\n            _truncateDistance: function (d) {\n                if (d instanceof diagram.Point) {\n                    return new diagram.Point(this._truncateDistance(d.x), this._truncateDistance(d.y));\n                } else {\n                    var snap = this.snapOptions() || {};\n                    var snapSize = Math.max(snap.size || DEFAULT_SNAP_SIZE, MIN_SNAP_SIZE);\n                    return snap ? Math.floor(d / snapSize) * snapSize : d;\n                }\n            },\n            snapOptions: function () {\n                var editable = this.diagram.options.editable;\n                var snap = ((editable || {}).drag || {}).snap || {};\n                return snap;\n            },\n            shouldSnap: function () {\n                var editable = this.diagram.options.editable;\n                var drag = (editable || {}).drag;\n                var snap = (drag || {}).snap;\n                return editable !== false && drag !== false && snap !== false;\n            },\n            _displaceBounds: function (bounds, dtl, dbr, dragging) {\n                var tl = bounds.topLeft().plus(dtl), br = bounds.bottomRight().plus(dbr), newBounds = Rect.fromPoints(tl, br), newCenter;\n                if (!dragging) {\n                    newCenter = newBounds.center();\n                    newCenter.rotate(bounds.center(), -this._angle);\n                    newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                }\n                return newBounds;\n            },\n            stop: function () {\n                var unit, i, shape;\n                if (this._cp != this._sp) {\n                    if (this._rotating) {\n                        unit = new RotateUnit(this, this.shapes, this.initialRotates);\n                        this._rotating = false;\n                    } else if (this._diffStates()) {\n                        if (this.diagram.ruler) {\n                            for (i = 0; i < this.shapes.length; i++) {\n                                shape = this.shapes[i];\n                                var bounds = shape.bounds();\n                                bounds = this._truncateSizeToGuides(this._truncatePositionToGuides(bounds));\n                                shape.bounds(bounds);\n                                this.refreshBounds();\n                                this.refresh();\n                            }\n                        }\n                        for (i = 0; i < this.shapes.length; i++) {\n                            shape = this.shapes[i];\n                            shape.updateModel();\n                        }\n                        unit = new TransformUnit(this.shapes, this.shapeStates, this);\n                        this.diagram._syncShapeChanges();\n                    }\n                }\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n                return unit;\n            },\n            _diffStates: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    if (!shapes[idx].bounds().equals(states[idx])) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            refreshBounds: function () {\n                var bounds = this.shapes.length == 1 ? this.shapes[0].bounds().clone() : this.diagram.boundingBox(this.shapes, true);\n                this.bounds(bounds);\n            },\n            refresh: function () {\n                var that = this, b, bounds;\n                if (this.shapes.length > 0) {\n                    bounds = this.bounds();\n                    this.visual.visible(true);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.map, function () {\n                        b = that._getHandleBounds(new Point(this.x, this.y));\n                        this.visual.position(b.topLeft());\n                    });\n                    this.visual.position(bounds.topLeft());\n                    var center = new Point(bounds.width / 2, bounds.height / 2);\n                    this.visual.rotate(this._angle, center);\n                    this.rect.redraw({\n                        width: bounds.width,\n                        height: bounds.height\n                    });\n                    if (this.rotationThumb) {\n                        var thumb = this.options.editable.rotate.thumb;\n                        this._rotationThumbBounds = new Rect(bounds.center().x, bounds.y + thumb.y, 0, 0).inflate(thumb.width);\n                        this.rotationThumb.redraw({ x: bounds.width / 2 - thumb.width / 2 });\n                    }\n                } else {\n                    this.visual.visible(false);\n                }\n            }\n        });\n        var Selector = Class.extend({\n            init: function (diagram) {\n                var selectable = diagram.options.selectable;\n                this.options = deepExtend({}, this.options, selectable);\n                this.visual = new Rectangle(this.options);\n                this.diagram = diagram;\n            },\n            options: {\n                stroke: {\n                    color: '#778899',\n                    width: 1,\n                    dashType: 'dash'\n                },\n                fill: { color: TRANSPARENT }\n            },\n            start: function (p) {\n                this._sp = this._ep = p;\n                this.refresh();\n                this.diagram._adorn(this, true);\n            },\n            end: function () {\n                this._sp = this._ep = undefined;\n                this.diagram._adorn(this, false);\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._bounds = value;\n                }\n                return this._bounds;\n            },\n            move: function (p) {\n                this._ep = p;\n                this.refresh();\n            },\n            refresh: function () {\n                if (this._sp) {\n                    var visualBounds = Rect.fromPoints(this.diagram.modelToLayer(this._sp), this.diagram.modelToLayer(this._ep));\n                    this.bounds(Rect.fromPoints(this._sp, this._ep));\n                    this.visual.position(visualBounds.topLeft());\n                    this.visual.redraw({\n                        height: visualBounds.height + 1,\n                        width: visualBounds.width + 1\n                    });\n                }\n            }\n        });\n        var ConnectorVisual = Class.extend({\n            init: function (connector) {\n                this.options = deepExtend({}, connector.options);\n                this._c = connector;\n                this.visual = new Circle(this.options);\n                this.refresh();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && Utils.isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && Utils.isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.visual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n            },\n            refresh: function () {\n                var p = this._c.shape.diagram.modelToView(this._c.position()), relative = p.minus(this._c.shape.bounds('transformed').topLeft()), value = new Rect(p.x, p.y, 0, 0);\n                value.inflate(this.options.width / 2, this.options.height / 2);\n                this._visualBounds = value;\n                this.visual.redraw({ center: new Point(relative.x, relative.y) });\n            },\n            _hitTest: function (p) {\n                var tp = this._c.shape.diagram.modelToView(p);\n                return this._visualBounds.contains(tp);\n            }\n        });\n        function canDrag(element) {\n            var editable = element.options.editable;\n            return editable && editable.drag !== false;\n        }\n        function hitTestShapeConnectors(shape, point) {\n            var connector, position, rect;\n            for (var idx = 0; idx < shape.connectors.length; idx++) {\n                connector = shape.connectors[idx];\n                position = connector.position();\n                rect = new Rect(position.x, position.y);\n                rect.inflate(HIT_TEST_DISTANCE, HIT_TEST_DISTANCE);\n                if (rect.contains(point)) {\n                    return connector;\n                }\n            }\n        }\n        function noMeta(meta) {\n            return meta.ctrlKey === false && meta.altKey === false && meta.shiftKey === false;\n        }\n        deepExtend(diagram, {\n            CompositeUnit: CompositeUnit,\n            TransformUnit: TransformUnit,\n            PanUndoUnit: PanUndoUnit,\n            AddShapeUnit: AddShapeUnit,\n            AddConnectionUnit: AddConnectionUnit,\n            DeleteShapeUnit: DeleteShapeUnit,\n            DeleteConnectionUnit: DeleteConnectionUnit,\n            ConnectionEditAdorner: ConnectionEditAdorner,\n            ConnectionTool: ConnectionTool,\n            ConnectorVisual: ConnectorVisual,\n            UndoRedoService: UndoRedoService,\n            ResizingAdorner: ResizingAdorner,\n            Selector: Selector,\n            ToolService: ToolService,\n            ConnectorsAdorner: ConnectorsAdorner,\n            LayoutUndoUnit: LayoutUndoUnit,\n            ConnectionEditUnit: ConnectionEditUnit,\n            ToFrontUnit: ToFrontUnit,\n            ToBackUnit: ToBackUnit,\n            ConnectionRouterBase: ConnectionRouterBase,\n            PolylineRouter: PolylineRouter,\n            CascadingRouter: CascadingRouter,\n            SelectionTool: SelectionTool,\n            ScrollerTool: ScrollerTool,\n            PointerTool: PointerTool,\n            ConnectionEditTool: ConnectionEditTool,\n            RotateUnit: RotateUnit\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/layout', ['dataviz/diagram/math'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Graph = diagram.Graph, Node = diagram.Node, Link = diagram.Link, deepExtend = kendo.deepExtend, Size = diagram.Size, Rect = diagram.Rect, Dictionary = diagram.Dictionary, Set = diagram.Set, HyperTree = diagram.Graph, Utils = diagram.Utils, Point = diagram.Point, EPSILON = 0.000001, DEG_TO_RAD = Math.PI / 180, contains = Utils.contains, grep = $.grep;\n        var LayoutBase = kendo.Class.extend({\n            defaultOptions: {\n                type: 'Tree',\n                subtype: 'Down',\n                roots: null,\n                animate: false,\n                limitToView: false,\n                friction: 0.9,\n                nodeDistance: 50,\n                iterations: 300,\n                horizontalSeparation: 90,\n                verticalSeparation: 50,\n                underneathVerticalTopOffset: 15,\n                underneathHorizontalOffset: 15,\n                underneathVerticalSeparation: 15,\n                grid: {\n                    width: 1500,\n                    offsetX: 50,\n                    offsetY: 50,\n                    componentSpacingX: 20,\n                    componentSpacingY: 20\n                },\n                layerSeparation: 50,\n                layeredIterations: 2,\n                startRadialAngle: 0,\n                endRadialAngle: 360,\n                radialSeparation: 150,\n                radialFirstLevelSeparation: 200,\n                keepComponentsInOneRadialLayout: false,\n                ignoreContainers: true,\n                layoutContainerChildren: false,\n                ignoreInvisible: true,\n                animateTransitions: false\n            },\n            init: function () {\n            },\n            gridLayoutComponents: function (components) {\n                if (!components) {\n                    throw 'No components supplied.';\n                }\n                Utils.forEach(components, function (c) {\n                    c.calcBounds();\n                });\n                components.sort(function (a, b) {\n                    return b.bounds.width - a.bounds.width;\n                });\n                var maxWidth = this.options.grid.width, offsetX = this.options.grid.componentSpacingX, offsetY = this.options.grid.componentSpacingY, height = 0, startX = this.options.grid.offsetX, startY = this.options.grid.offsetY, x = startX, y = startY, i, resultLinkSet = [], resultNodeSet = [];\n                while (components.length > 0) {\n                    if (x >= maxWidth) {\n                        x = startX;\n                        y += height + offsetY;\n                        height = 0;\n                    }\n                    var component = components.pop();\n                    this.moveToOffset(component, new Point(x, y));\n                    for (i = 0; i < component.nodes.length; i++) {\n                        resultNodeSet.push(component.nodes[i]);\n                    }\n                    for (i = 0; i < component.links.length; i++) {\n                        resultLinkSet.push(component.links[i]);\n                    }\n                    var boundingRect = component.bounds;\n                    var currentHeight = boundingRect.height;\n                    if (currentHeight <= 0 || isNaN(currentHeight)) {\n                        currentHeight = 0;\n                    }\n                    var currentWidth = boundingRect.width;\n                    if (currentWidth <= 0 || isNaN(currentWidth)) {\n                        currentWidth = 0;\n                    }\n                    if (currentHeight >= height) {\n                        height = currentHeight;\n                    }\n                    x += currentWidth + offsetX;\n                }\n                return {\n                    nodes: resultNodeSet,\n                    links: resultLinkSet\n                };\n            },\n            moveToOffset: function (component, p) {\n                var i, j, bounds = component.bounds, deltax = p.x - bounds.x, deltay = p.y - bounds.y;\n                for (i = 0; i < component.nodes.length; i++) {\n                    var node = component.nodes[i];\n                    var nodeBounds = node.bounds();\n                    if (nodeBounds.width === 0 && nodeBounds.height === 0 && nodeBounds.x === 0 && nodeBounds.y === 0) {\n                        nodeBounds = new Rect(0, 0, 0, 0);\n                    }\n                    nodeBounds.x += deltax;\n                    nodeBounds.y += deltay;\n                    node.bounds(nodeBounds);\n                }\n                for (i = 0; i < component.links.length; i++) {\n                    var link = component.links[i];\n                    if (link.points) {\n                        var newpoints = [];\n                        var points = link.points;\n                        for (j = 0; j < points.length; j++) {\n                            var pt = points[j];\n                            pt.x += deltax;\n                            pt.y += deltay;\n                            newpoints.push(pt);\n                        }\n                        link.points = newpoints;\n                    }\n                }\n                this.currentHorizontalOffset += bounds.width + this.options.grid.offsetX;\n                return new Point(deltax, deltay);\n            },\n            transferOptions: function (options) {\n                this.options = kendo.deepExtend({}, this.defaultOptions);\n                if (Utils.isUndefined(options)) {\n                    return;\n                }\n                this.options = kendo.deepExtend(this.options, options || {});\n            }\n        });\n        var DiagramToHyperTreeAdapter = kendo.Class.extend({\n            init: function (diagram) {\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.finalNodes = [];\n                this.finalLinks = [];\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.hyperMap = new Dictionary();\n                this.hyperTree = new Graph();\n                this.finalGraph = null;\n                this.diagram = diagram;\n            },\n            convert: function (options) {\n                if (Utils.isUndefined(this.diagram)) {\n                    throw 'No diagram to convert.';\n                }\n                this.options = kendo.deepExtend({\n                    ignoreInvisible: true,\n                    ignoreContainers: true,\n                    layoutContainerChildren: false\n                }, options || {});\n                this.clear();\n                this._renormalizeShapes();\n                this._renormalizeConnections();\n                this.finalNodes = new Dictionary(this.nodes);\n                this.finalLinks = new Dictionary(this.edges);\n                this.finalGraph = new Graph();\n                this.finalNodes.forEach(function (n) {\n                    this.finalGraph.addNode(n);\n                }, this);\n                this.finalLinks.forEach(function (l) {\n                    this.finalGraph.addExistingLink(l);\n                }, this);\n                return this.finalGraph;\n            },\n            mapConnection: function (connection) {\n                return this.edgeMap.get(connection.id);\n            },\n            mapShape: function (shape) {\n                return this.nodeMap.get(shape.id);\n            },\n            getEdge: function (a, b) {\n                return Utils.first(a.links, function (link) {\n                    return link.getComplement(a) === b;\n                });\n            },\n            clear: function () {\n                this.finalGraph = null;\n                this.hyperTree = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new HyperTree() : null;\n                this.hyperMap = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new Dictionary() : null;\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.finalNodes = [];\n                this.finalLinks = [];\n            },\n            listToRoot: function (containerGraph) {\n                var list = [];\n                var s = containerGraph.container;\n                if (!s) {\n                    return list;\n                }\n                list.push(s);\n                while (s.parentContainer) {\n                    s = s.parentContainer;\n                    list.push(s);\n                }\n                list.reverse();\n                return list;\n            },\n            firstNonIgnorableContainer: function (shape) {\n                if (shape.isContainer && !this._isIgnorableItem(shape)) {\n                    return shape;\n                }\n                return !shape.parentContainer ? null : this.firstNonIgnorableContainer(shape.parentContainer);\n            },\n            isContainerConnection: function (a, b) {\n                if (a.isContainer && this.isDescendantOf(a, b)) {\n                    return true;\n                }\n                return b.isContainer && this.isDescendantOf(b, a);\n            },\n            isDescendantOf: function (scope, a) {\n                if (!scope.isContainer) {\n                    throw 'Expecting a container.';\n                }\n                if (scope === a) {\n                    return false;\n                }\n                if (contains(scope.children, a)) {\n                    return true;\n                }\n                var containers = [];\n                for (var i = 0, len = scope.children.length; i < len; i++) {\n                    var c = scope.children[i];\n                    if (c.isContainer && this.isDescendantOf(c, a)) {\n                        containers.push(c);\n                    }\n                }\n                return containers.length > 0;\n            },\n            isIgnorableItem: function (shape) {\n                if (this.options.ignoreInvisible) {\n                    if (shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    if (!shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    return true;\n                } else {\n                    return shape.isCollapsed && !this._isTop(shape);\n                }\n            },\n            isShapeMapped: function (shape) {\n                return shape.isCollapsed && !this._isVisible(shape) && !this._isTop(shape);\n            },\n            leastCommonAncestor: function (a, b) {\n                if (!a) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!b) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!this.hyperTree) {\n                    throw 'No hypertree available.';\n                }\n                var al = this.listToRoot(a);\n                var bl = this.listToRoot(b);\n                var found = null;\n                if (Utils.isEmpty(al) || Utils.isEmpty(bl)) {\n                    return this.hyperTree.root.data;\n                }\n                var xa = al[0];\n                var xb = bl[0];\n                var i = 0;\n                while (xa === xb) {\n                    found = al[i];\n                    i++;\n                    if (i >= al.length || i >= bl.length) {\n                        break;\n                    }\n                    xa = al[i];\n                    xb = bl[i];\n                }\n                if (!found) {\n                    return this.hyperTree.root.data;\n                } else {\n                    return grep(this.hyperTree.nodes, function (n) {\n                        return n.data.container === found;\n                    });\n                }\n            },\n            _isTop: function (item) {\n                return !item.parentContainer;\n            },\n            _isVisible: function (shape) {\n                if (!shape.visible()) {\n                    return false;\n                }\n                return !shape.parentContainer ? shape.visible() : this._isVisible(shape.parentContainer);\n            },\n            _isCollapsed: function (shape) {\n                if (shape.isContainer && shape.isCollapsed) {\n                    return true;\n                }\n                return shape.parentContainer && this._isCollapsed(shape.parentContainer);\n            },\n            _renormalizeShapes: function () {\n                if (this.options.ignoreContainers) {\n                    for (var i = 0, len = this.diagram.shapes.length; i < len; i++) {\n                        var shape = this.diagram.shapes[i];\n                        if (this.options.ignoreInvisible && !this._isVisible(shape) || shape.isContainer) {\n                            this.ignoredShapes.push(shape);\n                            continue;\n                        }\n                        var node = new Node(shape.id, shape);\n                        node.isVirtual = false;\n                        this.nodeMap.add(shape.id, node);\n                        this.nodes.push(node);\n                    }\n                } else {\n                    throw 'Containers are not supported yet, but stay tuned.';\n                }\n            },\n            _renormalizeConnections: function () {\n                if (this.diagram.connections.length === 0) {\n                    return;\n                }\n                for (var i = 0, len = this.diagram.connections.length; i < len; i++) {\n                    var conn = this.diagram.connections[i];\n                    if (this.isIgnorableItem(conn)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    var source = !conn.sourceConnector ? null : conn.sourceConnector.shape;\n                    var sink = !conn.targetConnector ? null : conn.targetConnector.shape;\n                    if (!source || !sink) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, source) && !this.shapeMap.containsKey(source)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, sink) && !this.shapeMap.containsKey(sink)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (this.shapeMap.containsKey(source)) {\n                        source = this.shapeMap[source];\n                    }\n                    if (this.shapeMap.containsKey(sink)) {\n                        sink = this.shapeMap[sink];\n                    }\n                    var sourceNode = this.mapShape(source);\n                    var sinkNode = this.mapShape(sink);\n                    if (sourceNode === sinkNode || this.areConnectedAlready(sourceNode, sinkNode)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (sourceNode === null || sinkNode === null) {\n                        throw 'A shape was not mapped to a node.';\n                    }\n                    if (this.options.ignoreContainers) {\n                        if (sourceNode.isVirtual || sinkNode.isVirtual) {\n                            this.ignoredConnections.push(conn);\n                            continue;\n                        }\n                        var newEdge = new Link(sourceNode, sinkNode, conn.id, conn);\n                        this.edgeMap.add(conn.id, newEdge);\n                        this.edges.push(newEdge);\n                    } else {\n                        throw 'Containers are not supported yet, but stay tuned.';\n                    }\n                }\n            },\n            areConnectedAlready: function (n, m) {\n                return Utils.any(this.edges, function (l) {\n                    return l.source === n && l.target === m || l.source === m && l.target === n;\n                });\n            }\n        });\n        var SpringLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                var initialTemperature = this.options.nodeDistance * 9;\n                this.temperature = initialTemperature;\n                var guessBounds = this._expectedBounds();\n                this.width = guessBounds.width;\n                this.height = guessBounds.height;\n                for (var step = 0; step < this.options.iterations; step++) {\n                    this.refineStage = step >= this.options.iterations * 5 / 6;\n                    this.tick();\n                    this.temperature = this.refineStage ? initialTemperature / 30 : initialTemperature * (1 - step / (2 * this.options.iterations));\n                }\n            },\n            tick: function () {\n                var i;\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    this._repulsion(this.graph.nodes[i]);\n                }\n                for (i = 0; i < this.graph.links.length; i++) {\n                    this._attraction(this.graph.links[i]);\n                }\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    var node = this.graph.nodes[i];\n                    var offset = Math.sqrt(node.dx * node.dx + node.dy * node.dy);\n                    if (offset === 0) {\n                        return;\n                    }\n                    node.x += Math.min(offset, this.temperature) * node.dx / offset;\n                    node.y += Math.min(offset, this.temperature) * node.dy / offset;\n                    if (this.options.limitToView) {\n                        node.x = Math.min(this.width, Math.max(node.width / 2, node.x));\n                        node.y = Math.min(this.height, Math.max(node.height / 2, node.y));\n                    }\n                }\n            },\n            _shake: function (node) {\n                var rho = Math.random() * this.options.nodeDistance / 4;\n                var alpha = Math.random() * 2 * Math.PI;\n                node.x += rho * Math.cos(alpha);\n                node.y -= rho * Math.sin(alpha);\n            },\n            _InverseSquareForce: function (d, n, m) {\n                var force;\n                if (!this.refineStage) {\n                    force = Math.pow(d, 2) / Math.pow(this.options.nodeDistance, 2);\n                } else {\n                    var deltax = n.x - m.x;\n                    var deltay = n.y - m.y;\n                    var wn = n.width / 2;\n                    var hn = n.height / 2;\n                    var wm = m.width / 2;\n                    var hm = m.height / 2;\n                    force = Math.pow(deltax, 2) / Math.pow(wn + wm + this.options.nodeDistance, 2) + Math.pow(deltay, 2) / Math.pow(hn + hm + this.options.nodeDistance, 2);\n                }\n                return force * 4 / 3;\n            },\n            _SquareForce: function (d, n, m) {\n                return 1 / this._InverseSquareForce(d, n, m);\n            },\n            _repulsion: function (n) {\n                n.dx = 0;\n                n.dy = 0;\n                Utils.forEach(this.graph.nodes, function (m) {\n                    if (m === n) {\n                        return;\n                    }\n                    while (n.x === m.x && n.y === m.y) {\n                        this._shake(m);\n                    }\n                    var vx = n.x - m.x;\n                    var vy = n.y - m.y;\n                    var distance = Math.sqrt(vx * vx + vy * vy);\n                    var r = this._SquareForce(distance, n, m) * 2;\n                    n.dx += vx / distance * r;\n                    n.dy += vy / distance * r;\n                }, this);\n            },\n            _attraction: function (link) {\n                var t = link.target;\n                var s = link.source;\n                if (s === t) {\n                    return;\n                }\n                while (s.x === t.x && s.y === t.y) {\n                    this._shake(t);\n                }\n                var vx = s.x - t.x;\n                var vy = s.y - t.y;\n                var distance = Math.sqrt(vx * vx + vy * vy);\n                var a = this._InverseSquareForce(distance, s, t) * 5;\n                var dx = vx / distance * a;\n                var dy = vy / distance * a;\n                t.dx += dx;\n                t.dy += dy;\n                s.dx -= dx;\n                s.dy -= dy;\n            },\n            _expectedBounds: function () {\n                var size, N = this.graph.nodes.length, ratio = 1.5, multiplier = 4;\n                if (N === 0) {\n                    return size;\n                }\n                size = Utils.fold(this.graph.nodes, function (s, node) {\n                    var area = node.width * node.height;\n                    if (area > 0) {\n                        s += Math.sqrt(area);\n                        return s;\n                    }\n                    return 0;\n                }, 0, this);\n                var av = size / N;\n                var squareSize = av * Math.ceil(Math.sqrt(N));\n                var width = squareSize * Math.sqrt(ratio);\n                var height = squareSize / Math.sqrt(ratio);\n                return {\n                    width: width * multiplier,\n                    height: height * multiplier\n                };\n            }\n        });\n        var TreeLayoutProcessor = kendo.Class.extend({\n            init: function (options) {\n                this.center = null;\n                this.options = options;\n            },\n            layout: function (treeGraph, root) {\n                this.graph = treeGraph;\n                if (!this.graph.nodes || this.graph.nodes.length === 0) {\n                    return;\n                }\n                if (!contains(this.graph.nodes, root)) {\n                    throw 'The given root is not in the graph.';\n                }\n                this.center = root;\n                this.graph.cacheRelationships();\n                this.layoutSwitch();\n            },\n            layoutLeft: function (left) {\n                this.setChildrenDirection(this.center, 'Left', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    node.TreeDirection = 'Left';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x - this.options.horizontalSeparation;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    var p = new Point(x - node.Size.width, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutRight: function (right) {\n                this.setChildrenDirection(this.center, 'Right', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    node.TreeDirection = 'Right';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x + this.options.horizontalSeparation + this.center.width;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutUp: function (up) {\n                this.setChildrenDirection(this.center, 'Up', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y, node, i;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    node.TreeDirection = 'Up';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    y = this.center.y - this.options.verticalSeparation - node.Size.height;\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutDown: function (down) {\n                var node, i;\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.treeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutRadialTree: function () {\n                this.setChildrenDirection(this.center, 'Radial', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.previousRoot = null;\n                var startAngle = this.options.startRadialAngle * DEG_TO_RAD;\n                var endAngle = this.options.endRadialAngle * DEG_TO_RAD;\n                if (endAngle <= startAngle) {\n                    throw 'Final angle should not be less than the start angle.';\n                }\n                this.maxDepth = 0;\n                this.origin = new Point(this.center.x, this.center.y);\n                this.calculateAngularWidth(this.center, 0);\n                if (this.maxDepth > 0) {\n                    this.radialLayout(this.center, this.options.radialFirstLevelSeparation, startAngle, endAngle);\n                }\n                this.center.Angle = endAngle - startAngle;\n            },\n            tipOverTree: function (down, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.setChildrenLayout(this.center, 'Underneath', false, startFromLevel);\n                var w = 0, y, node, i;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.TreeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                w -= down[down.length - 1].width;\n                w += down[down.length - 1].associatedShape.bounds().width;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            calculateAngularWidth: function (n, d) {\n                if (d > this.maxDepth) {\n                    this.maxDepth = d;\n                }\n                var aw = 0, w = 1000, h = 1000, diameter = d === 0 ? 0 : Math.sqrt(w * w + h * h) / d;\n                if (n.children.length > 0) {\n                    for (var i = 0, len = n.children.length; i < len; i++) {\n                        var child = n.children[i];\n                        aw += this.calculateAngularWidth(child, d + 1);\n                    }\n                    aw = Math.max(diameter, aw);\n                } else {\n                    aw = diameter;\n                }\n                n.sectorAngle = aw;\n                return aw;\n            },\n            sortChildren: function (n) {\n                var basevalue = 0, i;\n                if (n.parents.length > 1) {\n                    throw 'Node is not part of a tree.';\n                }\n                var p = n.parents[0];\n                if (p) {\n                    var pl = new Point(p.x, p.y);\n                    var nl = new Point(n.x, n.y);\n                    basevalue = this.normalizeAngle(Math.atan2(pl.y - nl.y, pl.x - nl.x));\n                }\n                var count = n.children.length;\n                if (count === 0) {\n                    return null;\n                }\n                var angle = [];\n                var idx = [];\n                for (i = 0; i < count; ++i) {\n                    var c = n.children[i];\n                    var l = new Point(c.x, c.y);\n                    idx[i] = i;\n                    angle[i] = this.normalizeAngle(-basevalue + Math.atan2(l.y - l.y, l.x - l.x));\n                }\n                Utils.bisort(angle, idx);\n                var col = [];\n                var children = n.children;\n                for (i = 0; i < count; ++i) {\n                    col.push(children[idx[i]]);\n                }\n                return col;\n            },\n            normalizeAngle: function (angle) {\n                while (angle > Math.PI * 2) {\n                    angle -= 2 * Math.PI;\n                }\n                while (angle < 0) {\n                    angle += Math.PI * 2;\n                }\n                return angle;\n            },\n            radialLayout: function (node, radius, startAngle, endAngle) {\n                var deltaTheta = endAngle - startAngle;\n                var deltaThetaHalf = deltaTheta / 2;\n                var parentSector = node.sectorAngle;\n                var fraction = 0;\n                var sorted = this.sortChildren(node);\n                for (var i = 0, len = sorted.length; i < len; i++) {\n                    var childNode = sorted[i];\n                    var cp = childNode;\n                    var childAngleFraction = cp.sectorAngle / parentSector;\n                    if (childNode.children.length > 0) {\n                        this.radialLayout(childNode, radius + this.options.radialSeparation, startAngle + fraction * deltaTheta, startAngle + (fraction + childAngleFraction) * deltaTheta);\n                    }\n                    this.setPolarLocation(childNode, radius, startAngle + fraction * deltaTheta + childAngleFraction * deltaThetaHalf);\n                    cp.angle = childAngleFraction * deltaTheta;\n                    fraction += childAngleFraction;\n                }\n            },\n            setPolarLocation: function (node, radius, angle) {\n                node.x = this.origin.x + radius * Math.cos(angle);\n                node.y = this.origin.y + radius * Math.sin(angle);\n                node.BoundingRectangle = new Rect(node.x, node.y, node.width, node.height);\n            },\n            setChildrenDirection: function (node, direction, includeStart) {\n                var rootDirection = node.treeDirection;\n                this.graph.depthFirstTraversal(node, function (n) {\n                    n.treeDirection = direction;\n                });\n                if (!includeStart) {\n                    node.treeDirection = rootDirection;\n                }\n            },\n            setChildrenLayout: function (node, layout, includeStart, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                var rootLayout = node.childrenLayout;\n                if (startFromLevel > 0) {\n                    this.graph.assignLevels(node);\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        if (s.level >= startFromLevel + 1) {\n                            s.childrenLayout = layout;\n                        }\n                    });\n                } else {\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        s.childrenLayout = layout;\n                    });\n                    if (!includeStart) {\n                        node.childrenLayout = rootLayout;\n                    }\n                }\n            },\n            measure: function (node, givenSize) {\n                var w = 0, h = 0, s;\n                var result = new Size(0, 0);\n                if (!node) {\n                    throw '';\n                }\n                var b = node.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (node.parents.length !== 1) {\n                    throw 'Node not in a spanning tree.';\n                }\n                var parent = node.parents[0];\n                if (node.treeDirection === 'Undefined') {\n                    node.treeDirection = parent.treeDirection;\n                }\n                if (Utils.isEmpty(node.children)) {\n                    result = new Size(Math.abs(shapeWidth) < EPSILON ? 50 : shapeWidth, Math.abs(shapeHeight) < EPSILON ? 25 : shapeHeight);\n                } else if (node.children.length === 1) {\n                    switch (node.treeDirection) {\n                    case 'Radial':\n                        s = this.measure(node.children[0], givenSize);\n                        w = shapeWidth + this.options.radialSeparation * Math.cos(node.AngleToParent) + s.width;\n                        h = shapeHeight + Math.abs(this.options.radialSeparation * Math.sin(node.AngleToParent)) + s.height;\n                        break;\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                            break;\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + s.width + this.options.underneathHorizontalOffset;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + this.options.horizontalSeparation + s.width;\n                            h = Math.max(shapeHeight, s.height);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Radial layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = Math.max(shapeWidth, s.width + this.options.underneathHorizontalOffset);\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            h = shapeHeight + this.options.verticalSeparation + s.height;\n                            w = Math.max(shapeWidth, s.width);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                } else {\n                    var i, childNode;\n                    switch (node.treeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = shapeWidth;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, shapeWidth + this.options.horizontalSeparation + s.width);\n                                h += s.height + this.options.verticalSeparation;\n                            }\n                            h -= this.options.verticalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Right layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = 0;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w += s.width + this.options.horizontalSeparation;\n                                h = Math.max(h, s.height + this.options.verticalSeparation + shapeHeight);\n                            }\n                            w -= this.options.horizontalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                }\n                node.SectorAngle = Math.sqrt(w * w / 4 + h * h / 4);\n                node.Size = result;\n                return result;\n            },\n            arrange: function (n, p) {\n                var i, pp, child, node, childrenwidth, b = n.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (Utils.isEmpty(n.children)) {\n                    n.x = p.x;\n                    n.y = p.y;\n                    n.BoundingRectangle = new Rect(p.x, p.y, shapeWidth, shapeHeight);\n                } else {\n                    var x, y;\n                    var selfLocation;\n                    switch (n.treeDirection) {\n                    case 'Left':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                node = node.children[i];\n                                x = selfLocation.x - node.associatedShape.width - this.options.underneathHorizontalOffset;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + n.Size.width - shapeWidth, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = selfLocation.x - this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x - node.Size.width, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Right':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Up':\n                        selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y + n.Size.height - shapeHeight);\n                        n.x = selfLocation.x;\n                        n.y = selfLocation.y;\n                        n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                        if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                            childrenwidth = 0;\n                            for (i = 0; i < n.children.length; i++) {\n                                child = n.children[i];\n                                childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                            }\n                            childrenwidth -= this.options.horizontalSeparation;\n                            x = p.x + (shapeWidth - childrenwidth) / 2;\n                        } else {\n                            x = p.x;\n                        }\n                        for (i = 0; i < n.children.length; i++) {\n                            node = n.children[i];\n                            y = selfLocation.y - this.options.verticalSeparation - node.Size.height;\n                            pp = new Point(x, y);\n                            this.arrange(node, pp);\n                            x += node.Size.width + this.options.horizontalSeparation;\n                        }\n                        break;\n                    case 'Down':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                                childrenwidth = 0;\n                                for (i = 0; i < n.children.length; i++) {\n                                    child = n.children[i];\n                                    childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                                }\n                                childrenwidth -= this.options.horizontalSeparation;\n                                x = p.x + (shapeWidth - childrenwidth) / 2;\n                            } else {\n                                x = p.x;\n                            }\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                y = selfLocation.y + this.options.verticalSeparation + shapeHeight;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                x += node.Size.width + this.options.horizontalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'None':\n                        break;\n                    default:\n                        throw 'Unsupported TreeDirection';\n                    }\n                }\n            },\n            layoutSwitch: function () {\n                if (!this.center) {\n                    return;\n                }\n                if (Utils.isEmpty(this.center.children)) {\n                    return;\n                }\n                var type = this.options.subtype;\n                if (Utils.isUndefined(type)) {\n                    type = 'Down';\n                }\n                var single, male, female, leftcount;\n                var children = this.center.children;\n                switch (type.toLowerCase()) {\n                case 'radial':\n                case 'radialtree':\n                    this.layoutRadialTree();\n                    break;\n                case 'mindmaphorizontal':\n                case 'mindmap':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutRight(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutLeft(male);\n                        this.layoutRight(female);\n                    }\n                    break;\n                case 'mindmapvertical':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutDown(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutUp(male);\n                        this.layoutDown(female);\n                    }\n                    break;\n                case 'right':\n                    this.layoutRight(this.center.children);\n                    break;\n                case 'left':\n                    this.layoutLeft(this.center.children);\n                    break;\n                case 'up':\n                case 'bottom':\n                    this.layoutUp(this.center.children);\n                    break;\n                case 'down':\n                case 'top':\n                    this.layoutDown(this.center.children);\n                    break;\n                case 'tipover':\n                case 'tipovertree':\n                    if (this.options.tipOverTreeStartLevel < 0) {\n                        throw 'The tip-over level should be a positive integer.';\n                    }\n                    this.tipOverTree(this.center.children, this.options.tipOverTreeStartLevel);\n                    break;\n                case 'undefined':\n                case 'none':\n                    break;\n                }\n            }\n        });\n        var TreeLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                this.graph = adapter.convert();\n                var finalNodeSet = this.layoutComponents();\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutComponents: function () {\n                if (this.graph.isEmpty()) {\n                    return;\n                }\n                var components = this.graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                var layout = new TreeLayoutProcessor(this.options);\n                var trees = [];\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    var treeGraph = this.getTree(component);\n                    if (!treeGraph) {\n                        throw 'Failed to find a spanning tree for the component.';\n                    }\n                    var root = treeGraph.root;\n                    var tree = treeGraph.tree;\n                    layout.layout(tree, root);\n                    trees.push(tree);\n                }\n                return this.gridLayoutComponents(trees);\n            },\n            getTree: function (graph) {\n                var root = null;\n                if (this.options.roots && this.options.roots.length > 0) {\n                    for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                        var node = graph.nodes[i];\n                        for (var j = 0; j < this.options.roots.length; j++) {\n                            var givenRootShape = this.options.roots[j];\n                            if (givenRootShape === node.associatedShape) {\n                                root = node;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!root) {\n                    root = graph.root();\n                    if (!root) {\n                        throw 'Unable to find a root for the tree.';\n                    }\n                }\n                return this.getTreeForRoot(graph, root);\n            },\n            getTreeForRoot: function (graph, root) {\n                var tree = graph.getSpanningTree(root);\n                if (Utils.isUndefined(tree) || tree.isEmpty()) {\n                    return null;\n                }\n                return {\n                    tree: tree,\n                    root: tree.root\n                };\n            }\n        });\n        var LayeredLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            _initRuntimeProperties: function () {\n                for (var k = 0; k < this.graph.nodes.length; k++) {\n                    var node = this.graph.nodes[k];\n                    node.layer = -1;\n                    node.downstreamLinkCount = 0;\n                    node.upstreamLinkCount = 0;\n                    node.isVirtual = false;\n                    node.uBaryCenter = 0;\n                    node.dBaryCenter = 0;\n                    node.upstreamPriority = 0;\n                    node.downstreamPriority = 0;\n                    node.gridPosition = 0;\n                }\n            },\n            _prepare: function (graph) {\n                var current = [], i, l, link;\n                var layerMap = new Dictionary();\n                var layerCount = 0;\n                var targetLayer, next, target;\n                Utils.forEach(graph.nodes, function (node) {\n                    if (node.incoming.length === 0) {\n                        layerMap.set(node, 0);\n                        current.push(node);\n                    }\n                });\n                while (current.length > 0) {\n                    next = current.shift();\n                    for (i = 0; i < next.outgoing.length; i++) {\n                        link = next.outgoing[i];\n                        target = link.target;\n                        if (layerMap.containsKey(target)) {\n                            targetLayer = Math.max(layerMap.get(next) + 1, layerMap.get(target));\n                        } else {\n                            targetLayer = layerMap.get(next) + 1;\n                        }\n                        layerMap.set(target, targetLayer);\n                        if (targetLayer > layerCount) {\n                            layerCount = targetLayer;\n                        }\n                        if (!contains(current, target)) {\n                            current.push(target);\n                        }\n                    }\n                }\n                var sortedNodes = layerMap.keys();\n                sortedNodes.sort(function (o1, o2) {\n                    var o1layer = layerMap.get(o1);\n                    var o2layer = layerMap.get(o2);\n                    return Utils.sign(o2layer - o1layer);\n                });\n                for (var n = 0; n < sortedNodes.length; ++n) {\n                    var node = sortedNodes[n];\n                    var minLayer = Number.MAX_VALUE;\n                    if (node.outgoing.length === 0) {\n                        continue;\n                    }\n                    for (l = 0; l < node.outgoing.length; ++l) {\n                        link = node.outgoing[l];\n                        minLayer = Math.min(minLayer, layerMap.get(link.target));\n                    }\n                    if (minLayer > 1) {\n                        layerMap.set(node, minLayer - 1);\n                    }\n                }\n                this.layers = [];\n                var layer;\n                for (i = 0; i < layerCount + 1; i++) {\n                    layer = [];\n                    layer.linksTo = {};\n                    this.layers.push(layer);\n                }\n                layerMap.forEach(function (node, layer) {\n                    node.layer = layer;\n                    this.layers[layer].push(node);\n                }, this);\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (i = 0; i < layer.length; i++) {\n                        layer[i].gridPosition = i;\n                    }\n                }\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph given or graph analysis of the diagram failed.';\n                }\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                graph.setItemIndices();\n                var reversedEdges = graph.makeAcyclic();\n                this._initRuntimeProperties();\n                this._prepare(graph, options);\n                this._dummify();\n                this._optimizeCrossings();\n                this._swapPairs();\n                this.arrangeNodes();\n                this._moveThingsAround();\n                this._dedummify();\n                Utils.forEach(reversedEdges, function (e) {\n                    if (e.points) {\n                        e.points.reverse();\n                    }\n                });\n            },\n            setMinDist: function (m, n, minDist) {\n                var l = m.layer;\n                var i = m.layerIndex;\n                this.minDistances[l][i] = minDist;\n            },\n            getMinDist: function (m, n) {\n                var dist = 0, i1 = m.layerIndex, i2 = n.layerIndex, l = m.layer, min = Math.min(i1, i2), max = Math.max(i1, i2);\n                for (var k = min; k < max; ++k) {\n                    dist += this.minDistances[l][k];\n                }\n                return dist;\n            },\n            placeLeftToRight: function (leftClasses) {\n                var leftPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = leftClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!leftPos.containsKey(node)) {\n                            this.placeLeft(node, leftPos, c);\n                        }\n                    }\n                    var d = Number.POSITIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var rightSibling = this.rightSibling(node);\n                        if (rightSibling && this.nodeLeftClass.get(rightSibling) !== c) {\n                            d = Math.min(d, leftPos.get(rightSibling) - leftPos.get(node) - this.getMinDist(node, rightSibling));\n                        }\n                    }\n                    if (d === Number.POSITIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeLeftClass.get(neighbor) < c) {\n                                    D.push(leftPos.get(neighbor) - leftPos.get(node));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        leftPos.set(node, leftPos.get(node) + d);\n                    }\n                }\n                return leftPos;\n            },\n            placeRightToLeft: function (rightClasses) {\n                var rightPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = rightClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!rightPos.containsKey(node)) {\n                            this.placeRight(node, rightPos, c);\n                        }\n                    }\n                    var d = Number.NEGATIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var leftSibling = this.leftSibling(node);\n                        if (leftSibling && this.nodeRightClass.get(leftSibling) !== c) {\n                            d = Math.max(d, rightPos.get(leftSibling) - rightPos.get(node) + this.getMinDist(leftSibling, node));\n                        }\n                    }\n                    if (d === Number.NEGATIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeRightClass.get(neighbor) < c) {\n                                    D.push(rightPos.get(node) - rightPos.get(neighbor));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        rightPos.set(node, rightPos.get(node) + d);\n                    }\n                }\n                return rightPos;\n            },\n            _getLeftWing: function () {\n                var leftWing = { value: null };\n                var result = this.computeClasses(leftWing, 1);\n                this.nodeLeftClass = leftWing.value;\n                return result;\n            },\n            _getRightWing: function () {\n                var rightWing = { value: null };\n                var result = this.computeClasses(rightWing, -1);\n                this.nodeRightClass = rightWing.value;\n                return result;\n            },\n            computeClasses: function (wingPair, d) {\n                var currentWing = 0, wing = wingPair.value = new Dictionary();\n                for (var l = 0; l < this.layers.length; ++l) {\n                    currentWing = l;\n                    var layer = this.layers[l];\n                    for (var n = d === 1 ? 0 : layer.length - 1; 0 <= n && n < layer.length; n += d) {\n                        var node = layer[n];\n                        if (!wing.containsKey(node)) {\n                            wing.set(node, currentWing);\n                            if (node.isVirtual) {\n                                var ndsinl = this._nodesInLink(node);\n                                for (var kk = 0; kk < ndsinl.length; kk++) {\n                                    var vnode = ndsinl[kk];\n                                    wing.set(vnode, currentWing);\n                                }\n                            }\n                        } else {\n                            currentWing = wing.get(node);\n                        }\n                    }\n                }\n                var wings = [];\n                for (var i = 0; i < this.layers.length; i++) {\n                    wings.push(null);\n                }\n                wing.forEach(function (node, classIndex) {\n                    if (wings[classIndex] === null) {\n                        wings[classIndex] = [];\n                    }\n                    wings[classIndex].push(node);\n                });\n                return wings;\n            },\n            _isVerticalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'up' || this.options.subtype.toLowerCase() === 'down' || this.options.subtype.toLowerCase() === 'vertical';\n            },\n            _isHorizontalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'left' || this.options.subtype.toLowerCase() === 'horizontal';\n            },\n            _isIncreasingLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'down';\n            },\n            _moveThingsAround: function () {\n                var i, l, node, layer, n, w;\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    layer.sort(this._gridPositionComparer);\n                }\n                this.minDistances = [];\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    this.minDistances[l] = [];\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        node.layerIndex = n;\n                        this.minDistances[l][n] = this.options.nodeDistance;\n                        if (n < layer.length - 1) {\n                            if (this._isVerticalLayout()) {\n                                this.minDistances[l][n] += (node.width + layer[n + 1].width) / 2;\n                            } else {\n                                this.minDistances[l][n] += (node.height + layer[n + 1].height) / 2;\n                            }\n                        }\n                    }\n                }\n                this.downNodes = new Dictionary();\n                this.upNodes = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    this.downNodes.set(node, []);\n                    this.upNodes.set(node, []);\n                }, this);\n                Utils.forEach(this.graph.links, function (link) {\n                    var origin = link.source;\n                    var dest = link.target;\n                    var down = null, up = null;\n                    if (origin.layer > dest.layer) {\n                        down = link.source;\n                        up = link.target;\n                    } else {\n                        up = link.source;\n                        down = link.target;\n                    }\n                    this.downNodes.get(up).push(down);\n                    this.upNodes.get(down).push(up);\n                }, this);\n                this.downNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                this.upNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                for (l = 0; l < this.layers.length - 1; ++l) {\n                    layer = this.layers[l];\n                    for (w = 0; w < layer.length - 1; w++) {\n                        var currentNode = layer[w];\n                        if (!currentNode.isVirtual) {\n                            continue;\n                        }\n                        var currDown = this.downNodes.get(currentNode)[0];\n                        if (!currDown.isVirtual) {\n                            continue;\n                        }\n                        for (n = w + 1; n < layer.length; ++n) {\n                            node = layer[n];\n                            if (!node.isVirtual) {\n                                continue;\n                            }\n                            var downNode = this.downNodes.get(node)[0];\n                            if (!downNode.isVirtual) {\n                                continue;\n                            }\n                            if (currDown.gridPosition > downNode.gridPosition) {\n                                var pos = currDown.gridPosition;\n                                currDown.gridPosition = downNode.gridPosition;\n                                downNode.gridPosition = pos;\n                                var i1 = currDown.layerIndex;\n                                var i2 = downNode.layerIndex;\n                                this.layers[l + 1][i1] = downNode;\n                                this.layers[l + 1][i2] = currDown;\n                                currDown.layerIndex = i2;\n                                downNode.layerIndex = i1;\n                            }\n                        }\n                    }\n                }\n                var leftClasses = this._getLeftWing();\n                var rightClasses = this._getRightWing();\n                var leftPos = this.placeLeftToRight(leftClasses);\n                var rightPos = this.placeRightToLeft(rightClasses);\n                var x = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    x.set(node, (leftPos.get(node) + rightPos.get(node)) / 2);\n                });\n                var order = new Dictionary();\n                var placed = new Dictionary();\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    var sequenceStart = -1, sequenceEnd = -1;\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        order.set(node, 0);\n                        placed.set(node, false);\n                        if (node.isVirtual) {\n                            if (sequenceStart === -1) {\n                                sequenceStart = n;\n                            } else if (sequenceStart === n - 1) {\n                                sequenceStart = n;\n                            } else {\n                                sequenceEnd = n;\n                                order.set(layer[sequenceStart], 0);\n                                if (x.get(node) - x.get(layer[sequenceStart]) === this.getMinDist(layer[sequenceStart], node)) {\n                                    placed.set(layer[sequenceStart], true);\n                                } else {\n                                    placed.set(layer[sequenceStart], false);\n                                }\n                                sequenceStart = n;\n                            }\n                        }\n                    }\n                }\n                var directions = [\n                    1,\n                    -1\n                ];\n                Utils.forEach(directions, function (d) {\n                    var start = d === 1 ? 0 : this.layers.length - 1;\n                    for (var l = start; 0 <= l && l < this.layers.length; l += d) {\n                        var layer = this.layers[l];\n                        var virtualStartIndex = this._firstVirtualNode(layer);\n                        var virtualStart = null;\n                        var sequence = null;\n                        if (virtualStartIndex !== -1) {\n                            virtualStart = layer[virtualStartIndex];\n                            sequence = [];\n                            for (i = 0; i < virtualStartIndex; i++) {\n                                sequence.push(layer[i]);\n                            }\n                        } else {\n                            virtualStart = null;\n                            sequence = layer;\n                        }\n                        if (sequence.length > 0) {\n                            this._sequencer(x, null, virtualStart, d, sequence);\n                            for (i = 0; i < sequence.length - 1; ++i) {\n                                this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                            }\n                            if (virtualStart) {\n                                this.setMinDist(sequence[sequence.length - 1], virtualStart, x.get(virtualStart) - x.get(sequence[sequence.length - 1]));\n                            }\n                        }\n                        while (virtualStart) {\n                            var virtualEnd = this.nextVirtualNode(layer, virtualStart);\n                            if (!virtualEnd) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < layer.length; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, null, d, sequence);\n                                    for (i = 0; i < sequence.length - 1; ++i) {\n                                        this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                                    }\n                                    this.setMinDist(virtualStart, sequence[0], x.get(sequence[0]) - x.get(virtualStart));\n                                }\n                            } else if (order.get(virtualStart) === d) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                var virtualEndIndex = virtualEnd.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < virtualEndIndex; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, virtualEnd, d, sequence);\n                                }\n                                placed.set(virtualStart, true);\n                            }\n                            virtualStart = virtualEnd;\n                        }\n                        this.adjustDirections(l, d, order, placed);\n                    }\n                }, this);\n                var fromLayerIndex = this._isIncreasingLayout() ? 0 : this.layers.length - 1;\n                var reachedFinalLayerIndex = function (k, ctx) {\n                    if (ctx._isIncreasingLayout()) {\n                        return k < ctx.layers.length;\n                    } else {\n                        return k >= 0;\n                    }\n                };\n                var layerIncrement = this._isIncreasingLayout() ? +1 : -1, offset = 0;\n                function maximumHeight(layer, ctx) {\n                    var height = Number.MIN_VALUE;\n                    for (var n = 0; n < layer.length; ++n) {\n                        var node = layer[n];\n                        if (ctx._isVerticalLayout()) {\n                            height = Math.max(height, node.height);\n                        } else {\n                            height = Math.max(height, node.width);\n                        }\n                    }\n                    return height;\n                }\n                for (i = fromLayerIndex; reachedFinalLayerIndex(i, this); i += layerIncrement) {\n                    layer = this.layers[i];\n                    var height = maximumHeight(layer, this);\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        if (this._isVerticalLayout()) {\n                            node.x = x.get(node);\n                            node.y = offset + height / 2;\n                        } else {\n                            node.x = offset + height / 2;\n                            node.y = x.get(node);\n                        }\n                    }\n                    offset += this.options.layerSeparation + height;\n                }\n            },\n            adjustDirections: function (l, d, order, placed) {\n                if (l + d < 0 || l + d >= this.layers.length) {\n                    return;\n                }\n                var prevBridge = null, prevBridgeTarget = null;\n                var layer = this.layers[l + d];\n                for (var n = 0; n < layer.length; ++n) {\n                    var nextBridge = layer[n];\n                    if (nextBridge.isVirtual) {\n                        var nextBridgeTarget = this.getNeighborOnLayer(nextBridge, l);\n                        if (nextBridgeTarget.isVirtual) {\n                            if (prevBridge) {\n                                var p = placed.get(prevBridgeTarget);\n                                var clayer = this.layers[l];\n                                var i1 = prevBridgeTarget.layerIndex;\n                                var i2 = nextBridgeTarget.layerIndex;\n                                for (var i = i1 + 1; i < i2; ++i) {\n                                    if (clayer[i].isVirtual) {\n                                        p = p && placed.get(clayer[i]);\n                                    }\n                                }\n                                if (p) {\n                                    order.set(prevBridge, d);\n                                    var j1 = prevBridge.layerIndex;\n                                    var j2 = nextBridge.layerIndex;\n                                    for (var j = j1 + 1; j < j2; ++j) {\n                                        if (layer[j].isVirtual) {\n                                            order.set(layer[j], d);\n                                        }\n                                    }\n                                }\n                            }\n                            prevBridge = nextBridge;\n                            prevBridgeTarget = nextBridgeTarget;\n                        }\n                    }\n                }\n            },\n            getNeighborOnLayer: function (node, l) {\n                var neighbor = this.upNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                neighbor = this.downNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                return null;\n            },\n            _sequencer: function (x, virtualStart, virtualEnd, dir, sequence) {\n                if (sequence.length === 1) {\n                    this._sequenceSingle(x, virtualStart, virtualEnd, dir, sequence[0]);\n                }\n                if (sequence.length > 1) {\n                    var r = sequence.length, t = this.intDiv(r, 2);\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(0, t));\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(t));\n                    this.combineSequences(x, virtualStart, virtualEnd, dir, sequence);\n                }\n            },\n            _sequenceSingle: function (x, virtualStart, virtualEnd, dir, node) {\n                var neighbors = dir === -1 ? this.downNodes.get(node) : this.upNodes.get(node);\n                var n = neighbors.length;\n                if (n !== 0) {\n                    if (n % 2 === 1) {\n                        x.set(node, x.get(neighbors[this.intDiv(n, 2)]));\n                    } else {\n                        x.set(node, (x.get(neighbors[this.intDiv(n, 2) - 1]) + x.get(neighbors[this.intDiv(n, 2)])) / 2);\n                    }\n                    if (virtualStart) {\n                        x.set(node, Math.max(x.get(node), x.get(virtualStart) + this.getMinDist(virtualStart, node)));\n                    }\n                    if (virtualEnd) {\n                        x.set(node, Math.min(x.get(node), x.get(virtualEnd) - this.getMinDist(node, virtualEnd)));\n                    }\n                }\n            },\n            combineSequences: function (x, virtualStart, virtualEnd, dir, sequence) {\n                var r = sequence.length, t = this.intDiv(r, 2);\n                var leftHeap = [], i, c, n, neighbors, neighbor, pair;\n                for (i = 0; i < t; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) >= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            leftHeap.push({\n                                k: x.get(neighbor) + this.getMinDist(sequence[i], sequence[t - 1]),\n                                v: 2\n                            });\n                        }\n                    }\n                    leftHeap.push({\n                        k: x.get(sequence[i]) + this.getMinDist(sequence[i], sequence[t - 1]),\n                        v: c\n                    });\n                }\n                if (virtualStart) {\n                    leftHeap.push({\n                        k: x.get(virtualStart) + this.getMinDist(virtualStart, sequence[t - 1]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                leftHeap.sort(this._positionDescendingComparer);\n                var rightHeap = [];\n                for (i = t; i < r; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) <= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            rightHeap.push({\n                                k: x.get(neighbor) - this.getMinDist(sequence[i], sequence[t]),\n                                v: 2\n                            });\n                        }\n                    }\n                    rightHeap.push({\n                        k: x.get(sequence[i]) - this.getMinDist(sequence[i], sequence[t]),\n                        v: c\n                    });\n                }\n                if (virtualEnd) {\n                    rightHeap.push({\n                        k: x.get(virtualEnd) - this.getMinDist(virtualEnd, sequence[t]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                rightHeap.sort(this._positionAscendingComparer);\n                var leftRes = 0, rightRes = 0;\n                var m = this.getMinDist(sequence[t - 1], sequence[t]);\n                while (x.get(sequence[t]) - x.get(sequence[t - 1]) < m) {\n                    if (leftRes < rightRes) {\n                        if (leftHeap.length === 0) {\n                            x.set(sequence[t - 1], x.get(sequence[t]) - m);\n                            break;\n                        } else {\n                            pair = leftHeap.shift();\n                            leftRes = leftRes + pair.v;\n                            x.set(sequence[t - 1], pair.k);\n                            x.set(sequence[t - 1], Math.max(x.get(sequence[t - 1]), x.get(sequence[t]) - m));\n                        }\n                    } else {\n                        if (rightHeap.length === 0) {\n                            x.set(sequence[t], x.get(sequence[t - 1]) + m);\n                            break;\n                        } else {\n                            pair = rightHeap.shift();\n                            rightRes = rightRes + pair.v;\n                            x.set(sequence[t], pair.k);\n                            x.set(sequence[t], Math.min(x.get(sequence[t]), x.get(sequence[t - 1]) + m));\n                        }\n                    }\n                }\n                for (i = t - 2; i >= 0; i--) {\n                    x.set(sequence[i], Math.min(x.get(sequence[i]), x.get(sequence[t - 1]) - this.getMinDist(sequence[i], sequence[t - 1])));\n                }\n                for (i = t + 1; i < r; i++) {\n                    x.set(sequence[i], Math.max(x.get(sequence[i]), x.get(sequence[t]) + this.getMinDist(sequence[i], sequence[t])));\n                }\n            },\n            placeLeft: function (node, leftPos, leftClass) {\n                var pos = Number.NEGATIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var leftSibling = this.leftSibling(v);\n                    if (leftSibling && this.nodeLeftClass.get(leftSibling) === this.nodeLeftClass.get(v)) {\n                        if (!leftPos.containsKey(leftSibling)) {\n                            this.placeLeft(leftSibling, leftPos, leftClass);\n                        }\n                        pos = Math.max(pos, leftPos.get(leftSibling) + this.getMinDist(leftSibling, v));\n                    }\n                }, this);\n                if (pos === Number.NEGATIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    leftPos.set(v, pos);\n                });\n            },\n            placeRight: function (node, rightPos, rightClass) {\n                var pos = Number.POSITIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var rightSibling = this.rightSibling(v);\n                    if (rightSibling && this.nodeRightClass.get(rightSibling) === this.nodeRightClass.get(v)) {\n                        if (!rightPos.containsKey(rightSibling)) {\n                            this.placeRight(rightSibling, rightPos, rightClass);\n                        }\n                        pos = Math.min(pos, rightPos.get(rightSibling) - this.getMinDist(v, rightSibling));\n                    }\n                }, this);\n                if (pos === Number.POSITIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    rightPos.set(v, pos);\n                });\n            },\n            leftSibling: function (node) {\n                var layer = this.layers[node.layer], layerIndex = node.layerIndex;\n                return layerIndex === 0 ? null : layer[layerIndex - 1];\n            },\n            rightSibling: function (node) {\n                var layer = this.layers[node.layer];\n                var layerIndex = node.layerIndex;\n                return layerIndex === layer.length - 1 ? null : layer[layerIndex + 1];\n            },\n            _getComposite: function (node) {\n                return node.isVirtual ? this._nodesInLink(node) : [node];\n            },\n            arrangeNodes: function () {\n                var i, l, ni, layer, node;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        node.upstreamPriority = node.upstreamLinkCount;\n                        node.downstreamPriority = node.downstreamLinkCount;\n                    }\n                }\n                var maxLayoutIterations = 2;\n                for (var it = 0; it < maxLayoutIterations; it++) {\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        this.layoutLayer(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        this.layoutLayer(true, i);\n                    }\n                }\n                var gridPos = Number.MAX_VALUE;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        gridPos = Math.min(gridPos, node.gridPosition);\n                    }\n                }\n                if (gridPos < 0) {\n                    for (l = 0; l < this.layers.length; l++) {\n                        layer = this.layers[l];\n                        for (ni = 0; ni < layer.length; ni++) {\n                            node = layer[ni];\n                            node.gridPosition = node.gridPosition - gridPos;\n                        }\n                    }\n                }\n            },\n            layoutLayer: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var sorted = [];\n                for (var n = 0; n < considered.length; n++) {\n                    sorted.push(considered[n]);\n                }\n                sorted.sort(function (n1, n2) {\n                    var n1Priority = (n1.upstreamPriority + n1.downstreamPriority) / 2;\n                    var n2Priority = (n2.upstreamPriority + n2.downstreamPriority) / 2;\n                    if (Math.abs(n1Priority - n2Priority) < 0.0001) {\n                        return 0;\n                    }\n                    if (n1Priority < n2Priority) {\n                        return 1;\n                    }\n                    return -1;\n                });\n                Utils.forEach(sorted, function (node) {\n                    var nodeGridPos = node.gridPosition;\n                    var nodeBaryCenter = this.calcBaryCenter(node);\n                    var nodePriority = (node.upstreamPriority + node.downstreamPriority) / 2;\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.0001) {\n                        return;\n                    }\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.25 + 0.0001) {\n                        return;\n                    }\n                    if (nodeGridPos < nodeBaryCenter) {\n                        while (nodeGridPos < nodeBaryCenter) {\n                            if (!this.moveRight(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    } else {\n                        while (nodeGridPos > nodeBaryCenter) {\n                            if (!this.moveLeft(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    }\n                }, this);\n                if (iconsidered > 0) {\n                    this.calcDownData(iconsidered - 1);\n                }\n                if (iconsidered < this.layers.length - 1) {\n                    this.calcUpData(iconsidered + 1);\n                }\n            },\n            moveRight: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === layer.length - 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                var rightNode = layer[index + 1];\n                var rightNodePriority = (rightNode.upstreamPriority + rightNode.downstreamPriority) / 2;\n                if (rightNode.gridPosition > node.gridPosition + 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                if (rightNodePriority > priority || Math.abs(rightNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveRight(rightNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                return false;\n            },\n            moveLeft: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === 0) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                var leftNode = layer[index - 1];\n                var leftNodePriority = (leftNode.upstreamPriority + leftNode.downstreamPriority) / 2;\n                if (leftNode.gridPosition < node.gridPosition - 1) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                if (leftNodePriority > priority || Math.abs(leftNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveLeft(leftNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                return false;\n            },\n            mapVirtualNode: function (node, link) {\n                this.nodeToLinkMap.set(node, link);\n                if (!this.linkToNodeMap.containsKey(link)) {\n                    this.linkToNodeMap.set(link, []);\n                }\n                this.linkToNodeMap.get(link).push(node);\n            },\n            _nodesInLink: function (node) {\n                return this.linkToNodeMap.get(this.nodeToLinkMap.get(node));\n            },\n            _dummify: function () {\n                this.linkToNodeMap = new Dictionary();\n                this.nodeToLinkMap = new Dictionary();\n                var layer, pos, newNode, node, r, newLink, i, l, links = this.graph.links.slice(0);\n                var layers = this.layers;\n                var addLinkBetweenLayers = function (upLayer, downLayer, link) {\n                    layers[upLayer].linksTo[downLayer] = layers[upLayer].linksTo[downLayer] || [];\n                    layers[upLayer].linksTo[downLayer].push(link);\n                };\n                for (l = 0; l < links.length; l++) {\n                    var link = links[l];\n                    var o = link.source;\n                    var d = link.target;\n                    var oLayer = o.layer;\n                    var dLayer = d.layer;\n                    var oPos = o.gridPosition;\n                    var dPos = d.gridPosition;\n                    var step = (dPos - oPos) / Math.abs(dLayer - oLayer);\n                    var p = o;\n                    if (oLayer - dLayer > 1) {\n                        for (i = oLayer - 1; i > dLayer; i--) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - dLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, newLink);\n                        link.changeSource(p);\n                        link.depthOfDumminess = oLayer - dLayer - 1;\n                    } else if (oLayer - dLayer < -1) {\n                        for (i = oLayer + 1; i < dLayer; i++) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - oLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            pos &= pos;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, link);\n                        link.changeSource(p);\n                        link.depthOfDumminess = dLayer - oLayer - 1;\n                    } else {\n                        addLinkBetweenLayers(oLayer, dLayer, link);\n                    }\n                }\n            },\n            _dedummify: function () {\n                var dedum = true;\n                while (dedum) {\n                    dedum = false;\n                    for (var l = 0; l < this.graph.links.length; l++) {\n                        var link = this.graph.links[l];\n                        if (!link.depthOfDumminess) {\n                            continue;\n                        }\n                        var points = [];\n                        points.unshift({\n                            x: link.target.x,\n                            y: link.target.y\n                        });\n                        points.unshift({\n                            x: link.source.x,\n                            y: link.source.y\n                        });\n                        var temp = link;\n                        var depthOfDumminess = link.depthOfDumminess;\n                        for (var d = 0; d < depthOfDumminess; d++) {\n                            var node = temp.source;\n                            var prevLink = node.incoming[0];\n                            points.unshift({\n                                x: prevLink.source.x,\n                                y: prevLink.source.y\n                            });\n                            temp = prevLink;\n                        }\n                        link.changeSource(temp.source);\n                        link.depthOfDumminess = 0;\n                        if (points.length > 2) {\n                            points.splice(0, 1);\n                            points.splice(points.length - 1);\n                            link.points = points;\n                        } else {\n                            link.points = [];\n                        }\n                        dedum = true;\n                        break;\n                    }\n                }\n            },\n            _optimizeCrossings: function () {\n                var moves = -1, i;\n                var maxIterations = 3;\n                var iter = 0;\n                while (moves !== 0) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    moves = 0;\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        moves += this.optimizeLayerCrossings(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        moves += this.optimizeLayerCrossings(true, i);\n                    }\n                }\n            },\n            calcUpData: function (layer) {\n                if (layer === 0) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var upLayer = new Set();\n                var temp = this.layers[layer - 1];\n                for (i = 0; i < temp.length; i++) {\n                    upLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (upLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (upLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.uBaryCenter = sum / total;\n                        node.upstreamLinkCount = total;\n                    } else {\n                        node.uBaryCenter = i;\n                        node.upstreamLinkCount = 0;\n                    }\n                }\n            },\n            calcDownData: function (layer) {\n                if (layer === this.layers.length - 1) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var downLayer = new Set();\n                var temp = this.layers[layer + 1];\n                for (i = 0; i < temp.length; i++) {\n                    downLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (downLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (downLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.dBaryCenter = sum / total;\n                        node.downstreamLinkCount = total;\n                    } else {\n                        node.dBaryCenter = i;\n                        node.downstreamLinkCount = 0;\n                    }\n                }\n            },\n            optimizeLayerCrossings: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var presorted = considered.slice(0);\n                if (down) {\n                    this.calcUpData(iconsidered);\n                } else {\n                    this.calcDownData(iconsidered);\n                }\n                var that = this;\n                considered.sort(function (n1, n2) {\n                    var n1BaryCenter = that.calcBaryCenter(n1), n2BaryCenter = that.calcBaryCenter(n2);\n                    if (Math.abs(n1BaryCenter - n2BaryCenter) < 0.0001) {\n                        if (n1.degree() === n2.degree()) {\n                            return that.compareByIndex(n1, n2);\n                        } else if (n1.degree() < n2.degree()) {\n                            return 1;\n                        }\n                        return -1;\n                    }\n                    var compareValue = (n2BaryCenter - n1BaryCenter) * 1000;\n                    if (compareValue > 0) {\n                        return -1;\n                    } else if (compareValue < 0) {\n                        return 1;\n                    }\n                    return that.compareByIndex(n1, n2);\n                });\n                var i, moves = 0;\n                for (i = 0; i < considered.length; i++) {\n                    if (considered[i] !== presorted[i]) {\n                        moves++;\n                    }\n                }\n                if (moves > 0) {\n                    var inode = 0;\n                    for (i = 0; i < considered.length; i++) {\n                        var node = considered[i];\n                        node.gridPosition = inode++;\n                    }\n                }\n                return moves;\n            },\n            _swapPairs: function () {\n                var maxIterations = this.options.layeredIterations;\n                var iter = 0;\n                while (true) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    var downwards = iter % 4 <= 1;\n                    var secondPass = iter % 4 === 1;\n                    for (var l = downwards ? 0 : this.layers.length - 1; downwards ? l <= this.layers.length - 1 : l >= 0; l += downwards ? 1 : -1) {\n                        var layer = this.layers[l];\n                        var hasSwapped = false;\n                        var calcCrossings = true;\n                        var memCrossings = 0;\n                        for (var n = 0; n < layer.length - 1; n++) {\n                            var up = 0;\n                            var down = 0;\n                            var crossBefore = 0;\n                            if (calcCrossings) {\n                                if (l !== 0) {\n                                    up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                                }\n                                if (l !== this.layers.length - 1) {\n                                    down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                                }\n                                if (downwards) {\n                                    up *= 2;\n                                } else {\n                                    down *= 2;\n                                }\n                                crossBefore = up + down;\n                            } else {\n                                crossBefore = memCrossings;\n                            }\n                            if (crossBefore === 0) {\n                                continue;\n                            }\n                            var node1 = layer[n];\n                            var node2 = layer[n + 1];\n                            var node1GridPos = node1.gridPosition;\n                            var node2GridPos = node2.gridPosition;\n                            layer[n] = node2;\n                            layer[n + 1] = node1;\n                            node1.gridPosition = node2GridPos;\n                            node2.gridPosition = node1GridPos;\n                            up = 0;\n                            if (l !== 0) {\n                                up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                            }\n                            down = 0;\n                            if (l !== this.layers.length - 1) {\n                                down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                            }\n                            if (downwards) {\n                                up *= 2;\n                            } else {\n                                down *= 2;\n                            }\n                            var crossAfter = up + down;\n                            var revert = false;\n                            if (secondPass) {\n                                revert = crossAfter >= crossBefore;\n                            } else {\n                                revert = crossAfter > crossBefore;\n                            }\n                            if (revert) {\n                                node1 = layer[n];\n                                node2 = layer[n + 1];\n                                node1GridPos = node1.gridPosition;\n                                node2GridPos = node2.gridPosition;\n                                layer[n] = node2;\n                                layer[n + 1] = node1;\n                                node1.gridPosition = node2GridPos;\n                                node2.gridPosition = node1GridPos;\n                                memCrossings = crossBefore;\n                                calcCrossings = false;\n                            } else {\n                                hasSwapped = true;\n                                calcCrossings = true;\n                            }\n                        }\n                        if (hasSwapped) {\n                            if (l !== this.layers.length - 1) {\n                                this.calcUpData(l + 1);\n                            }\n                            if (l !== 0) {\n                                this.calcDownData(l - 1);\n                            }\n                        }\n                    }\n                }\n            },\n            countLinksCrossingBetweenTwoLayers: function (ulayer, dlayer) {\n                var links = this.layers[ulayer].linksTo[dlayer];\n                var link1, link2, n11, n12, n21, n22, l1, l2;\n                var crossings = 0;\n                var length = links.length;\n                for (l1 = 0; l1 < length; l1++) {\n                    link1 = links[l1];\n                    for (l2 = l1 + 1; l2 < length; l2++) {\n                        link2 = links[l2];\n                        if (link1.target.layer === dlayer) {\n                            n11 = link1.source;\n                            n12 = link1.target;\n                        } else {\n                            n11 = link1.target;\n                            n12 = link1.source;\n                        }\n                        if (link2.target.layer === dlayer) {\n                            n21 = link2.source;\n                            n22 = link2.target;\n                        } else {\n                            n21 = link2.target;\n                            n22 = link2.source;\n                        }\n                        var n11gp = n11.gridPosition;\n                        var n12gp = n12.gridPosition;\n                        var n21gp = n21.gridPosition;\n                        var n22gp = n22.gridPosition;\n                        if ((n11gp - n21gp) * (n12gp - n22gp) < 0) {\n                            crossings++;\n                        }\n                    }\n                }\n                return crossings;\n            },\n            calcBaryCenter: function (node) {\n                var upstreamLinkCount = node.upstreamLinkCount;\n                var downstreamLinkCount = node.downstreamLinkCount;\n                var uBaryCenter = node.uBaryCenter;\n                var dBaryCenter = node.dBaryCenter;\n                if (upstreamLinkCount > 0 && downstreamLinkCount > 0) {\n                    return (uBaryCenter + dBaryCenter) / 2;\n                }\n                if (upstreamLinkCount > 0) {\n                    return uBaryCenter;\n                }\n                if (downstreamLinkCount > 0) {\n                    return dBaryCenter;\n                }\n                return 0;\n            },\n            _gridPositionComparer: function (x, y) {\n                if (x.gridPosition < y.gridPosition) {\n                    return -1;\n                }\n                if (x.gridPosition > y.gridPosition) {\n                    return 1;\n                }\n                return 0;\n            },\n            _positionAscendingComparer: function (x, y) {\n                return x.k < y.k ? -1 : x.k > y.k ? 1 : 0;\n            },\n            _positionDescendingComparer: function (x, y) {\n                return x.k < y.k ? 1 : x.k > y.k ? -1 : 0;\n            },\n            _firstVirtualNode: function (layer) {\n                for (var c = 0; c < layer.length; c++) {\n                    if (layer[c].isVirtual) {\n                        return c;\n                    }\n                }\n                return -1;\n            },\n            compareByIndex: function (o1, o2) {\n                var i1 = o1.index;\n                var i2 = o2.index;\n                if (i1 < i2) {\n                    return 1;\n                }\n                if (i1 > i2) {\n                    return -1;\n                }\n                return 0;\n            },\n            intDiv: function (numerator, denominator) {\n                return (numerator - numerator % denominator) / denominator;\n            },\n            nextVirtualNode: function (layer, node) {\n                var nodeIndex = node.layerIndex;\n                for (var i = nodeIndex + 1; i < layer.length; ++i) {\n                    if (layer[i].isVirtual) {\n                        return layer[i];\n                    }\n                }\n                return null;\n            }\n        });\n        var LayoutState = kendo.Class.extend({\n            init: function (diagram, graphOrNodes) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram given';\n                }\n                this.diagram = diagram;\n                this.nodeMap = new Dictionary();\n                this.linkMap = new Dictionary();\n                this.capture(graphOrNodes ? graphOrNodes : diagram);\n            },\n            capture: function (diagramOrGraphOrNodes) {\n                var node, nodes, shape, i, conn, link, links;\n                if (diagramOrGraphOrNodes instanceof diagram.Graph) {\n                    for (i = 0; i < diagramOrGraphOrNodes.nodes.length; i++) {\n                        node = diagramOrGraphOrNodes.nodes[i];\n                        shape = node.associatedShape;\n                        this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                    }\n                    for (i = 0; i < diagramOrGraphOrNodes.links.length; i++) {\n                        link = diagramOrGraphOrNodes.links[i];\n                        conn = link.associatedConnection;\n                        this.linkMap.set(conn.visual.id, link.points());\n                    }\n                } else if (diagramOrGraphOrNodes instanceof Array) {\n                    nodes = diagramOrGraphOrNodes;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                } else if (diagramOrGraphOrNodes.hasOwnProperty('links') && diagramOrGraphOrNodes.hasOwnProperty('nodes')) {\n                    nodes = diagramOrGraphOrNodes.nodes;\n                    links = diagramOrGraphOrNodes.links;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                    for (i = 0; i < links.length; i++) {\n                        link = links[i];\n                        conn = link.associatedConnection;\n                        if (conn) {\n                            this.linkMap.set(conn.visual.id, link.points);\n                        }\n                    }\n                } else {\n                    var shapes = this.diagram.shapes;\n                    var connections = this.diagram.connections;\n                    for (i = 0; i < shapes.length; i++) {\n                        shape = shapes[i];\n                        this.nodeMap.set(shape.visual.id, shape.bounds());\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        conn = connections[i];\n                        this.linkMap.set(conn.visual.id, conn.points());\n                    }\n                }\n            }\n        });\n        deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            SpringLayout: SpringLayout,\n            TreeLayout: TreeLayout,\n            GraphAdapter: DiagramToHyperTreeAdapter,\n            LayeredLayout: LayeredLayout,\n            LayoutBase: LayoutBase,\n            LayoutState: LayoutState\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/dom', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.toolbar',\n        'kendo.editable',\n        'kendo.window',\n        'kendo.dropdownlist',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var dataviz = kendo.dataviz, draw = kendo.drawing, geom = kendo.geometry, diagram = dataviz.diagram, Widget = kendo.ui.Widget, Class = kendo.Class, proxy = $.proxy, deepExtend = kendo.deepExtend, outerWidth = kendo._outerWidth, outerHeight = kendo._outerHeight, extend = $.extend, HierarchicalDataSource = kendo.data.HierarchicalDataSource, Canvas = diagram.Canvas, Group = diagram.Group, Rectangle = diagram.Rectangle, Circle = diagram.Circle, CompositeTransform = diagram.CompositeTransform, Rect = diagram.Rect, Path = diagram.Path, DeleteShapeUnit = diagram.DeleteShapeUnit, DeleteConnectionUnit = diagram.DeleteConnectionUnit, TextBlock = diagram.TextBlock, Image = diagram.Image, Point = diagram.Point, Intersect = diagram.Intersect, ConnectionEditAdorner = diagram.ConnectionEditAdorner, UndoRedoService = diagram.UndoRedoService, ToolService = diagram.ToolService, Selector = diagram.Selector, ResizingAdorner = diagram.ResizingAdorner, ConnectorsAdorner = diagram.ConnectorsAdorner, Cursors = diagram.Cursors, Utils = diagram.Utils, Observable = kendo.Observable, ToBackUnit = diagram.ToBackUnit, ToFrontUnit = diagram.ToFrontUnit, PolylineRouter = diagram.PolylineRouter, CascadingRouter = diagram.CascadingRouter, isUndefined = Utils.isUndefined, isDefined = Utils.isDefined, defined = draw.util.defined, isArray = $.isArray, isFunction = kendo.isFunction, isString = Utils.isString, isPlainObject = $.isPlainObject, math = Math;\n        var NS = '.kendoDiagram', CASCADING = 'cascading', ITEMBOUNDSCHANGE = 'itemBoundsChange', CHANGE = 'change', CLICK = 'click', DRAG = 'drag', DRAG_END = 'dragEnd', DRAG_START = 'dragStart', MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ERROR = 'error', AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', MAXINT = 9007199254740992, SELECT = 'select', ITEMROTATE = 'itemRotate', PAN = 'pan', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', NONE = 'none', DEFAULT_CANVAS_WIDTH = 600, DEFAULT_CANVAS_HEIGHT = 600, DEFAULT_SHAPE_TYPE = 'rectangle', DEFAULT_SHAPE_WIDTH = 100, DEFAULT_SHAPE_HEIGHT = 100, DEFAULT_SHAPE_MINWIDTH = 20, DEFAULT_SHAPE_MINHEIGHT = 20, DEFAULT_SHAPE_POSITION = 0, DEFAULT_CONNECTION_BACKGROUND = 'Yellow', MAX_VALUE = Number.MAX_VALUE, MIN_VALUE = -Number.MAX_VALUE, ABSOLUTE = 'absolute', TRANSFORMED = 'transformed', ROTATED = 'rotated', TRANSPARENT = 'transparent', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y', MOUSEWHEEL_NS = 'DOMMouseScroll' + NS + ' mousewheel' + NS, MOBILE_ZOOM_RATE = 0.05, MOBILE_PAN_DISTANCE = 5, BUTTON_TEMPLATE = '<a class=\"k-button k-button-icontext #=className#\" href=\"\\\\#\"><span class=\"#=iconClass# #=imageClass#\"></span>#=text#</a>', CONNECTION_CONTENT_OFFSET = 5;\n        diagram.DefaultConnectors = [\n            { name: TOP },\n            { name: BOTTOM },\n            { name: LEFT },\n            { name: RIGHT },\n            {\n                name: AUTO,\n                position: function (shape) {\n                    return shape.getPosition('center');\n                }\n            }\n        ];\n        var defaultButtons = {\n            cancel: {\n                text: 'Cancel',\n                imageClass: 'k-i-cancel',\n                className: 'k-diagram-cancel',\n                iconClass: 'k-icon'\n            },\n            update: {\n                text: 'Update',\n                imageClass: 'k-i-checkmark',\n                className: 'k-diagram-update',\n                iconClass: 'k-icon'\n            }\n        };\n        diagram.shapeDefaults = function (extra) {\n            var defaults = {\n                type: DEFAULT_SHAPE_TYPE,\n                path: '',\n                autoSize: true,\n                visual: null,\n                x: DEFAULT_SHAPE_POSITION,\n                y: DEFAULT_SHAPE_POSITION,\n                minWidth: DEFAULT_SHAPE_MINWIDTH,\n                minHeight: DEFAULT_SHAPE_MINHEIGHT,\n                width: DEFAULT_SHAPE_WIDTH,\n                height: DEFAULT_SHAPE_HEIGHT,\n                hover: {},\n                editable: {\n                    connect: true,\n                    tools: []\n                },\n                connectors: diagram.DefaultConnectors,\n                rotation: { angle: 0 }\n            };\n            Utils.simpleExtend(defaults, extra);\n            return defaults;\n        };\n        function mwDelta(e) {\n            var origEvent = e.originalEvent, delta = 0;\n            if (origEvent.wheelDelta) {\n                delta = -origEvent.wheelDelta / 40;\n                delta = delta > 0 ? math.ceil(delta) : math.floor(delta);\n            } else if (origEvent.detail) {\n                delta = origEvent.detail;\n            }\n            return delta;\n        }\n        function isAutoConnector(connector) {\n            return connector.options.name.toLowerCase() === AUTO.toLowerCase();\n        }\n        function closestConnector(point, connectors) {\n            var minimumDistance = MAXINT, resCtr, connector;\n            for (var i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                if (!isAutoConnector(connector)) {\n                    var dist = point.distanceTo(connector.position());\n                    if (dist < minimumDistance) {\n                        minimumDistance = dist;\n                        resCtr = connector;\n                    }\n                }\n            }\n            return resCtr;\n        }\n        function indicesOfItems(group, visuals) {\n            var i, indices = [], visual;\n            var children = group.drawingContainer().children;\n            var length = children.length;\n            for (i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                for (var j = 0; j < length; j++) {\n                    if (children[j] == visual.drawingContainer()) {\n                        indices.push(j);\n                        break;\n                    }\n                }\n            }\n            return indices;\n        }\n        var DiagramElement = Observable.extend({\n            init: function (options) {\n                var that = this;\n                that.dataItem = (options || {}).dataItem;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({ id: diagram.randomId() }, that.options, options);\n                that.isSelected = false;\n                that.visual = new Group({\n                    id: that.options.id,\n                    autoSize: that.options.autoSize\n                });\n                that.id = that.options.id;\n                that._template();\n            },\n            options: {\n                hover: {},\n                cursor: Cursors.grip,\n                content: { align: 'center middle' },\n                selectable: true,\n                serializable: true,\n                enable: true\n            },\n            _getCursor: function (point) {\n                if (this.adorner) {\n                    return this.adorner._getCursor(point);\n                }\n                return this.options.cursor;\n            },\n            visible: function (value) {\n                if (isUndefined(value)) {\n                    return this.visual.visible();\n                } else {\n                    this.visual.visible(value);\n                }\n            },\n            bounds: function () {\n            },\n            refresh: function () {\n                this.visual.redraw();\n            },\n            position: function (point) {\n                this.options.x = point.x;\n                this.options.y = point.y;\n                this.visual.position(point);\n            },\n            toString: function () {\n                return this.options.id;\n            },\n            serialize: function () {\n                var json = deepExtend({}, { options: this.options });\n                if (this.dataItem) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                return json;\n            },\n            _content: function (content) {\n                if (content !== undefined) {\n                    var options = this.options;\n                    if (diagram.Utils.isString(content)) {\n                        options.content.text = content;\n                    } else {\n                        deepExtend(options.content, content);\n                    }\n                    var contentOptions = options.content;\n                    var contentVisual = this._contentVisual;\n                    if (!contentVisual) {\n                        this._createContentVisual(contentOptions);\n                    } else {\n                        this._updateContentVisual(contentOptions);\n                    }\n                }\n                return this.options.content.text;\n            },\n            _createContentVisual: function (options) {\n                if (options.text) {\n                    this._contentVisual = new TextBlock(options);\n                    this._contentVisual._includeInBBox = false;\n                    this.visual.append(this._contentVisual);\n                }\n            },\n            _updateContentVisual: function (options) {\n                this._contentVisual.redraw(options);\n            },\n            _hitTest: function (point) {\n                var bounds = this.bounds();\n                return this.visible() && bounds.contains(point) && this.options.enable;\n            },\n            _template: function () {\n                var that = this;\n                if (that.options.content.template) {\n                    var data = that.dataItem || {}, elementTemplate = kendo.template(that.options.content.template, { paramName: 'dataItem' });\n                    that.options.content.text = elementTemplate(data);\n                }\n            },\n            _canSelect: function () {\n                return this.options.selectable !== false;\n            },\n            toJSON: function () {\n                return { id: this.options.id };\n            }\n        });\n        var Connector = Class.extend({\n            init: function (shape, options) {\n                this.options = deepExtend({}, this.options, options);\n                this.connections = [];\n                this.shape = shape;\n            },\n            options: {\n                width: 7,\n                height: 7,\n                fill: { color: DEFAULT_CONNECTION_BACKGROUND },\n                hover: {}\n            },\n            position: function () {\n                if (this.options.position) {\n                    return this.options.position(this.shape);\n                } else {\n                    return this.shape.getPosition(this.options.name);\n                }\n            },\n            toJSON: function () {\n                return {\n                    shapeId: this.shape.toString(),\n                    connector: this.options.name\n                };\n            }\n        });\n        Connector.parse = function (diagram, str) {\n            var tempStr = str.split(':'), id = tempStr[0], name = tempStr[1] || AUTO;\n            for (var i = 0; i < diagram.shapes.length; i++) {\n                var shape = diagram.shapes[i];\n                if (shape.options.id == id) {\n                    return shape.getConnector(name.trim());\n                }\n            }\n        };\n        var Shape = DiagramElement.extend({\n            init: function (options, diagram) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.diagram = diagram;\n                this.updateOptionsFromModel();\n                options = that.options;\n                that.connectors = [];\n                that.type = options.type;\n                that.createShapeVisual();\n                that.updateBounds();\n                that.content(that.content());\n                that._createConnectors();\n            },\n            options: diagram.shapeDefaults(),\n            _setOptionsFromModel: function (model) {\n                var modelOptions = filterShapeDataItem(model || this.dataItem);\n                this.options = deepExtend({}, this.options, modelOptions);\n                this.redrawVisual();\n            },\n            updateOptionsFromModel: function (model, field) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var modelOptions = filterShapeDataItem(model || this.dataItem);\n                    if (model && field) {\n                        if (!dataviz.inArray(field, [\n                                'x',\n                                'y',\n                                'width',\n                                'height'\n                            ])) {\n                            if (this.options.visual) {\n                                this._redrawVisual();\n                            } else if (modelOptions.type) {\n                                this.options = deepExtend({}, this.options, modelOptions);\n                                this._redrawVisual();\n                            }\n                            if (this.options.content) {\n                                this._template();\n                                this.content(this.options.content);\n                            }\n                        } else {\n                            var bounds = this.bounds();\n                            bounds[field] = model[field];\n                            this.bounds(bounds);\n                        }\n                    } else {\n                        this.options = deepExtend({}, this.options, modelOptions);\n                    }\n                }\n            },\n            _redrawVisual: function () {\n                this.visual.clear();\n                this._contentVisual = null;\n                this.options.dataItem = this.dataItem;\n                this.createShapeVisual();\n                this.updateBounds();\n            },\n            redrawVisual: function () {\n                this._redrawVisual();\n                if (this.options.content) {\n                    this._template();\n                    this.content(this.options.content);\n                }\n            },\n            updateModel: function (syncChanges) {\n                var diagram = this.diagram;\n                if (diagram && diagram._isEditable) {\n                    var bounds = this._bounds;\n                    var model = this.dataItem;\n                    if (model) {\n                        diagram._suspendModelRefresh();\n                        if (defined(model.x) && bounds.x !== model.x) {\n                            model.set('x', bounds.x);\n                        }\n                        if (defined(model.y) && bounds.y !== model.y) {\n                            model.set('y', bounds.y);\n                        }\n                        if (defined(model.width) && bounds.width !== model.width) {\n                            model.set('width', bounds.width);\n                        }\n                        if (defined(model.height) && bounds.height !== model.height) {\n                            model.set('height', bounds.height);\n                        }\n                        this.dataItem = model;\n                        diagram._resumeModelRefresh();\n                        if (syncChanges) {\n                            diagram._syncShapeChanges();\n                        }\n                    }\n                }\n            },\n            updateBounds: function () {\n                var bounds = this.visual._measure(true);\n                var options = this.options;\n                this.bounds(new Rect(options.x, options.y, bounds.width, bounds.height));\n                this._rotate();\n                this._alignContent();\n            },\n            content: function (content) {\n                var result = this._content(content);\n                this._alignContent();\n                return result;\n            },\n            _alignContent: function () {\n                var contentOptions = this.options.content || {};\n                var contentVisual = this._contentVisual;\n                if (contentVisual && contentOptions.align) {\n                    var containerRect = this.visual._measure();\n                    var aligner = new diagram.RectAlign(containerRect);\n                    var contentBounds = contentVisual.drawingElement.bbox(null);\n                    var contentRect = new Rect(0, 0, contentBounds.width(), contentBounds.height());\n                    var alignedBounds = aligner.align(contentRect, contentOptions.align);\n                    contentVisual.position(alignedBounds.topLeft());\n                }\n            },\n            _createConnectors: function () {\n                var options = this.options, length = options.connectors.length, connectorDefaults = options.connectorDefaults, connector, i;\n                for (i = 0; i < length; i++) {\n                    connector = new Connector(this, deepExtend({}, connectorDefaults, options.connectors[i]));\n                    this.connectors.push(connector);\n                }\n            },\n            bounds: function (value) {\n                var bounds;\n                if (value) {\n                    if (isString(value)) {\n                        switch (value) {\n                        case TRANSFORMED:\n                            bounds = this._transformedBounds();\n                            break;\n                        case ABSOLUTE:\n                            bounds = this._transformedBounds();\n                            var pan = this.diagram._pan;\n                            bounds.x += pan.x;\n                            bounds.y += pan.y;\n                            break;\n                        case ROTATED:\n                            bounds = this._rotatedBounds();\n                            break;\n                        default:\n                            bounds = this._bounds;\n                        }\n                    } else {\n                        this._setBounds(value);\n                        this._triggerBoundsChange();\n                        if (!(this.diagram && this.diagram._layouting)) {\n                            this.refreshConnections();\n                        }\n                    }\n                } else {\n                    bounds = this._bounds;\n                }\n                return bounds;\n            },\n            _setBounds: function (rect) {\n                var options = this.options;\n                var topLeft = rect.topLeft();\n                var x = options.x = topLeft.x;\n                var y = options.y = topLeft.y;\n                var width = options.width = math.max(rect.width, options.minWidth);\n                var height = options.height = math.max(rect.height, options.minHeight);\n                this._bounds = new Rect(x, y, width, height);\n                this.visual.redraw({\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            },\n            position: function (point) {\n                if (point) {\n                    this.bounds(new Rect(point.x, point.y, this._bounds.width, this._bounds.height));\n                } else {\n                    return this._bounds.topLeft();\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                json.options.id = diagram.randomId();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Shape(json.options);\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (isUndefined(value)) {\n                    value = true;\n                }\n                if (this._canSelect()) {\n                    if (this.isSelected != value) {\n                        selected = [];\n                        deselected = [];\n                        this.isSelected = value;\n                        if (this.isSelected) {\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            Utils.remove(diagram._selectedItems, this);\n                            deselected.push(this);\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            rotate: function (angle, center, undoable) {\n                var rotate = this.visual.rotate();\n                if (angle !== undefined) {\n                    if (undoable !== false && this.diagram && this.diagram.undoRedoService && angle !== rotate.angle) {\n                        this.diagram.undoRedoService.add(new diagram.RotateUnit(this.diagram._resizingAdorner, [this], [rotate.angle]), false);\n                    }\n                    var b = this.bounds(), sc = new Point(b.width / 2, b.height / 2), deltaAngle, newPosition;\n                    if (center) {\n                        deltaAngle = angle - rotate.angle;\n                        newPosition = b.center().rotate(center, 360 - deltaAngle).minus(sc);\n                        this._rotationOffset = this._rotationOffset.plus(newPosition.minus(b.topLeft()));\n                        this.position(newPosition);\n                    }\n                    this.visual.rotate(angle, sc);\n                    this.options.rotation.angle = angle;\n                    if (this.diagram && this.diagram._connectorsAdorner) {\n                        this.diagram._connectorsAdorner.refresh();\n                    }\n                    this.refreshConnections();\n                    if (this.diagram) {\n                        this.diagram.trigger(ITEMROTATE, { item: this });\n                    }\n                }\n                return rotate;\n            },\n            connections: function (type) {\n                var result = [], i, j, con, cons, ctr;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    cons = ctr.connections;\n                    for (j = 0, cons; j < cons.length; j++) {\n                        con = cons[j];\n                        if (type == 'out') {\n                            var source = con.source();\n                            if (source.shape && source.shape == this) {\n                                result.push(con);\n                            }\n                        } else if (type == 'in') {\n                            var target = con.target();\n                            if (target.shape && target.shape == this) {\n                                result.push(con);\n                            }\n                        } else {\n                            result.push(con);\n                        }\n                    }\n                }\n                return result;\n            },\n            refreshConnections: function () {\n                $.each(this.connections(), function () {\n                    this.refresh();\n                });\n            },\n            getConnector: function (nameOrPoint) {\n                var i, ctr;\n                if (isString(nameOrPoint)) {\n                    nameOrPoint = nameOrPoint.toLocaleLowerCase();\n                    for (i = 0; i < this.connectors.length; i++) {\n                        ctr = this.connectors[i];\n                        if (ctr.options.name.toLocaleLowerCase() == nameOrPoint) {\n                            return ctr;\n                        }\n                    }\n                } else if (nameOrPoint instanceof Point) {\n                    return closestConnector(nameOrPoint, this.connectors);\n                } else {\n                    return this.connectors.length ? this.connectors[0] : null;\n                }\n            },\n            getPosition: function (side) {\n                var b = this.bounds(), fnName = side.charAt(0).toLowerCase() + side.slice(1);\n                if (isFunction(b[fnName])) {\n                    return this._transformPoint(b[fnName]());\n                }\n                return b.center();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var shapeOptions = this.options;\n                    var boundsChange;\n                    this.shapeVisual.redraw(this._visualOptions(options));\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.bounds(new Rect(shapeOptions.x, shapeOptions.y, shapeOptions.width, shapeOptions.height));\n                        boundsChange = true;\n                    }\n                    if (options.connectors) {\n                        shapeOptions.connectors = options.connectors;\n                        this._updateConnectors();\n                    }\n                    shapeOptions = deepExtend(shapeOptions, options);\n                    if (options.rotation || boundsChange) {\n                        this._rotate();\n                    }\n                    if (shapeOptions.content) {\n                        this.content(shapeOptions.content);\n                    }\n                }\n            },\n            _updateConnectors: function () {\n                var connections = this.connections();\n                this.connectors = [];\n                this._createConnectors();\n                var connection;\n                var source;\n                var target;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connection = connections[idx];\n                    source = connection.source();\n                    target = connection.target();\n                    if (source.shape && source.shape === this) {\n                        connection.source(this.getConnector(source.options.name) || null);\n                    } else if (target.shape && target.shape === this) {\n                        connection.target(this.getConnector(target.options.name) || null);\n                    }\n                    connection.updateModel();\n                }\n            },\n            _diffNumericOptions: diagram.diffNumericOptions,\n            _visualOptions: function (options) {\n                return {\n                    data: options.path,\n                    source: options.source,\n                    hover: options.hover,\n                    fill: options.fill,\n                    stroke: options.stroke\n                };\n            },\n            _triggerBoundsChange: function () {\n                if (this.diagram) {\n                    this.diagram.trigger(ITEMBOUNDSCHANGE, {\n                        item: this,\n                        bounds: this._bounds.clone()\n                    });\n                }\n            },\n            _transformPoint: function (point) {\n                var rotate = this.rotate(), bounds = this.bounds(), tl = bounds.topLeft();\n                if (rotate.angle) {\n                    point.rotate(rotate.center().plus(tl), 360 - rotate.angle);\n                }\n                return point;\n            },\n            _transformedBounds: function () {\n                var bounds = this.bounds(), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(this.diagram.modelToView(tl), this.diagram.modelToView(br));\n            },\n            _rotatedBounds: function () {\n                var bounds = this.bounds().rotatedBounds(this.rotate().angle), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(tl, br);\n            },\n            _rotate: function () {\n                var rotation = this.options.rotation;\n                if (rotation && rotation.angle) {\n                    this.rotate(rotation.angle);\n                }\n                this._rotationOffset = new Point();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.shapeVisual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n                if (options.editable && options.editable.connect) {\n                    this.diagram._showConnectors(this, value);\n                }\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var bounds = this.bounds(), rotatedPoint, angle = this.rotate().angle;\n                    if (value.isEmpty && !value.isEmpty()) {\n                        return Intersect.rects(value, bounds, angle ? angle : 0);\n                    } else {\n                        rotatedPoint = value.clone().rotate(bounds.center(), angle);\n                        if (bounds.contains(rotatedPoint)) {\n                            return this;\n                        }\n                    }\n                }\n            },\n            toJSON: function () {\n                return { shapeId: this.options.id };\n            },\n            createShapeVisual: function () {\n                var options = this.options;\n                var visualOptions = this._visualOptions(options);\n                var visualTemplate = options.visual;\n                var type = (options.type + '').toLocaleLowerCase();\n                var shapeVisual;\n                visualOptions.width = options.width;\n                visualOptions.height = options.height;\n                if (isFunction(visualTemplate)) {\n                    shapeVisual = visualTemplate.call(this, options);\n                } else if (visualOptions.data) {\n                    shapeVisual = new Path(visualOptions);\n                    translateToOrigin(shapeVisual);\n                } else if (type == 'rectangle') {\n                    shapeVisual = new Rectangle(visualOptions);\n                } else if (type == 'circle') {\n                    shapeVisual = new Circle(visualOptions);\n                } else if (type == 'text') {\n                    shapeVisual = new TextBlock(visualOptions);\n                } else if (type == 'image') {\n                    shapeVisual = new Image(visualOptions);\n                } else {\n                    shapeVisual = new Path(visualOptions);\n                }\n                this.shapeVisual = shapeVisual;\n                this.visual.append(this.shapeVisual);\n            }\n        });\n        var Connection = DiagramElement.extend({\n            init: function (from, to, options) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.updateOptionsFromModel();\n                this._initRouter();\n                that.path = new diagram.Polyline(that.options);\n                that.path.fill(TRANSPARENT);\n                that.visual.append(that.path);\n                that._sourcePoint = that._targetPoint = new Point();\n                that._setSource(from);\n                that._setTarget(to);\n                that.content(that.options.content);\n                that.definers = [];\n                if (defined(options) && options.points) {\n                    that.points(options.points);\n                }\n            },\n            options: {\n                hover: { stroke: {} },\n                startCap: NONE,\n                endCap: NONE,\n                points: [],\n                selectable: true,\n                fromConnector: AUTO,\n                toConnector: AUTO\n            },\n            _setOptionsFromModel: function (model) {\n                this.updateOptionsFromModel(model || this.dataItem);\n            },\n            updateOptionsFromModel: function (model) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var dataMap = this.diagram._dataMap;\n                    var options = filterConnectionDataItem(model || this.dataItem);\n                    if (model) {\n                        if (defined(options.from)) {\n                            var from = dataMap[options.from];\n                            if (from && defined(options.fromConnector)) {\n                                from = from.getConnector(options.fromConnector);\n                            }\n                            this.source(from);\n                        } else if (defined(options.fromX) && defined(options.fromY)) {\n                            this.source(new Point(options.fromX, options.fromY));\n                        }\n                        if (defined(options.to)) {\n                            var to = dataMap[options.to];\n                            if (to && defined(options.toConnector)) {\n                                to = to.getConnector(options.toConnector);\n                            }\n                            this.target(to);\n                        } else if (defined(options.toX) && defined(options.toY)) {\n                            this.target(new Point(options.toX, options.toY));\n                        }\n                        if (defined(options.type) && this.type() !== options.type) {\n                            this.points([]);\n                            this.type(options.type);\n                        }\n                        this.dataItem = model;\n                        this._template();\n                        this.redraw(this.options);\n                    } else {\n                        this.options = deepExtend({}, options, this.options);\n                    }\n                }\n            },\n            updateModel: function (syncChanges) {\n                if (this.diagram && this.diagram._isEditable) {\n                    if (this.diagram.connectionsDataSource) {\n                        var model = this.diagram.connectionsDataSource.getByUid(this.dataItem.uid);\n                        if (model) {\n                            this.diagram._suspendModelRefresh();\n                            if (defined(this.options.fromX) && this.options.fromX !== null) {\n                                clearField('from', model);\n                                clearField('fromConnector', model);\n                                model.set('fromX', this.options.fromX);\n                                model.set('fromY', this.options.fromY);\n                            } else {\n                                model.set('from', this.options.from);\n                                if (defined(model.fromConnector)) {\n                                    model.set('fromConnector', this.sourceConnector ? this.sourceConnector.options.name : null);\n                                }\n                                clearField('fromX', model);\n                                clearField('fromY', model);\n                            }\n                            if (defined(this.options.toX) && this.options.toX !== null) {\n                                clearField('to', model);\n                                clearField('toConnector', model);\n                                model.set('toX', this.options.toX);\n                                model.set('toY', this.options.toY);\n                            } else {\n                                model.set('to', this.options.to);\n                                if (defined(model.toConnector)) {\n                                    model.set('toConnector', this.targetConnector ? this.targetConnector.options.name : null);\n                                }\n                                clearField('toX', model);\n                                clearField('toY', model);\n                            }\n                            if (defined(this.options.type) && defined(model.type)) {\n                                model.set('type', this.options.type);\n                            }\n                            this.dataItem = model;\n                            this.diagram._resumeModelRefresh();\n                            if (syncChanges) {\n                                this.diagram._syncConnectionChanges();\n                            }\n                        }\n                    }\n                }\n            },\n            sourcePoint: function () {\n                return this._resolvedSourceConnector ? this._resolvedSourceConnector.position() : this._sourcePoint;\n            },\n            _setSource: function (source) {\n                var shapeSource = source instanceof Shape;\n                var defaultConnector = this.options.fromConnector || AUTO;\n                var dataItem;\n                if (shapeSource && !source.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (source !== undefined) {\n                    this.from = source;\n                }\n                this._removeFromSourceConnector();\n                if (source === null) {\n                    if (this.sourceConnector) {\n                        this._sourcePoint = (this._resolvedSourceConnector || this.sourceConnector).position();\n                        this._clearSourceConnector();\n                        this._setFromOptions(null, this._sourcePoint);\n                    }\n                } else if (source instanceof Connector) {\n                    dataItem = source.shape.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source;\n                    this.sourceConnector.connections.push(this);\n                } else if (source instanceof Point) {\n                    this._setFromOptions(null, source);\n                    this._sourcePoint = source;\n                    if (this.sourceConnector) {\n                        this._clearSourceConnector();\n                    }\n                } else if (shapeSource) {\n                    dataItem = source.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source.getConnector(defaultConnector);\n                    this.sourceConnector.connections.push(this);\n                }\n            },\n            source: function (source, undoable) {\n                if (isDefined(source)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, source));\n                    }\n                    this._setSource(source);\n                    this.refresh();\n                }\n                return this.sourceConnector ? this.sourceConnector : this._sourcePoint;\n            },\n            _setFromOptions: function (from, fromPoint) {\n                this.options.from = from;\n                if (fromPoint) {\n                    this.options.fromX = fromPoint.x;\n                    this.options.fromY = fromPoint.y;\n                } else {\n                    this.options.fromX = null;\n                    this.options.fromY = null;\n                }\n            },\n            sourceDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.left = null;\n                        this._sourceDefiner = value;\n                        this.source(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._sourceDefiner) {\n                        this._sourceDefiner = new diagram.PathDefiner(this.sourcePoint(), null, null);\n                    }\n                    return this._sourceDefiner;\n                }\n            },\n            targetPoint: function () {\n                return this._resolvedTargetConnector ? this._resolvedTargetConnector.position() : this._targetPoint;\n            },\n            _setTarget: function (target) {\n                var shapeTarget = target instanceof Shape;\n                var defaultConnector = this.options.toConnector || AUTO;\n                var dataItem;\n                if (shapeTarget && !target.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (target !== undefined) {\n                    this.to = target;\n                }\n                this._removeFromTargetConnector();\n                if (target === null) {\n                    if (this.targetConnector) {\n                        this._targetPoint = (this._resolvedTargetConnector || this.targetConnector).position();\n                        this._clearTargetConnector();\n                        this._setToOptions(null, this._targetPoint);\n                    }\n                } else if (target instanceof Connector) {\n                    dataItem = target.shape.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target;\n                    this.targetConnector.connections.push(this);\n                } else if (target instanceof Point) {\n                    this._setToOptions(null, target);\n                    this._targetPoint = target;\n                    if (this.targetConnector) {\n                        this._clearTargetConnector();\n                    }\n                } else if (shapeTarget) {\n                    dataItem = target.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target.getConnector(defaultConnector);\n                    this.targetConnector.connections.push(this);\n                }\n            },\n            target: function (target, undoable) {\n                if (isDefined(target)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, undefined, target));\n                    }\n                    this._setTarget(target);\n                    this.refresh();\n                }\n                return this.targetConnector ? this.targetConnector : this._targetPoint;\n            },\n            _setToOptions: function (to, toPoint) {\n                this.options.to = to;\n                if (toPoint) {\n                    this.options.toX = toPoint.x;\n                    this.options.toY = toPoint.y;\n                } else {\n                    this.options.toX = null;\n                    this.options.toY = null;\n                }\n            },\n            targetDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.right = null;\n                        this._targetDefiner = value;\n                        this.target(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._targetDefiner) {\n                        this._targetDefiner = new diagram.PathDefiner(this.targetPoint(), null, null);\n                    }\n                    return this._targetDefiner;\n                }\n            },\n            _updateConnectors: function () {\n                this._updateConnector(this.source(), 'source');\n                this._updateConnector(this.target(), 'target');\n            },\n            _updateConnector: function (instance, name) {\n                var that = this;\n                var diagram = that.diagram;\n                if (instance instanceof Connector && !diagram.getShapeById(instance.shape.id)) {\n                    var dataItem = instance.shape.dataItem;\n                    var connectorName = instance.options.name;\n                    var setNewTarget = function () {\n                        var shape = diagram._dataMap[dataItem.id];\n                        instance = shape.getConnector(connectorName);\n                        that[name](instance, false);\n                        that.updateModel();\n                    };\n                    if (diagram._dataMap[dataItem.id]) {\n                        setNewTarget();\n                    } else {\n                        var inactiveItem = diagram._inactiveShapeItems.getByUid(dataItem.uid);\n                        if (inactiveItem) {\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(setNewTarget));\n                        }\n                    }\n                } else {\n                    that[name](instance, false);\n                }\n            },\n            content: function (content) {\n                var result = this._content(content);\n                if (defined(content)) {\n                    this._alignContent();\n                }\n                return result;\n            },\n            _createContentVisual: function (options) {\n                var visual;\n                if (isFunction(options.visual)) {\n                    visual = options.visual.call(this, options);\n                } else if (options.text) {\n                    visual = new TextBlock(options);\n                }\n                if (visual) {\n                    this._contentVisual = visual;\n                    visual._includeInBBox = false;\n                    this.visual.append(visual);\n                }\n                return visual;\n            },\n            _updateContentVisual: function (options) {\n                if (isFunction(options.visual)) {\n                    this.visual.remove(this._contentVisual);\n                    this._createContentVisual(options);\n                } else {\n                    this._contentVisual.redraw(options);\n                }\n            },\n            _alignContent: function () {\n                if (this._contentVisual) {\n                    var offset = CONNECTION_CONTENT_OFFSET;\n                    var points = this.allPoints();\n                    var endIdx = math.floor(points.length / 2);\n                    var startIdx = endIdx - 1;\n                    while (startIdx > 0 && points[startIdx].equals(points[endIdx])) {\n                        startIdx--;\n                        endIdx++;\n                    }\n                    var endPoint = points[endIdx];\n                    var startPoint = points[startIdx];\n                    var boundingBox = this._contentVisual._measure();\n                    var width = boundingBox.width;\n                    var height = boundingBox.height;\n                    var alignToPath = points.length % 2 === 0;\n                    var distance = startPoint.distanceTo(endPoint);\n                    if (alignToPath && points.length > 2 && distance > 0 && (startPoint.y === endPoint.y && distance < width || startPoint.x === endPoint.x && distance < height)) {\n                        alignToPath = false;\n                        offset = 0;\n                    }\n                    var point;\n                    if (alignToPath) {\n                        var angle = draw.util.deg(math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x));\n                        point = new Point((endPoint.x - startPoint.x) / 2 + startPoint.x, (endPoint.y - startPoint.y) / 2 + startPoint.y);\n                        if (math.abs(angle) === 90) {\n                            point.x += offset;\n                            point.y -= height / 2;\n                        } else if (angle % 180 === 0) {\n                            point.x -= width / 2;\n                            point.y -= height + offset;\n                        } else if (angle < -90 || 0 < angle && angle < 90) {\n                            point.y -= height;\n                        } else if (angle < 0 || angle > 90) {\n                            point.x -= width;\n                            point.y -= height;\n                        }\n                    } else {\n                        var midIdx = math.floor(points.length / 2);\n                        point = points[midIdx].clone();\n                        startPoint = points[midIdx - 1];\n                        endPoint = points[midIdx + 1];\n                        var offsetX = startPoint.x <= point.x && endPoint.x <= point.x ? offset : -boundingBox.width - offset;\n                        var offsetY = startPoint.y <= point.y && endPoint.y <= point.y ? offset : -boundingBox.height - offset;\n                        point.x += offsetX;\n                        point.y += offsetY;\n                    }\n                    this._contentVisual.position(point);\n                }\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (this._canSelect()) {\n                    if (this.isSelected !== value) {\n                        this.isSelected = value;\n                        selected = [];\n                        deselected = [];\n                        if (this.isSelected) {\n                            this.adorner = new ConnectionEditAdorner(this, this.options.selection);\n                            diagram._adorn(this.adorner, true);\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            if (this.adorner) {\n                                diagram._adorn(this.adorner, false);\n                                Utils.remove(diagram._selectedItems, this);\n                                this.adorner = undefined;\n                                deselected.push(this);\n                            }\n                        }\n                        if (this.adorner) {\n                            this.adorner.refresh();\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value && !isString(value)) {\n                    this._bounds = value;\n                } else {\n                    return this._bounds;\n                }\n            },\n            type: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (value !== options.type) {\n                        options.type = value;\n                        this._initRouter();\n                        this.refresh();\n                    }\n                } else {\n                    return options.type;\n                }\n            },\n            _initRouter: function () {\n                var type = (this.options.type || '').toLowerCase();\n                if (type == CASCADING) {\n                    this._router = new CascadingRouter(this);\n                } else {\n                    this._router = new PolylineRouter(this);\n                }\n            },\n            points: function (value) {\n                if (value) {\n                    this.definers = [];\n                    for (var i = 0; i < value.length; i++) {\n                        var definition = value[i];\n                        if (definition instanceof diagram.Point) {\n                            this.definers.push(new diagram.PathDefiner(definition));\n                        } else if (definition.hasOwnProperty('x') && definition.hasOwnProperty('y')) {\n                            this.definers.push(new diagram.PathDefiner(new Point(definition.x, definition.y)));\n                        } else {\n                            throw 'A Connection point needs to be a Point or an object with x and y properties.';\n                        }\n                    }\n                } else {\n                    var pts = [];\n                    if (isDefined(this.definers)) {\n                        for (var k = 0; k < this.definers.length; k++) {\n                            pts.push(this.definers[k].point);\n                        }\n                    }\n                    return pts;\n                }\n            },\n            allPoints: function () {\n                var pts = [this.sourcePoint()];\n                if (this.definers) {\n                    for (var k = 0; k < this.definers.length; k++) {\n                        pts.push(this.definers[k].point);\n                    }\n                }\n                pts.push(this.targetPoint());\n                return pts;\n            },\n            refresh: function () {\n                this._resolveConnectors();\n                this._refreshPath();\n                this._alignContent();\n                if (this.adorner) {\n                    this.adorner.refresh();\n                }\n            },\n            _resolveConnectors: function () {\n                var connection = this, sourcePoint, targetPoint, sourceConnectors, targetConnectors, source = connection.source(), target = connection.target();\n                if (source instanceof Point) {\n                    sourcePoint = source;\n                } else if (source instanceof Connector) {\n                    if (isAutoConnector(source)) {\n                        sourceConnectors = source.shape.connectors;\n                    } else {\n                        sourceConnectors = [source];\n                    }\n                }\n                if (target instanceof Point) {\n                    targetPoint = target;\n                } else if (target instanceof Connector) {\n                    if (isAutoConnector(target)) {\n                        targetConnectors = target.shape.connectors;\n                    } else {\n                        targetConnectors = [target];\n                    }\n                }\n                if (sourcePoint) {\n                    if (targetConnectors) {\n                        connection._resolvedTargetConnector = closestConnector(sourcePoint, targetConnectors);\n                    }\n                } else if (sourceConnectors) {\n                    if (targetPoint) {\n                        connection._resolvedSourceConnector = closestConnector(targetPoint, sourceConnectors);\n                    } else if (targetConnectors) {\n                        this._resolveAutoConnectors(sourceConnectors, targetConnectors);\n                    }\n                }\n            },\n            _resolveAutoConnectors: function (sourceConnectors, targetConnectors) {\n                var minNonConflict = MAXINT;\n                var minDist = MAXINT;\n                var minNonConflictSource, minNonConflictTarget;\n                var sourcePoint, targetPoint;\n                var minSource, minTarget;\n                var sourceConnector, targetConnector;\n                var sourceIdx, targetIdx;\n                var dist;\n                for (sourceIdx = 0; sourceIdx < sourceConnectors.length; sourceIdx++) {\n                    sourceConnector = sourceConnectors[sourceIdx];\n                    if (!isAutoConnector(sourceConnector)) {\n                        sourcePoint = sourceConnector.position();\n                        for (targetIdx = 0; targetIdx < targetConnectors.length; targetIdx++) {\n                            targetConnector = targetConnectors[targetIdx];\n                            if (!isAutoConnector(targetConnector)) {\n                                targetPoint = targetConnector.position();\n                                dist = math.round(sourcePoint.distanceTo(targetPoint));\n                                if (dist < minNonConflict && this.diagram && this._testRoutePoints(sourcePoint, targetPoint, sourceConnector, targetConnector)) {\n                                    minNonConflict = dist;\n                                    minNonConflictSource = sourceConnector;\n                                    minNonConflictTarget = targetConnector;\n                                }\n                                if (dist < minDist) {\n                                    minSource = sourceConnector;\n                                    minTarget = targetConnector;\n                                    minDist = dist;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (minNonConflictSource) {\n                    minSource = minNonConflictSource;\n                    minTarget = minNonConflictTarget;\n                }\n                this._resolvedSourceConnector = minSource;\n                this._resolvedTargetConnector = minTarget;\n            },\n            _testRoutePoints: function (sourcePoint, targetPoint, sourceConnector, targetConnector) {\n                var router = this._router;\n                var passRoute = true;\n                if (router instanceof CascadingRouter) {\n                    var points = router.routePoints(sourcePoint, targetPoint, sourceConnector, targetConnector), start, end, rect, exclude;\n                    exclude = this._getRouteExclude(sourcePoint, targetPoint, sourceConnector.shape, targetConnector.shape);\n                    points.unshift(sourcePoint);\n                    points.push(targetPoint);\n                    for (var idx = 1; idx < points.length; idx++) {\n                        start = points[idx - 1];\n                        end = points[idx];\n                        rect = new Rect(math.min(start.x, end.x), math.min(start.y, end.y), math.abs(start.x - end.x), math.abs(start.y - end.y));\n                        if (rect.width > 0) {\n                            rect.x++;\n                            rect.width -= 2;\n                        }\n                        if (rect.height > 0) {\n                            rect.y++;\n                            rect.height -= 2;\n                        }\n                        if (!rect.isEmpty() && this.diagram._shapesQuadTree.hitTestRect(rect, exclude)) {\n                            passRoute = false;\n                            break;\n                        }\n                    }\n                }\n                return passRoute;\n            },\n            _getRouteExclude: function (sourcePoint, targetPoint, sourceShape, targetShape) {\n                var exclude = [];\n                if (this._isPointInsideShape(sourcePoint, sourceShape)) {\n                    exclude.push(sourceShape);\n                }\n                if (this._isPointInsideShape(targetPoint, targetShape)) {\n                    exclude.push(targetShape);\n                }\n                return exclude;\n            },\n            _isPointInsideShape: function (point, shape) {\n                var bounds = shape.bounds(), rotatedPoint, angle = shape.rotate().angle, pointX, pointY, boundsX = bounds.x, boundsY = bounds.y;\n                rotatedPoint = point.clone().rotate(bounds.center(), angle);\n                pointX = rotatedPoint.x;\n                pointY = rotatedPoint.y;\n                return pointX > boundsX && pointX < boundsX + bounds.width && pointY > boundsY && pointY < boundsY + bounds.height;\n            },\n            redraw: function (options) {\n                if (options) {\n                    this.options = deepExtend({}, this.options, options);\n                    var points = this.options.points;\n                    if (defined(points) && points.length > 0) {\n                        this.points(points);\n                        this._refreshPath();\n                    }\n                    if (options && options.content || options.text) {\n                        this.content(options.content);\n                    }\n                    this.path.redraw({\n                        fill: options.fill,\n                        stroke: options.stroke,\n                        startCap: options.startCap,\n                        endCap: options.endCap\n                    });\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Connection(this.from, this.to, json.options);\n            },\n            serialize: function () {\n                var from = this.from.toJSON ? this.from.toJSON : this.from.toString(), to = this.to.toJSON ? this.to.toJSON : this.to.toString();\n                var json = deepExtend({}, {\n                    options: this.options,\n                    from: from,\n                    to: to\n                });\n                if (defined(this.dataItem)) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                json.options.points = this.points();\n                return json;\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var p = new Point(value.x, value.y), from = this.sourcePoint(), to = this.targetPoint();\n                    if (value.isEmpty && !value.isEmpty() && value.contains(from) && value.contains(to)) {\n                        return this;\n                    }\n                    if (this._router.hitTest(p)) {\n                        return this;\n                    }\n                }\n            },\n            _hover: function (value) {\n                var color = (this.options.stroke || {}).color;\n                if (value && isDefined(this.options.hover.stroke.color)) {\n                    color = this.options.hover.stroke.color;\n                }\n                this.path.redraw({ stroke: { color: color } });\n            },\n            _refreshPath: function () {\n                if (!defined(this.path)) {\n                    return;\n                }\n                this._drawPath();\n                this.bounds(this._router.getBounds());\n            },\n            _drawPath: function () {\n                if (this._router) {\n                    this._router.route();\n                }\n                var source = this.sourcePoint();\n                var target = this.targetPoint();\n                var points = this.points();\n                this.path.redraw({ points: [source].concat(points, [target]) });\n            },\n            _clearSourceConnector: function () {\n                this.sourceConnector = undefined;\n                this._resolvedSourceConnector = undefined;\n            },\n            _clearTargetConnector: function () {\n                this.targetConnector = undefined;\n                this._resolvedTargetConnector = undefined;\n            },\n            _removeFromSourceConnector: function () {\n                if (this.sourceConnector) {\n                    Utils.remove(this.sourceConnector.connections, this);\n                }\n            },\n            _removeFromTargetConnector: function () {\n                if (this.targetConnector) {\n                    Utils.remove(this.targetConnector.connections, this);\n                }\n            },\n            toJSON: function () {\n                var connection = this;\n                var from, to, point;\n                if (connection.from && connection.from.toJSON) {\n                    from = connection.from.toJSON();\n                } else {\n                    point = connection._sourcePoint;\n                    from = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                if (connection.to && connection.to.toJSON) {\n                    to = connection.to.toJSON();\n                } else {\n                    point = connection._targetPoint;\n                    to = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                return {\n                    from: from,\n                    to: to\n                };\n            }\n        });\n        var Diagram = Widget.extend({\n            init: function (element, userOptions) {\n                var that = this;\n                kendo.destroy(element);\n                Widget.fn.init.call(that, element, userOptions);\n                that._initTheme();\n                that._initElements();\n                that._extendLayoutOptions(that.options);\n                that._initDefaults(userOptions);\n                that._interactionDefaults();\n                that._initCanvas();\n                that.mainLayer = new Group({ id: 'main-layer' });\n                that.canvas.append(that.mainLayer);\n                that._shapesQuadTree = new ShapesQuadTree(that);\n                that._pan = new Point();\n                that._adorners = [];\n                that.adornerLayer = new Group({ id: 'adorner-layer' });\n                that.canvas.append(that.adornerLayer);\n                that._createHandlers();\n                that._initialize();\n                that._resizingAdorner = new ResizingAdorner(that, { editable: that.options.editable });\n                that._connectorsAdorner = new ConnectorsAdorner(that);\n                that._adorn(that._resizingAdorner, true);\n                that._adorn(that._connectorsAdorner, true);\n                that.selector = new Selector(that);\n                that._clipboard = [];\n                that.pauseMouseHandlers = false;\n                that._fetchFreshData();\n                that._createGlobalToolBar();\n                that._createOptionElements();\n                that.zoom(that.options.zoom);\n                that.canvas.draw();\n            },\n            options: {\n                name: 'Diagram',\n                theme: 'default',\n                layout: '',\n                zoomRate: 0.1,\n                zoom: 1,\n                zoomMin: 0,\n                zoomMax: 2,\n                dataSource: {},\n                draggable: true,\n                template: '',\n                autoBind: true,\n                editable: {\n                    rotate: {},\n                    resize: {},\n                    text: true,\n                    tools: [],\n                    drag: {\n                        snap: {\n                            size: 10,\n                            angle: 10\n                        }\n                    },\n                    remove: true\n                },\n                pannable: {},\n                selectable: { key: 'none' },\n                tooltip: {\n                    enabled: true,\n                    format: '{0}'\n                },\n                copy: {\n                    enabled: true,\n                    offsetX: 20,\n                    offsetY: 20\n                },\n                shapeDefaults: diagram.shapeDefaults({ undoable: true }),\n                connectionDefaults: {\n                    editable: { tools: [] },\n                    type: CASCADING\n                },\n                shapes: [],\n                connections: []\n            },\n            events: [\n                ZOOM_END,\n                ZOOM_START,\n                PAN,\n                SELECT,\n                ITEMROTATE,\n                ITEMBOUNDSCHANGE,\n                CHANGE,\n                CLICK,\n                MOUSE_ENTER,\n                MOUSE_LEAVE,\n                'toolBarClick',\n                'save',\n                'cancel',\n                'edit',\n                'remove',\n                'add',\n                'dataBound',\n                DRAG_START,\n                DRAG,\n                DRAG_END\n            ],\n            items: function () {\n                return $();\n            },\n            _createGlobalToolBar: function () {\n                var editable = this.options.editable;\n                if (editable) {\n                    var tools = editable.tools;\n                    if (this._isEditable && tools !== false && (!tools || tools.length === 0)) {\n                        tools = [\n                            'createShape',\n                            'undo',\n                            'redo',\n                            'rotateClockwise',\n                            'rotateAnticlockwise'\n                        ];\n                    }\n                    if (tools && tools.length) {\n                        this.toolBar = new DiagramToolBar(this, {\n                            tools: tools || {},\n                            click: proxy(this._toolBarClick, this),\n                            modal: false\n                        });\n                        this.toolBar.element.css({ textAlign: 'left' });\n                        this.element.prepend(this.toolBar.element);\n                        this._resize();\n                    }\n                }\n            },\n            createShape: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var dataSource = this.dataSource;\n                    var view = dataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(dataSource, {});\n                    var shape = this._createShape(model, {});\n                    if (!this.trigger('add', { shape: shape })) {\n                        dataSource.insert(index, model);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(model.uid);\n                        inactiveItem.element = shape;\n                        this.edit(shape);\n                    }\n                }\n            },\n            _createShape: function (dataItem, options) {\n                options = deepExtend({}, this.options.shapeDefaults, options);\n                options.dataItem = dataItem;\n                var shape = new Shape(options, this);\n                return shape;\n            },\n            createConnection: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var connectionsDataSource = this.connectionsDataSource;\n                    var view = connectionsDataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(connectionsDataSource, {});\n                    var connection = this._createConnection(model);\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[model.uid] = connection;\n                        connectionsDataSource.insert(index, model);\n                        this.addConnection(connection, false);\n                        this.edit(connection);\n                    }\n                }\n            },\n            _createConnection: function (dataItem, source, target) {\n                var options = deepExtend({}, this.options.connectionDefaults);\n                options.dataItem = dataItem;\n                var connection = new Connection(source || new Point(), target || new Point(), options);\n                return connection;\n            },\n            editModel: function (dataItem, editorType) {\n                this.cancelEdit();\n                var editors, template;\n                var editable = this.options.editable;\n                if (editorType == 'shape') {\n                    editors = editable.shapeEditors;\n                    template = editable.shapeTemplate;\n                } else if (editorType == 'connection') {\n                    var connectionSelectorHandler = proxy(connectionSelector, this);\n                    editors = deepExtend({}, {\n                        from: connectionSelectorHandler,\n                        to: connectionSelectorHandler\n                    }, editable.connectionEditors);\n                    template = editable.connectionTemplate;\n                } else {\n                    return;\n                }\n                this.editor = new PopupEditor(this.element, {\n                    update: proxy(this._update, this),\n                    cancel: proxy(this._cancel, this),\n                    model: dataItem,\n                    type: editorType,\n                    target: this,\n                    editors: editors,\n                    template: template\n                });\n                this.trigger('edit', this._editArgs());\n            },\n            edit: function (item) {\n                if (item.dataItem) {\n                    var editorType = item instanceof Shape ? 'shape' : 'connection';\n                    this.editModel(item.dataItem, editorType);\n                }\n            },\n            cancelEdit: function () {\n                if (this.editor) {\n                    this._getEditDataSource().cancelChanges(this.editor.model);\n                    this._destroyEditor();\n                }\n            },\n            saveEdit: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                }\n            },\n            _update: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                    this._destroyEditor();\n                }\n            },\n            _cancel: function () {\n                if (this.editor && !this.trigger('cancel', this._editArgs())) {\n                    var model = this.editor.model;\n                    this._getEditDataSource().cancelChanges(model);\n                    var element = this._connectionsDataMap[model.uid] || this._dataMap[model.id];\n                    if (element) {\n                        element._setOptionsFromModel(model);\n                    }\n                    this._destroyEditor();\n                }\n            },\n            _getEditDataSource: function () {\n                return this.editor.options.type === 'shape' ? this.dataSource : this.connectionsDataSource;\n            },\n            _editArgs: function () {\n                var result = { container: this.editor.wrapper };\n                result[this.editor.options.type] = this.editor.model;\n                return result;\n            },\n            _destroyEditor: function () {\n                if (this.editor) {\n                    this.editor.close();\n                    this.editor = null;\n                }\n            },\n            _initElements: function () {\n                this.wrapper = this.element.empty().css('position', 'relative').attr('tabindex', 0).addClass('k-widget k-diagram');\n                this.scrollable = $('<div />').appendTo(this.element);\n            },\n            _initDefaults: function (userOptions) {\n                var options = this.options;\n                var editable = options.editable;\n                var shapeDefaults = options.shapeDefaults;\n                var connectionDefaults = options.connectionDefaults;\n                var userShapeDefaults = (userOptions || {}).shapeDefaults;\n                if (editable === false) {\n                    shapeDefaults.editable = false;\n                    connectionDefaults.editable = false;\n                } else {\n                    copyDefaultOptions(editable, shapeDefaults.editable, [\n                        'drag',\n                        'remove',\n                        'connect'\n                    ]);\n                    copyDefaultOptions(editable, connectionDefaults.editable, [\n                        'drag',\n                        'remove'\n                    ]);\n                }\n                if (userShapeDefaults && userShapeDefaults.connectors) {\n                    options.shapeDefaults.connectors = userShapeDefaults.connectors;\n                }\n            },\n            _interactionDefaults: function () {\n                var options = this.options;\n                var selectable = options.selectable;\n                var pannable = options.pannable;\n                var mobile = kendo.support.mobileOS;\n                if (selectable && !defined(selectable.multiple)) {\n                    options.selectable = deepExtend({ multiple: mobile ? false : true }, options.selectable);\n                }\n                if (pannable && !defined(pannable.key)) {\n                    options.pannable = deepExtend({ key: mobile ? 'none' : 'ctrl' }, options.pannable);\n                }\n            },\n            _initCanvas: function () {\n                var canvasContainer = $('<div class=\\'k-layer\\'></div>').appendTo(this.scrollable)[0];\n                var viewPort = this.viewport();\n                this.canvas = new Canvas(canvasContainer, {\n                    width: viewPort.width || DEFAULT_CANVAS_WIDTH,\n                    height: viewPort.height || DEFAULT_CANVAS_HEIGHT\n                });\n            },\n            _createHandlers: function () {\n                var that = this;\n                var element = that.element;\n                element.on(MOUSEWHEEL_NS, proxy(that._wheel, that)).on('keydown' + NS, proxy(that._keydown, that));\n                that._userEvents = new kendo.UserEvents(this.scrollable, {\n                    multiTouch: true,\n                    fastTap: true,\n                    tap: proxy(that._tap, that),\n                    start: proxy(that._dragStart, that),\n                    move: proxy(that._drag, that),\n                    end: proxy(that._dragEnd, that),\n                    gesturestart: proxy(that._gestureStart, that),\n                    gesturechange: proxy(that._gestureChange, that),\n                    gestureend: proxy(that._gestureEnd, that)\n                });\n                that.toolService = new ToolService(that);\n                this.scrollable.on('mouseover' + NS, proxy(that._mouseover, that)).on('mouseout' + NS, proxy(that._mouseout, that)).on('mousemove' + NS, proxy(that._mouseMove, that)).on('mousedown' + NS, proxy(that._mouseDown, that)).on('mouseup' + NS, proxy(that._mouseUp, that));\n                this._syncHandler = proxy(that._syncChanges, that);\n                that._resizeHandler = proxy(that.resize, that, false);\n                kendo.onResize(that._resizeHandler);\n                this.bind(ZOOM_START, proxy(that._destroyToolBar, that));\n                this.bind(PAN, proxy(that._destroyToolBar, that));\n            },\n            _dragStart: function (e) {\n                this._pauseMouseHandlers = true;\n                var point = this._eventPositions(e, true);\n                var event = e.event;\n                if (this.toolService.start(point, this._meta(event))) {\n                    this._destroyToolBar();\n                    event.preventDefault();\n                }\n            },\n            _drag: function (e) {\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.move(p, this._meta(event))) {\n                    event.preventDefault();\n                }\n            },\n            _dragEnd: function (e) {\n                this._pauseMouseHandlers = false;\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.end(p, this._meta(event))) {\n                    this._createToolBar();\n                    event.preventDefault();\n                }\n            },\n            _mouseMove: function (e) {\n                if (!this._pauseMouseHandlers) {\n                    var p = this._eventPositions(e);\n                    this.toolService._updateHoveredItem(p);\n                    this.toolService._updateCursor(p);\n                }\n            },\n            _mouseDown: function () {\n                this._pauseMouseHandlers = true;\n            },\n            _mouseUp: function () {\n                this._pauseMouseHandlers = false;\n            },\n            _tap: function (e) {\n                var toolService = this.toolService;\n                var selectable = this.options.selectable;\n                var point = this._eventPositions(e);\n                var focused = this.focus();\n                toolService._updateHoveredItem(point);\n                if (toolService.hoveredItem) {\n                    var item = toolService.hoveredItem;\n                    this.trigger('click', {\n                        item: item,\n                        point: point\n                    });\n                    if (selectable && item.options.selectable !== false) {\n                        var multiple = selectable.multiple !== false;\n                        var ctrlPressed = kendo.support.mobileOS || this._meta(e.event).ctrlKey;\n                        if (item.isSelected) {\n                            if (ctrlPressed) {\n                                this._destroyToolBar();\n                                item.select(false);\n                            } else {\n                                this._createToolBar(focused);\n                            }\n                        } else {\n                            this._destroyToolBar();\n                            this.select(item, { addToSelection: multiple && ctrlPressed });\n                            this._createToolBar(focused);\n                        }\n                    }\n                } else if (selectable) {\n                    this._destroyToolBar();\n                    this.deselect();\n                }\n            },\n            _keydown: function (e) {\n                if (this.toolService.keyDown(e.keyCode, this._meta(e))) {\n                    e.preventDefault();\n                }\n            },\n            _wheel: function (e) {\n                var delta = mwDelta(e), p = this._eventPositions(e), meta = deepExtend(this._meta(e), { delta: delta });\n                if (this.toolService.wheel(p, meta)) {\n                    e.preventDefault();\n                }\n            },\n            _meta: function (e) {\n                return {\n                    ctrlKey: e.ctrlKey,\n                    metaKey: e.metaKey,\n                    altKey: e.altKey,\n                    shiftKey: e.shiftKey,\n                    type: e.type\n                };\n            },\n            _eventPositions: function (e, start) {\n                var point;\n                if (e.touch) {\n                    var field = start ? 'startLocation' : 'location';\n                    point = new Point(e.x[field], e.y[field]);\n                } else {\n                    var event = e.originalEvent;\n                    point = new Point(event.pageX, event.pageY);\n                }\n                return this.documentToModel(point);\n            },\n            _gestureStart: function (e) {\n                this._destroyToolBar();\n                this.scroller.disable();\n                var initialCenter = this.documentToModel(new Point(e.center.x, e.center.y));\n                var eventArgs = {\n                    point: initialCenter,\n                    zoom: this.zoom()\n                };\n                if (this.trigger(ZOOM_START, eventArgs)) {\n                    return;\n                }\n                this._gesture = e;\n                this._initialCenter = initialCenter;\n            },\n            _gestureChange: function (e) {\n                var previousGesture = this._gesture;\n                var initialCenter = this._initialCenter;\n                var center = this.documentToView(new Point(e.center.x, e.center.y));\n                var scaleDelta = e.distance / previousGesture.distance;\n                var zoom = this._zoom;\n                var updateZoom = false;\n                if (math.abs(scaleDelta - 1) >= MOBILE_ZOOM_RATE) {\n                    this._zoom = zoom = this._getValidZoom(zoom * scaleDelta);\n                    this.options.zoom = zoom;\n                    this._gesture = e;\n                    updateZoom = true;\n                }\n                var zoomedPoint = initialCenter.times(zoom);\n                var pan = center.minus(zoomedPoint);\n                if (updateZoom || this._pan.distanceTo(pan) >= MOBILE_PAN_DISTANCE) {\n                    this._panTransform(pan);\n                    this._updateAdorners();\n                }\n                e.preventDefault();\n            },\n            _gestureEnd: function () {\n                if (this.options.pannable !== false) {\n                    this.scroller.enable();\n                }\n                this.trigger(ZOOM_END, {\n                    point: this._initialCenter,\n                    zoom: this.zoom()\n                });\n            },\n            _resize: function () {\n                var viewport = this.viewport();\n                if (this.canvas) {\n                    this.canvas.size(viewport);\n                }\n                if (this.scrollable && this.toolBar) {\n                    this.scrollable.height(viewport.height);\n                }\n            },\n            _mouseover: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(true, node.srcElement);\n                }\n            },\n            _mouseout: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(false, node.srcElement);\n                }\n            },\n            _initTheme: function () {\n                var that = this, themes = dataviz.ui.themes || {}, themeName = ((that.options || {}).theme || '').toLowerCase(), themeOptions = (themes[themeName] || {}).diagram;\n                that.options = deepExtend({}, themeOptions, that.options);\n                if (that.options.editable === true) {\n                    deepExtend(that.options, { editable: (themeOptions || {}).editable });\n                }\n            },\n            _createOptionElements: function () {\n                var options = this.options;\n                var shapesLength = options.shapes.length;\n                if (shapesLength) {\n                    this._createShapes();\n                }\n                if (options.connections.length) {\n                    this._createConnections();\n                }\n                if (shapesLength && options.layout) {\n                    this.layout(options.layout);\n                }\n            },\n            _createShapes: function () {\n                var that = this, options = that.options, shapes = options.shapes, shape, i;\n                for (i = 0; i < shapes.length; i++) {\n                    shape = shapes[i];\n                    that.addShape(shape);\n                }\n            },\n            _createConnections: function () {\n                var diagram = this, options = diagram.options, defaults = options.connectionDefaults, connections = options.connections, conn, source, target, i;\n                for (i = 0; i < connections.length; i++) {\n                    conn = connections[i];\n                    source = diagram._findConnectionTarget(conn.from);\n                    target = diagram._findConnectionTarget(conn.to);\n                    diagram.connect(source, target, deepExtend({}, defaults, conn));\n                }\n            },\n            _findConnectionTarget: function (options) {\n                options = options || {};\n                var diagram = this;\n                var shapeId = isString(options) ? options : options.shapeId || options.id;\n                var target;\n                if (shapeId) {\n                    target = diagram.getShapeById(shapeId);\n                    if (options.connector) {\n                        target = target.getConnector(options.connector);\n                    }\n                } else {\n                    target = new Point(options.x || 0, options.y || 0);\n                }\n                return target;\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                if (this._userEvents) {\n                    this._userEvents.destroy();\n                }\n                kendo.unbindResize(that._resizeHandler);\n                that.clear();\n                that.element.off(NS);\n                that.scroller.wrapper.off(NS);\n                that.canvas.destroy(true);\n                that.canvas = undefined;\n                that._destroyEditor();\n                that.destroyScroller();\n                that._destroyGlobalToolBar();\n                that._destroyToolBar();\n            },\n            destroyScroller: function () {\n                var scroller = this.scroller;\n                if (!scroller) {\n                    return;\n                }\n                scroller.destroy();\n                scroller.element.remove();\n                this.scroller = null;\n            },\n            save: function () {\n                var json = {\n                    shapes: [],\n                    connections: []\n                };\n                var i, connection, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    if (shape.options.serializable) {\n                        json.shapes.push(shape.options);\n                    }\n                }\n                for (i = 0; i < this.connections.length; i++) {\n                    connection = this.connections[i];\n                    json.connections.push(deepExtend({}, connection.options, connection.toJSON()));\n                }\n                return json;\n            },\n            focus: function () {\n                if (!this.element.is(kendo._activeElement())) {\n                    var element = this.element, scrollContainer = element[0], containers = [], offsets = [], documentElement = document.documentElement, i;\n                    do {\n                        scrollContainer = scrollContainer.parentNode;\n                        if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                            containers.push(scrollContainer);\n                            offsets.push(scrollContainer.scrollTop);\n                        }\n                    } while (scrollContainer != documentElement);\n                    element.focus();\n                    for (i = 0; i < containers.length; i++) {\n                        containers[i].scrollTop = offsets[i];\n                    }\n                    return true;\n                }\n            },\n            load: function (options) {\n                this.clear();\n                this.setOptions(options);\n                this._createShapes();\n                this._createConnections();\n            },\n            setOptions: function (options) {\n                deepExtend(this.options, options);\n            },\n            clear: function () {\n                var that = this;\n                that.select(false);\n                that.mainLayer.clear();\n                that._shapesQuadTree.clear();\n                that._initialize();\n            },\n            connect: function (source, target, options) {\n                var connection;\n                if (this.connectionsDataSource && this._isEditable) {\n                    var dataItem = this.connectionsDataSource.add({});\n                    connection = this._connectionsDataMap[dataItem.uid];\n                    connection.source(source);\n                    connection.target(target);\n                    connection.redraw(options);\n                    connection.updateModel();\n                } else {\n                    connection = new Connection(source, target, deepExtend({}, this.options.connectionDefaults, options));\n                    this.addConnection(connection);\n                }\n                return connection;\n            },\n            connected: function (source, target) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    var c = this.connections[i];\n                    if (c.from == source && c.to == target) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            addConnection: function (connection, undoable) {\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddConnectionUnit(connection, this), false);\n                }\n                connection.diagram = this;\n                connection._setOptionsFromModel();\n                connection.refresh();\n                this.mainLayer.append(connection.visual);\n                this.connections.push(connection);\n                this.trigger(CHANGE, {\n                    added: [connection],\n                    removed: []\n                });\n                return connection;\n            },\n            _addConnection: function (connection, undoable) {\n                var connectionsDataSource = this.connectionsDataSource;\n                var dataItem;\n                if (connectionsDataSource && this._isEditable) {\n                    dataItem = createModel(connectionsDataSource, cloneDataItem(connection.dataItem));\n                    connection.dataItem = dataItem;\n                    connection.updateModel();\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        connectionsDataSource.add(dataItem);\n                        this.addConnection(connection, undoable);\n                        connection._updateConnectors();\n                        return connection;\n                    }\n                } else if (!this.trigger('add', { connection: connection })) {\n                    this.addConnection(connection, undoable);\n                    connection._updateConnectors();\n                    return connection;\n                }\n            },\n            addShape: function (item, undoable) {\n                var shape, shapeDefaults = this.options.shapeDefaults;\n                if (item instanceof Shape) {\n                    shape = item;\n                } else if (!(item instanceof kendo.Class)) {\n                    shapeDefaults = deepExtend({}, shapeDefaults, item || {});\n                    shape = new Shape(shapeDefaults, this);\n                } else {\n                    return;\n                }\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddShapeUnit(shape, this), false);\n                }\n                this.shapes.push(shape);\n                if (shape.diagram !== this) {\n                    this._shapesQuadTree.insert(shape);\n                    shape.diagram = this;\n                }\n                this.mainLayer.append(shape.visual);\n                this.trigger(CHANGE, {\n                    added: [shape],\n                    removed: []\n                });\n                return shape;\n            },\n            _addShape: function (shape, undoable) {\n                var that = this;\n                var dataSource = that.dataSource;\n                var dataItem;\n                if (dataSource && this._isEditable) {\n                    dataItem = createModel(dataSource, cloneDataItem(shape.dataItem));\n                    shape.dataItem = dataItem;\n                    shape.updateModel();\n                    if (!this.trigger('add', { shape: shape })) {\n                        this.dataSource.add(dataItem);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(dataItem.uid);\n                        inactiveItem.element = shape;\n                        inactiveItem.undoable = undoable;\n                        return shape;\n                    }\n                } else if (!this.trigger('add', { shape: shape })) {\n                    return this.addShape(shape, undoable);\n                }\n            },\n            remove: function (items, undoable) {\n                items = isArray(items) ? items.slice(0) : [items];\n                var elements = splitDiagramElements(items);\n                var shapes = elements.shapes;\n                var connections = elements.connections;\n                var i;\n                if (!defined(undoable)) {\n                    undoable = true;\n                }\n                if (undoable) {\n                    this.undoRedoService.begin();\n                }\n                this._suspendModelRefresh();\n                for (i = shapes.length - 1; i >= 0; i--) {\n                    this._removeItem(shapes[i], undoable, connections);\n                }\n                for (i = connections.length - 1; i >= 0; i--) {\n                    this._removeItem(connections[i], undoable);\n                }\n                this._resumeModelRefresh();\n                if (undoable) {\n                    this.undoRedoService.commit(false);\n                }\n                this.trigger(CHANGE, {\n                    added: [],\n                    removed: items\n                });\n            },\n            _removeShapeDataItem: function (item) {\n                if (this._isEditable) {\n                    this.dataSource.remove(item.dataItem);\n                    delete this._dataMap[item.dataItem.id];\n                }\n            },\n            _removeConnectionDataItem: function (item) {\n                if (this._isEditable) {\n                    this.connectionsDataSource.remove(item.dataItem);\n                    delete this._connectionsDataMap[item.dataItem.uid];\n                }\n            },\n            _triggerRemove: function (items) {\n                var toRemove = [];\n                var item, args, editable;\n                for (var idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    editable = item.options.editable;\n                    if (item instanceof Shape) {\n                        args = { shape: item };\n                    } else {\n                        args = { connection: item };\n                    }\n                    if (editable && editable.remove !== false && !this.trigger('remove', args)) {\n                        toRemove.push(item);\n                    }\n                }\n                return toRemove;\n            },\n            undo: function () {\n                this.undoRedoService.undo();\n            },\n            redo: function () {\n                this.undoRedoService.redo();\n            },\n            select: function (item, options) {\n                if (isDefined(item)) {\n                    options = deepExtend({ addToSelection: false }, options);\n                    var addToSelection = options.addToSelection, items = [], selected = [], i, element;\n                    if (!addToSelection) {\n                        this.deselect();\n                    }\n                    this._internalSelection = true;\n                    if (item instanceof Array) {\n                        items = item;\n                    } else if (item instanceof DiagramElement) {\n                        items = [item];\n                    }\n                    for (i = 0; i < items.length; i++) {\n                        element = items[i];\n                        if (element.select(true)) {\n                            selected.push(element);\n                        }\n                    }\n                    this._selectionChanged(selected, []);\n                    this._internalSelection = false;\n                } else {\n                    return this._selectedItems;\n                }\n            },\n            selectAll: function () {\n                this.select(this.shapes.concat(this.connections));\n            },\n            selectArea: function (rect) {\n                var i, items, item;\n                this._internalSelection = true;\n                var selected = [];\n                if (rect instanceof Rect) {\n                    items = this.shapes.concat(this.connections);\n                    for (i = 0; i < items.length; i++) {\n                        item = items[i];\n                        if ((!rect || item._hitTest(rect)) && item.options.enable) {\n                            if (item.select(true)) {\n                                selected.push(item);\n                            }\n                        }\n                    }\n                }\n                this._selectionChanged(selected, []);\n                this._internalSelection = false;\n            },\n            deselect: function (item) {\n                this._internalSelection = true;\n                var deselected = [], items = [], element, i;\n                if (item instanceof Array) {\n                    items = item;\n                } else if (item instanceof DiagramElement) {\n                    items.push(item);\n                } else if (!isDefined(item)) {\n                    items = this._selectedItems.slice(0);\n                }\n                for (i = 0; i < items.length; i++) {\n                    element = items[i];\n                    if (element.select(false)) {\n                        deselected.push(element);\n                    }\n                }\n                this._selectionChanged([], deselected);\n                this._internalSelection = false;\n            },\n            toFront: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToFrontUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toFront(result.visuals);\n                    this._fixOrdering(result, true);\n                }\n            },\n            toBack: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToBackUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toBack(result.visuals);\n                    this._fixOrdering(result, false);\n                }\n            },\n            bringIntoView: function (item, options) {\n                var viewport = this.viewport();\n                var aligner = new diagram.RectAlign(viewport);\n                var current, rect, original, newPan;\n                if (viewport.width === 0 || viewport.height === 0) {\n                    return;\n                }\n                options = deepExtend({\n                    animate: false,\n                    align: 'center middle'\n                }, options);\n                if (options.align == 'none') {\n                    options.align = 'center middle';\n                }\n                if (item instanceof DiagramElement) {\n                    rect = item.bounds(TRANSFORMED);\n                } else if (isArray(item)) {\n                    rect = this.boundingBox(item);\n                } else if (item instanceof Rect) {\n                    rect = item.clone();\n                }\n                original = rect.clone();\n                rect.zoom(this._zoom);\n                if (rect.width > viewport.width || rect.height > viewport.height) {\n                    this._zoom = this._getValidZoom(math.min(viewport.width / original.width, viewport.height / original.height));\n                    rect = original.clone().zoom(this._zoom);\n                }\n                this._zoomMainLayer();\n                current = rect.clone();\n                aligner.align(rect, options.align);\n                newPan = rect.topLeft().minus(current.topLeft());\n                this.pan(newPan.times(-1), options.animate);\n            },\n            alignShapes: function (direction) {\n                if (isUndefined(direction)) {\n                    direction = 'Left';\n                }\n                var items = this.select(), val, item, i;\n                if (items.length === 0) {\n                    return;\n                }\n                switch (direction.toLowerCase()) {\n                case 'left':\n                case 'top':\n                    val = MAX_VALUE;\n                    break;\n                case 'right':\n                case 'bottom':\n                    val = MIN_VALUE;\n                    break;\n                }\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                            val = math.min(val, item.options.x);\n                            break;\n                        case 'top':\n                            val = math.min(val, item.options.y);\n                            break;\n                        case 'right':\n                            val = math.max(val, item.options.x);\n                            break;\n                        case 'bottom':\n                            val = math.max(val, item.options.y);\n                            break;\n                        }\n                    }\n                }\n                var undoStates = [];\n                var shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        shapes.push(item);\n                        undoStates.push(item.bounds());\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                        case 'right':\n                            item.position(new Point(val, item.options.y));\n                            break;\n                        case 'top':\n                        case 'bottom':\n                            item.position(new Point(item.options.x, val));\n                            break;\n                        }\n                    }\n                }\n                var unit = new diagram.TransformUnit(shapes, undoStates);\n                this.undoRedoService.add(unit, false);\n            },\n            zoom: function (zoom, options) {\n                if (zoom) {\n                    var staticPoint = options ? options.point : new diagram.Point(0, 0);\n                    zoom = this._zoom = this._getValidZoom(zoom);\n                    if (!isUndefined(staticPoint)) {\n                        staticPoint = new diagram.Point(math.round(staticPoint.x), math.round(staticPoint.y));\n                        var zoomedPoint = staticPoint.times(zoom);\n                        var viewportVector = this.modelToView(staticPoint);\n                        var raw = viewportVector.minus(zoomedPoint);\n                        this._storePan(new diagram.Point(math.round(raw.x), math.round(raw.y)));\n                    }\n                    if (options) {\n                        options.zoom = zoom;\n                    }\n                    this._panTransform();\n                    this.canvas.surface.hideTooltip();\n                    this._updateAdorners();\n                }\n                return this._zoom;\n            },\n            _getPan: function (pan) {\n                var canvas = this.canvas;\n                if (!canvas.translate) {\n                    pan = pan.plus(this._pan);\n                }\n                return pan;\n            },\n            pan: function (pan, animate) {\n                if (pan instanceof Point) {\n                    var that = this;\n                    var scroller = that.scroller;\n                    pan = that._getPan(pan);\n                    pan = pan.times(-1);\n                    if (animate) {\n                        scroller.animatedScrollTo(pan.x, pan.y, function () {\n                            that._updateAdorners();\n                        });\n                    } else {\n                        scroller.scrollTo(pan.x, pan.y);\n                        that._updateAdorners();\n                    }\n                } else {\n                    return this._pan.times(-1);\n                }\n            },\n            viewport: function () {\n                var element = this.element;\n                var width = element.width();\n                var height = element.height();\n                if (this.toolBar) {\n                    height -= outerHeight(this.toolBar.element);\n                }\n                return new Rect(0, 0, width, height);\n            },\n            copy: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 1;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                }\n            },\n            cut: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 0;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                    this.remove(this._clipboard, true);\n                }\n            },\n            paste: function () {\n                if (this._clipboard.length > 0) {\n                    var item, copied, i;\n                    var mapping = {};\n                    var elements = splitDiagramElements(this._clipboard);\n                    var connections = elements.connections;\n                    var shapes = elements.shapes;\n                    var offset = {\n                        x: this._copyOffset * this.options.copy.offsetX,\n                        y: this._copyOffset * this.options.copy.offsetY\n                    };\n                    this.deselect();\n                    for (i = 0; i < shapes.length; i++) {\n                        item = shapes[i];\n                        copied = item.clone();\n                        mapping[item.id] = copied;\n                        copied.position(new Point(item.options.x + offset.x, item.options.y + offset.y));\n                        copied.diagram = this;\n                        copied = this._addShape(copied);\n                        if (copied) {\n                            copied.select();\n                        }\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        item = connections[i];\n                        copied = this._addConnection(item.clone());\n                        if (copied) {\n                            this._updateCopiedConnection(copied, item, 'source', mapping, offset);\n                            this._updateCopiedConnection(copied, item, 'target', mapping, offset);\n                            copied.select(true);\n                            copied.updateModel();\n                        }\n                    }\n                    this._syncChanges();\n                    this._copyOffset += 1;\n                }\n            },\n            _updateCopiedConnection: function (connection, sourceConnection, connectorName, mapping, offset) {\n                var onActivate, inactiveItem, targetShape;\n                var target = sourceConnection[connectorName]();\n                var diagram = this;\n                if (target instanceof Connector && mapping[target.shape.id]) {\n                    targetShape = mapping[target.shape.id];\n                    if (diagram.getShapeById(targetShape.id)) {\n                        connection[connectorName](targetShape.getConnector(target.options.name));\n                    } else {\n                        inactiveItem = diagram._inactiveShapeItems.getByUid(targetShape.dataItem.uid);\n                        if (inactiveItem) {\n                            onActivate = function (item) {\n                                targetShape = diagram._dataMap[item.id];\n                                connection[connectorName](targetShape.getConnector(target.options.name));\n                                connection.updateModel();\n                            };\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(onActivate));\n                        }\n                    }\n                } else {\n                    connection[connectorName](new Point(sourceConnection[connectorName + 'Point']().x + offset.x, sourceConnection[connectorName + 'Point']().y + offset.y));\n                }\n            },\n            boundingBox: function (items, origin) {\n                var rect = Rect.empty(), temp, di = isDefined(items) ? this._getDiagramItems(items) : { shapes: this.shapes };\n                if (di.shapes.length > 0) {\n                    var item = di.shapes[0];\n                    rect = item.bounds(ROTATED);\n                    for (var i = 1; i < di.shapes.length; i++) {\n                        item = di.shapes[i];\n                        temp = item.bounds(ROTATED);\n                        if (origin === true) {\n                            temp.x -= item._rotationOffset.x;\n                            temp.y -= item._rotationOffset.y;\n                        }\n                        rect = rect.union(temp);\n                    }\n                }\n                return rect;\n            },\n            _containerOffset: function () {\n                var containerOffset = this.element.offset();\n                if (this.toolBar) {\n                    containerOffset.top += outerHeight(this.toolBar.element);\n                }\n                return containerOffset;\n            },\n            documentToView: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x - containerOffset.left, point.y - containerOffset.top);\n            },\n            viewToDocument: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x + containerOffset.left, point.y + containerOffset.top);\n            },\n            viewToModel: function (point) {\n                return this._transformWithMatrix(point, this._matrixInvert);\n            },\n            modelToView: function (point) {\n                return this._transformWithMatrix(point, this._matrix);\n            },\n            modelToLayer: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrix);\n            },\n            layerToModel: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrixInvert);\n            },\n            documentToModel: function (point) {\n                var viewPoint = this.documentToView(point);\n                if (!this.canvas.translate) {\n                    viewPoint.x = viewPoint.x + this.scroller.scrollLeft;\n                    viewPoint.y = viewPoint.y + this.scroller.scrollTop;\n                }\n                return this.viewToModel(viewPoint);\n            },\n            modelToDocument: function (point) {\n                return this.viewToDocument(this.modelToView(point));\n            },\n            _transformWithMatrix: function (point, matrix) {\n                var result = point;\n                if (point instanceof Point) {\n                    if (matrix) {\n                        result = matrix.apply(point);\n                    }\n                } else {\n                    var tl = this._transformWithMatrix(point.topLeft(), matrix), br = this._transformWithMatrix(point.bottomRight(), matrix);\n                    result = Rect.fromPoints(tl, br);\n                }\n                return result;\n            },\n            setDataSource: function (dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n            setConnectionsDataSource: function (dataSource) {\n                this.options.connectionsDataSource = dataSource;\n                this._connectionDataSource();\n                if (this.options.autoBind) {\n                    this.connectionsDataSource.fetch();\n                }\n            },\n            layout: function (options) {\n                this._layouting = true;\n                var type;\n                if (isUndefined(options)) {\n                    options = this.options.layout;\n                }\n                if (isUndefined(options) || isUndefined(options.type)) {\n                    type = 'Tree';\n                } else {\n                    type = options.type;\n                }\n                var l;\n                switch (type.toLowerCase()) {\n                case 'tree':\n                    l = new diagram.TreeLayout(this);\n                    break;\n                case 'layered':\n                    l = new diagram.LayeredLayout(this);\n                    break;\n                case 'forcedirected':\n                case 'force':\n                case 'spring':\n                case 'springembedder':\n                    l = new diagram.SpringLayout(this);\n                    break;\n                default:\n                    throw 'Layout algorithm \\'' + type + '\\' is not supported.';\n                }\n                var initialState = new diagram.LayoutState(this);\n                var finalState = l.layout(options);\n                if (finalState) {\n                    var unit = new diagram.LayoutUndoUnit(initialState, finalState, options ? options.animate : null);\n                    this.undoRedoService.add(unit);\n                }\n                this._layouting = false;\n                this._redrawConnections();\n            },\n            getShapeById: function (id) {\n                var found;\n                found = Utils.first(this.shapes, function (s) {\n                    return s.visual.id === id;\n                });\n                if (found) {\n                    return found;\n                }\n                found = Utils.first(this.connections, function (c) {\n                    return c.visual.id === id;\n                });\n                return found;\n            },\n            getShapeByModelId: function (id) {\n                var shape;\n                if (this._isEditable) {\n                    shape = this._dataMap[id];\n                } else {\n                    shape = Utils.first(this.shapes, function (shape) {\n                        return (shape.dataItem || {}).id === id;\n                    });\n                }\n                return shape;\n            },\n            getShapeByModelUid: function (uid) {\n                var shape;\n                if (this._isEditable) {\n                    shape = Utils.first(this.shapes, function (shape) {\n                        return (shape.dataItem || {}).uid === uid;\n                    });\n                } else {\n                    shape = this._dataMap[uid];\n                }\n                return shape;\n            },\n            getConnectionByModelId: function (id) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = Utils.first(this.connections, function (connection) {\n                        return (connection.dataItem || {}).id === id;\n                    });\n                }\n                return connection;\n            },\n            getConnectionByModelUid: function (uid) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = this._connectionsDataMap[uid];\n                }\n                return connection;\n            },\n            _extendLayoutOptions: function (options) {\n                if (options.layout) {\n                    options.layout = deepExtend({}, diagram.LayoutBase.fn.defaultOptions || {}, options.layout);\n                }\n            },\n            _selectionChanged: function (selected, deselected) {\n                if (selected.length || deselected.length) {\n                    this.trigger(SELECT, {\n                        selected: selected,\n                        deselected: deselected\n                    });\n                }\n            },\n            _getValidZoom: function (zoom) {\n                return math.min(math.max(zoom, this.options.zoomMin), this.options.zoomMax);\n            },\n            _panTransform: function (pos) {\n                var diagram = this, pan = pos || diagram._pan;\n                if (diagram.canvas.translate) {\n                    diagram.scroller.scrollTo(pan.x, pan.y);\n                    diagram._zoomMainLayer();\n                } else {\n                    diagram._storePan(pan);\n                    diagram._transformMainLayer();\n                }\n            },\n            _finishPan: function () {\n                this.trigger(PAN, {\n                    total: this._pan,\n                    delta: Number.NaN\n                });\n            },\n            _storePan: function (pan) {\n                this._pan = pan;\n                this._storeViewMatrix();\n            },\n            _zoomMainLayer: function () {\n                var zoom = this._zoom;\n                var transform = new CompositeTransform(0, 0, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _transformMainLayer: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _storeLayerMatrix: function (canvasTransform) {\n                this._layerMatrix = canvasTransform.toMatrix();\n                this._layerMatrixInvert = canvasTransform.invert().toMatrix();\n            },\n            _storeViewMatrix: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                this._matrix = transform.toMatrix();\n                this._matrixInvert = transform.invert().toMatrix();\n            },\n            _toIndex: function (items, indices) {\n                var result = this._getDiagramItems(items);\n                this.mainLayer.toIndex(result.visuals, indices);\n                this._fixOrdering(result, false);\n            },\n            _fixOrdering: function (result, toFront) {\n                var shapePos = toFront ? this.shapes.length - 1 : 0, conPos = toFront ? this.connections.length - 1 : 0, i, item;\n                for (i = 0; i < result.shapes.length; i++) {\n                    item = result.shapes[i];\n                    Utils.remove(this.shapes, item);\n                    Utils.insert(this.shapes, item, shapePos);\n                }\n                for (i = 0; i < result.cons.length; i++) {\n                    item = result.cons[i];\n                    Utils.remove(this.connections, item);\n                    Utils.insert(this.connections, item, conPos);\n                }\n            },\n            _getDiagramItems: function (items) {\n                var i, result = {}, args = items;\n                result.visuals = [];\n                result.shapes = [];\n                result.cons = [];\n                if (!items) {\n                    args = this._selectedItems.slice();\n                } else if (!isArray(items)) {\n                    args = [items];\n                }\n                for (i = 0; i < args.length; i++) {\n                    var item = args[i];\n                    if (item instanceof Shape) {\n                        result.shapes.push(item);\n                        result.visuals.push(item.visual);\n                    } else if (item instanceof Connection) {\n                        result.cons.push(item);\n                        result.visuals.push(item.visual);\n                    }\n                }\n                return result;\n            },\n            _removeItem: function (item, undoable, removedConnections) {\n                item.select(false);\n                if (item instanceof Shape) {\n                    this._removeShapeDataItem(item);\n                    this._removeShape(item, undoable, removedConnections);\n                } else if (item instanceof Connection) {\n                    this._removeConnectionDataItem(item);\n                    this._removeConnection(item, undoable);\n                }\n                this.mainLayer.remove(item.visual);\n            },\n            _removeShape: function (shape, undoable, removedConnections) {\n                var i, connection, connector, sources = [], targets = [];\n                this.toolService._removeHover();\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteShapeUnit(shape));\n                }\n                Utils.remove(this.shapes, shape);\n                this._shapesQuadTree.remove(shape);\n                for (i = 0; i < shape.connectors.length; i++) {\n                    connector = shape.connectors[i];\n                    for (var j = 0; j < connector.connections.length; j++) {\n                        connection = connector.connections[j];\n                        if (!removedConnections || !dataviz.inArray(connection, removedConnections)) {\n                            if (connection.sourceConnector == connector) {\n                                sources.push(connection);\n                            } else if (connection.targetConnector == connector) {\n                                targets.push(connection);\n                            }\n                        }\n                    }\n                }\n                for (i = 0; i < sources.length; i++) {\n                    sources[i].source(null, undoable);\n                    sources[i].updateModel();\n                }\n                for (i = 0; i < targets.length; i++) {\n                    targets[i].target(null, undoable);\n                    targets[i].updateModel();\n                }\n            },\n            _removeConnection: function (connection, undoable) {\n                if (connection.sourceConnector) {\n                    Utils.remove(connection.sourceConnector.connections, connection);\n                }\n                if (connection.targetConnector) {\n                    Utils.remove(connection.targetConnector.connections, connection);\n                }\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteConnectionUnit(connection));\n                }\n                Utils.remove(this.connections, connection);\n            },\n            _removeDataItems: function (items, recursive) {\n                var item, children, shape, idx;\n                items = isArray(items) ? items : [items];\n                while (items.length) {\n                    item = items.shift();\n                    shape = this._dataMap[item.uid];\n                    if (shape) {\n                        this._removeShapeConnections(shape);\n                        this._removeItem(shape, false);\n                        delete this._dataMap[item.uid];\n                        if (recursive && item.hasChildren && item.loaded()) {\n                            children = item.children.data();\n                            for (idx = 0; idx < children.length; idx++) {\n                                items.push(children[idx]);\n                            }\n                        }\n                    }\n                }\n            },\n            _removeShapeConnections: function (shape) {\n                var connections = shape.connections();\n                var idx;\n                if (connections) {\n                    for (idx = 0; idx < connections.length; idx++) {\n                        this._removeItem(connections[idx], false);\n                    }\n                }\n            },\n            _addDataItem: function (dataItem, undoable) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.id];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape, undoable !== false);\n                this._dataMap[dataItem.id] = shape;\n                return shape;\n            },\n            _addDataItemByUid: function (dataItem) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.uid];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape);\n                this._dataMap[dataItem.uid] = shape;\n                return shape;\n            },\n            _addDataItems: function (items, parent) {\n                var item, idx, shape, parentShape, connection;\n                for (idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    shape = this._addDataItemByUid(item);\n                    parentShape = this._addDataItemByUid(parent);\n                    if (parentShape && !this.connected(parentShape, shape)) {\n                        connection = this.connect(parentShape, shape);\n                    }\n                }\n            },\n            _refreshSource: function (e) {\n                var that = this, node = e.node, action = e.action, items = e.items, options = that.options, idx, dataBound;\n                if (e.field) {\n                    for (idx = 0; idx < items.length; idx++) {\n                        if (this._dataMap[items[idx].uid]) {\n                            this._dataMap[items[idx].uid].redrawVisual();\n                        }\n                    }\n                    return;\n                }\n                if (action == 'remove') {\n                    this._removeDataItems(e.items, true);\n                } else {\n                    if ((!action || action === 'itemloaded') && !this._bindingRoots) {\n                        this._bindingRoots = true;\n                        dataBound = true;\n                    }\n                    if (!action && !node) {\n                        that.clear();\n                    }\n                    this._addDataItems(items, node);\n                    for (idx = 0; idx < items.length; idx++) {\n                        items[idx].load();\n                    }\n                }\n                if (options.layout && (dataBound || action == 'remove' || action == 'add')) {\n                    that.layout(options.layout);\n                }\n                if (dataBound) {\n                    this.trigger('dataBound');\n                    this._bindingRoots = false;\n                }\n            },\n            _addItem: function (item) {\n                if (item instanceof Shape) {\n                    this.addShape(item);\n                } else if (item instanceof Connection) {\n                    this.addConnection(item);\n                }\n            },\n            _createToolBar: function (preventClosing) {\n                var diagram = this.toolService.diagram;\n                if (!this.singleToolBar && diagram.select().length === 1) {\n                    var element = diagram.select()[0];\n                    if (element && element.options.editable !== false) {\n                        var editable = element.options.editable;\n                        var tools = editable.tools;\n                        if (this._isEditable && tools.length === 0) {\n                            if (element instanceof Shape) {\n                                tools = [\n                                    'edit',\n                                    'rotateClockwise',\n                                    'rotateAnticlockwise'\n                                ];\n                            } else if (element instanceof Connection) {\n                                tools = ['edit'];\n                            }\n                            if (editable && editable.remove !== false) {\n                                tools.push('delete');\n                            }\n                        }\n                        if (tools && tools.length) {\n                            var padding = 20;\n                            var point;\n                            this.singleToolBar = new DiagramToolBar(diagram, {\n                                tools: tools,\n                                click: proxy(this._toolBarClick, this),\n                                modal: true\n                            });\n                            var popupWidth = outerWidth(this.singleToolBar._popup.element);\n                            var popupHeight = outerHeight(this.singleToolBar._popup.element);\n                            if (element instanceof Shape) {\n                                var shapeBounds = this.modelToView(element.bounds(ROTATED));\n                                point = new Point(shapeBounds.x, shapeBounds.y).minus(new Point((popupWidth - shapeBounds.width) / 2, popupHeight + padding));\n                            } else if (element instanceof Connection) {\n                                var connectionBounds = this.modelToView(element.bounds());\n                                point = new Point(connectionBounds.x, connectionBounds.y).minus(new Point((popupWidth - connectionBounds.width - 20) / 2, popupHeight + padding));\n                            }\n                            if (point) {\n                                if (!this.canvas.translate) {\n                                    point = point.minus(new Point(this.scroller.scrollLeft, this.scroller.scrollTop));\n                                }\n                                point = this.viewToDocument(point);\n                                point = new Point(math.max(point.x, 0), math.max(point.y, 0));\n                                this.singleToolBar.showAt(point);\n                                if (preventClosing) {\n                                    this.singleToolBar._popup.one('close', preventDefault);\n                                }\n                            } else {\n                                this._destroyToolBar();\n                            }\n                        }\n                    }\n                }\n            },\n            _toolBarClick: function (e) {\n                this.trigger('toolBarClick', e);\n                this._destroyToolBar();\n            },\n            _normalizePointZoom: function (point) {\n                return point.times(1 / this.zoom());\n            },\n            _initialize: function () {\n                this.shapes = [];\n                this._selectedItems = [];\n                this.connections = [];\n                this._dataMap = {};\n                this._connectionsDataMap = {};\n                this._inactiveShapeItems = new InactiveItemsCollection();\n                this._deferredConnectionUpdates = [];\n                this.undoRedoService = new UndoRedoService({\n                    undone: this._syncHandler,\n                    redone: this._syncHandler\n                });\n                this.id = diagram.randomId();\n            },\n            _fetchFreshData: function () {\n                var that = this;\n                that._dataSource();\n                if (that._isEditable) {\n                    that._connectionDataSource();\n                }\n                if (that.options.autoBind) {\n                    if (that._isEditable) {\n                        this._loadingShapes = true;\n                        this._loadingConnections = true;\n                        that.dataSource.fetch();\n                        that.connectionsDataSource.fetch();\n                    } else {\n                        that.dataSource.fetch();\n                    }\n                }\n            },\n            _dataSource: function () {\n                if (defined(this.options.connectionsDataSource)) {\n                    this._isEditable = true;\n                    var dsOptions = this.options.dataSource || {};\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.dataSource && this._shapesRefreshHandler) {\n                        this.dataSource.unbind('change', this._shapesRefreshHandler).unbind('requestStart', this._shapesRequestStartHandler).unbind('error', this._shapesErrorHandler);\n                    } else {\n                        this._shapesRefreshHandler = proxy(this._refreshShapes, this);\n                        this._shapesRequestStartHandler = proxy(this._shapesRequestStart, this);\n                        this._shapesErrorHandler = proxy(this._error, this);\n                    }\n                    this.dataSource = kendo.data.DataSource.create(ds).bind('change', this._shapesRefreshHandler).bind('requestStart', this._shapesRequestStartHandler).bind('error', this._shapesErrorHandler);\n                } else {\n                    this._treeDataSource();\n                    this._isEditable = false;\n                }\n            },\n            _connectionDataSource: function () {\n                var dsOptions = this.options.connectionsDataSource;\n                if (dsOptions) {\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.connectionsDataSource && this._connectionsRefreshHandler) {\n                        this.connectionsDataSource.unbind('change', this._connectionsRefreshHandler).unbind('requestStart', this._connectionsRequestStartHandler).unbind('error', this._connectionsErrorHandler);\n                    } else {\n                        this._connectionsRefreshHandler = proxy(this._refreshConnections, this);\n                        this._connectionsRequestStartHandler = proxy(this._connectionsRequestStart, this);\n                        this._connectionsErrorHandler = proxy(this._connectionsError, this);\n                    }\n                    this.connectionsDataSource = kendo.data.DataSource.create(ds).bind('change', this._connectionsRefreshHandler).bind('requestStart', this._connectionsRequestStartHandler).bind('error', this._connectionsErrorHandler);\n                }\n            },\n            _shapesRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingShapes = true;\n                }\n            },\n            _connectionsRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingConnections = true;\n                }\n            },\n            _error: function () {\n                this._loadingShapes = false;\n            },\n            _connectionsError: function () {\n                this._loadingConnections = false;\n            },\n            _refreshShapes: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeShapes(e.items);\n                    }\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateShapes(e.items, e.field);\n                    }\n                } else if (e.action === 'add') {\n                    this._inactiveShapeItems.add(e.items);\n                } else if (e.action === 'sync') {\n                    this._syncShapes(e.items);\n                } else {\n                    this.refresh();\n                }\n            },\n            _shouldRefresh: function () {\n                return !this._suspended;\n            },\n            _suspendModelRefresh: function () {\n                this._suspended = (this._suspended || 0) + 1;\n            },\n            _resumeModelRefresh: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n            },\n            refresh: function () {\n                this._loadingShapes = false;\n                if (!this._loadingConnections) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _rebindShapesAndConnections: function () {\n                this.clear();\n                this._addShapes(this.dataSource.view());\n                if (this.connectionsDataSource) {\n                    this._addConnections(this.connectionsDataSource.view(), false);\n                }\n                if (this.options.layout) {\n                    this.layout(this.options.layout);\n                } else {\n                    this._redrawConnections();\n                }\n                this.trigger('dataBound');\n            },\n            refreshConnections: function () {\n                this._loadingConnections = false;\n                if (!this._loadingShapes) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _redrawConnections: function () {\n                var connections = this.connections;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connections[idx].refresh();\n                }\n            },\n            _removeShapes: function (items) {\n                var dataMap = this._dataMap;\n                var item, i;\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (dataMap[item.id]) {\n                        this.remove(dataMap[item.id], false);\n                        dataMap[item.id] = null;\n                    }\n                }\n            },\n            _syncShapes: function () {\n                var diagram = this;\n                var inactiveItems = diagram._inactiveShapeItems;\n                inactiveItems.forEach(function (inactiveItem) {\n                    var dataItem = inactiveItem.dataItem;\n                    var shape = inactiveItem.element;\n                    if (!dataItem.isNew()) {\n                        if (shape) {\n                            shape._setOptionsFromModel();\n                            diagram.addShape(shape, inactiveItem.undoable);\n                            diagram._dataMap[dataItem.id] = shape;\n                        } else {\n                            diagram._addDataItem(dataItem);\n                        }\n                        inactiveItem.activate();\n                        inactiveItems.remove(dataItem);\n                    }\n                });\n            },\n            _updateShapes: function (items, field) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var shape = this._dataMap[dataItem.id];\n                    if (shape) {\n                        shape.updateOptionsFromModel(dataItem, field);\n                    }\n                }\n            },\n            _addShapes: function (dataItems) {\n                for (var i = 0; i < dataItems.length; i++) {\n                    this._addDataItem(dataItems[i], false);\n                }\n            },\n            _refreshConnections: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeConnections(e.items);\n                    }\n                } else if (e.action === 'add') {\n                    this._addConnections(e.items);\n                } else if (e.action === 'sync') {\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateConnections(e.items);\n                    }\n                } else {\n                    this.refreshConnections();\n                }\n            },\n            _removeConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    this.remove(this._connectionsDataMap[items[i].uid], false);\n                    this._connectionsDataMap[items[i].uid] = null;\n                }\n            },\n            _updateConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var connection = this._connectionsDataMap[dataItem.uid];\n                    connection.updateOptionsFromModel(dataItem);\n                }\n            },\n            _addConnections: function (connections, undoable) {\n                var length = connections.length;\n                for (var i = 0; i < length; i++) {\n                    var dataItem = connections[i];\n                    this._addConnectionDataItem(dataItem, undoable);\n                }\n            },\n            _addConnectionDataItem: function (dataItem, undoable) {\n                if (!this._connectionsDataMap[dataItem.uid]) {\n                    var from = this._validateConnector(dataItem.from);\n                    if (!defined(from) || from === null) {\n                        from = new Point(dataItem.fromX, dataItem.fromY);\n                    }\n                    var to = this._validateConnector(dataItem.to);\n                    if (!defined(to) || to === null) {\n                        to = new Point(dataItem.toX, dataItem.toY);\n                    }\n                    if (defined(from) && defined(to)) {\n                        var options = deepExtend({}, this.options.connectionDefaults);\n                        options.dataItem = dataItem;\n                        var connection = new Connection(from, to, options);\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        this.addConnection(connection, undoable);\n                    }\n                }\n            },\n            _validateConnector: function (value) {\n                var connector;\n                if (defined(value) && value !== null) {\n                    connector = this._dataMap[value];\n                }\n                return connector;\n            },\n            _treeDataSource: function () {\n                var that = this, options = that.options, dataSource = options.dataSource;\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n                if (dataSource instanceof kendo.data.DataSource && !(dataSource instanceof kendo.data.HierarchicalDataSource)) {\n                    throw new Error('Incorrect DataSource type. If a single dataSource instance is set to the diagram then it should be a HierarchicalDataSource. You should set only the options instead of an instance or a HierarchicalDataSource instance or supply connectionsDataSource as well.');\n                }\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: 'text' },\n                        { field: 'url' },\n                        { field: 'spriteCssClass' },\n                        { field: 'imageUrl' }\n                    ];\n                }\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                }\n                that._refreshHandler = proxy(that._refreshSource, that);\n                that._errorHandler = proxy(that._error, that);\n                that.dataSource = HierarchicalDataSource.create(dataSource).bind(CHANGE, that._refreshHandler).bind(ERROR, that._errorHandler);\n            },\n            _unbindDataSource: function () {\n                var that = this;\n                that.dataSource.unbind(CHANGE, that._refreshHandler).unbind(ERROR, that._errorHandler);\n            },\n            _adorn: function (adorner, isActive) {\n                if (isActive !== undefined && adorner) {\n                    if (isActive) {\n                        this._adorners.push(adorner);\n                        this.adornerLayer.append(adorner.visual);\n                    } else {\n                        Utils.remove(this._adorners, adorner);\n                        this.adornerLayer.remove(adorner.visual);\n                    }\n                }\n            },\n            _showConnectors: function (shape, value) {\n                if (value) {\n                    this._connectorsAdorner.show(shape);\n                } else {\n                    this._connectorsAdorner.destroy();\n                }\n            },\n            _updateAdorners: function () {\n                var adorners = this._adorners;\n                for (var i = 0; i < adorners.length; i++) {\n                    var adorner = adorners[i];\n                    if (adorner.refreshBounds) {\n                        adorner.refreshBounds();\n                    }\n                    adorner.refresh();\n                }\n            },\n            _refresh: function () {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].refresh();\n                }\n            },\n            _destroyToolBar: function () {\n                if (this.singleToolBar) {\n                    this.singleToolBar.hide();\n                    this.singleToolBar.destroy();\n                    this.singleToolBar = null;\n                }\n            },\n            _destroyGlobalToolBar: function () {\n                if (this.toolBar) {\n                    this.toolBar.hide();\n                    this.toolBar.destroy();\n                    this.toolBar = null;\n                }\n            },\n            exportDOMVisual: function () {\n                var viewBox = this.canvas._viewBox;\n                var scrollOffset = geom.transform().translate(-viewBox.x, -viewBox.y);\n                var viewRect = new geom.Rect([\n                    0,\n                    0\n                ], [\n                    viewBox.width,\n                    viewBox.height\n                ]);\n                var clipPath = draw.Path.fromRect(viewRect);\n                var wrap = new draw.Group({ transform: scrollOffset });\n                var clipWrap = new draw.Group({ clip: clipPath });\n                var root = this.canvas.drawingElement.children[0];\n                clipWrap.append(wrap);\n                wrap.children.push(root);\n                return clipWrap;\n            },\n            exportVisual: function () {\n                var scale = geom.transform().scale(1 / this._zoom);\n                var wrap = new draw.Group({ transform: scale });\n                var root = this.mainLayer.drawingElement;\n                wrap.children.push(root);\n                return wrap;\n            },\n            _syncChanges: function () {\n                this._syncShapeChanges();\n                this._syncConnectionChanges();\n            },\n            _syncShapeChanges: function () {\n                if (this.dataSource && this._isEditable) {\n                    this.dataSource.sync();\n                }\n            },\n            _syncConnectionChanges: function () {\n                var that = this;\n                if (that.connectionsDataSource && that._isEditable) {\n                    $.when.apply($, that._deferredConnectionUpdates).then(function () {\n                        that.connectionsDataSource.sync();\n                    });\n                    that.deferredConnectionUpdates = [];\n                }\n            }\n        });\n        dataviz.ExportMixin.extend(Diagram.fn, true);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Diagram.fn);\n        }\n        function filterShapeDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.text = dataItem.text;\n            }\n            if (defined(dataItem.x) && dataItem.x !== null) {\n                result.x = dataItem.x;\n            }\n            if (defined(dataItem.y) && dataItem.y !== null) {\n                result.y = dataItem.y;\n            }\n            if (defined(dataItem.width) && dataItem.width !== null) {\n                result.width = dataItem.width;\n            }\n            if (defined(dataItem.height) && dataItem.height !== null) {\n                result.height = dataItem.height;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            return result;\n        }\n        function filterConnectionDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.content = dataItem.text;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            if (defined(dataItem.from) && dataItem.from !== null) {\n                result.from = dataItem.from;\n            }\n            if (defined(dataItem.fromConnector) && dataItem.fromConnector !== null) {\n                result.fromConnector = dataItem.fromConnector;\n            }\n            if (defined(dataItem.fromX) && dataItem.fromX !== null) {\n                result.fromX = dataItem.fromX;\n            }\n            if (defined(dataItem.fromY) && dataItem.fromY !== null) {\n                result.fromY = dataItem.fromY;\n            }\n            if (defined(dataItem.to) && dataItem.to !== null) {\n                result.to = dataItem.to;\n            }\n            if (defined(dataItem.toConnector) && dataItem.toConnector !== null) {\n                result.toConnector = dataItem.toConnector;\n            }\n            if (defined(dataItem.toX) && dataItem.toX !== null) {\n                result.toX = dataItem.toX;\n            }\n            if (defined(dataItem.toY) && dataItem.toY !== null) {\n                result.toY = dataItem.toY;\n            }\n            return result;\n        }\n        var DiagramToolBar = kendo.Observable.extend({\n            init: function (diagram, options) {\n                kendo.Observable.fn.init.call(this);\n                this.diagram = diagram;\n                this.options = deepExtend({}, this.options, options);\n                this._tools = [];\n                this.createToolBar();\n                this.createTools();\n                this.appendTools();\n                if (this.options.modal) {\n                    this.createPopup();\n                }\n                this.bind(this.events, options);\n            },\n            events: ['click'],\n            createPopup: function () {\n                this.container = $('<div/>').append(this.element);\n                this._popup = this.container.kendoPopup({}).getKendoPopup();\n            },\n            appendTools: function () {\n                for (var i = 0; i < this._tools.length; i++) {\n                    var tool = this._tools[i];\n                    if (tool.buttons && tool.buttons.length || !defined(tool.buttons)) {\n                        this._toolBar.add(tool);\n                    }\n                }\n            },\n            createToolBar: function () {\n                this.element = $('<div/>');\n                this._toolBar = this.element.kendoToolBar({\n                    click: proxy(this.click, this),\n                    resizable: false\n                }).getKendoToolBar();\n                this.element.css('border', 'none');\n            },\n            createTools: function () {\n                for (var i = 0; i < this.options.tools.length; i++) {\n                    this.createTool(this.options.tools[i]);\n                }\n            },\n            createTool: function (tool) {\n                if (!isPlainObject(tool)) {\n                    tool = { name: tool };\n                }\n                var toolName = tool.name + 'Tool';\n                if (this[toolName]) {\n                    this[toolName](tool);\n                } else {\n                    this._tools.push(deepExtend({}, tool, { attributes: this._setAttributes({ action: tool.name }) }));\n                }\n            },\n            showAt: function (point) {\n                if (this._popup) {\n                    this._popup.open(point.x, point.y);\n                }\n            },\n            hide: function () {\n                if (this._popup) {\n                    this._popup.close();\n                }\n            },\n            newGroup: function () {\n                return {\n                    type: 'buttonGroup',\n                    buttons: []\n                };\n            },\n            editTool: function () {\n                this._tools.push({\n                    icon: 'edit',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Edit',\n                    attributes: this._setAttributes({ action: 'edit' })\n                });\n            },\n            deleteTool: function () {\n                this._tools.push({\n                    icon: 'close',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Delete',\n                    attributes: this._setAttributes({ action: 'delete' })\n                });\n            },\n            rotateAnticlockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    icon: 'rotate-left',\n                    showText: 'overflow',\n                    text: 'RotateAnticlockwise',\n                    group: 'rotate',\n                    attributes: this._setAttributes({\n                        action: 'rotateAnticlockwise',\n                        step: options.step\n                    })\n                });\n            },\n            rotateClockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    icon: 'rotate-right',\n                    attributes: this._setAttributes({\n                        action: 'rotateClockwise',\n                        step: options.step\n                    }),\n                    showText: 'overflow',\n                    text: 'RotateClockwise',\n                    group: 'rotate'\n                });\n            },\n            createShapeTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    icon: 'shape',\n                    showText: 'overflow',\n                    text: 'CreateShape',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createShape' })\n                });\n            },\n            createConnectionTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    icon: 'connector',\n                    showText: 'overflow',\n                    text: 'CreateConnection',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createConnection' })\n                });\n            },\n            undoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    icon: 'undo',\n                    showText: 'overflow',\n                    text: 'Undo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'undo' })\n                });\n            },\n            redoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    icon: 'redo',\n                    showText: 'overflow',\n                    text: 'Redo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'redo' })\n                });\n            },\n            _appendGroup: function (name) {\n                var prop = '_' + name + 'Group';\n                if (!this[prop]) {\n                    this[prop] = this.newGroup();\n                    this._tools.push(this[prop]);\n                }\n            },\n            _setAttributes: function (attributes) {\n                var attr = {};\n                if (attributes.action) {\n                    attr[kendo.attr('action')] = attributes.action;\n                }\n                if (attributes.step) {\n                    attr[kendo.attr('step')] = attributes.step;\n                }\n                return attr;\n            },\n            _getAttributes: function (element) {\n                var attr = {};\n                var action = element.attr(kendo.attr('action'));\n                if (action) {\n                    attr.action = action;\n                }\n                var step = element.attr(kendo.attr('step'));\n                if (step) {\n                    attr.step = step;\n                }\n                return attr;\n            },\n            click: function (e) {\n                var attributes = this._getAttributes($(e.target));\n                var action = attributes.action;\n                if (action && this[action]) {\n                    this[action](attributes);\n                }\n                this.trigger('click', this.eventData(action, e.target));\n            },\n            eventData: function (action, target) {\n                var elements = this.selectedElements(), length = elements.length, shapes = [], connections = [], element;\n                for (var idx = 0; idx < length; idx++) {\n                    element = elements[idx];\n                    if (element instanceof Shape) {\n                        shapes.push(element);\n                    } else {\n                        connections.push(element);\n                    }\n                }\n                return {\n                    shapes: shapes,\n                    connections: connections,\n                    action: action,\n                    target: target\n                };\n            },\n            'delete': function () {\n                var diagram = this.diagram;\n                var toRemove = diagram._triggerRemove(this.selectedElements());\n                if (toRemove.length) {\n                    this.diagram.remove(toRemove, true);\n                    this.diagram._syncChanges();\n                }\n            },\n            edit: function () {\n                var selectedElemens = this.selectedElements();\n                if (selectedElemens.length === 1) {\n                    this.diagram.edit(selectedElemens[0]);\n                }\n            },\n            rotateClockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(angle);\n            },\n            rotateAnticlockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(-angle);\n            },\n            _rotate: function (angle) {\n                var adorner = this.diagram._resizingAdorner;\n                adorner.angle(adorner.angle() + angle);\n                adorner.rotate();\n            },\n            selectedElements: function () {\n                return this.diagram.select();\n            },\n            createShape: function () {\n                this.diagram.createShape();\n            },\n            createConnection: function () {\n                this.diagram.createConnection();\n            },\n            undo: function () {\n                this.diagram.undo();\n            },\n            redo: function () {\n                this.diagram.redo();\n            },\n            destroy: function () {\n                this.diagram = null;\n                this.element = null;\n                this.options = null;\n                if (this._toolBar) {\n                    this._toolBar.destroy();\n                }\n                if (this._popup) {\n                    this._popup.destroy();\n                }\n            }\n        });\n        var Editor = kendo.Observable.extend({\n            init: function (element, options) {\n                kendo.Observable.fn.init.call(this);\n                this.options = extend(true, {}, this.options, options);\n                this.element = element;\n                this.model = this.options.model;\n                this.fields = this._getFields();\n                this._initContainer();\n                this.createEditable();\n            },\n            options: { editors: {} },\n            _initContainer: function () {\n                this.wrapper = this.element;\n            },\n            createEditable: function () {\n                var options = this.options;\n                this.editable = new kendo.ui.Editable(this.wrapper, {\n                    fields: this.fields,\n                    target: options.target,\n                    clearContainer: false,\n                    model: this.model\n                });\n            },\n            _isEditable: function (field) {\n                return this.model.editable && this.model.editable(field);\n            },\n            _getFields: function () {\n                var fields = [];\n                var modelFields = this.model.fields;\n                for (var field in modelFields) {\n                    var result = {};\n                    if (this._isEditable(field)) {\n                        var editor = this.options.editors[field];\n                        if (editor) {\n                            result.editor = editor;\n                        }\n                        result.field = field;\n                        fields.push(result);\n                    }\n                }\n                return fields;\n            },\n            end: function () {\n                return this.editable.end();\n            },\n            destroy: function () {\n                this.editable.destroy();\n                this.editable.element.find('[' + kendo.attr('container-for') + ']').empty();\n                this.model = this.wrapper = this.element = this.columns = this.editable = null;\n            }\n        });\n        var PopupEditor = Editor.extend({\n            init: function (element, options) {\n                Editor.fn.init.call(this, element, options);\n                this.bind(this.events, this.options);\n                this.open();\n            },\n            events: [\n                'update',\n                'cancel'\n            ],\n            options: {\n                window: {\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: 'Edit',\n                    visible: false\n                }\n            },\n            _initContainer: function () {\n                var that = this;\n                this.wrapper = $('<div class=\"k-popup-edit-form\"/>').attr(kendo.attr('uid'), this.model.uid);\n                var formContent = '';\n                if (this.options.template) {\n                    formContent += this._renderTemplate();\n                    this.fields = [];\n                } else {\n                    formContent += this._renderFields();\n                }\n                formContent += this._renderButtons();\n                this.wrapper.append($('<div class=\"k-edit-form-container\"/>').append(formContent));\n                this.window = new kendo.ui.Window(this.wrapper.appendTo(this.element), this.options.window);\n                this.window.bind('close', function (e) {\n                    if (e.userTriggered) {\n                        e.sender.element.focus();\n                        that._cancelClick(e);\n                    }\n                });\n                this._attachButtonEvents();\n            },\n            _renderTemplate: function () {\n                var template = this.options.template;\n                if (typeof template === 'string') {\n                    template = window.unescape(template);\n                }\n                template = kendo.template(template)(this.model);\n                return template;\n            },\n            _renderFields: function () {\n                var form = '';\n                for (var i = 0; i < this.fields.length; i++) {\n                    var field = this.fields[i];\n                    form += '<div class=\"k-edit-label\"><label for=\"' + field.field + '\">' + (field.field || '') + '</label></div>';\n                    if (this._isEditable(field.field)) {\n                        form += '<div ' + kendo.attr('container-for') + '=\"' + field.field + '\" class=\"k-edit-field\"></div>';\n                    }\n                }\n                return form;\n            },\n            _renderButtons: function () {\n                var form = '<div class=\"k-edit-buttons k-state-default\">';\n                form += this._createButton('update');\n                form += this._createButton('cancel');\n                form += '</div>';\n                return form;\n            },\n            _createButton: function (name) {\n                return kendo.template(BUTTON_TEMPLATE)(defaultButtons[name]);\n            },\n            _attachButtonEvents: function () {\n                this._cancelClickHandler = proxy(this._cancelClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this._updateClickHandler = proxy(this._updateClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n            },\n            _updateClick: function (e) {\n                e.preventDefault();\n                this.trigger('update');\n            },\n            _cancelClick: function (e) {\n                e.preventDefault();\n                this.trigger('cancel');\n            },\n            open: function () {\n                this.window.center().open();\n            },\n            close: function () {\n                this.window.bind('deactivate', proxy(this.destroy, this)).close();\n            },\n            destroy: function () {\n                this.window.close().destroy();\n                this.window.element.off(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this.window.element.off(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n                this._cancelClickHandler = null;\n                this._editUpdateClickHandler = null;\n                this.window = null;\n                Editor.fn.destroy.call(this);\n            }\n        });\n        function connectionSelector(container, options) {\n            var model = this.dataSource.reader.model;\n            if (model) {\n                var textField = model.fn.fields.text ? 'text' : model.idField;\n                $('<input name=\\'' + options.field + '\\' />').appendTo(container).kendoDropDownList({\n                    dataValueField: model.idField,\n                    dataTextField: textField,\n                    dataSource: this.dataSource.data().toJSON(),\n                    optionLabel: ' ',\n                    valuePrimitive: true\n                });\n            }\n        }\n        function InactiveItem(dataItem) {\n            this.dataItem = dataItem;\n            this.callbacks = [];\n        }\n        InactiveItem.fn = InactiveItem.prototype = {\n            onActivate: function (callback) {\n                var deffered = $.Deferred();\n                this.callbacks.push({\n                    callback: callback,\n                    deferred: deffered\n                });\n                return deffered;\n            },\n            activate: function () {\n                var callbacks = this.callbacks;\n                var item;\n                for (var idx = 0; idx < callbacks.length; idx++) {\n                    item = this.callbacks[idx];\n                    item.callback(this.dataItem);\n                    item.deferred.resolve();\n                }\n                this.callbacks = [];\n            }\n        };\n        function InactiveItemsCollection() {\n            this.items = {};\n        }\n        InactiveItemsCollection.fn = InactiveItemsCollection.prototype = {\n            add: function (items) {\n                for (var idx = 0; idx < items.length; idx++) {\n                    this.items[items[idx].uid] = new InactiveItem(items[idx]);\n                }\n            },\n            forEach: function (callback) {\n                for (var uid in this.items) {\n                    callback(this.items[uid]);\n                }\n            },\n            getByUid: function (uid) {\n                return this.items[uid];\n            },\n            remove: function (item) {\n                delete this.items[item.uid];\n            }\n        };\n        var QuadRoot = Class.extend({\n            init: function () {\n                this.shapes = [];\n            },\n            _add: function (shape, bounds) {\n                this.shapes.push({\n                    bounds: bounds,\n                    shape: shape\n                });\n                shape._quadNode = this;\n            },\n            insert: function (shape, bounds) {\n                this._add(shape, bounds);\n            },\n            remove: function (shape) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (shapes[idx].shape === shape) {\n                        shapes.splice(idx, 1);\n                        break;\n                    }\n                }\n            },\n            hitTestRect: function (rect, exclude) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var i = 0; i < length; i++) {\n                    if (this._testRect(shapes[i].shape, rect) && !dataviz.inArray(shapes[i].shape, exclude)) {\n                        return true;\n                    }\n                }\n            },\n            _testRect: function (shape, rect) {\n                var angle = shape.rotate().angle;\n                var bounds = shape.bounds();\n                var hit;\n                if (!angle) {\n                    hit = bounds.overlaps(rect);\n                } else {\n                    hit = Intersect.rects(rect, bounds, -angle);\n                }\n                return hit;\n            }\n        });\n        var QuadNode = QuadRoot.extend({\n            init: function (rect) {\n                QuadRoot.fn.init.call(this);\n                this.children = [];\n                this.rect = rect;\n            },\n            inBounds: function (rect) {\n                var nodeRect = this.rect;\n                var nodeBottomRight = nodeRect.bottomRight();\n                var bottomRight = rect.bottomRight();\n                var inBounds = nodeRect.x <= rect.x && nodeRect.y <= rect.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;\n                return inBounds;\n            },\n            overlapsBounds: function (rect) {\n                return this.rect.overlaps(rect);\n            },\n            insert: function (shape, bounds) {\n                var inserted = false;\n                var children = this.children;\n                var length = children.length;\n                if (this.inBounds(bounds)) {\n                    if (!length && this.shapes.length < 4) {\n                        this._add(shape, bounds);\n                    } else {\n                        if (!length) {\n                            this._initChildren();\n                        }\n                        for (var idx = 0; idx < children.length; idx++) {\n                            if (children[idx].insert(shape, bounds)) {\n                                inserted = true;\n                                break;\n                            }\n                        }\n                        if (!inserted) {\n                            this._add(shape, bounds);\n                        }\n                    }\n                    inserted = true;\n                }\n                return inserted;\n            },\n            _initChildren: function () {\n                var rect = this.rect, children = this.children, shapes = this.shapes, center = rect.center(), halfWidth = rect.width / 2, halfHeight = rect.height / 2, childIdx, shapeIdx;\n                children.push(new QuadNode(new Rect(rect.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(rect.x, center.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, center.y, halfWidth, halfHeight)));\n                for (shapeIdx = shapes.length - 1; shapeIdx >= 0; shapeIdx--) {\n                    for (childIdx = 0; childIdx < children.length; childIdx++) {\n                        if (children[childIdx].insert(shapes[shapeIdx].shape, shapes[shapeIdx].bounds)) {\n                            shapes.splice(shapeIdx, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hitTestRect: function (rect, exclude) {\n                var idx;\n                var children = this.children;\n                var length = children.length;\n                var hit = false;\n                if (this.overlapsBounds(rect)) {\n                    if (QuadRoot.fn.hitTestRect.call(this, rect, exclude)) {\n                        hit = true;\n                    } else {\n                        for (idx = 0; idx < length; idx++) {\n                            if (children[idx].hitTestRect(rect, exclude)) {\n                                hit = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                return hit;\n            }\n        });\n        var ShapesQuadTree = Class.extend({\n            ROOT_SIZE: 1000,\n            init: function (diagram) {\n                var boundsChangeHandler = proxy(this._boundsChange, this);\n                diagram.bind(ITEMBOUNDSCHANGE, boundsChangeHandler);\n                diagram.bind(ITEMROTATE, boundsChangeHandler);\n                this.initRoots();\n            },\n            initRoots: function () {\n                this.rootMap = {};\n                this.root = new QuadRoot();\n            },\n            clear: function () {\n                this.initRoots();\n            },\n            _boundsChange: function (e) {\n                if (e.item._quadNode) {\n                    e.item._quadNode.remove(e.item);\n                }\n                this.insert(e.item);\n            },\n            insert: function (shape) {\n                var bounds = shape.bounds(ROTATED);\n                var rootSize = this.ROOT_SIZE;\n                var sectors = this.getSectors(bounds);\n                var x = sectors[0][0];\n                var y = sectors[1][0];\n                if (this.inRoot(sectors)) {\n                    this.root.insert(shape, bounds);\n                } else {\n                    if (!this.rootMap[x]) {\n                        this.rootMap[x] = {};\n                    }\n                    if (!this.rootMap[x][y]) {\n                        this.rootMap[x][y] = new QuadNode(new Rect(x * rootSize, y * rootSize, rootSize, rootSize));\n                    }\n                    this.rootMap[x][y].insert(shape, bounds);\n                }\n            },\n            remove: function (shape) {\n                if (shape._quadNode) {\n                    shape._quadNode.remove(shape);\n                }\n            },\n            inRoot: function (sectors) {\n                return sectors[0].length > 1 || sectors[1].length > 1;\n            },\n            getSectors: function (rect) {\n                var rootSize = this.ROOT_SIZE;\n                var bottomRight = rect.bottomRight();\n                var bottomX = math.floor(bottomRight.x / rootSize);\n                var bottomY = math.floor(bottomRight.y / rootSize);\n                var sectors = [\n                    [],\n                    []\n                ];\n                for (var x = math.floor(rect.x / rootSize); x <= bottomX; x++) {\n                    sectors[0].push(x);\n                }\n                for (var y = math.floor(rect.y / rootSize); y <= bottomY; y++) {\n                    sectors[1].push(y);\n                }\n                return sectors;\n            },\n            hitTestRect: function (rect, exclude) {\n                var sectors = this.getSectors(rect);\n                var xIdx, yIdx, x, y;\n                var root;\n                if (this.root.hitTestRect(rect, exclude)) {\n                    return true;\n                }\n                for (xIdx = 0; xIdx < sectors[0].length; xIdx++) {\n                    x = sectors[0][xIdx];\n                    for (yIdx = 0; yIdx < sectors[1].length; yIdx++) {\n                        y = sectors[1][yIdx];\n                        root = (this.rootMap[x] || {})[y];\n                        if (root && root.hitTestRect(rect, exclude)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n        });\n        function cloneDataItem(dataItem) {\n            var result = dataItem;\n            if (dataItem instanceof kendo.data.Model) {\n                result = dataItem.toJSON();\n                result[dataItem.idField] = dataItem._defaultId;\n            }\n            return result;\n        }\n        function splitDiagramElements(elements) {\n            var connections = [];\n            var shapes = [];\n            var element, idx;\n            for (idx = 0; idx < elements.length; idx++) {\n                element = elements[idx];\n                if (element instanceof Shape) {\n                    shapes.push(element);\n                } else {\n                    connections.push(element);\n                }\n            }\n            return {\n                shapes: shapes,\n                connections: connections\n            };\n        }\n        function createModel(dataSource, model) {\n            if (dataSource.reader.model) {\n                return new dataSource.reader.model(model);\n            }\n            return new kendo.data.ObservableObject(model);\n        }\n        function clearField(field, model) {\n            if (defined(model[field])) {\n                model.set(field, null);\n            }\n        }\n        function copyDefaultOptions(mainOptions, elementOptions, fields) {\n            var field;\n            for (var idx = 0; idx < fields.length; idx++) {\n                field = fields[idx];\n                if (elementOptions && !defined(elementOptions[field])) {\n                    elementOptions[field] = mainOptions[field];\n                }\n            }\n        }\n        function translateToOrigin(visual) {\n            var bbox = visual.drawingContainer().clippedBBox(null);\n            if (bbox.origin.x !== 0 || bbox.origin.y !== 0) {\n                visual.position(-bbox.origin.x, -bbox.origin.y);\n            }\n        }\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n        dataviz.ui.plugin(Diagram);\n        deepExtend(diagram, {\n            Shape: Shape,\n            Connection: Connection,\n            Connector: Connector,\n            DiagramToolBar: DiagramToolBar,\n            QuadNode: QuadNode,\n            QuadRoot: QuadRoot,\n            ShapesQuadTree: ShapesQuadTree,\n            PopupEditor: PopupEditor\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.diagram', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.userevents',\n        'kendo.mobile.scroller',\n        'kendo.drawing',\n        'dataviz/diagram/utils',\n        'dataviz/diagram/math',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout',\n        'dataviz/diagram/dom'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.diagram',\n        name: 'Diagram',\n        category: 'dataviz',\n        description: 'The Kendo DataViz Diagram ',\n        depends: [\n            'data',\n            'userevents',\n            'mobile.scroller',\n            'draganddrop',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes',\n            'toolbar'\n        ],\n        features: [\n            {\n                id: 'dataviz.diagram-pdf-export',\n                name: 'PDF export',\n                description: 'Export Diagram as PDF',\n                depends: ['pdf']\n            },\n            {\n                id: 'dataviz.diagram-editing',\n                name: 'Editing',\n                description: 'Support for model editing',\n                depends: [\n                    'editable',\n                    'window',\n                    'dropdownlist'\n                ]\n            }\n        ]\n    };\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}