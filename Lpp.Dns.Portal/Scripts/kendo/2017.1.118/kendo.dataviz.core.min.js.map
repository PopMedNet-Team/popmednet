{"version":3,"sources":["kendo.dataviz.core.js"],"names":["f","define","$","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","text","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","textContent","appendChild","body","String","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","isArray","Array","addClass","element","classes","idx","className","classArray","indexOf","removeClass","replace","SPACE_REGEX","alignPathToPixel","path","offset","stroke","drawing","defined","segments","anchor","round","translate","clockwise","angle1","angle2","x","y","isObject","isString","STRING","isNumber","isNaN","styleValue","isSizeField","field","SIZE_STYLES_REGEX","test","elementStyles","styles","result","field$1","stylesArray","getComputedStyle","parseFloat","getSpacing","defaultSpacing","spacing","top","right","bottom","left","TOP","RIGHT","BOTTOM","LEFT","getter","getterCache","fields","FIELD_REGEX","match","index","obj","grep","array","callback","hasClasses","classNames","names","split","inArray","interpolateValue","start","end","progress","COORD_PRECISION","isFunction","fn","mousewheelDelta","e","delta","wheelDelta","Math","ceil","floor","detail","setDefaultOptions","type","proto","prototype","sparseArrayLimits","arr","min","MAX_VALUE","max","MIN_VALUE","isFinite","undefined","rotatePoint","cx","cy","angle","theta","rad","Point","cos","sin","numericComparer","a","b","boxDiff","r","s","c","d","g","h","boxes","x1","y1","x2","y2","Box","innerRadialStops","currentStop","stops","usedSpace","innerRadius","radius","currentStops","rectToBox","rect","origin","bottomRight","createAxisTick","tickOptions","tickX","tickY","position","tick","Path","color","vertical","moveTo","lineTo","createAxisGridLine","gridLine","lineStart","lineEnd","line","dashType","absoluteDateDiff","diff","getTime","offsetDiff","getTimezoneOffset","TIME_PER_MINUTE","addTicks","date","ticks","Date","toDate","startOfWeek","weekStartDay","daysToSubtract","day","getDay","TIME_PER_DAY","adjustDST","hours","getHours","setHours","addHours","tzDiff","roundedDate","setMinutes","TIME_PER_HOUR","addDuration","dateValue","unit","YEARS","getFullYear","MONTHS","getMonth","WEEKS","DAYS","getDate","HOURS","MINUTES","getSeconds","setSeconds","SECONDS","TIME_PER_SECOND","MILLISECONDS","getMilliseconds","setMilliseconds","floorDate","ceilDate","dateComparer","dateDiff","toTime","dateEquals","timeIndex","baseUnit","TIME_PER_UNIT","dateIndex","baseUnitStep","startDate","duration","lteDateIndex","sortedDates","currentDate","low","high","parseDate","intlService","parseDates","dates","autoMajorUnit","scale","relativeValue","scaleMultiplier","DEFAULT_PRECISION","abs","pow","log","autoAxisMin","narrow","axisMin","minValue","ZERO_THRESHOLD","autoAxisMax","axisMax","maxValue","step","limitCoordinate","COORDINATE_LIMIT","autoAxisOptions","seriesMin","seriesMax","narrowRange","autoMin","autoMax","majorUnit","autoOptions","roundToMajorUnit","remainderClose","totalAxisOptions","axisOptions","userOptions","userSetLimits","minorUnit","divisor","ratio","remainder","threshold","timeUnits","TIME_PER_YEAR","TIME_PER_MONTH","TIME_PER_WEEK","applyDefaults","baseUnitTime","userMajorUnit","actualUnits","totalUnits","unitsToAdd","head","tail","initRange","axisCrossingValue","throwNegativeValuesError","autoAxisMin$1","base","autoAxisMax$1","logMaxRemainder","Error","angularDistance","numberSign","Group","geometry","Rect","Circle","geometryTransform","Segment","X","Y","CENTER","WIDTH","HEIGHT","DEFAULT_WIDTH","DEFAULT_HEIGHT","WHITE","BLACK","DEFAULT_FONT","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","OUTSIDE","NONE","CIRCLE","TRIANGLE","CROSS","ARC","INSIDE","VALUE","OBJECT","DATE","FORMAT_REGEX","constants","InstanceObserver","ref","append","bindEvents","deg","elementOffset","elementSize","eventElement","eventCoordinates","last","limitValue","unbindEvents","valueOrDefault","FontLoader","Ring","Sector","ShapeBuilder","ChartElement","BoxElement","ShapeElement","LINEAR","RADIAL","GRADIENTS","RootElement","FloatElement","DrawingText","Text","ROWS_SPLIT_REGEX","TextBox","Title","AxisLabel","defaultImplementation","IntlService","FORMAT_REPLACE_REGEX","FormatService","ChartService","current$1","DomEventsBuilder","current$2","TemplateService","services","DEFAULT_ICON_SIZE","DEFAULT_LABEL_COLOR","Note","Axis","MIN_CATEGORY_POINTS_RANGE","CategoryAxis","TIME_PER_MILLISECOND","DateLabelFormats","AUTO","BASE_UNITS","FIT","DateCategoryAxis","MIN_VALUE_RANGE","NumericAxis","DateValueAxis","DEFAULT_MAJOR_UNIT","LogarithmicAxis","GridLinesMixin","RadarCategoryAxis","PolarAxis","RadarNumericAxisMixin","RadarNumericAxis","RadarLogarithmicAxis","WEIGHT","EXTREMUM_ALLOWED_DEVIATION","CurveProcessor","dataviz","transform","Number","observer","handlers","handlerMap","trigger","name","args","isDefaultPrevented","requiresHandlers","this$1","fetchFonts","fonts","state","depth","MAX_DEPTH","Object","keys","forEach","loadFonts","promises","font","load","logToConsole","Promise","all","then","preloadFonts","clone","equals","point","rotate","center","degrees","cosT","sinT","multiply","distanceTo","dx","dy","sqrt","onCircle","radians","move","wrap","targetBox","wrapPoint","arrayPoint","snapTo","axis","alignTo","targetCenter","shrink","dw","dh","expand","pad","padding","unpad","containsPoint","points","getHash","overlaps","rotation","r1","r2","r3","r4","toRect","hasSize","align","alignment","c1","c2","sizeFunc","startAngle","middle","setRadius","newRadius","radianAngle","ax","ay","adjacentBox","distance","sector","midAndle","midPoint","hw","hh","sa","ca","p","endAngle","vector","startPoint","startVector","endPoint","endVector","dist","getBBox","angles","allAngles","startAngleIndex","endAngleIndex","slice","concat","call","createRing","innerEnd","arc","Arc","radiusX","radiusY","fromArc","close","pointAt","children","reflow","currentChild","destroy","animation","getRoot","parent","getSender","service","getService","sender","chartService","translateChildren","childrenCount","item","arguments$1","arguments","renderVisual","visible","createVisual","addVisual","renderChildren","createAnimation","renderComplete","visual","chartElement","appendVisual","zIndex","Animation","create","childVisual","noclip","clipRoot","stackRoot","stackVisual","isStackRoot","pos","sibling","here","visuals","insert","traverse","child","closest","matched","hasHighlight","highlight","createHighlight","toggleHighlight","show","highlightOptions","customVisual","_highlight","fill","opacity","highlightVisualArgs","series","dataItem","category","percentage","runningTotal","total","createGradientOverlay","gradientOptions","overlay","createGradient","closed","elements","margin","shrinkToFit","hasSetSize","borderWidth","border","reflowPaddingBox","vAlign","paddingBox","contentBox","hasBox","background","fromRect","visualStyle","cursor","pointData","getElement","halfWidth","fromPoints","MultiPath","visualOptions","glass","sharpBevel","roundedBevel","roundedGlass","supportVML","sharpGlass","bubbleShadow","rootOptions","parseInt","gradients","currentBox","createBackground","drawingGradient","hashCode","gradient","LinearGradient","RadialGradient","_initDirection","groupAxis","elementAxis","groupSizeField","elementSizeField","groupSpacing","elementSpacing","vSpacing","reflowChildren","groupStart","groupIdx","group","groupElements","elementStart","groupElementsCount","elementSize$$1","groupElementStart","elementBox","ref$1","groupOptions","groups","groupsSize","maxGroupElementsSize","groupsCount","groupsStart","alignStart","groupSize","maxSize","groupElementsSize","content","topLeft","_initContainer","_autoReflow","rowIdx","rows","floatElement","textOptions","container","trim","visualBox","visualFn","_boxReflow","visualContext","clippedBBox","normalBox","rotatedBox","rotationTransform","getDefaultVisual","boxCenter","buildTitle","defaultOptions","title","titleOptions","context","format","culture","click","widget","alignRotation","bbox","matrix","rotationMatrix","rotationOrigin","alignAxis","distanceAxis","axisAnchor","topRight","bottomLeft","distanceLeft","distanceRight","alignEnd","alignCenter","transformCopy","toString","register","userImplementation","defineProperties","implementation","_intlService","auto","formatString","intl","values","len","apply","localeAuto","locale","placeholderFormat","substring","chart","notify","events","compile","template","render","hide","label","icon","noteTemplate","wrapperBox","linePoints","createLine","defaultVisual","eventArgs","preventDefault","hover","leave","_unsetActivePoint","labels","majorTickSize","minorTickSize","minorTicks","minorTickType","majorTicks","majorTickType","_deferLabels","createLabels","createTitle","createNotes","labelsRange","skip","labelsCount","range","labelOptions","autoRotateLabels","createAxisLabel","lineBox","mirror","axisX","axisY","lineWidth","visualSize","note","notes","items","data","parseNoteValue","reverse","createPlotBands","gridLinesVisual","gridLines","_gridLines","createTicks","lineGroup","tickPositions","skipUnit","count","tickLineOptions","getMajorTickPositions","getMinorTickPositions","_alignLines","_lineGroup","getActualTickSize","tickSize","_backgroundPath","altAxis","slotX","slotY","bandRect","plotBands","plotArea","_plotbandGroup","pane","axes","getSlot","from","to","createGridLines","axisLineVisible","linePos","lineOptions","minorGridLines","majorGridLines","labelSize","sizeFn","titleSize","space","rootBox","boxSize","maxLabelSize","arrangeTitle","arrangeLabels","arrangeNotes","getLabelsTickPositions","labelTickIndex","tickIx","labelPos","labelBox","firstTickPosition","nextTickPosition","labelX","labelY","labelsBetweenTicks","justified","labelOffset","idx$1","slot","shouldRenderNote","noteSlot","secondAxis","axisLabelText","tmpl","limit","lastLabel","limitRange","rangeSize","valueRange","_ticks","_initCategories","categories","definedMin","definedMax","srcCategories","rangeIndices","totalRange","totalRangeIndices","_seriesMax","getScale","getTickPositions","stepSize","positions","unshift","hideOutOfRangeLabels","valueAxis","firstLabel","getTicks","cache","_hash","p1","p2","slotBox","singleSlot","categoryIndex","pointCategoryIndex","startValue","getCategory","translateRange","zoomRange","rate","totalMin","totalMax","scaleRange","dataItems","hideOutOfRangeNotes","pan","pointsRange","diffStart","diffEnd","rangeMin","rangeMax","years","months","weeks","days","minutes","seconds","milliseconds","useDefault","roundToBaseUnit","userSetBaseUnit","userSetBaseUnitStep","toLowerCase","defaultBaseUnit","autoBaseUnit","_groupsStart","groupCategories","rounds","lastCategory","categoryIx","minDiff","_categoryRange","_range","categoryLimits","minIdx","maxIdx","categoriesRange","_roundToTotalStep","currentRange","round$$1","datesRange","totalLimits","panRange","indicesRange","autoBaseUnitSteps","maxDateGroups","maxDiff","rangeDiff","baseUnitIndex","autoBaseUnitStep","stepIndex","rangeOptions","autoUnit","stepOptions","unitSteps","nextStep","span","autoUnitIx","units","shift","maxCategory","nextDate","upper","roundToNext","roundedStep","unitFormat","dateFormats","totalOptions","totalMajorUnit","getDivisions","stepValue","lineSize","divisions","dir","startEdge","skipStep","getValue","valueOffset","endValue","isValidRange","newRange","axisCrossingValues","timeRange","exact","limittedRange","logMin","logMax","floorMax","traverseMajorTicksPositions","tickPosition","traverseMinorTicksPositions","power","_lineOptions","minorOptions","ref$2","_minorIntervalOptions","minorStep","acceptOptionsRange","acceptNewRange","nextValue","difference","majorAngles","minorAngles","skipMajor","majorGridLineAngles","renderMajorGridLines","minorGridLineAngles","renderMinorGridLines","renderGridLines","radiusCallback","circle","gridLineAngles","skipAngles","divs","intervals","altAxisVisible","alpha","intervalAngle","reflowLabels","ref_options_labels","divCount","divAngle","majorIntervals","minorIntervals","interval","minorAngle","minorRadius","band","ring","plotBandSlot","slotStart","toValue","slots","totalDivs","slotAngle","fromValue","instanceOptions","tmp","atan2","PI","bandStyle","shape","polarAxis","plotBandPoints","innerPoints","outerPoints","innerCircle","outerCircle","radarMajorGridLinePositions","radarMinorGridLinePositions","tickRadius","angleIx","midAngle","gamma","beta","axisType","minorSkipStep","process","dataPoints","p0","tangent","initialControlPoint","lastControlPoint","controlPoints","tangent$1","cp0","controlPoints$1","cp1","controlPoints$2","tangent$2","removeDuplicates","pop","controlOut","firstControlPoint","secondControlPoint","splice","invertAxis","lineFunction","calculateFunction","isLine","monotonic","sign","oldXField","xField","yField","restrict","switchOrientation","isMonotonicByField","restrictControlPoint","cp","p3","t1","t2","xValue","yValue","controlPoint","Gradients","draw","ExportMixin","skipLegacy","exportVisual","exportSVG","exportImage","exportPDF","svg","imageDataURL","Surface","exportGroup","surface","image","support","canvas","css","display","appendTo","_rootElement","toDataURL","remove","Point2D","Box2D","mwDelta","originalEvent"],"mappings":"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","file":"kendo.dataviz.core.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                measureBox.textContent = text;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (String(text).length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/kendo-core', [\n        'kendo.core',\n        'kendo.drawing'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var drawing = kendo.drawing;\n        var util = drawing.util;\n        var Path = drawing.Path;\n        var Group = drawing.Group;\n        var Class = kendo.Class;\n        var geometry = kendo.geometry;\n        var Rect = geometry.Rect;\n        var Circle = geometry.Circle;\n        var geometryTransform = geometry.transform;\n        var Segment = geometry.Segment;\n        var deepExtend = kendo.deepExtend;\n        var X = 'x';\n        var Y = 'y';\n        var TOP = 'top';\n        var BOTTOM = 'bottom';\n        var LEFT = 'left';\n        var RIGHT = 'right';\n        var CENTER = 'center';\n        var WIDTH = 'width';\n        var HEIGHT = 'height';\n        var COORD_PRECISION = 3;\n        var MAX_VALUE = Number.MAX_VALUE;\n        var MIN_VALUE = -Number.MAX_VALUE;\n        var DEFAULT_WIDTH = 600;\n        var DEFAULT_HEIGHT = 400;\n        var WHITE = '#fff';\n        var BLACK = '#000';\n        var DEFAULT_FONT = '12px sans-serif';\n        var DEFAULT_PRECISION = 10;\n        var AXIS_LABEL_CLICK = 'axisLabelClick';\n        var NOTE_CLICK = 'noteClick';\n        var NOTE_HOVER = 'noteHover';\n        var OUTSIDE = 'outside';\n        var NONE = 'none';\n        var CIRCLE = 'circle';\n        var TRIANGLE = 'triangle';\n        var CROSS = 'cross';\n        var ARC = 'arc';\n        var INSIDE = 'inside';\n        var VALUE = 'value';\n        var STRING = 'string';\n        var OBJECT = 'object';\n        var DATE = 'date';\n        var FORMAT_REGEX = /\\{\\d+:?/;\n        var constants = {\n            X: X,\n            Y: Y,\n            WIDTH: WIDTH,\n            HEIGHT: HEIGHT,\n            DEFAULT_HEIGHT: DEFAULT_HEIGHT,\n            DEFAULT_WIDTH: DEFAULT_WIDTH,\n            TOP: TOP,\n            LEFT: LEFT,\n            BOTTOM: BOTTOM,\n            RIGHT: RIGHT,\n            CENTER: CENTER,\n            COORD_PRECISION: COORD_PRECISION,\n            DEFAULT_PRECISION: DEFAULT_PRECISION,\n            CIRCLE: CIRCLE,\n            TRIANGLE: TRIANGLE,\n            CROSS: CROSS,\n            MAX_VALUE: MAX_VALUE,\n            MIN_VALUE: MIN_VALUE,\n            WHITE: WHITE,\n            BLACK: BLACK,\n            DEFAULT_FONT: DEFAULT_FONT,\n            AXIS_LABEL_CLICK: AXIS_LABEL_CLICK,\n            OUTSIDE: OUTSIDE,\n            INSIDE: INSIDE,\n            NONE: NONE,\n            NOTE_CLICK: NOTE_CLICK,\n            NOTE_HOVER: NOTE_HOVER,\n            VALUE: VALUE,\n            STRING: STRING,\n            OBJECT: OBJECT,\n            DATE: DATE,\n            ARC: ARC,\n            FORMAT_REGEX: FORMAT_REGEX\n        };\n        function isArray(value) {\n            return Array.isArray(value);\n        }\n        function addClass(element, classes) {\n            var classArray = isArray(classes) ? classes : [classes];\n            for (var idx = 0; idx < classArray.length; idx++) {\n                var className = classArray[idx];\n                if (element.className.indexOf(className) === -1) {\n                    element.className += ' ' + className;\n                }\n            }\n        }\n        var SPACE_REGEX = /\\s+/g;\n        function removeClass(element, className) {\n            if (element && element.className) {\n                element.className = element.className.replace(className, '').replace(SPACE_REGEX, ' ');\n            }\n        }\n        function alignPathToPixel(path) {\n            var offset = 0.5;\n            if (path.options.stroke && kendo.drawing.util.defined(path.options.stroke.width)) {\n                if (path.options.stroke.width % 2 === 0) {\n                    offset = 0;\n                }\n            }\n            for (var i = 0; i < path.segments.length; i++) {\n                path.segments[i].anchor().round(0).translate(offset, offset);\n            }\n            return path;\n        }\n        function clockwise(angle1, angle2) {\n            return -angle1.x * angle2.y + angle1.y * angle2.x < 0;\n        }\n        function isObject(value) {\n            return typeof value === 'object';\n        }\n        function isString(value) {\n            return typeof value === STRING;\n        }\n        function isNumber(value) {\n            return typeof value === 'number' && !isNaN(value);\n        }\n        function styleValue(value) {\n            if (isNumber(value)) {\n                return value + 'px';\n            }\n            return value;\n        }\n        var SIZE_STYLES_REGEX = /width|height|top|left|bottom|right/i;\n        function isSizeField(field) {\n            return SIZE_STYLES_REGEX.test(field);\n        }\n        function elementStyles(element, styles) {\n            var stylesArray = isString(styles) ? [styles] : styles;\n            if (isArray(stylesArray)) {\n                var result = {};\n                var style = window.getComputedStyle(element);\n                for (var idx = 0; idx < stylesArray.length; idx++) {\n                    var field = stylesArray[idx];\n                    result[field] = isSizeField(field) ? parseFloat(style[field]) : style[field];\n                }\n                return result;\n            } else if (isObject(styles)) {\n                for (var field$1 in styles) {\n                    element.style[field$1] = styleValue(styles[field$1]);\n                }\n            }\n        }\n        function getSpacing(value, defaultSpacing) {\n            if (defaultSpacing === void 0) {\n                defaultSpacing = 0;\n            }\n            var spacing = {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            };\n            if (typeof value === 'number') {\n                spacing[TOP] = spacing[RIGHT] = spacing[BOTTOM] = spacing[LEFT] = value;\n            } else {\n                spacing[TOP] = value[TOP] || defaultSpacing;\n                spacing[RIGHT] = value[RIGHT] || defaultSpacing;\n                spacing[BOTTOM] = value[BOTTOM] || defaultSpacing;\n                spacing[LEFT] = value[LEFT] || defaultSpacing;\n            }\n            return spacing;\n        }\n        var FIELD_REGEX = /\\[(\\d+)\\]|([^\\.]+)/g;\n        var getterCache = {};\n        getterCache['undefined'] = function (obj) {\n            return obj;\n        };\n        function getter(field) {\n            if (getterCache[field]) {\n                return getterCache[field];\n            }\n            var fields = [];\n            field.replace(FIELD_REGEX, function (match, index, field) {\n                fields.push(kendo.drawing.util.defined(index) ? index : field);\n            });\n            getterCache[field] = function (obj) {\n                var result = obj;\n                for (var idx = 0; idx < fields.length && result; idx++) {\n                    result = result[fields[idx]];\n                }\n                return result;\n            };\n            return getterCache[field];\n        }\n        function grep(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                if (callback(array[idx])) {\n                    result.push(array[idx]);\n                }\n            }\n            return result;\n        }\n        function hasClasses(element, classNames) {\n            if (element.className) {\n                var names = classNames.split(' ');\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (element.className.indexOf(names[idx]) !== -1) {\n                        return true;\n                    }\n                }\n            }\n        }\n        function inArray(value, array) {\n            if (array) {\n                return array.indexOf(value) !== -1;\n            }\n        }\n        function interpolateValue(start, end, progress) {\n            return kendo.drawing.util.round(start + (end - start) * progress, COORD_PRECISION);\n        }\n        var InstanceObserver = Class.extend({\n            init: function (observer, handlers) {\n                this.observer = observer;\n                this.handlerMap = deepExtend({}, this.handlerMap, handlers);\n            },\n            trigger: function (name, args) {\n                var ref = this;\n                var observer = ref.observer;\n                var handlerMap = ref.handlerMap;\n                var isDefaultPrevented;\n                if (handlerMap[name]) {\n                    isDefaultPrevented = observer[handlerMap[name]](args);\n                } else if (observer.trigger) {\n                    isDefaultPrevented = observer.trigger(name, args);\n                }\n                return isDefaultPrevented;\n            },\n            requiresHandlers: function (names) {\n                var this$1 = this;\n                if (this.observer.requiresHandlers) {\n                    return this.observer.requiresHandlers(names);\n                }\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (this$1.handlerMap[names[idx]]) {\n                        return true;\n                    }\n                }\n            }\n        });\n        function isFunction(fn) {\n            return typeof fn === 'function';\n        }\n        function map(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                var value = callback(array[idx]);\n                if (kendo.drawing.util.defined(value)) {\n                    result.push(value);\n                }\n            }\n            return result;\n        }\n        function mousewheelDelta(e) {\n            var delta = 0;\n            if (e.wheelDelta) {\n                delta = -e.wheelDelta / 120;\n                delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n            }\n            if (e.detail) {\n                delta = kendo.drawing.util.round(e.detail / 3);\n            }\n            return delta;\n        }\n        var ref = kendo.drawing.util;\n        var append = ref.append;\n        var bindEvents = ref.bindEvents;\n        var defined = ref.defined;\n        var deg = ref.deg;\n        var elementOffset = ref.elementOffset;\n        var elementSize = ref.elementSize;\n        var eventElement = ref.eventElement;\n        var eventCoordinates = ref.eventCoordinates;\n        var last = ref.last;\n        var limitValue = ref.limitValue;\n        var objectKey = ref.objectKey;\n        var rad = ref.rad;\n        var round = ref.round;\n        var unbindEvents = ref.unbindEvents;\n        var valueOrDefault = ref.valueOrDefault;\n        var FontLoader = Class.extend({});\n        FontLoader.fetchFonts = function (options, fonts, state) {\n            if (state === void 0) {\n                state = { depth: 0 };\n            }\n            var MAX_DEPTH = 5;\n            if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n                return;\n            }\n            Object.keys(options).forEach(function (key) {\n                var value = options[key];\n                if (key === 'dataSource' || key[0] === '$' || !value) {\n                    return;\n                }\n                if (key === 'font') {\n                    fonts.push(value);\n                } else if (typeof value === 'object') {\n                    state.depth++;\n                    FontLoader.fetchFonts(value, fonts, state);\n                    state.depth--;\n                }\n            });\n        };\n        FontLoader.loadFonts = function (fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        };\n        FontLoader.preloadFonts = function (options, callback) {\n            var fonts = [];\n            FontLoader.fetchFonts(options, fonts);\n            FontLoader.loadFonts(fonts, callback);\n        };\n        function setDefaultOptions(type, options) {\n            var proto = type.prototype;\n            if (proto.options) {\n                proto.options = deepExtend({}, proto.options, options);\n            } else {\n                proto.options = options;\n            }\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_VALUE;\n            var max = MIN_VALUE;\n            for (var idx = 0, length = arr.length; idx < length; idx++) {\n                var value = arr[idx];\n                if (value !== null && isFinite(value)) {\n                    min = Math.min(min, value);\n                    max = Math.max(max, value);\n                }\n            }\n            return {\n                min: min === MAX_VALUE ? undefined : min,\n                max: max === MIN_VALUE ? undefined : max\n            };\n        }\n        var Point = Class.extend({\n            init: function (x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n            },\n            clone: function () {\n                return new Point(this.x, this.y);\n            },\n            equals: function (point) {\n                return point && this.x === point.x && this.y === point.y;\n            },\n            rotate: function (center, degrees) {\n                var theta = rad(degrees);\n                var cosT = Math.cos(theta);\n                var sinT = Math.sin(theta);\n                var cx = center.x;\n                var cy = center.y;\n                var ref = this;\n                var x = ref.x;\n                var y = ref.y;\n                this.x = round(cx + (x - cx) * cosT + (y - cy) * sinT, COORD_PRECISION);\n                this.y = round(cy + (y - cy) * cosT - (x - cx) * sinT, COORD_PRECISION);\n                return this;\n            },\n            multiply: function (a) {\n                this.x *= a;\n                this.y *= a;\n                return this;\n            },\n            distanceTo: function (point) {\n                var dx = this.x - point.x;\n                var dy = this.y - point.y;\n                return Math.sqrt(dx * dx + dy * dy);\n            }\n        });\n        Point.onCircle = function (center, angle, radius) {\n            var radians = rad(angle);\n            return new Point(center.x - radius * Math.cos(radians), center.y - radius * Math.sin(radians));\n        };\n        var Box = Class.extend({\n            init: function (x1, y1, x2, y2) {\n                this.x1 = x1 || 0;\n                this.y1 = y1 || 0;\n                this.x2 = x2 || 0;\n                this.y2 = y2 || 0;\n            },\n            width: function () {\n                return this.x2 - this.x1;\n            },\n            height: function () {\n                return this.y2 - this.y1;\n            },\n            translate: function (dx, dy) {\n                this.x1 += dx;\n                this.x2 += dx;\n                this.y1 += dy;\n                this.y2 += dy;\n                return this;\n            },\n            move: function (x, y) {\n                var height = this.height();\n                var width = this.width();\n                if (defined(x)) {\n                    this.x1 = x;\n                    this.x2 = this.x1 + width;\n                }\n                if (defined(y)) {\n                    this.y1 = y;\n                    this.y2 = this.y1 + height;\n                }\n                return this;\n            },\n            wrap: function (targetBox) {\n                this.x1 = Math.min(this.x1, targetBox.x1);\n                this.y1 = Math.min(this.y1, targetBox.y1);\n                this.x2 = Math.max(this.x2, targetBox.x2);\n                this.y2 = Math.max(this.y2, targetBox.y2);\n                return this;\n            },\n            wrapPoint: function (point) {\n                var arrayPoint = isArray(point);\n                var x = arrayPoint ? point[0] : point.x;\n                var y = arrayPoint ? point[1] : point.y;\n                this.wrap(new Box(x, y, x, y));\n                return this;\n            },\n            snapTo: function (targetBox, axis) {\n                if (axis === X || !axis) {\n                    this.x1 = targetBox.x1;\n                    this.x2 = targetBox.x2;\n                }\n                if (axis === Y || !axis) {\n                    this.y1 = targetBox.y1;\n                    this.y2 = targetBox.y2;\n                }\n                return this;\n            },\n            alignTo: function (targetBox, anchor) {\n                var height = this.height();\n                var width = this.width();\n                var axis = anchor === TOP || anchor === BOTTOM ? Y : X;\n                var offset = axis === Y ? height : width;\n                if (anchor === CENTER) {\n                    var targetCenter = targetBox.center();\n                    var center = this.center();\n                    this.x1 += targetCenter.x - center.x;\n                    this.y1 += targetCenter.y - center.y;\n                } else if (anchor === TOP || anchor === LEFT) {\n                    this[axis + 1] = targetBox[axis + 1] - offset;\n                } else {\n                    this[axis + 1] = targetBox[axis + 2];\n                }\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            shrink: function (dw, dh) {\n                this.x2 -= dw;\n                this.y2 -= dh;\n                return this;\n            },\n            expand: function (dw, dh) {\n                this.shrink(-dw, -dh);\n                return this;\n            },\n            pad: function (padding) {\n                var spacing = getSpacing(padding);\n                this.x1 -= spacing.left;\n                this.x2 += spacing.right;\n                this.y1 -= spacing.top;\n                this.y2 += spacing.bottom;\n                return this;\n            },\n            unpad: function (padding) {\n                var spacing = getSpacing(padding);\n                spacing.left = -spacing.left;\n                spacing.top = -spacing.top;\n                spacing.right = -spacing.right;\n                spacing.bottom = -spacing.bottom;\n                return this.pad(spacing);\n            },\n            clone: function () {\n                return new Box(this.x1, this.y1, this.x2, this.y2);\n            },\n            center: function () {\n                return new Point(this.x1 + this.width() / 2, this.y1 + this.height() / 2);\n            },\n            containsPoint: function (point) {\n                return point.x >= this.x1 && point.x <= this.x2 && point.y >= this.y1 && point.y <= this.y2;\n            },\n            points: function () {\n                return [\n                    new Point(this.x1, this.y1),\n                    new Point(this.x2, this.y1),\n                    new Point(this.x2, this.y2),\n                    new Point(this.x1, this.y2)\n                ];\n            },\n            getHash: function () {\n                return [\n                    this.x1,\n                    this.y1,\n                    this.x2,\n                    this.y2\n                ].join(',');\n            },\n            overlaps: function (box) {\n                return !(box.y2 < this.y1 || this.y2 < box.y1 || box.x2 < this.x1 || this.x2 < box.x1);\n            },\n            rotate: function (rotation) {\n                var width = this.width();\n                var height = this.height();\n                var ref = this.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var r1 = rotatePoint(0, 0, cx, cy, rotation);\n                var r2 = rotatePoint(width, 0, cx, cy, rotation);\n                var r3 = rotatePoint(width, height, cx, cy, rotation);\n                var r4 = rotatePoint(0, height, cx, cy, rotation);\n                width = Math.max(r1.x, r2.x, r3.x, r4.x) - Math.min(r1.x, r2.x, r3.x, r4.x);\n                height = Math.max(r1.y, r2.y, r3.y, r4.y) - Math.min(r1.y, r2.y, r3.y, r4.y);\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            toRect: function () {\n                return new Rect([\n                    this.x1,\n                    this.y1\n                ], [\n                    this.width(),\n                    this.height()\n                ]);\n            },\n            hasSize: function () {\n                return this.width() !== 0 && this.height() !== 0;\n            },\n            align: function (targetBox, axis, alignment) {\n                var c1 = axis + 1;\n                var c2 = axis + 2;\n                var sizeFunc = axis === X ? WIDTH : HEIGHT;\n                var size = this[sizeFunc]();\n                if (inArray(alignment, [\n                        LEFT,\n                        TOP\n                    ])) {\n                    this[c1] = targetBox[c1];\n                    this[c2] = this[c1] + size;\n                } else if (inArray(alignment, [\n                        RIGHT,\n                        BOTTOM\n                    ])) {\n                    this[c2] = targetBox[c2];\n                    this[c1] = this[c2] - size;\n                } else if (alignment === CENTER) {\n                    this[c1] = targetBox[c1] + (targetBox[sizeFunc]() - size) / 2;\n                    this[c2] = this[c1] + size;\n                }\n            }\n        });\n        function rotatePoint(x, y, cx, cy, angle) {\n            var theta = rad(angle);\n            return new Point(cx + (x - cx) * Math.cos(theta) + (y - cy) * Math.sin(theta), cy - (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta));\n        }\n        var Ring = Class.extend({\n            init: function (center, innerRadius, radius, startAngle, angle) {\n                this.center = center;\n                this.innerRadius = innerRadius;\n                this.radius = radius;\n                this.startAngle = startAngle;\n                this.angle = angle;\n            },\n            clone: function () {\n                return new Ring(this.center, this.innerRadius, this.radius, this.startAngle, this.angle);\n            },\n            middle: function () {\n                return this.startAngle + this.angle / 2;\n            },\n            setRadius: function (newRadius, innerRadius) {\n                if (innerRadius) {\n                    this.innerRadius = newRadius;\n                } else {\n                    this.radius = newRadius;\n                }\n                return this;\n            },\n            point: function (angle, innerRadius) {\n                var radianAngle = rad(angle);\n                var ax = Math.cos(radianAngle);\n                var ay = Math.sin(radianAngle);\n                var radius = innerRadius ? this.innerRadius : this.radius;\n                var x = round(this.center.x - ax * radius, COORD_PRECISION);\n                var y = round(this.center.y - ay * radius, COORD_PRECISION);\n                return new Point(x, y);\n            },\n            adjacentBox: function (distance, width, height) {\n                var sector = this.clone().expand(distance);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                var hw = width / 2;\n                var hh = height / 2;\n                var sa = Math.sin(rad(midAndle));\n                var ca = Math.cos(rad(midAndle));\n                var x = midPoint.x - hw;\n                var y = midPoint.y - hh;\n                if (Math.abs(sa) < 0.9) {\n                    x += hw * -ca / Math.abs(ca);\n                }\n                if (Math.abs(ca) < 0.9) {\n                    y += hh * -sa / Math.abs(sa);\n                }\n                return new Box(x, y, x + width, y + height);\n            },\n            containsPoint: function (p) {\n                var center = this.center;\n                var innerRadius = this.innerRadius;\n                var radius = this.radius;\n                var startAngle = this.startAngle;\n                var endAngle = this.startAngle + this.angle;\n                var dx = p.x - center.x;\n                var dy = p.y - center.y;\n                var vector = new Point(dx, dy);\n                var startPoint = this.point(startAngle);\n                var startVector = new Point(startPoint.x - center.x, startPoint.y - center.y);\n                var endPoint = this.point(endAngle);\n                var endVector = new Point(endPoint.x - center.x, endPoint.y - center.y);\n                var dist = round(dx * dx + dy * dy, COORD_PRECISION);\n                return (startVector.equals(vector) || clockwise(startVector, vector)) && !clockwise(endVector, vector) && dist >= innerRadius * innerRadius && dist <= radius * radius;\n            },\n            getBBox: function () {\n                var this$1 = this;\n                var box = new Box(MAX_VALUE, MAX_VALUE, MIN_VALUE, MIN_VALUE);\n                var startAngle = round(this.startAngle % 360);\n                var endAngle = round((startAngle + this.angle) % 360);\n                var innerRadius = this.innerRadius;\n                var allAngles = [\n                    0,\n                    90,\n                    180,\n                    270,\n                    startAngle,\n                    endAngle\n                ].sort(numericComparer);\n                var startAngleIndex = allAngles.indexOf(startAngle);\n                var endAngleIndex = allAngles.indexOf(endAngle);\n                var angles;\n                if (startAngle === endAngle) {\n                    angles = allAngles;\n                } else {\n                    if (startAngleIndex < endAngleIndex) {\n                        angles = allAngles.slice(startAngleIndex, endAngleIndex + 1);\n                    } else {\n                        angles = [].concat(allAngles.slice(0, endAngleIndex + 1), allAngles.slice(startAngleIndex, allAngles.length));\n                    }\n                }\n                for (var i = 0; i < angles.length; i++) {\n                    var point = this$1.point(angles[i]);\n                    box.wrapPoint(point);\n                    box.wrapPoint(point, innerRadius);\n                }\n                if (!innerRadius) {\n                    box.wrapPoint(this.center);\n                }\n                return box;\n            },\n            expand: function (value) {\n                this.radius += value;\n                return this;\n            }\n        });\n        function numericComparer(a, b) {\n            return a - b;\n        }\n        var Sector = Ring.extend({\n            init: function (center, radius, startAngle, angle) {\n                Ring.fn.init.call(this, center, 0, radius, startAngle, angle);\n            },\n            expand: function (value) {\n                return Ring.fn.expand.call(this, value);\n            },\n            clone: function () {\n                return new Sector(this.center, this.radius, this.startAngle, this.angle);\n            },\n            setRadius: function (newRadius) {\n                this.radius = newRadius;\n                return this;\n            }\n        });\n        var ShapeBuilder = Class.extend({\n            createRing: function (sector, options) {\n                var startAngle = sector.startAngle + 180;\n                var endAngle = sector.angle + startAngle;\n                var center = new geometry.Point(sector.center.x, sector.center.y);\n                var radius = Math.max(sector.radius, 0);\n                var innerRadius = Math.max(sector.innerRadius, 0);\n                var arc = new geometry.Arc(center, {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: radius,\n                    radiusY: radius\n                });\n                var path = Path.fromArc(arc, options).close();\n                if (innerRadius) {\n                    arc.radiusX = arc.radiusY = innerRadius;\n                    var innerEnd = arc.pointAt(endAngle);\n                    path.lineTo(innerEnd.x, innerEnd.y);\n                    path.arc(endAngle, startAngle, innerRadius, innerRadius, true);\n                } else {\n                    path.lineTo(center.x, center.y);\n                }\n                return path;\n            }\n        });\n        ShapeBuilder.current = new ShapeBuilder();\n        var ChartElement = Class.extend({\n            init: function (options) {\n                this.children = [];\n                this.options = deepExtend({}, this.options, options);\n            },\n            reflow: function (targetBox) {\n                var children = this.children;\n                var box;\n                for (var i = 0; i < children.length; i++) {\n                    var currentChild = children[i];\n                    currentChild.reflow(targetBox);\n                    box = box ? box.wrap(currentChild.box) : currentChild.box.clone();\n                }\n                this.box = box || targetBox;\n            },\n            destroy: function () {\n                var children = this.children;\n                if (this.animation) {\n                    this.animation.destroy();\n                }\n                for (var i = 0; i < children.length; i++) {\n                    children[i].destroy();\n                }\n            },\n            getRoot: function () {\n                var parent = this.parent;\n                return parent ? parent.getRoot() : null;\n            },\n            getSender: function () {\n                var service = this.getService();\n                if (service) {\n                    return service.sender;\n                }\n            },\n            getService: function () {\n                var element = this;\n                while (element) {\n                    if (element.chartService) {\n                        return element.chartService;\n                    }\n                    element = element.parent;\n                }\n            },\n            translateChildren: function (dx, dy) {\n                var children = this.children;\n                var childrenCount = children.length;\n                for (var i = 0; i < childrenCount; i++) {\n                    children[i].box.translate(dx, dy);\n                }\n            },\n            append: function () {\n                var arguments$1 = arguments;\n                var this$1 = this;\n                for (var i = 0; i < arguments.length; i++) {\n                    var item = arguments$1[i];\n                    this$1.children.push(item);\n                    item.parent = this$1;\n                }\n            },\n            renderVisual: function () {\n                if (this.options.visible === false) {\n                    return;\n                }\n                this.createVisual();\n                this.addVisual();\n                this.renderChildren();\n                this.createAnimation();\n                this.renderComplete();\n            },\n            addVisual: function () {\n                if (this.visual) {\n                    this.visual.chartElement = this;\n                    if (this.parent) {\n                        this.parent.appendVisual(this.visual);\n                    }\n                }\n            },\n            renderChildren: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    children[i].renderVisual();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group({\n                    zIndex: this.options.zIndex,\n                    visible: valueOrDefault(this.options.visible, true)\n                });\n            },\n            createAnimation: function () {\n                if (this.visual) {\n                    this.animation = drawing.Animation.create(this.visual, this.options.animation);\n                }\n            },\n            appendVisual: function (childVisual) {\n                if (!childVisual.chartElement) {\n                    childVisual.chartElement = this;\n                }\n                if (childVisual.options.noclip) {\n                    this.clipRoot().visual.append(childVisual);\n                } else if (defined(childVisual.options.zIndex)) {\n                    this.stackRoot().stackVisual(childVisual);\n                } else if (this.isStackRoot) {\n                    this.stackVisual(childVisual);\n                } else if (this.visual) {\n                    this.visual.append(childVisual);\n                } else {\n                    this.parent.appendVisual(childVisual);\n                }\n            },\n            clipRoot: function () {\n                if (this.parent) {\n                    return this.parent.clipRoot();\n                }\n                return this;\n            },\n            stackRoot: function () {\n                if (this.parent) {\n                    return this.parent.stackRoot();\n                }\n                return this;\n            },\n            stackVisual: function (childVisual) {\n                var zIndex = childVisual.options.zIndex || 0;\n                var visuals = this.visual.children;\n                var length = visuals.length;\n                var pos;\n                for (pos = 0; pos < length; pos++) {\n                    var sibling = visuals[pos];\n                    var here = valueOrDefault(sibling.options.zIndex, 0);\n                    if (here > zIndex) {\n                        break;\n                    }\n                }\n                this.visual.insert(pos, childVisual);\n            },\n            traverse: function (callback) {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    var child = children[i];\n                    callback(child);\n                    if (child.traverse) {\n                        child.traverse(callback);\n                    }\n                }\n            },\n            closest: function (match) {\n                var element = this;\n                var matched = false;\n                while (element && !matched) {\n                    matched = match(element);\n                    if (!matched) {\n                        element = element.parent;\n                    }\n                }\n                if (matched) {\n                    return element;\n                }\n            },\n            renderComplete: function () {\n            },\n            hasHighlight: function () {\n                var options = (this.options || {}).highlight;\n                return !(!this.createHighlight || options && options.visible === false);\n            },\n            toggleHighlight: function (show) {\n                var this$1 = this;\n                var options = (this.options || {}).highlight;\n                var customVisual = (options || {}).visual;\n                var highlight = this._highlight;\n                if (!highlight) {\n                    var highlightOptions = {\n                        fill: {\n                            color: WHITE,\n                            opacity: 0.2\n                        },\n                        stroke: {\n                            color: WHITE,\n                            width: 1,\n                            opacity: 0.2\n                        }\n                    };\n                    if (customVisual) {\n                        highlight = this._highlight = customVisual($.extend(this.highlightVisualArgs(), {\n                            createVisual: function () {\n                                return this$1.createHighlight(highlightOptions);\n                            },\n                            sender: this.getSender(),\n                            series: this.series,\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            runningTotal: this.runningTotal,\n                            total: this.total\n                        }));\n                        if (!highlight) {\n                            return;\n                        }\n                    } else {\n                        highlight = this._highlight = this.createHighlight(highlightOptions);\n                    }\n                    highlight.options.zIndex = this.options.zIndex;\n                    this.appendVisual(highlight);\n                }\n                highlight.visible(show);\n            },\n            createGradientOverlay: function (element, options, gradientOptions) {\n                var overlay = new Path($.extend({\n                    stroke: { color: 'none' },\n                    fill: this.createGradient(gradientOptions),\n                    closed: element.options.closed\n                }, options));\n                overlay.segments.elements(element.segments.elements());\n                return overlay;\n            },\n            createGradient: function (options) {\n                if (this.parent) {\n                    return this.parent.createGradient(options);\n                }\n            }\n        });\n        ChartElement.prototype.options = {};\n        var BoxElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.options.margin = getSpacing(this.options.margin);\n                this.options.padding = getSpacing(this.options.padding);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var shrinkToFit = options.shrinkToFit;\n                var hasSetSize = width && height;\n                var margin = options.margin;\n                var padding = options.padding;\n                var borderWidth = options.border.width;\n                var box;\n                var reflowPaddingBox = function () {\n                    this$1.align(targetBox, X, options.align);\n                    this$1.align(targetBox, Y, options.vAlign);\n                    this$1.paddingBox = box.clone().unpad(margin).unpad(borderWidth);\n                };\n                var contentBox = targetBox.clone();\n                if (hasSetSize) {\n                    contentBox.x2 = contentBox.x1 + width;\n                    contentBox.y2 = contentBox.y1 + height;\n                }\n                if (shrinkToFit) {\n                    contentBox.unpad(margin).unpad(borderWidth).unpad(padding);\n                }\n                ChartElement.fn.reflow.call(this, contentBox);\n                if (hasSetSize) {\n                    box = this.box = new Box(0, 0, width, height);\n                } else {\n                    box = this.box;\n                }\n                if (shrinkToFit && hasSetSize) {\n                    reflowPaddingBox();\n                    contentBox = this.contentBox = this.paddingBox.clone().unpad(padding);\n                } else {\n                    contentBox = this.contentBox = box.clone();\n                    box.pad(padding).pad(borderWidth).pad(margin);\n                    reflowPaddingBox();\n                }\n                this.translateChildren(box.x1 - contentBox.x1 + margin.left + borderWidth + padding.left, box.y1 - contentBox.y1 + margin.top + borderWidth + padding.top);\n                var children = this.children;\n                for (var i = 0; i < children.length; i++) {\n                    var item = children[i];\n                    item.reflow(item.box);\n                }\n            },\n            align: function (targetBox, axis, alignment) {\n                this.box.align(targetBox, axis, alignment);\n            },\n            hasBox: function () {\n                var options = this.options;\n                return options.border.width || options.background;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                if (options.visible && this.hasBox()) {\n                    this.visual.append(Path.fromRect(this.paddingBox.toRect(), this.visualStyle()));\n                }\n            },\n            visualStyle: function () {\n                var options = this.options;\n                var border = options.border || {};\n                return {\n                    stroke: {\n                        width: border.width,\n                        color: border.color,\n                        opacity: valueOrDefault(border.opacity, options.opacity),\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    cursor: options.cursor\n                };\n            }\n        });\n        setDefaultOptions(BoxElement, {\n            align: LEFT,\n            vAlign: TOP,\n            margin: {},\n            padding: {},\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            background: '',\n            shrinkToFit: false,\n            width: 0,\n            height: 0,\n            visible: true\n        });\n        var ShapeElement = BoxElement.extend({\n            init: function (options, pointData) {\n                BoxElement.fn.init.call(this, options);\n                this.pointData = pointData;\n            },\n            getElement: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.paddingBox;\n                var type = options.type;\n                var rotation = options.rotation;\n                var center = box.center();\n                var halfWidth = box.width() / 2;\n                if (!options.visible || !this.hasBox()) {\n                    return null;\n                }\n                var style = this.visualStyle();\n                var element;\n                if (type === CIRCLE) {\n                    element = new drawing.Circle(new Circle([\n                        round(box.x1 + halfWidth, COORD_PRECISION),\n                        round(box.y1 + box.height() / 2, COORD_PRECISION)\n                    ], halfWidth), style);\n                } else if (type === TRIANGLE) {\n                    element = Path.fromPoints([\n                        [\n                            box.x1 + halfWidth,\n                            box.y1\n                        ],\n                        [\n                            box.x1,\n                            box.y2\n                        ],\n                        [\n                            box.x2,\n                            box.y2\n                        ]\n                    ], style).close();\n                } else if (type === CROSS) {\n                    element = new drawing.MultiPath(style);\n                    element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n                    element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n                } else {\n                    element = Path.fromRect(box.toRect(), style);\n                }\n                if (rotation) {\n                    element.transform(geometryTransform().rotate(-rotation, [\n                        center.x,\n                        center.y\n                    ]));\n                }\n                element.options.zIndex = options.zIndex;\n                return element;\n            },\n            createElement: function () {\n                var this$1 = this;\n                var customVisual = this.options.visual;\n                var pointData = this.pointData || {};\n                var visual;\n                if (customVisual) {\n                    visual = customVisual({\n                        value: pointData.value,\n                        dataItem: pointData.dataItem,\n                        sender: this.getSender(),\n                        series: pointData.series,\n                        category: pointData.category,\n                        rect: this.paddingBox.toRect(),\n                        options: this.visualOptions(),\n                        createVisual: function () {\n                            return this$1.getElement();\n                        }\n                    });\n                } else {\n                    visual = this.getElement();\n                }\n                return visual;\n            },\n            visualOptions: function () {\n                var options = this.options;\n                return {\n                    background: options.background,\n                    border: options.border,\n                    margin: options.margin,\n                    padding: options.padding,\n                    type: options.type,\n                    size: options.width,\n                    visible: options.visible\n                };\n            },\n            createVisual: function () {\n                this.visual = this.createElement();\n            }\n        });\n        setDefaultOptions(ShapeElement, {\n            type: CIRCLE,\n            align: CENTER,\n            vAlign: CENTER\n        });\n        var LINEAR = 'linear';\n        var RADIAL = 'radial';\n        var GRADIENTS = {\n            glass: {\n                type: LINEAR,\n                rotation: 0,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.25,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 1,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.55\n                    },\n                    {\n                        offset: 0.65,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0.25\n                    }\n                ]\n            },\n            roundedBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0.33,\n                        color: WHITE,\n                        opacity: 0.06\n                    },\n                    {\n                        offset: 0.83,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            roundedGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.5,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.15,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.17,\n                        color: WHITE,\n                        opacity: 0.35\n                    },\n                    {\n                        offset: 0.85,\n                        color: WHITE,\n                        opacity: 0.05\n                    },\n                    {\n                        offset: 0.87,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            bubbleShadow: {\n                type: RADIAL,\n                center: [\n                    0.5,\n                    0.5\n                ],\n                radius: 0.5\n            }\n        };\n        function boxDiff(r, s) {\n            if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\n                return s;\n            }\n            var a = Math.min(r.x1, s.x1);\n            var b = Math.max(r.x1, s.x1);\n            var c = Math.min(r.x2, s.x2);\n            var d = Math.max(r.x2, s.x2);\n            var e = Math.min(r.y1, s.y1);\n            var f = Math.max(r.y1, s.y1);\n            var g = Math.min(r.y2, s.y2);\n            var h = Math.max(r.y2, s.y2);\n            var boxes = [];\n            boxes[0] = new Box(b, e, c, f);\n            boxes[1] = new Box(a, f, b, g);\n            boxes[2] = new Box(c, f, d, g);\n            boxes[3] = new Box(b, g, c, h);\n            if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) {\n                boxes[4] = new Box(a, e, b, f);\n                boxes[5] = new Box(c, g, d, h);\n            } else {\n                boxes[4] = new Box(c, e, d, f);\n                boxes[5] = new Box(a, g, b, h);\n            }\n            return grep(boxes, function (box) {\n                return box.height() > 0 && box.width() > 0;\n            })[0];\n        }\n        var RootElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                var rootOptions = this.options;\n                rootOptions.width = parseInt(rootOptions.width, 10);\n                rootOptions.height = parseInt(rootOptions.height, 10);\n                this.gradients = {};\n            },\n            reflow: function () {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var currentBox = new Box(0, 0, options.width, options.height);\n                this.box = currentBox.unpad(options.margin);\n                for (var i = 0; i < children.length; i++) {\n                    children[i].reflow(currentBox);\n                    currentBox = boxDiff(currentBox, children[i].box) || new Box();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group();\n                this.createBackground();\n            },\n            createBackground: function () {\n                var options = this.options;\n                var border = options.border || {};\n                var box = this.box.clone().pad(options.margin).unpad(border.width);\n                var background = Path.fromRect(box.toRect(), {\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    zIndex: -10\n                });\n                this.visual.append(background);\n            },\n            getRoot: function () {\n                return this;\n            },\n            createGradient: function (options) {\n                var gradients = this.gradients;\n                var hashCode = objectKey(options);\n                var gradient = GRADIENTS[options.gradient];\n                var drawingGradient;\n                if (gradients[hashCode]) {\n                    drawingGradient = gradients[hashCode];\n                } else {\n                    var gradientOptions = $.extend({}, gradient, options);\n                    if (gradient.type === 'linear') {\n                        drawingGradient = new drawing.LinearGradient(gradientOptions);\n                    } else {\n                        if (options.innerRadius) {\n                            gradientOptions.stops = innerRadialStops(gradientOptions);\n                        }\n                        drawingGradient = new drawing.RadialGradient(gradientOptions);\n                        drawingGradient.supportVML = gradient.supportVML !== false;\n                    }\n                    gradients[hashCode] = drawingGradient;\n                }\n                return drawingGradient;\n            }\n        });\n        setDefaultOptions(RootElement, {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT,\n            background: WHITE,\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            margin: getSpacing(5),\n            zIndex: -2\n        });\n        function innerRadialStops(options) {\n            var stops = options.stops;\n            var usedSpace = options.innerRadius / options.radius * 100;\n            var length = stops.length;\n            var currentStops = [];\n            for (var i = 0; i < length; i++) {\n                var currentStop = $.extend({}, stops[i]);\n                currentStop.offset = (currentStop.offset * (100 - usedSpace) + usedSpace) / 100;\n                currentStops.push(currentStop);\n            }\n            return currentStops;\n        }\n        var FloatElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this._initDirection();\n            },\n            _initDirection: function () {\n                var options = this.options;\n                if (options.vertical) {\n                    this.groupAxis = X;\n                    this.elementAxis = Y;\n                    this.groupSizeField = WIDTH;\n                    this.elementSizeField = HEIGHT;\n                    this.groupSpacing = options.spacing;\n                    this.elementSpacing = options.vSpacing;\n                } else {\n                    this.groupAxis = Y;\n                    this.elementAxis = X;\n                    this.groupSizeField = HEIGHT;\n                    this.elementSizeField = WIDTH;\n                    this.groupSpacing = options.vSpacing;\n                    this.elementSpacing = options.spacing;\n                }\n            },\n            reflow: function (targetBox) {\n                this.box = targetBox.clone();\n                this.reflowChildren();\n            },\n            reflowChildren: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var elementAxis = ref.elementAxis;\n                var groupAxis = ref.groupAxis;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var ref$1 = this.groupOptions();\n                var groups = ref$1.groups;\n                var groupsSize = ref$1.groupsSize;\n                var maxGroupElementsSize = ref$1.maxGroupElementsSize;\n                var groupsCount = groups.length;\n                var groupsStart = box[groupAxis + 1] + this.alignStart(groupsSize, box[groupSizeField]());\n                if (groupsCount) {\n                    var groupStart = groupsStart;\n                    for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                        var group = groups[groupIdx];\n                        var groupElements = group.groupElements;\n                        var elementStart = box[elementAxis + 1];\n                        var groupElementsCount = groupElements.length;\n                        for (var idx = 0; idx < groupElementsCount; idx++) {\n                            var element = groupElements[idx];\n                            var elementSize$$1 = this$1.elementSize(element);\n                            var groupElementStart = groupStart + this$1.alignStart(elementSize$$1[groupSizeField], group.groupSize);\n                            var elementBox = new Box();\n                            elementBox[groupAxis + 1] = groupElementStart;\n                            elementBox[groupAxis + 2] = groupElementStart + elementSize$$1[groupSizeField];\n                            elementBox[elementAxis + 1] = elementStart;\n                            elementBox[elementAxis + 2] = elementStart + elementSize$$1[elementSizeField];\n                            element.reflow(elementBox);\n                            elementStart += elementSize$$1[elementSizeField] + this$1.elementSpacing;\n                        }\n                        groupStart += group.groupSize + this$1.groupSpacing;\n                    }\n                    box[groupAxis + 1] = groupsStart;\n                    box[groupAxis + 2] = groupsStart + groupsSize;\n                    box[elementAxis + 2] = box[elementAxis + 1] + maxGroupElementsSize;\n                }\n            },\n            alignStart: function (size, maxSize) {\n                var start = 0;\n                var align = this.options.align;\n                if (align === RIGHT || align === BOTTOM) {\n                    start = maxSize - size;\n                } else if (align === CENTER) {\n                    start = (maxSize - size) / 2;\n                }\n                return start;\n            },\n            groupOptions: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var children = ref.children;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var elementSpacing = ref.elementSpacing;\n                var groupSpacing = ref.groupSpacing;\n                var maxSize = round(box[elementSizeField]());\n                var childrenCount = children.length;\n                var groups = [];\n                var groupSize = 0;\n                var groupElementsSize = 0;\n                var groupsSize = 0;\n                var maxGroupElementsSize = 0;\n                var groupElements = [];\n                for (var idx = 0; idx < childrenCount; idx++) {\n                    var element = children[idx];\n                    if (!element.box) {\n                        element.reflow(box);\n                    }\n                    var elementSize$$1 = this$1.elementSize(element);\n                    if (this$1.options.wrap && round(groupElementsSize + elementSpacing + elementSize$$1[elementSizeField]) > maxSize) {\n                        groups.push({\n                            groupElements: groupElements,\n                            groupSize: groupSize,\n                            groupElementsSize: groupElementsSize\n                        });\n                        maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                        groupsSize += groupSpacing + groupSize;\n                        groupSize = 0;\n                        groupElementsSize = 0;\n                        groupElements = [];\n                    }\n                    groupSize = Math.max(groupSize, elementSize$$1[groupSizeField]);\n                    if (groupElementsSize > 0) {\n                        groupElementsSize += elementSpacing;\n                    }\n                    groupElementsSize += elementSize$$1[elementSizeField];\n                    groupElements.push(element);\n                }\n                groups.push({\n                    groupElements: groupElements,\n                    groupSize: groupSize,\n                    groupElementsSize: groupElementsSize\n                });\n                maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                groupsSize += groupSize;\n                return {\n                    groups: groups,\n                    groupsSize: groupsSize,\n                    maxGroupElementsSize: maxGroupElementsSize\n                };\n            },\n            elementSize: function (element) {\n                return {\n                    width: element.box.width(),\n                    height: element.box.height()\n                };\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(FloatElement, {\n            vertical: true,\n            wrap: true,\n            vSpacing: 0,\n            spacing: 0\n        });\n        var DrawingText = drawing.Text;\n        var Text = ChartElement.extend({\n            init: function (content, options) {\n                ChartElement.fn.init.call(this, options);\n                this.content = content;\n                this.reflow(new Box());\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var size = options.size = util.measureText(this.content, { font: options.font });\n                this.baseline = size.baseline;\n                this.box = new Box(targetBox.x1, targetBox.y1, targetBox.x1 + size.width, targetBox.y1 + size.height);\n            },\n            createVisual: function () {\n                var ref = this.options;\n                var font = ref.font;\n                var color = ref.color;\n                var opacity = ref.opacity;\n                var cursor = ref.cursor;\n                this.visual = new DrawingText(this.content, this.box.toRect().topLeft(), {\n                    font: font,\n                    fill: {\n                        color: color,\n                        opacity: opacity\n                    },\n                    cursor: cursor\n                });\n            }\n        });\n        setDefaultOptions(Text, {\n            font: DEFAULT_FONT,\n            color: BLACK\n        });\n        function rectToBox(rect) {\n            var origin = rect.origin;\n            var bottomRight = rect.bottomRight();\n            return new Box(origin.x, origin.y, bottomRight.x, bottomRight.y);\n        }\n        var ROWS_SPLIT_REGEX = /\\n|\\\\n/m;\n        var TextBox = BoxElement.extend({\n            init: function (content, options) {\n                BoxElement.fn.init.call(this, options);\n                this.content = content;\n                this._initContainer();\n                if (this.options._autoReflow !== false) {\n                    this.reflow(new Box());\n                }\n            },\n            _initContainer: function () {\n                var options = this.options;\n                var rows = String(this.content).split(ROWS_SPLIT_REGEX);\n                var floatElement = new FloatElement({\n                    vertical: true,\n                    align: options.align,\n                    wrap: false\n                });\n                var textOptions = deepExtend({}, options, {\n                    opacity: 1,\n                    animation: null\n                });\n                this.container = floatElement;\n                this.append(floatElement);\n                for (var rowIdx = 0; rowIdx < rows.length; rowIdx++) {\n                    var text = new Text(rows[rowIdx].trim(), textOptions);\n                    floatElement.append(text);\n                }\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var visualFn = options.visual;\n                this.container.options.align = options.align;\n                if (visualFn && !this._boxReflow) {\n                    var visualBox = targetBox;\n                    if (!visualBox.hasSize()) {\n                        this._boxReflow = true;\n                        this.reflow(visualBox);\n                        this._boxReflow = false;\n                        visualBox = this.box;\n                    }\n                    var visual = this.visual = visualFn(this.visualContext(visualBox));\n                    if (visual) {\n                        visualBox = rectToBox(visual.clippedBBox() || new Rect());\n                        visual.options.zIndex = options.zIndex;\n                        visual.options.noclip = options.noclip;\n                    }\n                    this.box = this.contentBox = this.paddingBox = visualBox;\n                } else {\n                    BoxElement.fn.reflow.call(this, targetBox);\n                    if (options.rotation) {\n                        var margin = getSpacing(options.margin);\n                        var box = this.box.unpad(margin);\n                        this.targetBox = targetBox;\n                        this.normalBox = box.clone();\n                        box = this.rotate();\n                        box.translate(margin.left - margin.right, margin.top - margin.bottom);\n                        this.rotatedBox = box.clone();\n                        box.pad(margin);\n                    }\n                }\n            },\n            createVisual: function () {\n                var options = this.options;\n                if (!options.visible) {\n                    return;\n                }\n                this.visual = new Group({\n                    transform: this.rotationTransform(),\n                    zIndex: options.zIndex,\n                    noclip: options.noclip\n                });\n                if (this.hasBox()) {\n                    var box = Path.fromRect(this.paddingBox.toRect(), this.visualStyle());\n                    this.visual.append(box);\n                }\n            },\n            renderVisual: function () {\n                if (this.options.visual) {\n                    this.addVisual();\n                    this.createAnimation();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            visualOptions: function () {\n                var options = this.options;\n                return {\n                    background: options.background,\n                    border: options.border,\n                    color: options.color,\n                    font: options.font,\n                    margin: options.margin,\n                    padding: options.padding,\n                    visible: options.visible\n                };\n            },\n            visualContext: function (targetBox) {\n                var this$1 = this;\n                return {\n                    text: this.content,\n                    rect: targetBox.toRect(),\n                    sender: this.getSender(),\n                    options: this.visualOptions(),\n                    createVisual: function () {\n                        this$1._boxReflow = true;\n                        this$1.reflow(targetBox);\n                        this$1._boxReflow = false;\n                        return this$1.getDefaultVisual();\n                    }\n                };\n            },\n            getDefaultVisual: function () {\n                this.createVisual();\n                this.renderChildren();\n                var visual = this.visual;\n                delete this.visual;\n                return visual;\n            },\n            rotate: function () {\n                var options = this.options;\n                this.box.rotate(options.rotation);\n                this.align(this.targetBox, X, options.align);\n                this.align(this.targetBox, Y, options.vAlign);\n                return this.box;\n            },\n            rotationTransform: function () {\n                var rotation = this.options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                var ref = this.normalBox.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var boxCenter = this.rotatedBox.center();\n                return geometryTransform().translate(boxCenter.x - cx, boxCenter.y - cy).rotate(rotation, [\n                    cx,\n                    cy\n                ]);\n            }\n        });\n        var Title = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.append(new TextBox(this.options.text, $.extend({}, this.options, { vAlign: this.options.position })));\n            },\n            reflow: function (targetBox) {\n                ChartElement.fn.reflow.call(this, targetBox);\n                this.box.snapTo(targetBox, X);\n            }\n        });\n        Title.buildTitle = function (options, parent, defaultOptions) {\n            var titleOptions = options;\n            if (typeof options === 'string') {\n                titleOptions = { text: options };\n            }\n            titleOptions = $.extend({ visible: true }, defaultOptions, titleOptions);\n            var title;\n            if (titleOptions && titleOptions.visible && titleOptions.text) {\n                title = new Title(titleOptions);\n                parent.append(title);\n            }\n            return title;\n        };\n        setDefaultOptions(Title, {\n            color: BLACK,\n            position: TOP,\n            align: CENTER,\n            margin: getSpacing(5),\n            padding: getSpacing(5)\n        });\n        var AxisLabel = TextBox.extend({\n            init: function (value, text, index, dataItem, options) {\n                TextBox.fn.init.call(this, text, options);\n                this.text = text;\n                this.value = value;\n                this.index = index;\n                this.dataItem = dataItem;\n                this.reflow(new Box());\n            },\n            visualContext: function (targetBox) {\n                var context = TextBox.fn.visualContext.call(this, targetBox);\n                context.value = this.value;\n                context.dataItem = this.dataItem;\n                context.format = this.options.format;\n                context.culture = this.options.culture;\n                return context;\n            },\n            click: function (widget, e) {\n                widget.trigger(AXIS_LABEL_CLICK, {\n                    element: eventElement(e),\n                    value: this.value,\n                    text: this.text,\n                    index: this.index,\n                    dataItem: this.dataItem,\n                    axis: this.parent.options\n                });\n            },\n            rotate: function () {\n                if (this.options.alignRotation !== CENTER) {\n                    var box = this.normalBox.toRect();\n                    var transform = this.rotationTransform();\n                    this.box = rectToBox(box.bbox(transform.matrix()));\n                } else {\n                    TextBox.fn.rotate.call(this);\n                }\n                return this.box;\n            },\n            rotationTransform: function () {\n                var options = this.options;\n                var rotation = options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                if (options.alignRotation === CENTER) {\n                    return TextBox.fn.rotationTransform.call(this);\n                }\n                var rotationMatrix = geometryTransform().rotate(rotation).matrix();\n                var box = this.normalBox.toRect();\n                var rect = this.targetBox.toRect();\n                var rotationOrigin = options.rotationOrigin || TOP;\n                var alignAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? X : Y;\n                var distanceAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? Y : X;\n                var axisAnchor = rotationOrigin === TOP || rotationOrigin === LEFT ? rect.origin : rect.bottomRight();\n                var topLeft = box.topLeft().transformCopy(rotationMatrix);\n                var topRight = box.topRight().transformCopy(rotationMatrix);\n                var bottomRight = box.bottomRight().transformCopy(rotationMatrix);\n                var bottomLeft = box.bottomLeft().transformCopy(rotationMatrix);\n                var rotatedBox = Rect.fromPoints(topLeft, topRight, bottomRight, bottomLeft);\n                var translate = {};\n                translate[distanceAxis] = rect.origin[distanceAxis] - rotatedBox.origin[distanceAxis];\n                var distanceLeft = Math.abs(topLeft[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var distanceRight = Math.abs(topRight[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var alignStart, alignEnd;\n                if (round(distanceLeft, DEFAULT_PRECISION) === round(distanceRight, DEFAULT_PRECISION)) {\n                    alignStart = topLeft;\n                    alignEnd = topRight;\n                } else if (distanceRight < distanceLeft) {\n                    alignStart = topRight;\n                    alignEnd = bottomRight;\n                } else {\n                    alignStart = topLeft;\n                    alignEnd = bottomLeft;\n                }\n                var alignCenter = alignStart[alignAxis] + (alignEnd[alignAxis] - alignStart[alignAxis]) / 2;\n                translate[alignAxis] = rect.center()[alignAxis] - alignCenter;\n                return geometryTransform().translate(translate.x, translate.y).rotate(rotation);\n            }\n        });\n        setDefaultOptions(AxisLabel, { _autoReflow: false });\n        var defaultImplementation = {\n            format: function (format, value) {\n                return value;\n            },\n            toString: function (value) {\n                return value;\n            },\n            parseDate: function (value) {\n                return new Date(value);\n            }\n        };\n        var current = defaultImplementation;\n        var IntlService = Class.extend({});\n        IntlService.register = function (userImplementation) {\n            current = userImplementation;\n        };\n        if (Object.defineProperties) {\n            Object.defineProperties(IntlService, {\n                implementation: {\n                    get: function () {\n                        return current;\n                    }\n                }\n            });\n        }\n        var FORMAT_REPLACE_REGEX = /\\{(\\d+)(:[^\\}]+)?\\}/g;\n        var FormatService = Class.extend({\n            init: function (intlService) {\n                this._intlService = intlService;\n            },\n            auto: function (formatString) {\n                var values = [], len = arguments.length - 1;\n                while (len-- > 0)\n                    values[len] = arguments[len + 1];\n                var intl = this.intlService;\n                if (formatString.match(FORMAT_REGEX)) {\n                    return intl.format.apply(intl, [formatString].concat(values));\n                }\n                return intl.toString(values[0], formatString);\n            },\n            localeAuto: function (formatString, values, locale) {\n                var intl = this.intlService;\n                var result;\n                if (formatString.match(FORMAT_REGEX)) {\n                    result = formatString.replace(FORMAT_REPLACE_REGEX, function (match, index, placeholderFormat) {\n                        var value = values[parseInt(index, 10)];\n                        return intl.toString(value, placeholderFormat ? placeholderFormat.substring(1) : '', locale);\n                    });\n                } else {\n                    result = intl.toString(values[0], formatString, locale);\n                }\n                return result;\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(FormatService.fn, {\n                intlService: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    }\n                }\n            });\n        }\n        var ChartService = Class.extend({\n            init: function (chart, context) {\n                if (context === void 0) {\n                    context = {};\n                }\n                this._intlService = context.intlService;\n                this.sender = context.sender || chart;\n                this.format = new FormatService(context.intlService);\n                this.chart = chart;\n            },\n            notify: function (name, args) {\n                this.chart.trigger(name, args);\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(ChartService.fn, {\n                intl: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    }\n                }\n            });\n        }\n        var current$1;\n        var DomEventsBuilder = Class.extend({});\n        DomEventsBuilder.register = function (userImplementation) {\n            current$1 = userImplementation;\n        };\n        DomEventsBuilder.create = function (element, events) {\n            if (current$1) {\n                return current$1.create(element, events);\n            }\n        };\n        var current$2 = {\n            compile: function (template) {\n                return template;\n            }\n        };\n        var TemplateService = Class.extend({});\n        TemplateService.register = function (userImplementation) {\n            current$2 = userImplementation;\n        };\n        TemplateService.compile = function (template) {\n            return current$2.compile(template);\n        };\n        var services = {\n            ChartService: ChartService,\n            DomEventsBuilder: DomEventsBuilder,\n            FormatService: FormatService,\n            IntlService: IntlService,\n            TemplateService: TemplateService\n        };\n        var DEFAULT_ICON_SIZE = 7;\n        var DEFAULT_LABEL_COLOR = '#fff';\n        var Note = BoxElement.extend({\n            init: function (fields, options, chartService) {\n                BoxElement.fn.init.call(this, options);\n                this.fields = fields;\n                this.chartService = chartService;\n                this.render();\n            },\n            hide: function () {\n                this.options.visible = false;\n            },\n            show: function () {\n                this.options.visible = true;\n            },\n            render: function () {\n                var options = this.options;\n                if (options.visible) {\n                    var label = options.label;\n                    var icon = options.icon;\n                    var box = new Box();\n                    var size = icon.size;\n                    var text = this.fields.text;\n                    var width, height;\n                    if (defined(label) && label.visible) {\n                        if (label.template) {\n                            var noteTemplate = TemplateService.compile(label.template);\n                            text = noteTemplate(this.fields);\n                        } else if (label.format) {\n                            text = this.chartService.format.auto(label.format, text);\n                        }\n                        if (!label.color) {\n                            label.color = label.position === INSIDE ? DEFAULT_LABEL_COLOR : icon.background;\n                        }\n                        this.label = new TextBox(text, deepExtend({}, label));\n                        if (label.position === INSIDE && !defined(size)) {\n                            if (icon.type === CIRCLE) {\n                                size = Math.max(this.label.box.width(), this.label.box.height());\n                            } else {\n                                width = this.label.box.width();\n                                height = this.label.box.height();\n                            }\n                            box.wrap(this.label.box);\n                        }\n                    }\n                    icon.width = width || size || DEFAULT_ICON_SIZE;\n                    icon.height = height || size || DEFAULT_ICON_SIZE;\n                    var marker = new ShapeElement(deepExtend({}, icon));\n                    this.marker = marker;\n                    this.append(marker);\n                    if (this.label) {\n                        this.append(this.label);\n                    }\n                    marker.reflow(new Box());\n                    this.wrapperBox = box.wrap(marker.box);\n                }\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var marker = ref.marker;\n                var wrapperBox = ref.wrapperBox;\n                var center = targetBox.center();\n                var length = options.line.length;\n                var position = options.position;\n                if (options.visible) {\n                    var lineStart, box, contentBox;\n                    if (inArray(position, [\n                            LEFT,\n                            RIGHT\n                        ])) {\n                        if (position === LEFT) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(-length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x1,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x2,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x2,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x1,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    } else {\n                        if (position === BOTTOM) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y2\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y1\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, -length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y1\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y2\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    }\n                    if (marker) {\n                        marker.reflow(contentBox);\n                    }\n                    if (label) {\n                        label.reflow(contentBox);\n                        if (marker) {\n                            if (options.label.position === OUTSIDE) {\n                                label.box.alignTo(marker.box, position);\n                            }\n                            label.reflow(label.box);\n                        }\n                    }\n                    this.contentBox = contentBox;\n                    this.targetBox = targetBox;\n                    this.box = box || contentBox;\n                }\n            },\n            createVisual: function () {\n                BoxElement.fn.createVisual.call(this);\n                this.visual.options.noclip = this.options.noclip;\n                if (this.options.visible) {\n                    this.createLine();\n                }\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (options.visible && customVisual) {\n                    this.visual = customVisual($.extend(this.fields, {\n                        sender: this.getSender(),\n                        rect: this.targetBox.toRect(),\n                        options: {\n                            background: options.background,\n                            border: options.background,\n                            icon: options.icon,\n                            label: options.label,\n                            line: options.line,\n                            position: options.position,\n                            visible: options.visible\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    }));\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            createLine: function () {\n                var options = this.options.line;\n                if (this.linePoints) {\n                    var path = Path.fromPoints(this.linePoints, {\n                        stroke: {\n                            color: options.color,\n                            width: options.width,\n                            dashType: options.dashType\n                        }\n                    });\n                    alignPathToPixel(path);\n                    this.visual.append(path);\n                }\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_CLICK, args)) {\n                    e.preventDefault();\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_HOVER, args)) {\n                    e.preventDefault();\n                }\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return $.extend(this.fields, {\n                    element: eventElement(e),\n                    text: defined(options.label) ? options.label.text : '',\n                    visual: this.visual\n                });\n            }\n        });\n        setDefaultOptions(Note, {\n            icon: {\n                visible: true,\n                type: CIRCLE\n            },\n            label: {\n                position: INSIDE,\n                visible: true,\n                align: CENTER,\n                vAlign: CENTER\n            },\n            line: { visible: true },\n            visible: true,\n            position: TOP,\n            zIndex: 2\n        });\n        function createAxisTick(options, tickOptions) {\n            var tickX = options.tickX;\n            var tickY = options.tickY;\n            var position = options.position;\n            var tick = new Path({\n                stroke: {\n                    width: tickOptions.width,\n                    color: tickOptions.color\n                }\n            });\n            if (options.vertical) {\n                tick.moveTo(tickX, position).lineTo(tickX + tickOptions.size, position);\n            } else {\n                tick.moveTo(position, tickY).lineTo(position, tickY + tickOptions.size);\n            }\n            alignPathToPixel(tick);\n            return tick;\n        }\n        function createAxisGridLine(options, gridLine) {\n            var lineStart = options.lineStart;\n            var lineEnd = options.lineEnd;\n            var position = options.position;\n            var line = new Path({\n                stroke: {\n                    width: gridLine.width,\n                    color: gridLine.color,\n                    dashType: gridLine.dashType\n                }\n            });\n            if (options.vertical) {\n                line.moveTo(lineStart, position).lineTo(lineEnd, position);\n            } else {\n                line.moveTo(position, lineStart).lineTo(position, lineEnd);\n            }\n            alignPathToPixel(line);\n            return line;\n        }\n        var Axis = ChartElement.extend({\n            init: function (options, chartService) {\n                if (chartService === void 0) {\n                    chartService = new ChartService();\n                }\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!this.options.visible) {\n                    this.options = deepExtend({}, this.options, {\n                        labels: { visible: false },\n                        line: { visible: false },\n                        margin: 0,\n                        majorTickSize: 0,\n                        minorTickSize: 0\n                    });\n                }\n                this.options.minorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.minorTickType !== NONE\n                }, this.options.minorTicks, {\n                    size: this.options.minorTickSize,\n                    align: this.options.minorTickType\n                });\n                this.options.majorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.majorTickType !== NONE\n                }, this.options.majorTicks, {\n                    size: this.options.majorTickSize,\n                    align: this.options.majorTickType\n                });\n                if (!this.options._deferLabels) {\n                    this.createLabels();\n                }\n                this.createTitle();\n                this.createNotes();\n            },\n            labelsRange: function () {\n                return {\n                    min: this.options.labels.skip,\n                    max: this.labelsCount()\n                };\n            },\n            createLabels: function () {\n                var this$1 = this;\n                var options = this.options;\n                var align = options.vertical ? RIGHT : CENTER;\n                var labelOptions = deepExtend({}, options.labels, {\n                    align: align,\n                    zIndex: options.zIndex\n                });\n                var step = Math.max(1, labelOptions.step);\n                this.children = grep(this.children, function (child) {\n                    return !(child instanceof AxisLabel);\n                });\n                this.labels = [];\n                if (labelOptions.visible) {\n                    var range = this.labelsRange();\n                    var rotation = labelOptions.rotation;\n                    if (isObject(rotation)) {\n                        labelOptions.alignRotation = rotation.align;\n                        labelOptions.rotation = rotation.angle;\n                    }\n                    if (labelOptions.rotation === 'auto') {\n                        labelOptions.rotation = 0;\n                        options.autoRotateLabels = true;\n                    }\n                    for (var idx = range.min; idx < range.max; idx += step) {\n                        var label = this$1.createAxisLabel(idx, labelOptions);\n                        if (label) {\n                            this$1.append(label);\n                            this$1.labels.push(label);\n                        }\n                    }\n                }\n            },\n            lineBox: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var axisX = mirror ? box.x1 : box.x2;\n                var axisY = mirror ? box.y2 : box.y1;\n                var lineWidth = options.line.width || 0;\n                return vertical ? new Box(axisX, box.y1, axisX, box.y2 - lineWidth) : new Box(box.x1, axisY, box.x2 - lineWidth, axisY);\n            },\n            createTitle: function () {\n                var options = this.options;\n                var titleOptions = deepExtend({\n                    rotation: options.vertical ? -90 : 0,\n                    text: '',\n                    zIndex: 1,\n                    visualSize: true\n                }, options.title);\n                if (titleOptions.visible && titleOptions.text) {\n                    var title = new TextBox(titleOptions.text, titleOptions);\n                    this.append(title);\n                    this.title = title;\n                }\n            },\n            createNotes: function () {\n                var this$1 = this;\n                var options = this.options;\n                var notes = options.notes;\n                var items = notes.data || [];\n                this.notes = [];\n                for (var i = 0; i < items.length; i++) {\n                    var item = deepExtend({}, notes, items[i]);\n                    item.value = this$1.parseNoteValue(item.value);\n                    var note = new Note({\n                        value: item.value,\n                        text: item.label.text,\n                        dataItem: item\n                    }, item, this$1.chartService);\n                    if (note.options.visible) {\n                        if (defined(note.options.position)) {\n                            if (options.vertical && !inArray(note.options.position, [\n                                    LEFT,\n                                    RIGHT\n                                ])) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else if (!options.vertical && !inArray(note.options.position, [\n                                    TOP,\n                                    BOTTOM\n                                ])) {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        } else {\n                            if (options.vertical) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        }\n                        this$1.append(note);\n                        this$1.notes.push(note);\n                    }\n                }\n            },\n            parseNoteValue: function (value) {\n                return value;\n            },\n            renderVisual: function () {\n                ChartElement.fn.renderVisual.call(this);\n                this.createPlotBands();\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this.createBackground();\n                this.createLine();\n            },\n            gridLinesVisual: function () {\n                var gridLines = this._gridLines;\n                if (!gridLines) {\n                    gridLines = this._gridLines = new Group({ zIndex: -2 });\n                    this.appendVisual(this._gridLines);\n                }\n                return gridLines;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var mirror = options.labels.mirror;\n                var majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n                var tickLineOptions = { vertical: options.vertical };\n                function render(tickPositions, tickOptions, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, tickOptions.step);\n                    if (tickOptions.visible) {\n                        for (var i = tickOptions.skip; i < count; i += step) {\n                            if (defined(skipUnit) && i % skipUnit === 0) {\n                                continue;\n                            }\n                            tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                            tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                            tickLineOptions.position = tickPositions[i];\n                            lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), options.majorTicks);\n                render(this.getMinorTickPositions(), options.minorTicks, majorUnit / options.minorUnit);\n            },\n            createLine: function () {\n                var options = this.options;\n                var line = options.line;\n                var lineBox = this.lineBox();\n                if (line.width > 0 && line.visible) {\n                    var path = new Path({\n                        stroke: {\n                            width: line.width,\n                            color: line.color,\n                            dashType: line.dashType\n                        }\n                    });\n                    path.moveTo(lineBox.x1, lineBox.y1).lineTo(lineBox.x2, lineBox.y2);\n                    if (options._alignLines) {\n                        alignPathToPixel(path);\n                    }\n                    var group = this._lineGroup = new Group();\n                    group.append(path);\n                    this.visual.append(group);\n                    this.createTicks(group);\n                }\n            },\n            getActualTickSize: function () {\n                var options = this.options;\n                var tickSize = 0;\n                if (options.majorTicks.visible && options.minorTicks.visible) {\n                    tickSize = Math.max(options.majorTicks.size, options.minorTicks.size);\n                } else if (options.majorTicks.visible) {\n                    tickSize = options.majorTicks.size;\n                } else if (options.minorTicks.visible) {\n                    tickSize = options.minorTicks.size;\n                }\n                return tickSize;\n            },\n            createBackground: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var background = options.background;\n                if (background) {\n                    this._backgroundPath = Path.fromRect(box.toRect(), {\n                        fill: { color: background },\n                        stroke: null\n                    });\n                    this.visual.append(this._backgroundPath);\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var options = this.options;\n                var plotBands = options.plotBands || [];\n                var vertical = options.vertical;\n                var plotArea = this.plotArea;\n                if (plotBands.length === 0) {\n                    return;\n                }\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                var altAxis = grep(this.pane.axes, function (axis) {\n                    return axis.options.vertical !== this$1.options.vertical;\n                })[0];\n                for (var idx = 0; idx < plotBands.length; idx++) {\n                    var item = plotBands[idx];\n                    var slotX = void 0, slotY = void 0;\n                    if (vertical) {\n                        slotX = (altAxis || plotArea.axisX).lineBox();\n                        slotY = this$1.getSlot(item.from, item.to, true);\n                    } else {\n                        slotX = this$1.getSlot(item.from, item.to, true);\n                        slotY = (altAxis || plotArea.axisY).lineBox();\n                    }\n                    if (slotX.width() !== 0 && slotY.height() !== 0) {\n                        var bandRect = new Rect([\n                            slotX.x1,\n                            slotY.y1\n                        ], [\n                            slotX.width(),\n                            slotY.height()\n                        ]);\n                        var path = Path.fromRect(bandRect, {\n                            fill: {\n                                color: item.color,\n                                opacity: item.opacity\n                            },\n                            stroke: null\n                        });\n                        group.append(path);\n                    }\n                }\n                this.appendVisual(group);\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var minorUnit = options.minorUnit;\n                var vertical = options.vertical;\n                var axisLineVisible = altAxis.options.line.visible;\n                var majorUnit = majorGridLines.visible ? options.majorUnit : 0;\n                var lineBox = altAxis.lineBox();\n                var linePos = lineBox[vertical ? 'y1' : 'x1'];\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPositions, gridLine, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, gridLine.step);\n                    if (gridLine.visible) {\n                        for (var i = gridLine.skip; i < count; i += step) {\n                            var pos = round(tickPositions[i]);\n                            if (!inArray(pos, majorTicks)) {\n                                if (i % skipUnit !== 0 && (!axisLineVisible || linePos !== pos)) {\n                                    lineOptions.position = pos;\n                                    container.append(createAxisGridLine(lineOptions, gridLine));\n                                    majorTicks.push(pos);\n                                }\n                            }\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), majorGridLines);\n                render(this.getMinorTickPositions(), minorGridLines, majorUnit / minorUnit);\n                return container.children;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var title = ref.title;\n                var vertical = options.vertical;\n                var count = labels.length;\n                var sizeFn = vertical ? WIDTH : HEIGHT;\n                var titleSize = title ? title.box[sizeFn]() : 0;\n                var space = this.getActualTickSize() + options.margin + titleSize;\n                var rootBox = (this.getRoot() || {}).box || box;\n                var boxSize = rootBox[sizeFn]();\n                var maxLabelSize = 0;\n                for (var i = 0; i < count; i++) {\n                    var labelSize = labels[i].box[sizeFn]();\n                    if (labelSize + space <= boxSize) {\n                        maxLabelSize = Math.max(maxLabelSize, labelSize);\n                    }\n                }\n                if (vertical) {\n                    this.box = new Box(box.x1, box.y1, box.x1 + maxLabelSize + space, box.y2);\n                } else {\n                    this.box = new Box(box.x1, box.y1, box.x2, box.y1 + maxLabelSize + space);\n                }\n                this.arrangeTitle();\n                this.arrangeLabels();\n                this.arrangeNotes();\n            },\n            getLabelsTickPositions: function () {\n                return this.getMajorTickPositions();\n            },\n            labelTickIndex: function (label) {\n                return label.index;\n            },\n            arrangeLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var labelsBetweenTicks = !options.justified;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var mirror = options.labels.mirror;\n                var tickPositions = this.getLabelsTickPositions();\n                var labelOffset = this.getActualTickSize() + options.margin;\n                for (var idx = 0; idx < labels.length; idx++) {\n                    var label = labels[idx];\n                    var tickIx = this$1.labelTickIndex(label);\n                    var labelSize = vertical ? label.box.height() : label.box.width();\n                    var labelPos = tickPositions[tickIx] - labelSize / 2;\n                    var labelBox = void 0, firstTickPosition = void 0, nextTickPosition = void 0;\n                    if (vertical) {\n                        if (labelsBetweenTicks) {\n                            firstTickPosition = tickPositions[tickIx];\n                            nextTickPosition = tickPositions[tickIx + 1];\n                            var middle = firstTickPosition + (nextTickPosition - firstTickPosition) / 2;\n                            labelPos = middle - labelSize / 2;\n                        }\n                        var labelX = lineBox.x2;\n                        if (mirror) {\n                            labelX += labelOffset;\n                            label.options.rotationOrigin = LEFT;\n                        } else {\n                            labelX -= labelOffset + label.box.width();\n                            label.options.rotationOrigin = RIGHT;\n                        }\n                        labelBox = label.box.move(labelX, labelPos);\n                    } else {\n                        if (labelsBetweenTicks) {\n                            firstTickPosition = tickPositions[tickIx];\n                            nextTickPosition = tickPositions[tickIx + 1];\n                        } else {\n                            firstTickPosition = labelPos;\n                            nextTickPosition = labelPos + labelSize;\n                        }\n                        var labelY = lineBox.y1;\n                        if (mirror) {\n                            labelY -= labelOffset + label.box.height();\n                            label.options.rotationOrigin = BOTTOM;\n                        } else {\n                            labelY += labelOffset;\n                            label.options.rotationOrigin = TOP;\n                        }\n                        labelBox = new Box(firstTickPosition, labelY, nextTickPosition, labelY + label.box.height());\n                    }\n                    label.reflow(labelBox);\n                }\n            },\n            autoRotateLabels: function () {\n                if (this.options.autoRotateLabels && !this.options.vertical) {\n                    var tickPositions = this.getMajorTickPositions();\n                    var labels = this.labels;\n                    var angle;\n                    for (var idx = 0; idx < labels.length; idx++) {\n                        var width = tickPositions[idx + 1] - tickPositions[idx];\n                        var labelBox = labels[idx].box;\n                        if (labelBox.width() > width) {\n                            if (labelBox.height() > width) {\n                                angle = -90;\n                                break;\n                            }\n                            angle = -45;\n                        }\n                    }\n                    if (angle) {\n                        for (var idx$1 = 0; idx$1 < labels.length; idx$1++) {\n                            labels[idx$1].options.rotation = angle;\n                            labels[idx$1].reflow(new Box());\n                        }\n                        return true;\n                    }\n                }\n            },\n            arrangeTitle: function () {\n                var ref = this;\n                var options = ref.options;\n                var title = ref.title;\n                var mirror = options.labels.mirror;\n                var vertical = options.vertical;\n                if (title) {\n                    if (vertical) {\n                        title.options.align = mirror ? RIGHT : LEFT;\n                        title.options.vAlign = title.options.position;\n                    } else {\n                        title.options.align = title.options.position;\n                        title.options.vAlign = mirror ? TOP : BOTTOM;\n                    }\n                    title.reflow(this.box);\n                }\n            },\n            arrangeNotes: function () {\n                var this$1 = this;\n                for (var idx = 0; idx < this.notes.length; idx++) {\n                    var item = this$1.notes[idx];\n                    var value = item.options.value;\n                    var slot = void 0;\n                    if (defined(value)) {\n                        if (this$1.shouldRenderNote(value)) {\n                            item.show();\n                        } else {\n                            item.hide();\n                        }\n                        slot = this$1.noteSlot(value);\n                    } else {\n                        item.hide();\n                    }\n                    item.reflow(slot || this$1.lineBox());\n                }\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            alignTo: function (secondAxis) {\n                var lineBox = secondAxis.lineBox();\n                var vertical = this.options.vertical;\n                var pos = vertical ? Y : X;\n                this.box.snapTo(lineBox, pos);\n                if (vertical) {\n                    this.box.shrink(0, this.lineBox().height() - lineBox.height());\n                } else {\n                    this.box.shrink(this.lineBox().width() - lineBox.width(), 0);\n                }\n                this.box[pos + 1] -= this.lineBox()[pos + 1] - lineBox[pos + 1];\n                this.box[pos + 2] -= this.lineBox()[pos + 2] - lineBox[pos + 2];\n            },\n            axisLabelText: function (value, dataItem, options) {\n                var text = value;\n                if (options.template) {\n                    var tmpl = TemplateService.compile(options.template);\n                    text = tmpl({\n                        value: value,\n                        dataItem: dataItem,\n                        format: options.format,\n                        culture: options.culture\n                    });\n                } else if (options.format) {\n                    text = this.chartService.format.localeAuto(options.format, [value], options.culture);\n                }\n                return text;\n            },\n            slot: function (from, to, limit) {\n                var slot = this.getSlot(from, to, limit);\n                if (slot) {\n                    return slot.toRect();\n                }\n            },\n            contentBox: function () {\n                var box = this.box.clone();\n                var labels = this.labels;\n                if (labels.length) {\n                    if (labels[0].options.visible) {\n                        box.wrap(labels[0].box);\n                    }\n                    var lastLabel = labels[labels.length - 1];\n                    if (lastLabel.options.visible) {\n                        box.wrap(lastLabel.box);\n                    }\n                }\n                return box;\n            },\n            limitRange: function (from, to, min, max, offset) {\n                var options = this.options;\n                if (from < min && offset < 0 && (!defined(options.min) || options.min <= min) || max < to && offset > 0 && (!defined(options.max) || max <= options.max)) {\n                    return null;\n                }\n                if (to < min && offset > 0 || max < from && offset < 0) {\n                    return {\n                        min: from,\n                        max: to\n                    };\n                }\n                var rangeSize = to - from;\n                var minValue = from;\n                var maxValue = to;\n                if (from < min) {\n                    minValue = limitValue(from, min, max);\n                    maxValue = limitValue(from + rangeSize, min + rangeSize, max);\n                } else if (to > max) {\n                    maxValue = limitValue(to, min, max);\n                    minValue = limitValue(to - rangeSize, min, max - rangeSize);\n                }\n                return {\n                    min: minValue,\n                    max: maxValue\n                };\n            },\n            valueRange: function () {\n                return {\n                    min: this.seriesMin,\n                    max: this.seriesMax\n                };\n            }\n        });\n        setDefaultOptions(Axis, {\n            labels: {\n                visible: true,\n                rotation: 0,\n                mirror: false,\n                step: 1,\n                skip: 0\n            },\n            line: {\n                width: 1,\n                color: BLACK,\n                visible: true\n            },\n            title: {\n                visible: true,\n                position: CENTER\n            },\n            majorTicks: {\n                align: OUTSIDE,\n                size: 4,\n                skip: 0,\n                step: 1\n            },\n            minorTicks: {\n                align: OUTSIDE,\n                size: 3,\n                skip: 0,\n                step: 1\n            },\n            axisCrossingValue: 0,\n            majorTickType: OUTSIDE,\n            minorTickType: NONE,\n            majorGridLines: {\n                skip: 0,\n                step: 1\n            },\n            minorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK,\n                skip: 0,\n                step: 1\n            },\n            margin: 5,\n            visible: true,\n            reverse: false,\n            justified: true,\n            notes: { label: { text: '' } },\n            _alignLines: true,\n            _deferLabels: false\n        });\n        var MIN_CATEGORY_POINTS_RANGE = 0.01;\n        var CategoryAxis = Axis.extend({\n            init: function (options, chartService) {\n                Axis.fn.init.call(this, options, chartService);\n                this._ticks = {};\n                this._initCategories(this.options);\n            },\n            _initCategories: function (options) {\n                var categories = (options.categories || []).slice(0);\n                var definedMin = defined(options.min);\n                var definedMax = defined(options.max);\n                options.categories = categories;\n                if ((definedMin || definedMax) && categories.length) {\n                    options.srcCategories = options.categories;\n                    var min = definedMin ? Math.floor(options.min) : 0;\n                    var max;\n                    if (definedMax) {\n                        max = options.justified ? Math.floor(options.max) + 1 : Math.ceil(options.max);\n                    } else {\n                        max = categories.length;\n                    }\n                    options.categories = options.categories.slice(min, max);\n                }\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var length = options.categories.length || 1;\n                var min = isNumber(options.min) ? options.min % 1 : 0;\n                var max;\n                if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n                    max = length - (1 - options.max % 1);\n                } else {\n                    max = length - (options.justified ? 1 : 0);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            totalRangeIndices: function (limit) {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.max;\n                } else if (isNumber(options.min)) {\n                    max = min + options.categories.length;\n                } else {\n                    max = (options.srcCategories || options.categories).length - (options.justified ? 1 : 0) || 1;\n                }\n                if (limit) {\n                    var totalRange = this.totalRange();\n                    min = limitValue(min, 0, totalRange.max);\n                    max = limitValue(max, 0, totalRange.max);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: isNumber(options.min) ? options.min : 0,\n                    max: isNumber(options.max) ? options.max : options.categories.length\n                };\n            },\n            totalRange: function () {\n                var options = this.options;\n                return {\n                    min: 0,\n                    max: Math.max(this._seriesMax || 0, (options.srcCategories || options.categories).length) - (options.justified ? 1 : 0)\n                };\n            },\n            getScale: function () {\n                var ref = this.rangeIndices();\n                var min = ref.min;\n                var max = ref.max;\n                var lineBox = this.lineBox();\n                var size = this.options.vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (max - min || 1);\n                return scale * (this.options.reverse ? -1 : 1);\n            },\n            getTickPositions: function (stepSize) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var ref$1 = this.rangeIndices();\n                var min = ref$1.min;\n                var max = ref$1.max;\n                var lineBox = this.lineBox();\n                var scale = this.getScale();\n                var pos = lineBox[(vertical ? Y : X) + (reverse ? 2 : 1)];\n                var positions = [];\n                var current = min % 1 !== 0 ? Math.floor(min / 1) + stepSize : min;\n                while (current <= max) {\n                    positions.push(pos + round(scale * (current - min), COORD_PRECISION));\n                    current += stepSize;\n                }\n                return positions;\n            },\n            getLabelsTickPositions: function () {\n                var tickPositions = this.getMajorTickPositions().slice(0);\n                var range = this.rangeIndices();\n                var scale = this.getScale();\n                var box = this.lineBox();\n                var options = this.options;\n                var axis = options.vertical ? Y : X;\n                var start = options.reverse ? 2 : 1;\n                var end = options.reverse ? 1 : 2;\n                if (range.min % 1 !== 0) {\n                    tickPositions.unshift(box[axis + start] - scale * (range.min % 1));\n                }\n                if (range.max % 1 !== 0) {\n                    tickPositions.push(box[axis + end] + scale * (1 - range.max % 1));\n                }\n                return tickPositions;\n            },\n            labelTickIndex: function (label) {\n                var range = this.rangeIndices();\n                var index = label.index;\n                if (range.min > 0) {\n                    index = index - Math.floor(range.min);\n                }\n                return index;\n            },\n            arrangeLabels: function () {\n                Axis.fn.arrangeLabels.call(this);\n                this.hideOutOfRangeLabels();\n            },\n            hideOutOfRangeLabels: function () {\n                var ref = this;\n                var box = ref.box;\n                var labels = ref.labels;\n                if (labels.length) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    var firstLabel = labels[0];\n                    var lastLabel = last(labels);\n                    if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                        firstLabel.options.visible = false;\n                    }\n                    if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                        lastLabel.options.visible = false;\n                    }\n                }\n            },\n            getMajorTickPositions: function () {\n                return this.getTicks().majorTicks;\n            },\n            getMinorTickPositions: function () {\n                return this.getTicks().minorTicks;\n            },\n            getTicks: function () {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var justified = ref.justified;\n                var cache = this._ticks;\n                var range = this.rangeIndices();\n                var lineBox = this.lineBox();\n                var hash = lineBox.getHash() + range.min + ',' + range.max + reverse + justified;\n                if (cache._hash !== hash) {\n                    cache._hash = hash;\n                    cache.majorTicks = this.getTickPositions(1);\n                    cache.minorTicks = this.getTickPositions(0.5);\n                }\n                return cache;\n            },\n            getSlot: function (from, to, limit) {\n                var ref = this;\n                var options = ref.options;\n                var reverse = options.reverse;\n                var justified = options.justified;\n                var vertical = options.vertical;\n                var ref$1 = this.rangeIndices();\n                var min = ref$1.min;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var slotBox = lineBox.clone();\n                var singleSlot = !defined(to);\n                var start = valueOrDefault(from, 0);\n                var end = valueOrDefault(to, start);\n                end = Math.max(end - 1, start);\n                end = Math.max(start, end);\n                var p1 = lineStart + (start - min) * scale;\n                var p2 = lineStart + (end + 1 - min) * scale;\n                if (singleSlot && justified) {\n                    p2 = p1;\n                }\n                if (limit) {\n                    p1 = limitValue(p1, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                    p2 = limitValue(p2, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                }\n                slotBox[valueAxis + 1] = reverse ? p2 : p1;\n                slotBox[valueAxis + 2] = reverse ? p1 : p2;\n                return slotBox;\n            },\n            slot: function (from, to, limit) {\n                var start = from;\n                var end = to;\n                if (typeof start === 'string') {\n                    start = this.categoryIndex(start);\n                }\n                if (typeof end === 'string') {\n                    end = this.categoryIndex(end);\n                }\n                return Axis.fn.slot.call(this, start, end, limit);\n            },\n            pointCategoryIndex: function (point) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var justified = ref.justified;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var range = this.rangeIndices();\n                var startValue = reverse ? range.max : range.min;\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + 1];\n                var lineEnd = lineBox[valueAxis + 2];\n                var pos = point[valueAxis];\n                if (pos < lineStart || pos > lineEnd) {\n                    return null;\n                }\n                var value = startValue + (pos - lineStart) / scale;\n                var diff = value % 1;\n                if (justified) {\n                    value = Math.round(value);\n                } else if (diff === 0 && value > 0) {\n                    value--;\n                }\n                return Math.floor(value);\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.options.categories[index];\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var index = (options.srcCategories || options.categories).indexOf(value);\n                return index - Math.floor(options.min || 0);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = options.categories.length;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                return {\n                    min: offset,\n                    max: range + offset\n                };\n            },\n            zoomRange: function (rate) {\n                var rangeIndices = this.totalRangeIndices();\n                var ref = this.totalRange();\n                var totalMin = ref.min;\n                var totalMax = ref.max;\n                var min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n                var max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n                if (max - min > 0) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            scaleRange: function (scale) {\n                var range = this.options.categories.length;\n                var delta = scale * range;\n                return {\n                    min: -delta,\n                    max: range + delta\n                };\n            },\n            labelsCount: function () {\n                var labelsRange = this.labelsRange();\n                return labelsRange.max - labelsRange.min;\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var justified = options.justified;\n                var labelOptions = options.labels;\n                var ref = this.totalRangeIndices(true);\n                var min = ref.min;\n                var max = ref.max;\n                var start = Math.floor(min);\n                if (!justified) {\n                    min = Math.floor(min);\n                    max = Math.ceil(max);\n                } else {\n                    min = Math.ceil(min);\n                    max = Math.floor(max);\n                }\n                var skip;\n                if (min > labelOptions.skip) {\n                    skip = labelOptions.skip + labelOptions.step * Math.ceil((min - labelOptions.skip) / labelOptions.step);\n                } else {\n                    skip = labelOptions.skip;\n                }\n                return {\n                    min: skip - start,\n                    max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n                };\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var dataItem = options.dataItems ? options.dataItems[index] : null;\n                var category = valueOrDefault(options.categories[index], '');\n                var text = this.axisLabelText(category, dataItem, labelOptions);\n                return new AxisLabel(category, text, index, dataItem, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.totalRangeIndices();\n                return Math.floor(range.min) <= value && value <= Math.ceil(range.max);\n            },\n            noteSlot: function (value) {\n                var options = this.options;\n                var index = value - Math.floor(options.min || 0);\n                return this.getSlot(index);\n            },\n            arrangeNotes: function () {\n                Axis.fn.arrangeNotes.call(this);\n                this.hideOutOfRangeNotes();\n            },\n            hideOutOfRangeNotes: function () {\n                var ref = this;\n                var notes = ref.notes;\n                var box = ref.box;\n                if (notes && notes.length) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    for (var idx = 0; idx < notes.length; idx++) {\n                        var note = notes[idx];\n                        if (note.box && (end < note.box[valueAxis + 1] || note.box[valueAxis + 2] < start)) {\n                            note.hide();\n                        }\n                    }\n                }\n            },\n            pan: function (delta) {\n                var range = this.totalRangeIndices(true);\n                var scale = this.getScale();\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var totalRange = this.totalRange();\n                var min = range.min + offset;\n                var max = range.max + offset;\n                return this.limitRange(min, max, 0, totalRange.max, offset);\n            },\n            pointsRange: function (start, end) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var range = this.totalRangeIndices(true);\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var diffStart = start[valueAxis] - lineStart;\n                var diffEnd = end[valueAxis] - lineStart;\n                var min = range.min + diffStart / scale;\n                var max = range.min + diffEnd / scale;\n                var rangeMin = Math.min(min, max);\n                var rangeMax = Math.max(min, max);\n                if (rangeMax - rangeMin >= MIN_CATEGORY_POINTS_RANGE) {\n                    return {\n                        min: rangeMin,\n                        max: rangeMax\n                    };\n                }\n            },\n            valueRange: function () {\n                return this.range();\n            }\n        });\n        setDefaultOptions(CategoryAxis, {\n            type: 'category',\n            categories: [],\n            vertical: false,\n            majorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK\n            },\n            labels: { zIndex: 1 },\n            justified: false,\n            _deferLabels: true\n        });\n        var MILLISECONDS = 'milliseconds';\n        var SECONDS = 'seconds';\n        var MINUTES = 'minutes';\n        var HOURS = 'hours';\n        var DAYS = 'days';\n        var WEEKS = 'weeks';\n        var MONTHS = 'months';\n        var YEARS = 'years';\n        var TIME_PER_MILLISECOND = 1;\n        var TIME_PER_SECOND = 1000;\n        var TIME_PER_MINUTE = 60 * TIME_PER_SECOND;\n        var TIME_PER_HOUR = 60 * TIME_PER_MINUTE;\n        var TIME_PER_DAY = 24 * TIME_PER_HOUR;\n        var TIME_PER_WEEK = 7 * TIME_PER_DAY;\n        var TIME_PER_MONTH = 31 * TIME_PER_DAY;\n        var TIME_PER_YEAR = 365 * TIME_PER_DAY;\n        var TIME_PER_UNIT = {\n            'years': TIME_PER_YEAR,\n            'months': TIME_PER_MONTH,\n            'weeks': TIME_PER_WEEK,\n            'days': TIME_PER_DAY,\n            'hours': TIME_PER_HOUR,\n            'minutes': TIME_PER_MINUTE,\n            'seconds': TIME_PER_SECOND,\n            'milliseconds': TIME_PER_MILLISECOND\n        };\n        function absoluteDateDiff(a, b) {\n            var diff = a.getTime() - b;\n            var offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n            return diff - offsetDiff * TIME_PER_MINUTE;\n        }\n        function addTicks(date, ticks) {\n            return new Date(date.getTime() + ticks);\n        }\n        function toDate(value) {\n            var result;\n            if (value instanceof Date) {\n                result = value;\n            } else if (value) {\n                result = new Date(value);\n            }\n            return result;\n        }\n        function startOfWeek(date, weekStartDay) {\n            if (weekStartDay === void 0) {\n                weekStartDay = 0;\n            }\n            var daysToSubtract = 0;\n            var day = date.getDay();\n            if (!isNaN(day)) {\n                while (day !== weekStartDay) {\n                    if (day === 0) {\n                        day = 6;\n                    } else {\n                        day--;\n                    }\n                    daysToSubtract++;\n                }\n            }\n            return addTicks(date, -daysToSubtract * TIME_PER_DAY);\n        }\n        function adjustDST(date, hours) {\n            if (hours === 0 && date.getHours() === 23) {\n                date.setHours(date.getHours() + 2);\n                return true;\n            }\n            return false;\n        }\n        function addHours(date, hours) {\n            var roundedDate = new Date(date);\n            roundedDate.setMinutes(0, 0, 0);\n            var tzDiff = (date.getTimezoneOffset() - roundedDate.getTimezoneOffset()) * TIME_PER_MINUTE;\n            return addTicks(roundedDate, tzDiff + hours * TIME_PER_HOUR);\n        }\n        function addDuration(dateValue, value, unit, weekStartDay) {\n            var result = dateValue;\n            if (dateValue) {\n                var date = toDate(dateValue);\n                var hours = date.getHours();\n                if (unit === YEARS) {\n                    result = new Date(date.getFullYear() + value, 0, 1);\n                    adjustDST(result, 0);\n                } else if (unit === MONTHS) {\n                    result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n                    adjustDST(result, hours);\n                } else if (unit === WEEKS) {\n                    result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n                    adjustDST(result, hours);\n                } else if (unit === DAYS) {\n                    result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n                    adjustDST(result, hours);\n                } else if (unit === HOURS) {\n                    result = addHours(date, value);\n                } else if (unit === MINUTES) {\n                    result = addTicks(date, value * TIME_PER_MINUTE);\n                    if (result.getSeconds() > 0) {\n                        result.setSeconds(0);\n                    }\n                } else if (unit === SECONDS) {\n                    result = addTicks(date, value * TIME_PER_SECOND);\n                } else if (unit === MILLISECONDS) {\n                    result = addTicks(date, value);\n                }\n                if (unit !== MILLISECONDS && result.getMilliseconds() > 0) {\n                    result.setMilliseconds(0);\n                }\n            }\n            return result;\n        }\n        function floorDate(date, unit, weekStartDay) {\n            return addDuration(toDate(date), 0, unit, weekStartDay);\n        }\n        function ceilDate(dateValue, unit, weekStartDay) {\n            var date = toDate(dateValue);\n            if (date && floorDate(date, unit, weekStartDay).getTime() === date.getTime()) {\n                return date;\n            }\n            return addDuration(date, 1, unit, weekStartDay);\n        }\n        function dateComparer(a, b) {\n            if (a && b) {\n                return a.getTime() - b.getTime();\n            }\n            return -1;\n        }\n        function dateDiff(a, b) {\n            return a.getTime() - b;\n        }\n        function toTime(value) {\n            if (isArray(value)) {\n                var result = [];\n                for (var idx = 0; idx < value.length; idx++) {\n                    result.push(toTime(value[idx]));\n                }\n                return result;\n            } else if (value) {\n                return toDate(value).getTime();\n            }\n        }\n        function dateEquals(a, b) {\n            if (a && b) {\n                return toTime(a) === toTime(b);\n            }\n            return a === b;\n        }\n        function timeIndex(date, start, baseUnit) {\n            return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n        }\n        function dateIndex(value, start, baseUnit, baseUnitStep) {\n            var date = toDate(value);\n            var startDate = toDate(start);\n            var index;\n            if (baseUnit === MONTHS) {\n                index = date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12 + timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n            } else if (baseUnit === YEARS) {\n                index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n            } else if (baseUnit === DAYS || baseUnit === WEEKS) {\n                index = timeIndex(date, startDate, baseUnit);\n            } else {\n                index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n            }\n            return index / baseUnitStep;\n        }\n        function duration(a, b, unit) {\n            var diff;\n            if (unit === YEARS) {\n                diff = b.getFullYear() - a.getFullYear();\n            } else if (unit === MONTHS) {\n                diff = duration(a, b, YEARS) * 12 + b.getMonth() - a.getMonth();\n            } else if (unit === DAYS) {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_DAY);\n            } else {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_UNIT[unit]);\n            }\n            return diff;\n        }\n        function lteDateIndex(date, sortedDates) {\n            var low = 0;\n            var high = sortedDates.length - 1;\n            var index;\n            while (low <= high) {\n                index = Math.floor((low + high) / 2);\n                var currentDate = sortedDates[index];\n                if (currentDate < date) {\n                    low = index + 1;\n                    continue;\n                }\n                if (currentDate > date) {\n                    high = index - 1;\n                    continue;\n                }\n                while (dateEquals(sortedDates[index - 1], date)) {\n                    index--;\n                }\n                return index;\n            }\n            if (sortedDates[index] <= date) {\n                return index;\n            }\n            return index - 1;\n        }\n        function parseDate(intlService, date) {\n            var result;\n            if (isString(date)) {\n                result = intlService.parseDate(date) || toDate(date);\n            } else {\n                result = toDate(date);\n            }\n            return result;\n        }\n        function parseDates(intlService, dates) {\n            if (isArray(dates)) {\n                var result = [];\n                for (var idx = 0; idx < dates.length; idx++) {\n                    result.push(parseDate(intlService, dates[idx]));\n                }\n                return result;\n            }\n            return parseDate(intlService, dates);\n        }\n        var COORDINATE_LIMIT = 300000;\n        var DateLabelFormats = {\n            seconds: 'HH:mm:ss',\n            minutes: 'HH:mm',\n            hours: 'HH:mm',\n            days: 'M/d',\n            weeks: 'M/d',\n            months: 'MMM \\'yy',\n            years: 'yyyy'\n        };\n        var ZERO_THRESHOLD = 0.2;\n        var AUTO = 'auto';\n        var BASE_UNITS = [\n            MILLISECONDS,\n            SECONDS,\n            MINUTES,\n            HOURS,\n            DAYS,\n            WEEKS,\n            MONTHS,\n            YEARS\n        ];\n        var FIT = 'fit';\n        var DateCategoryAxis = CategoryAxis.extend({\n            init: function (axisOptions, chartService) {\n                CategoryAxis.fn.init.call(this, axisOptions, chartService);\n                var intlService = chartService.intl;\n                var options = this.options;\n                options = deepExtend({ roundToBaseUnit: true }, options, {\n                    categories: parseDates(intlService, options.categories),\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max)\n                });\n                options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n                options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n                if (options.categories && options.categories.length > 0) {\n                    var baseUnit = (options.baseUnit || '').toLowerCase();\n                    var useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n                    if (useDefault) {\n                        options.baseUnit = this.defaultBaseUnit(options);\n                    }\n                    if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n                        this.autoBaseUnit(options);\n                    }\n                    this._groupsStart = addDuration(options.categories[0], 0, options.baseUnit, options.weekStartDay);\n                    this.groupCategories(options);\n                } else {\n                    options.baseUnit = options.baseUnit || DAYS;\n                }\n                this.options = options;\n            },\n            _initCategories: function () {\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                var categories = this.options.categories || [];\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n            },\n            parseNoteValue: function (value) {\n                return parseDate(this.chartService.intl, value);\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / (range.max - range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if (range.min && range.max) {\n                    var from = addTicks(options.min || range.min, offset);\n                    var to = addTicks(options.max || range.max, offset);\n                    range = {\n                        min: addDuration(from, 0, baseUnit, weekStartDay),\n                        max: addDuration(to, 0, baseUnit, weekStartDay)\n                    };\n                }\n                return range;\n            },\n            scaleRange: function (delta) {\n                var rounds = Math.abs(delta);\n                var result = this.range();\n                var from = result.min;\n                var to = result.max;\n                if (from && to) {\n                    while (rounds--) {\n                        var range = dateDiff(from, to);\n                        var step = Math.round(range * 0.1);\n                        if (delta < 0) {\n                            from = addTicks(from, step);\n                            to = addTicks(to, -step);\n                        } else {\n                            from = addTicks(from, -step);\n                            to = addTicks(to, step);\n                        }\n                    }\n                    result = {\n                        min: from,\n                        max: to\n                    };\n                }\n                return result;\n            },\n            defaultBaseUnit: function (options) {\n                var categories = options.categories;\n                var count = defined(categories) ? categories.length : 0;\n                var minDiff = MAX_VALUE;\n                var lastCategory, unit;\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    var category = categories[categoryIx];\n                    if (category && lastCategory) {\n                        var diff = absoluteDateDiff(category, lastCategory);\n                        if (diff > 0) {\n                            minDiff = Math.min(minDiff, diff);\n                            if (minDiff >= TIME_PER_YEAR) {\n                                unit = YEARS;\n                            } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                                unit = MONTHS;\n                            } else if (minDiff >= TIME_PER_WEEK) {\n                                unit = WEEKS;\n                            } else if (minDiff >= TIME_PER_DAY) {\n                                unit = DAYS;\n                            } else if (minDiff >= TIME_PER_HOUR) {\n                                unit = HOURS;\n                            } else if (minDiff >= TIME_PER_MINUTE) {\n                                unit = MINUTES;\n                            } else {\n                                unit = SECONDS;\n                            }\n                        }\n                    }\n                    lastCategory = category;\n                }\n                return unit || DAYS;\n            },\n            _categoryRange: function (categories) {\n                var range = categories._range;\n                if (!range) {\n                    range = categories._range = sparseArrayLimits(categories);\n                }\n                return range;\n            },\n            totalRange: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var categories = options.categories;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep;\n                if (baseUnitStep === void 0) {\n                    baseUnitStep = 1;\n                }\n                var categoryLimits = this.categoriesRange();\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                var minIdx = 0, maxIdx = 0;\n                if (categories.length) {\n                    minIdx = dateIndex(min, categories[0], baseUnit, baseUnitStep);\n                    maxIdx = dateIndex(max, categories[0], baseUnit, baseUnitStep);\n                    if (options.roundToBaseUnit) {\n                        minIdx = Math.floor(minIdx);\n                        maxIdx = options.justified ? Math.floor(maxIdx) : Math.ceil(maxIdx);\n                    }\n                }\n                return {\n                    min: minIdx,\n                    max: maxIdx\n                };\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var range = this.rangeIndices();\n                var min = Math.floor(range.min);\n                var max = Math.ceil(range.max);\n                return {\n                    min: min + labelOptions.skip,\n                    max: options.categories.length ? max + (options.justified ? 1 : 0) : 0\n                };\n            },\n            categoriesRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                var max = toDate(range.max);\n                if (!options.justified && dateEquals(max, this._roundToTotalStep(max, options, false))) {\n                    max = this._roundToTotalStep(max, options, true, true);\n                }\n                return {\n                    min: toDate(range.min),\n                    max: max\n                };\n            },\n            currentRange: function () {\n                var options = this.options;\n                var round$$1 = options.roundToBaseUnit !== false;\n                var totalRange = this.categoriesRange();\n                var min = options.min;\n                var max = options.max;\n                if (!min) {\n                    min = round$$1 ? this._roundToTotalStep(totalRange.min, options, false) : totalRange.min;\n                }\n                if (!max) {\n                    max = round$$1 ? this._roundToTotalStep(totalRange.max, options, !options.justified) : totalRange.max;\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            datesRange: function () {\n                var range = this._categoryRange(this.options.srcCategories || this.options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            },\n            pan: function (delta) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var ref = this.currentRange();\n                var min = ref.min;\n                var max = ref.max;\n                var totalLimits = this.totalLimits();\n                var scale = size / (max - min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var from = addTicks(min, offset);\n                var to = addTicks(max, offset);\n                var panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n                if (panRange) {\n                    panRange.min = toDate(panRange.min);\n                    panRange.max = toDate(panRange.max);\n                    panRange.baseUnit = options.baseUnit;\n                    panRange.baseUnitStep = options.baseUnitStep || 1;\n                    panRange.userSetBaseUnit = options.userSetBaseUnit;\n                    panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n                    return panRange;\n                }\n            },\n            pointsRange: function (start, end) {\n                var pointsRange = CategoryAxis.fn.pointsRange.call(this, start, end);\n                var datesRange = this.currentRange();\n                var indicesRange = this.rangeIndices();\n                var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n                var options = this.options;\n                var min = addTicks(datesRange.min, pointsRange.min * scale);\n                var max = addTicks(datesRange.min, pointsRange.max * scale);\n                return {\n                    min: min,\n                    max: max,\n                    baseUnit: options.userSetBaseUnit,\n                    baseUnitStep: options.userSetBaseUnitStep\n                };\n            },\n            zoomRange: function (delta) {\n                var options = this.options;\n                var totalLimits = this.totalLimits();\n                var weekStartDay = options.weekStartDay;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep;\n                if (baseUnitStep === void 0) {\n                    baseUnitStep = 1;\n                }\n                var ref = this.currentRange();\n                var rangeMin = ref.min;\n                var rangeMax = ref.max;\n                var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n                var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n                if (options.userSetBaseUnit === FIT) {\n                    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n                    var maxDateGroups = options.maxDateGroups;\n                    var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n                    var rangeDiff = dateDiff(rangeMax, rangeMin);\n                    var diff = dateDiff(max, min);\n                    var baseUnitIndex = BASE_UNITS.indexOf(baseUnit);\n                    var autoBaseUnitStep, ticks;\n                    if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n                        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                        min = addTicks(rangeMin, ticks);\n                        max = addTicks(rangeMax, -ticks);\n                    } else if (diff > maxDiff && baseUnit !== YEARS) {\n                        var stepIndex = 0;\n                        do {\n                            baseUnitIndex++;\n                            baseUnit = BASE_UNITS[baseUnitIndex];\n                            stepIndex = 0;\n                            ticks = 2 * TIME_PER_UNIT[baseUnit];\n                            do {\n                                autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                                stepIndex++;\n                            } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n                        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                        if (ticks > 0) {\n                            min = addTicks(rangeMin, -ticks);\n                            max = addTicks(rangeMax, ticks);\n                            min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                            max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                        }\n                    }\n                }\n                min = toDate(limitValue(min, totalLimits.min, totalLimits.max));\n                max = toDate(limitValue(max, totalLimits.min, totalLimits.max));\n                if (min && max && dateDiff(max, min) > 0) {\n                    return {\n                        min: min,\n                        max: max,\n                        baseUnit: options.userSetBaseUnit,\n                        baseUnitStep: options.userSetBaseUnitStep\n                    };\n                }\n            },\n            totalLimits: function () {\n                var options = this.options;\n                var datesRange = this.datesRange();\n                var min = this._roundToTotalStep(toDate(datesRange.min), options, false);\n                var max = datesRange.max;\n                if (!options.justified) {\n                    max = this._roundToTotalStep(max, options, true, dateEquals(max, this._roundToTotalStep(max, options, false)));\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function (rangeOptions) {\n                var options = rangeOptions || this.options;\n                var categories = options.categories;\n                var autoUnit = options.baseUnit === FIT;\n                var baseUnit = autoUnit ? BASE_UNITS[0] : options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var stepOptions = {\n                    baseUnit: baseUnit,\n                    baseUnitStep: baseUnitStep,\n                    weekStartDay: options.weekStartDay\n                };\n                var categoryLimits = this._categoryRange(categories);\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                return {\n                    min: this._roundToTotalStep(min, stepOptions, false),\n                    max: this._roundToTotalStep(max, stepOptions, true, true)\n                };\n            },\n            autoBaseUnit: function (options) {\n                var categoryLimits = this._categoryRange(options.categories);\n                var span = toDate(options.max || categoryLimits.max) - toDate(options.min || categoryLimits.min);\n                var maxDateGroups = options.maxDateGroups || this.options.maxDateGroups;\n                var autoUnit = options.baseUnit === FIT;\n                var autoUnitIx = 0;\n                var baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit;\n                var units = span / TIME_PER_UNIT[baseUnit];\n                var totalUnits = units;\n                var autoBaseUnitSteps = deepExtend({}, this.options.autoBaseUnitSteps, options.autoBaseUnitSteps);\n                var unitSteps, step, nextStep;\n                while (!step || units >= maxDateGroups) {\n                    unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n                    nextStep = unitSteps.shift();\n                    if (nextStep) {\n                        step = nextStep;\n                        units = totalUnits / step;\n                    } else if (baseUnit === last(BASE_UNITS)) {\n                        step = Math.ceil(totalUnits / maxDateGroups);\n                        break;\n                    } else if (autoUnit) {\n                        baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n                        totalUnits = span / TIME_PER_UNIT[baseUnit];\n                        unitSteps = null;\n                    } else {\n                        if (units > maxDateGroups) {\n                            step = Math.ceil(totalUnits / maxDateGroups);\n                        }\n                        break;\n                    }\n                }\n                options.baseUnitStep = step;\n                options.baseUnit = baseUnit;\n            },\n            groupCategories: function (options) {\n                var categories = options.categories;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep;\n                if (baseUnitStep === void 0) {\n                    baseUnitStep = 1;\n                }\n                var maxCategory = toDate(sparseArrayLimits(categories).max);\n                var ref = this.range(options);\n                var min = ref.min;\n                var max = ref.max;\n                var groups = [];\n                var nextDate;\n                for (var date = min; date < max; date = nextDate) {\n                    groups.push(date);\n                    nextDate = addDuration(date, baseUnitStep, baseUnit, options.weekStartDay);\n                    if (nextDate > maxCategory && !options.max) {\n                        break;\n                    }\n                }\n                options.srcCategories = categories;\n                options.categories = groups;\n            },\n            _roundToTotalStep: function (value, axisOptions, upper, roundToNext) {\n                var options = axisOptions || this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep;\n                if (baseUnitStep === void 0) {\n                    baseUnitStep = 1;\n                }\n                var start = this._groupsStart;\n                if (start) {\n                    var step = dateIndex(value, start, baseUnit, baseUnitStep);\n                    var roundedStep = upper ? Math.ceil(step) : Math.floor(step);\n                    if (roundToNext) {\n                        roundedStep++;\n                    }\n                    return addDuration(start, roundedStep * baseUnitStep, baseUnit, options.weekStartDay);\n                }\n                return addDuration(value, upper ? baseUnitStep : 0, baseUnit, options.weekStartDay);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var dataItem = options.dataItems ? options.dataItems[index] : null;\n                var date = options.categories[index];\n                var baseUnit = options.baseUnit;\n                var unitFormat = labelOptions.dateFormats[baseUnit];\n                var visible = true;\n                if (options.justified) {\n                    var roundedDate = floorDate(date, baseUnit, options.weekStartDay);\n                    visible = dateEquals(roundedDate, date);\n                } else if (!options.roundToBaseUnit) {\n                    visible = !dateEquals(this.range().max, date);\n                }\n                if (visible) {\n                    labelOptions.format = labelOptions.format || unitFormat;\n                    var text = this.axisLabelText(date, dataItem, labelOptions);\n                    if (text) {\n                        return new AxisLabel(date, text, index, dataItem, labelOptions);\n                    }\n                }\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var categories = options.categories;\n                var index = -1;\n                if (categories.length) {\n                    index = Math.floor(dateIndex(toDate(value), categories[0], options.baseUnit, options.baseUnitStep || 1));\n                }\n                return index;\n            },\n            getSlot: function (a, b, limit) {\n                var start = a;\n                var end = b;\n                if (typeof start === OBJECT) {\n                    start = this.categoryIndex(start);\n                }\n                if (typeof end === OBJECT) {\n                    end = this.categoryIndex(end);\n                }\n                return CategoryAxis.fn.getSlot.call(this, start, end, limit);\n            },\n            valueRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            }\n        });\n        setDefaultOptions(DateCategoryAxis, {\n            type: DATE,\n            labels: { dateFormats: DateLabelFormats },\n            autoBaseUnitSteps: {\n                milliseconds: [\n                    1,\n                    10,\n                    100\n                ],\n                seconds: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                minutes: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                hours: [\n                    1,\n                    2,\n                    3\n                ],\n                days: [\n                    1,\n                    2,\n                    3\n                ],\n                weeks: [\n                    1,\n                    2\n                ],\n                months: [\n                    1,\n                    2,\n                    3,\n                    6\n                ],\n                years: [\n                    1,\n                    2,\n                    3,\n                    5,\n                    10,\n                    25,\n                    50\n                ]\n            },\n            maxDateGroups: 10\n        });\n        function autoMajorUnit(min, max) {\n            var diff = round(max - min, DEFAULT_PRECISION - 1);\n            if (diff === 0) {\n                if (max === 0) {\n                    return 0.1;\n                }\n                diff = Math.abs(max);\n            }\n            var scale = Math.pow(10, Math.floor(Math.log(diff) / Math.log(10)));\n            var relativeValue = round(diff / scale, DEFAULT_PRECISION);\n            var scaleMultiplier = 1;\n            if (relativeValue < 1.904762) {\n                scaleMultiplier = 0.2;\n            } else if (relativeValue < 4.761904) {\n                scaleMultiplier = 0.5;\n            } else if (relativeValue < 9.523809) {\n                scaleMultiplier = 1;\n            } else {\n                scaleMultiplier = 2;\n            }\n            return round(scale * scaleMultiplier, DEFAULT_PRECISION);\n        }\n        function autoAxisMin(min, max, narrow) {\n            if (!min && !max) {\n                return 0;\n            }\n            var axisMin;\n            if (min >= 0 && max >= 0) {\n                var minValue = min === max ? 0 : min;\n                var diff = (max - minValue) / max;\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMin = Math.max(0, minValue - (max - minValue) / 2);\n            } else {\n                axisMin = min;\n            }\n            return axisMin;\n        }\n        function autoAxisMax(min, max, narrow) {\n            if (!min && !max) {\n                return 1;\n            }\n            var axisMax;\n            if (min <= 0 && max <= 0) {\n                var maxValue = min === max ? 0 : max;\n                var diff = Math.abs((maxValue - min) / maxValue);\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMax = Math.min(0, maxValue - (min - maxValue) / 2);\n            } else {\n                axisMax = max;\n            }\n            return axisMax;\n        }\n        function floor(value, step) {\n            return round(Math.floor(value / step) * step, DEFAULT_PRECISION);\n        }\n        function ceil(value, step) {\n            return round(Math.ceil(value / step) * step, DEFAULT_PRECISION);\n        }\n        function limitCoordinate(value) {\n            return Math.max(Math.min(value, COORDINATE_LIMIT), -COORDINATE_LIMIT);\n        }\n        var MIN_VALUE_RANGE = Math.pow(10, -DEFAULT_PRECISION + 1);\n        var NumericAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                var autoOptions = autoAxisOptions(seriesMin, seriesMax, options);\n                var totalOptions = totalAxisOptions(autoOptions, options);\n                Axis.fn.init.call(this, axisOptions(autoOptions, options), chartService);\n                this.totalMin = totalOptions.min;\n                this.totalMax = totalOptions.max;\n                this.totalMajorUnit = totalOptions.majorUnit;\n                this.seriesMin = seriesMin;\n                this.seriesMax = seriesMax;\n            },\n            startValue: function () {\n                return 0;\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                if (stepValue === 0) {\n                    return 1;\n                }\n                var options = this.options;\n                var range = options.max - options.min;\n                return Math.floor(round(range / stepValue, COORD_PRECISION)) + 1;\n            },\n            getTickPositions: function (unit, skipUnit) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var lineBox = this.lineBox();\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var range = options.max - options.min;\n                var scale = lineSize / range;\n                var step = unit * scale;\n                var divisions = this.getDivisions(unit);\n                var dir = (vertical ? -1 : 1) * (reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var positions = [];\n                var pos = lineBox[(vertical ? Y : X) + startEdge];\n                var skipStep = 0;\n                if (skipUnit) {\n                    skipStep = skipUnit / unit;\n                }\n                for (var idx = 0; idx < divisions; idx++) {\n                    if (idx % skipStep !== 0) {\n                        positions.push(round(pos, COORD_PRECISION));\n                    }\n                    pos = pos + step * dir;\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                if (limit === void 0) {\n                    limit = false;\n                }\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (options.max - options.min));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 0;\n                }\n                if (!defined(end)) {\n                    end = start || 0;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                var p1, p2;\n                if (vertical) {\n                    p1 = options.max - Math.max(start, end);\n                    p2 = options.max - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - options.min;\n                    p2 = Math.max(start, end) - options.min;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = Number(options.max);\n                var min = Number(options.min);\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var offset = dir * (point[valueAxis] - lineStart);\n                var step = (max - min) / lineSize;\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = vertical ? max - valueOffset : min + valueOffset;\n                return round(value, DEFAULT_PRECISION);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = options.max;\n                var min = options.min;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = max - min;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: min + offset,\n                    max: max + offset\n                };\n            },\n            scaleRange: function (delta) {\n                var options = this.options;\n                var offset = -delta * options.majorUnit;\n                return {\n                    min: options.min - offset,\n                    max: options.max + offset\n                };\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var value = round(options.min + index * options.majorUnit, DEFAULT_PRECISION);\n                var text = this.axisLabelText(value, null, labelOptions);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            isValidRange: function (min, max) {\n                return max - min > MIN_VALUE_RANGE;\n            }\n        });\n        function autoAxisOptions(seriesMin, seriesMax, options) {\n            var narrowRange = options.narrowRange;\n            var autoMin = autoAxisMin(seriesMin, seriesMax, narrowRange);\n            var autoMax = autoAxisMax(seriesMin, seriesMax, narrowRange);\n            var majorUnit = autoMajorUnit(autoMin, autoMax);\n            var autoOptions = { majorUnit: majorUnit };\n            if (options.roundToMajorUnit !== false) {\n                if (autoMin < 0 && remainderClose(autoMin, majorUnit, 1 / 3)) {\n                    autoMin -= majorUnit;\n                }\n                if (autoMax > 0 && remainderClose(autoMax, majorUnit, 1 / 3)) {\n                    autoMax += majorUnit;\n                }\n            }\n            autoOptions.min = floor(autoMin, majorUnit);\n            autoOptions.max = ceil(autoMax, majorUnit);\n            return autoOptions;\n        }\n        function totalAxisOptions(autoOptions, options) {\n            return {\n                min: defined(options.min) ? Math.min(autoOptions.min, options.min) : autoOptions.min,\n                max: defined(options.max) ? Math.max(autoOptions.max, options.max) : autoOptions.max,\n                majorUnit: autoOptions.majorUnit\n            };\n        }\n        function axisOptions(autoOptions, userOptions) {\n            var options = userOptions;\n            if (userOptions) {\n                var userSetLimits = defined(userOptions.min) || defined(userOptions.max);\n                if (userSetLimits) {\n                    if (userOptions.min === userOptions.max) {\n                        if (userOptions.min > 0) {\n                            userOptions.min = 0;\n                        } else {\n                            userOptions.max = 1;\n                        }\n                    }\n                }\n                if (userOptions.majorUnit) {\n                    autoOptions.min = floor(autoOptions.min, userOptions.majorUnit);\n                    autoOptions.max = ceil(autoOptions.max, userOptions.majorUnit);\n                } else if (userSetLimits) {\n                    options = deepExtend(autoOptions, userOptions);\n                    autoOptions.majorUnit = autoMajorUnit(options.min, options.max);\n                }\n            }\n            autoOptions.minorUnit = (options.majorUnit || autoOptions.majorUnit) / 5;\n            return deepExtend(autoOptions, options);\n        }\n        function remainderClose(value, divisor, ratio) {\n            var remainder = round(Math.abs(value % divisor), DEFAULT_PRECISION);\n            var threshold = divisor * (1 - ratio);\n            return remainder === 0 || remainder > threshold;\n        }\n        setDefaultOptions(NumericAxis, {\n            type: 'numeric',\n            min: 0,\n            max: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { format: '#.####################' },\n            zIndex: 1\n        });\n        var DateValueAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, axisOptions, chartService) {\n                var min = toDate(seriesMin);\n                var max = toDate(seriesMax);\n                var intlService = chartService.intl;\n                var options = axisOptions || {};\n                options = deepExtend(options || {}, {\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max),\n                    axisCrossingValue: parseDates(intlService, options.axisCrossingValues || options.axisCrossingValue)\n                });\n                options = applyDefaults(min, max, options);\n                Axis.fn.init.call(this, options, chartService);\n                this.seriesMin = min;\n                this.seriesMax = max;\n                this.totalMin = toTime(floorDate(toTime(min) - 1, options.baseUnit));\n                this.totalMax = toTime(ceilDate(toTime(max) + 1, options.baseUnit));\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                var options = this.options;\n                return Math.floor(duration(options.min, options.max, options.baseUnit) / stepValue + 1);\n            },\n            getTickPositions: function (step) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var dir = (vertical ? -1 : 1) * (options.reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var start = lineBox[(vertical ? Y : X) + startEdge];\n                var divisions = this.getDivisions(step);\n                var timeRange = dateDiff(options.max, options.min);\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var scale = lineSize / timeRange;\n                var positions = [start];\n                for (var i = 1; i < divisions; i++) {\n                    var date = addDuration(options.min, i * step, options.baseUnit);\n                    var pos = start + dateDiff(date, options.min) * scale * dir;\n                    positions.push(round(pos, COORD_PRECISION));\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                return NumericAxis.prototype.getSlot.call(this, toDate(a), toDate(b), limit);\n            },\n            getValue: function (point) {\n                var value = NumericAxis.prototype.getValue.call(this, point);\n                return value !== null ? toDate(value) : null;\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var offset = index * options.majorUnit;\n                var date = options.min;\n                if (offset > 0) {\n                    date = addDuration(date, offset, options.baseUnit);\n                }\n                var unitFormat = labelOptions.dateFormats[options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var text = this.axisLabelText(date, null, labelOptions);\n                return new AxisLabel(date, text, index, null, labelOptions);\n            },\n            translateRange: function (delta, exact) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / dateDiff(range.max, range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var from = addTicks(options.min, offset);\n                var to = addTicks(options.max, offset);\n                if (!exact) {\n                    from = addDuration(from, 0, baseUnit, weekStartDay);\n                    to = addDuration(to, 0, baseUnit, weekStartDay);\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            scaleRange: function (delta) {\n                var ref = this.options;\n                var from = ref.min;\n                var to = ref.max;\n                var rounds = Math.abs(delta);\n                while (rounds--) {\n                    var range = dateDiff(from, to);\n                    var step = Math.round(range * 0.1);\n                    if (delta < 0) {\n                        from = addTicks(from, step);\n                        to = addTicks(to, -step);\n                    } else {\n                        from = addTicks(from, -step);\n                        to = addTicks(to, step);\n                    }\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta, true);\n                var limittedRange = this.limitRange(toTime(range.min), toTime(range.max), this.totalMin, this.totalMax);\n                if (limittedRange) {\n                    return {\n                        min: toDate(limittedRange.min),\n                        max: toDate(limittedRange.max)\n                    };\n                }\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: toDate(min),\n                    max: toDate(max)\n                };\n            },\n            zoomRange: function (delta) {\n                var range = this.scaleRange(delta);\n                var min = toDate(limitValue(toTime(range.min), this.totalMin, this.totalMax));\n                var max = toDate(limitValue(toTime(range.max), this.totalMin, this.totalMax));\n                return {\n                    min: min,\n                    max: max\n                };\n            }\n        });\n        function timeUnits(delta) {\n            var unit = HOURS;\n            if (delta >= TIME_PER_YEAR) {\n                unit = YEARS;\n            } else if (delta >= TIME_PER_MONTH) {\n                unit = MONTHS;\n            } else if (delta >= TIME_PER_WEEK) {\n                unit = WEEKS;\n            } else if (delta >= TIME_PER_DAY) {\n                unit = DAYS;\n            }\n            return unit;\n        }\n        function applyDefaults(seriesMin, seriesMax, options) {\n            var min = options.min || seriesMin;\n            var max = options.max || seriesMax;\n            var baseUnit = options.baseUnit || (max && min ? timeUnits(absoluteDateDiff(max, min)) : HOURS);\n            var baseUnitTime = TIME_PER_UNIT[baseUnit];\n            var autoMin = floorDate(toTime(min) - 1, baseUnit) || toDate(max);\n            var autoMax = ceilDate(toTime(max) + 1, baseUnit);\n            var userMajorUnit = options.majorUnit ? options.majorUnit : undefined;\n            var majorUnit = userMajorUnit || ceil(autoMajorUnit(autoMin.getTime(), autoMax.getTime()), baseUnitTime) / baseUnitTime;\n            var actualUnits = duration(autoMin, autoMax, baseUnit);\n            var totalUnits = ceil(actualUnits, majorUnit);\n            var unitsToAdd = totalUnits - actualUnits;\n            var head = Math.floor(unitsToAdd / 2);\n            var tail = unitsToAdd - head;\n            if (!options.baseUnit) {\n                delete options.baseUnit;\n            }\n            options.baseUnit = options.baseUnit || baseUnit;\n            options.min = options.min || addDuration(autoMin, -head, baseUnit);\n            options.max = options.max || addDuration(autoMax, tail, baseUnit);\n            options.minorUnit = options.minorUnit || majorUnit / 5;\n            options.majorUnit = majorUnit;\n            return options;\n        }\n        setDefaultOptions(DateValueAxis, {\n            type: DATE,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { dateFormats: DateLabelFormats }\n        });\n        var DEFAULT_MAJOR_UNIT = 10;\n        var LogarithmicAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                var axisOptions = deepExtend({\n                    majorUnit: DEFAULT_MAJOR_UNIT,\n                    min: seriesMin,\n                    max: seriesMax\n                }, options);\n                var base = axisOptions.majorUnit;\n                var autoMax = autoAxisMax$1(seriesMax, base);\n                var autoMin = autoAxisMin$1(seriesMin, seriesMax, axisOptions);\n                var range = initRange(autoMin, autoMax, axisOptions, options);\n                axisOptions.max = range.max;\n                axisOptions.min = range.min;\n                axisOptions.minorUnit = options.minorUnit || round(base - 1, DEFAULT_PRECISION);\n                Axis.fn.init.call(this, axisOptions, chartService);\n                this.totalMin = defined(options.min) ? Math.min(autoMin, options.min) : autoMin;\n                this.totalMax = defined(options.max) ? Math.max(autoMax, options.max) : autoMax;\n                this.logMin = round(log(range.min, base), DEFAULT_PRECISION);\n                this.logMax = round(log(range.max, base), DEFAULT_PRECISION);\n                this.seriesMin = seriesMin;\n                this.seriesMax = seriesMax;\n                this.createLabels();\n            },\n            startValue: function () {\n                return this.options.min;\n            },\n            getSlot: function (a, b, limit) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (logMax - logMin));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 1;\n                }\n                if (!defined(end)) {\n                    end = start || 1;\n                }\n                if (start <= 0 || end <= 0) {\n                    return null;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                start = log(start, base);\n                end = log(end, base);\n                var p1, p2;\n                if (vertical) {\n                    p1 = logMax - Math.max(start, end);\n                    p2 = logMax - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - logMin;\n                    p2 = Math.max(start, end) - logMin;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = (logMax - logMin) / lineSize;\n                var valueAxis = vertical ? Y : X;\n                var lineStart = lineBox[valueAxis + startEdge];\n                var offset = dir * (point[valueAxis] - lineStart);\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = logMin + valueOffset;\n                return round(Math.pow(base, value), DEFAULT_PRECISION);\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            scaleRange: function (delta) {\n                var base = this.options.majorUnit;\n                var offset = -delta;\n                return {\n                    min: Math.pow(base, this.logMin - offset),\n                    max: Math.pow(base, this.logMax + offset)\n                };\n            },\n            translateRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (logMax - logMin);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: Math.pow(base, logMin + offset),\n                    max: Math.pow(base, logMax + offset)\n                };\n            },\n            labelsCount: function () {\n                var floorMax = Math.floor(this.logMax);\n                var count = Math.floor(floorMax - this.logMin) + 1;\n                return count;\n            },\n            getMajorTickPositions: function () {\n                var ticks = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    ticks.push(position);\n                }, {\n                    step: 1,\n                    skip: 0\n                });\n                return ticks;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var majorTicks = options.majorTicks;\n                var minorTicks = options.minorTicks;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var lineBox = this.lineBox();\n                var ticks = [];\n                var tickLineOptions = { vertical: vertical };\n                function render(tickPosition, tickOptions) {\n                    tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                    tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                    tickLineOptions.position = tickPosition;\n                    lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                }\n                if (majorTicks.visible) {\n                    this.traverseMajorTicksPositions(render, majorTicks);\n                }\n                if (minorTicks.visible) {\n                    this.traverseMinorTicksPositions(render, minorTicks);\n                }\n                return ticks;\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var vertical = options.vertical;\n                var lineBox = altAxis.lineBox();\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPosition, gridLine) {\n                    if (!inArray(tickPosition, majorTicks)) {\n                        lineOptions.position = tickPosition;\n                        container.append(createAxisGridLine(lineOptions, gridLine));\n                        majorTicks.push(tickPosition);\n                    }\n                }\n                if (majorGridLines.visible) {\n                    this.traverseMajorTicksPositions(render, majorGridLines);\n                }\n                if (minorGridLines.visible) {\n                    this.traverseMinorTicksPositions(render, minorGridLines);\n                }\n                return container.children;\n            },\n            traverseMajorTicksPositions: function (callback, tickOptions) {\n                var ref = this._lineOptions();\n                var lineStart = ref.lineStart;\n                var step = ref.step;\n                var ref$1 = this;\n                var logMin = ref$1.logMin;\n                var logMax = ref$1.logMax;\n                for (var power = Math.ceil(logMin) + tickOptions.skip; power <= logMax; power += tickOptions.step) {\n                    var position = round(lineStart + step * (power - logMin), DEFAULT_PRECISION);\n                    callback(position, tickOptions);\n                }\n            },\n            traverseMinorTicksPositions: function (callback, tickOptions) {\n                var this$1 = this;\n                var ref = this.options;\n                var min = ref.min;\n                var max = ref.max;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var ref$1 = this._lineOptions();\n                var lineStart = ref$1.lineStart;\n                var step = ref$1.step;\n                var ref$2 = this;\n                var logMin = ref$2.logMin;\n                var logMax = ref$2.logMax;\n                var start = Math.floor(logMin);\n                for (var power = start; power < logMax; power++) {\n                    var minorOptions = this$1._minorIntervalOptions(power);\n                    for (var idx = tickOptions.skip; idx < minorUnit; idx += tickOptions.step) {\n                        var value = minorOptions.value + idx * minorOptions.minorStep;\n                        if (value > max) {\n                            break;\n                        }\n                        if (value >= min) {\n                            var position = round(lineStart + step * (log(value, base) - logMin), DEFAULT_PRECISION);\n                            callback(position, tickOptions);\n                        }\n                    }\n                }\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var power = Math.ceil(this.logMin + index);\n                var value = Math.pow(this.options.majorUnit, power);\n                var text = this.axisLabelText(value, null, labelOptions);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, -delta);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                var base = options.majorUnit;\n                var acceptOptionsRange = max > min && options.min && options.max && round(log(options.max, base) - log(options.min, base), DEFAULT_PRECISION) < 1;\n                var acceptNewRange = !(options.min === totalMin && options.max === totalMax) && round(log(max, base) - log(min, base), DEFAULT_PRECISION) >= 1;\n                if (acceptOptionsRange || acceptNewRange) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            _minorIntervalOptions: function (power) {\n                var ref = this.options;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var value = Math.pow(base, power);\n                var nextValue = Math.pow(base, power + 1);\n                var difference = nextValue - value;\n                var minorStep = difference / minorUnit;\n                return {\n                    value: value,\n                    minorStep: minorStep\n                };\n            },\n            _lineOptions: function () {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = dir * (lineSize / (this.logMax - this.logMin));\n                var lineStart = lineBox[valueAxis + startEdge];\n                return {\n                    step: step,\n                    lineStart: lineStart,\n                    lineBox: lineBox\n                };\n            }\n        });\n        function initRange(autoMin, autoMax, axisOptions, options) {\n            var min = axisOptions.min;\n            var max = axisOptions.max;\n            if (defined(axisOptions.axisCrossingValue) && axisOptions.axisCrossingValue <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.max)) {\n                max = autoMax;\n            } else if (options.max <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.min)) {\n                min = autoMin;\n            } else if (options.min <= 0) {\n                throwNegativeValuesError();\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function autoAxisMin$1(min, max, options) {\n            var base = options.majorUnit;\n            var autoMin = min;\n            if (min <= 0) {\n                autoMin = max <= 1 ? Math.pow(base, -2) : 1;\n            } else if (!options.narrowRange) {\n                autoMin = Math.pow(base, Math.floor(log(min, base)));\n            }\n            return autoMin;\n        }\n        function autoAxisMax$1(max, base) {\n            var logMaxRemainder = round(log(max, base), DEFAULT_PRECISION) % 1;\n            var autoMax;\n            if (max <= 0) {\n                autoMax = base;\n            } else if (logMaxRemainder !== 0 && (logMaxRemainder < 0.3 || logMaxRemainder > 0.9)) {\n                autoMax = Math.pow(base, log(max, base) + 0.2);\n            } else {\n                autoMax = Math.pow(base, Math.ceil(log(max, base)));\n            }\n            return autoMax;\n        }\n        function throwNegativeValuesError() {\n            throw new Error('Non positive values cannot be used for a logarithmic axis');\n        }\n        function log(y, x) {\n            return Math.log(y) / Math.log(x);\n        }\n        setDefaultOptions(LogarithmicAxis, {\n            type: 'log',\n            majorUnit: DEFAULT_MAJOR_UNIT,\n            minorUnit: 1,\n            axisCrossingValue: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            zIndex: 1,\n            _deferLabels: true\n        });\n        var GridLinesMixin = {\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var radius = Math.abs(this.box.center().y - altAxis.lineBox().y1);\n                var gridLines = [];\n                var skipMajor = false;\n                var majorAngles, minorAngles;\n                if (options.majorGridLines.visible) {\n                    majorAngles = this.majorGridLineAngles(altAxis);\n                    skipMajor = true;\n                    gridLines = this.renderMajorGridLines(majorAngles, radius, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    minorAngles = this.minorGridLineAngles(altAxis, skipMajor);\n                    append(gridLines, this.renderMinorGridLines(minorAngles, radius, options.minorGridLines, altAxis, skipMajor));\n                }\n                return gridLines;\n            },\n            renderMajorGridLines: function (angles, radius, options) {\n                return this.renderGridLines(angles, radius, options);\n            },\n            renderMinorGridLines: function (angles, radius, options, altAxis, skipMajor) {\n                var radiusCallback = this.radiusCallback && this.radiusCallback(radius, altAxis, skipMajor);\n                return this.renderGridLines(angles, radius, options, radiusCallback);\n            },\n            renderGridLines: function (angles, radius, options, radiusCallback) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var center = this.box.center();\n                var circle = new Circle([\n                    center.x,\n                    center.y\n                ], radius);\n                var container = this.gridLinesVisual();\n                for (var i = 0; i < angles.length; i++) {\n                    var line = new Path(style);\n                    if (radiusCallback) {\n                        circle.radius = radiusCallback(angles[i]);\n                    }\n                    line.moveTo(circle.center).lineTo(circle.pointAt(angles[i] + 180));\n                    container.append(line);\n                }\n                return container.children;\n            },\n            gridLineAngles: function (altAxis, size, skip, step, skipAngles) {\n                var this$1 = this;\n                var divs = this.intervals(size, skip, step, skipAngles);\n                var options = altAxis.options;\n                var altAxisVisible = options.visible && (options.line || {}).visible !== false;\n                return map(divs, function (d) {\n                    var alpha = this$1.intervalAngle(d);\n                    if (!altAxisVisible || alpha !== 90) {\n                        return alpha;\n                    }\n                });\n            }\n        };\n        var RadarCategoryAxis = CategoryAxis.extend({\n            range: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var labels = ref.labels;\n                var ref_options_labels = ref.options.labels;\n                var skip = ref_options_labels.skip;\n                if (skip === void 0) {\n                    skip = 0;\n                }\n                var step = ref_options_labels.step;\n                if (step === void 0) {\n                    step = 1;\n                }\n                var measureBox = new Box();\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(skip + i * step).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            intervals: function (size, skip, step, skipAngles) {\n                if (skip === void 0) {\n                    skip = 0;\n                }\n                if (step === void 0) {\n                    step = 1;\n                }\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var options = this.options;\n                var categories = options.categories.length;\n                var divCount = categories / size || 1;\n                var divAngle = 360 / divCount;\n                var divs = [];\n                var angle = 0;\n                for (var i = skip; i < divCount; i += step) {\n                    if (options.reverse) {\n                        angle = 360 - i * divAngle;\n                    } else {\n                        angle = i * divAngle;\n                    }\n                    angle = round(angle, COORD_PRECISION) % 360;\n                    if (!(skipAngles && inArray(angle, skipAngles))) {\n                        divs.push(angle);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(1);\n            },\n            minorIntervals: function () {\n                return this.intervals(0.5);\n            },\n            intervalAngle: function (interval) {\n                return (360 + interval + this.options.startAngle) % 360;\n            },\n            majorAngles: function () {\n                var this$1 = this;\n                return map(this.majorIntervals(), function (interval) {\n                    return this$1.intervalAngle(interval);\n                });\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, 1, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var ref = this.options;\n                var minorGridLines = ref.minorGridLines;\n                var majorGridLines = ref.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(1, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, 0.5, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            radiusCallback: function (radius, altAxis, skipMajor) {\n                if (altAxis.options.type !== ARC) {\n                    var minorAngle = rad(360 / (this.options.categories.length * 2));\n                    var minorRadius = Math.cos(minorAngle) * radius;\n                    var majorAngles = this.majorAngles();\n                    var radiusCallback = function (angle) {\n                        if (!skipMajor && inArray(angle, majorAngles)) {\n                            return radius;\n                        }\n                        return minorRadius;\n                    };\n                    return radiusCallback;\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var plotBands = this.options.plotBands || [];\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var slot = this$1.plotBandSlot(band);\n                    var singleSlot = this$1.getSlot(band.from);\n                    var head = band.from - Math.floor(band.from);\n                    slot.startAngle += head * singleSlot.angle;\n                    var tail = Math.ceil(band.to) - band.to;\n                    slot.angle -= (tail + head) * singleSlot.angle;\n                    var ring = ShapeBuilder.current.createRing(slot, {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    });\n                    group.append(ring);\n                }\n                this.appendVisual(group);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to - 1);\n            },\n            getSlot: function (from, to) {\n                var options = this.options;\n                var justified = options.justified;\n                var box = this.box;\n                var divs = this.majorAngles();\n                var totalDivs = divs.length;\n                var slotAngle = 360 / totalDivs;\n                var fromValue = from;\n                if (options.reverse && !justified) {\n                    fromValue = (fromValue + 1) % totalDivs;\n                }\n                fromValue = limitValue(Math.floor(fromValue), 0, totalDivs - 1);\n                var slotStart = divs[fromValue];\n                if (justified) {\n                    slotStart = slotStart - slotAngle / 2;\n                    if (slotStart < 0) {\n                        slotStart += 360;\n                    }\n                }\n                var toValue = limitValue(Math.ceil(to || fromValue), fromValue, totalDivs - 1);\n                var slots = toValue - fromValue + 1;\n                var angle = slotAngle * slots;\n                return new Ring(box.center(), 0, box.height() / 2, slotStart, angle);\n            },\n            slot: function (from, to) {\n                var slot = this.getSlot(from, to);\n                var startAngle = slot.startAngle + 180;\n                var endAngle = startAngle + slot.angle;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            pointCategoryIndex: function (point) {\n                var this$1 = this;\n                var length = this.options.categories.length;\n                var index = null;\n                for (var i = 0; i < length; i++) {\n                    var slot = this$1.getSlot(i);\n                    if (slot.containsPoint(point)) {\n                        index = i;\n                        break;\n                    }\n                }\n                return index;\n            }\n        });\n        setDefaultOptions(RadarCategoryAxis, {\n            startAngle: 90,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: { visible: true },\n            justified: true\n        });\n        deepExtend(RadarCategoryAxis.prototype, GridLinesMixin);\n        var PolarAxis = Axis.extend({\n            init: function (options, chartService) {\n                Axis.fn.init.call(this, options, chartService);\n                var instanceOptions = this.options;\n                instanceOptions.minorUnit = instanceOptions.minorUnit || instanceOptions.majorUnit / 2;\n            },\n            getDivisions: function (stepValue) {\n                return NumericAxis.prototype.getDivisions.call(this, stepValue) - 1;\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var ref_options_labels = ref.options.labels;\n                var skip = ref_options_labels.skip;\n                if (skip === void 0) {\n                    skip = 0;\n                }\n                var step = ref_options_labels.step;\n                if (step === void 0) {\n                    step = 1;\n                }\n                var measureBox = new Box();\n                var divs = this.intervals(options.majorUnit, skip, step);\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(divs[i]).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            intervals: function (size, skip, step, skipAngles) {\n                if (skip === void 0) {\n                    skip = 0;\n                }\n                if (step === void 0) {\n                    step = 1;\n                }\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var min = this.options.min;\n                var divisions = this.getDivisions(size);\n                var divs = [];\n                for (var i = skip; i < divisions; i += step) {\n                    var current = (360 + min + i * size) % 360;\n                    if (!(skipAngles && inArray(current, skipAngles))) {\n                        divs.push(current);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(this.options.majorUnit);\n            },\n            minorIntervals: function () {\n                return this.intervals(this.options.minorUnit);\n            },\n            intervalAngle: function (i) {\n                return (540 - i - this.options.startAngle) % 360;\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, this.options.majorUnit, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(options.majorUnit, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, options.minorUnit, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to);\n            },\n            getSlot: function (a, b) {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var startAngle = options.startAngle;\n                var start = limitValue(a, options.min, options.max);\n                var end = limitValue(b || start, start, options.max);\n                if (options.reverse) {\n                    start *= -1;\n                    end *= -1;\n                }\n                start = (540 - start - startAngle) % 360;\n                end = (540 - end - startAngle) % 360;\n                if (end < start) {\n                    var tmp = start;\n                    start = end;\n                    end = tmp;\n                }\n                return new Ring(box.center(), 0, box.height() / 2, start, end - start);\n            },\n            slot: function (from, to) {\n                if (to === void 0) {\n                    to = from;\n                }\n                var options = this.options;\n                var start = 360 - options.startAngle;\n                var slot = this.getSlot(from, to);\n                var min = Math.min(from, to);\n                var max = Math.max(from, to);\n                var startAngle, endAngle;\n                if (options.reverse) {\n                    startAngle = min;\n                    endAngle = max;\n                } else {\n                    startAngle = 360 - max;\n                    endAngle = 360 - min;\n                }\n                startAngle = (startAngle + start) % 360;\n                endAngle = (endAngle + start) % 360;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var center = this.box.center();\n                var dx = point.x - center.x;\n                var dy = point.y - center.y;\n                var theta = Math.round(deg(Math.atan2(dy, dx)));\n                var start = options.startAngle;\n                if (!options.reverse) {\n                    theta *= -1;\n                    start *= -1;\n                }\n                return (theta + start + 360) % 360;\n            },\n            valueRange: function () {\n                return {\n                    min: 0,\n                    max: Math.PI * 2\n                };\n            }\n        });\n        setDefaultOptions(PolarAxis, {\n            type: 'polar',\n            startAngle: 0,\n            reverse: false,\n            majorUnit: 60,\n            min: 0,\n            max: 360,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: {\n                color: BLACK,\n                visible: true,\n                width: 1\n            },\n            minorGridLines: { color: '#aaa' }\n        });\n        deepExtend(PolarAxis.prototype, GridLinesMixin, {\n            createPlotBands: RadarCategoryAxis.prototype.createPlotBands,\n            majorAngles: RadarCategoryAxis.prototype.majorAngles,\n            range: NumericAxis.prototype.range,\n            labelsCount: NumericAxis.prototype.labelsCount,\n            createAxisLabel: NumericAxis.prototype.createAxisLabel\n        });\n        var RadarNumericAxisMixin = {\n            options: { majorGridLines: { visible: true } },\n            createPlotBands: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var type = ref.majorGridLines.type;\n                var plotBands = ref.plotBands;\n                if (plotBands === void 0) {\n                    plotBands = [];\n                }\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var bandStyle = {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    };\n                    var slot = this$1.getSlot(band.from, band.to, true);\n                    var ring = new Ring(center, center.y - slot.y2, center.y - slot.y1, 0, 360);\n                    var shape = void 0;\n                    if (type === ARC) {\n                        shape = ShapeBuilder.current.createRing(ring, bandStyle);\n                    } else {\n                        shape = Path.fromPoints(this$1.plotBandPoints(ring, majorAngles), bandStyle).close();\n                    }\n                    group.append(shape);\n                }\n                this.appendVisual(group);\n            },\n            plotBandPoints: function (ring, angles) {\n                var innerPoints = [];\n                var outerPoints = [];\n                var center = [\n                    ring.center.x,\n                    ring.center.y\n                ];\n                var innerCircle = new Circle(center, ring.innerRadius);\n                var outerCircle = new Circle(center, ring.radius);\n                for (var i = 0; i < angles.length; i++) {\n                    innerPoints.push(innerCircle.pointAt(angles[i] + 180));\n                    outerPoints.push(outerCircle.pointAt(angles[i] + 180));\n                }\n                innerPoints.reverse();\n                innerPoints.push(innerPoints[0]);\n                outerPoints.push(outerPoints[0]);\n                return outerPoints.concat(innerPoints);\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var majorTicks = this.radarMajorGridLinePositions();\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var gridLines = [];\n                if (options.majorGridLines.visible) {\n                    gridLines = this.renderGridLines(center, majorTicks, majorAngles, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    var minorTicks = this.radarMinorGridLinePositions();\n                    append(gridLines, this.renderGridLines(center, minorTicks, majorAngles, options.minorGridLines));\n                }\n                return gridLines;\n            },\n            renderGridLines: function (center, ticks, angles, options) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var skip = options.skip;\n                if (skip === void 0) {\n                    skip = 0;\n                }\n                var step = options.step;\n                if (step === void 0) {\n                    step = 0;\n                }\n                var container = this.gridLinesVisual();\n                for (var tickIx = skip; tickIx < ticks.length; tickIx += step) {\n                    var tickRadius = center.y - ticks[tickIx];\n                    if (tickRadius > 0) {\n                        var circle = new Circle([\n                            center.x,\n                            center.y\n                        ], tickRadius);\n                        if (options.type === ARC) {\n                            container.append(new drawing.Circle(circle, style));\n                        } else {\n                            var line = new Path(style);\n                            for (var angleIx = 0; angleIx < angles.length; angleIx++) {\n                                line.lineTo(circle.pointAt(angles[angleIx] + 180));\n                            }\n                            line.close();\n                            container.append(line);\n                        }\n                    }\n                }\n                return container.children;\n            },\n            getValue: function (point) {\n                var lineBox = this.lineBox();\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var radius = point.distanceTo(center);\n                var distance = radius;\n                if (this.options.majorGridLines.type !== ARC && majorAngles.length > 1) {\n                    var dx = point.x - center.x;\n                    var dy = point.y - center.y;\n                    var theta = (deg(Math.atan2(dy, dx)) + 540) % 360;\n                    majorAngles.sort(function (a, b) {\n                        return angularDistance(a, theta) - angularDistance(b, theta);\n                    });\n                    var midAngle = angularDistance(majorAngles[0], majorAngles[1]) / 2;\n                    var alpha = angularDistance(theta, majorAngles[0]);\n                    var gamma = 90 - midAngle;\n                    var beta = 180 - alpha - gamma;\n                    distance = radius * (Math.sin(rad(beta)) / Math.sin(rad(gamma)));\n                }\n                return this.axisType().prototype.getValue.call(this, new Point(lineBox.x1, lineBox.y2 - distance));\n            }\n        };\n        function angularDistance(a, b) {\n            return 180 - Math.abs(Math.abs(a - b) - 180);\n        }\n        var RadarNumericAxis = NumericAxis.extend({\n            radarMajorGridLinePositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            radarMinorGridLinePositions: function () {\n                var options = this.options;\n                var minorSkipStep = 0;\n                if (options.majorGridLines.visible) {\n                    minorSkipStep = options.majorUnit;\n                }\n                return this.getTickPositions(options.minorUnit, minorSkipStep);\n            },\n            axisType: function () {\n                return NumericAxis;\n            }\n        });\n        deepExtend(RadarNumericAxis.prototype, RadarNumericAxisMixin);\n        var RadarLogarithmicAxis = LogarithmicAxis.extend({\n            radarMajorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.majorGridLines);\n                return positions;\n            },\n            radarMinorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMinorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.minorGridLines);\n                return positions;\n            },\n            axisType: function () {\n                return LogarithmicAxis;\n            }\n        });\n        deepExtend(RadarLogarithmicAxis.prototype, RadarNumericAxisMixin);\n        var WEIGHT = 0.333;\n        var EXTREMUM_ALLOWED_DEVIATION = 0.01;\n        var CurveProcessor = Class.extend({\n            init: function (closed) {\n                this.closed = closed;\n            },\n            process: function (dataPoints) {\n                var this$1 = this;\n                var points = dataPoints.slice(0);\n                var segments = [];\n                var closed = this.closed;\n                var length = points.length;\n                if (length > 2) {\n                    this.removeDuplicates(0, points);\n                    length = points.length;\n                }\n                if (length < 2 || length === 2 && points[0].equals(points[1])) {\n                    return segments;\n                }\n                var p0 = points[0];\n                var p1 = points[1];\n                var p2 = points[2];\n                segments.push(new Segment(p0));\n                while (p0.equals(points[length - 1])) {\n                    closed = true;\n                    points.pop();\n                    length--;\n                }\n                if (length === 2) {\n                    var tangent = this.tangent(p0, p1, X, Y);\n                    last(segments).controlOut(this.firstControlPoint(tangent, p0, p1, X, Y));\n                    segments.push(new Segment(p1, this.secondControlPoint(tangent, p0, p1, X, Y)));\n                    return segments;\n                }\n                var initialControlPoint, lastControlPoint;\n                if (closed) {\n                    p0 = points[length - 1];\n                    p1 = points[0];\n                    p2 = points[1];\n                    var controlPoints = this.controlPoints(p0, p1, p2);\n                    initialControlPoint = controlPoints[1];\n                    lastControlPoint = controlPoints[0];\n                } else {\n                    var tangent$1 = this.tangent(p0, p1, X, Y);\n                    initialControlPoint = this.firstControlPoint(tangent$1, p0, p1, X, Y);\n                }\n                var cp0 = initialControlPoint;\n                for (var idx = 0; idx <= length - 3; idx++) {\n                    this$1.removeDuplicates(idx, points);\n                    length = points.length;\n                    if (idx + 3 <= length) {\n                        p0 = points[idx];\n                        p1 = points[idx + 1];\n                        p2 = points[idx + 2];\n                        var controlPoints$1 = this$1.controlPoints(p0, p1, p2);\n                        last(segments).controlOut(cp0);\n                        cp0 = controlPoints$1[1];\n                        var cp1 = controlPoints$1[0];\n                        segments.push(new Segment(p1, cp1));\n                    }\n                }\n                if (closed) {\n                    p0 = points[length - 2];\n                    p1 = points[length - 1];\n                    p2 = points[0];\n                    var controlPoints$2 = this.controlPoints(p0, p1, p2);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p1, controlPoints$2[0]));\n                    last(segments).controlOut(controlPoints$2[1]);\n                    segments.push(new Segment(p2, lastControlPoint));\n                } else {\n                    var tangent$2 = this.tangent(p1, p2, X, Y);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p2, this.secondControlPoint(tangent$2, p1, p2, X, Y)));\n                }\n                return segments;\n            },\n            removeDuplicates: function (idx, points) {\n                while (points[idx + 1] && (points[idx].equals(points[idx + 1]) || points[idx + 1].equals(points[idx + 2]))) {\n                    points.splice(idx + 1, 1);\n                }\n            },\n            invertAxis: function (p0, p1, p2) {\n                var invertAxis = false;\n                if (p0.x === p1.x) {\n                    invertAxis = true;\n                } else if (p1.x === p2.x) {\n                    if (p1.y < p2.y && p0.y <= p1.y || p2.y < p1.y && p1.y <= p0.y) {\n                        invertAxis = true;\n                    }\n                } else {\n                    var fn = this.lineFunction(p0, p1);\n                    var y2 = this.calculateFunction(fn, p2.x);\n                    if (!(p0.y <= p1.y && p2.y <= y2) && !(p1.y <= p0.y && p2.y >= y2)) {\n                        invertAxis = true;\n                    }\n                }\n                return invertAxis;\n            },\n            isLine: function (p0, p1, p2) {\n                var fn = this.lineFunction(p0, p1);\n                var y2 = this.calculateFunction(fn, p2.x);\n                return p0.x === p1.x && p1.x === p2.x || round(y2, 1) === round(p2.y, 1);\n            },\n            lineFunction: function (p1, p2) {\n                var a = (p2.y - p1.y) / (p2.x - p1.x);\n                var b = p1.y - a * p1.x;\n                return [\n                    b,\n                    a\n                ];\n            },\n            controlPoints: function (p0, p1, p2) {\n                var xField = X;\n                var yField = Y;\n                var restrict = false;\n                var switchOrientation = false;\n                var tangent;\n                if (this.isLine(p0, p1, p2)) {\n                    tangent = this.tangent(p0, p1, X, Y);\n                } else {\n                    var monotonic = {\n                        x: this.isMonotonicByField(p0, p1, p2, X),\n                        y: this.isMonotonicByField(p0, p1, p2, Y)\n                    };\n                    if (monotonic.x && monotonic.y) {\n                        tangent = this.tangent(p0, p2, X, Y);\n                        restrict = true;\n                    } else {\n                        if (this.invertAxis(p0, p1, p2)) {\n                            xField = Y;\n                            yField = X;\n                        }\n                        if (monotonic[xField]) {\n                            tangent = 0;\n                        } else {\n                            var sign;\n                            if (p2[yField] < p0[yField] && p0[yField] <= p1[yField] || p0[yField] < p2[yField] && p1[yField] <= p0[yField]) {\n                                sign = numberSign((p2[yField] - p0[yField]) * (p1[xField] - p0[xField]));\n                            } else {\n                                sign = -numberSign((p2[xField] - p0[xField]) * (p1[yField] - p0[yField]));\n                            }\n                            tangent = EXTREMUM_ALLOWED_DEVIATION * sign;\n                            switchOrientation = true;\n                        }\n                    }\n                }\n                var secondControlPoint = this.secondControlPoint(tangent, p0, p1, xField, yField);\n                if (switchOrientation) {\n                    var oldXField = xField;\n                    xField = yField;\n                    yField = oldXField;\n                }\n                var firstControlPoint = this.firstControlPoint(tangent, p1, p2, xField, yField);\n                if (restrict) {\n                    this.restrictControlPoint(p0, p1, secondControlPoint, tangent);\n                    this.restrictControlPoint(p1, p2, firstControlPoint, tangent);\n                }\n                return [\n                    secondControlPoint,\n                    firstControlPoint\n                ];\n            },\n            restrictControlPoint: function (p1, p2, cp, tangent) {\n                if (p1.y < p2.y) {\n                    if (p2.y < cp.y) {\n                        cp.x = p1.x + (p2.y - p1.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (cp.y < p1.y) {\n                        cp.x = p2.x - (p2.y - p1.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                } else {\n                    if (cp.y < p2.y) {\n                        cp.x = p1.x - (p1.y - p2.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (p1.y < cp.y) {\n                        cp.x = p2.x + (p1.y - p2.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                }\n            },\n            tangent: function (p0, p1, xField, yField) {\n                var x = p1[xField] - p0[xField];\n                var y = p1[yField] - p0[yField];\n                var tangent;\n                if (x === 0) {\n                    tangent = 0;\n                } else {\n                    tangent = y / x;\n                }\n                return tangent;\n            },\n            isMonotonicByField: function (p0, p1, p2, field) {\n                return p2[field] > p1[field] && p1[field] > p0[field] || p2[field] < p1[field] && p1[field] < p0[field];\n            },\n            firstControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t1 + distance, p0[yField] + distance * tangent, xField, yField);\n            },\n            secondControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t2 - distance, p3[yField] - distance * tangent, xField, yField);\n            },\n            point: function (xValue, yValue, xField, yField) {\n                var controlPoint = new geometry.Point();\n                controlPoint[xField] = xValue;\n                controlPoint[yField] = yValue;\n                return controlPoint;\n            },\n            calculateFunction: function (fn, x) {\n                var length = fn.length;\n                var result = 0;\n                for (var i = 0; i < length; i++) {\n                    result += Math.pow(x, i) * fn[i];\n                }\n                return result;\n            }\n        });\n        function numberSign(value) {\n            return value <= 0 ? -1 : 1;\n        }\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            services: services,\n            autoMajorUnit: autoMajorUnit,\n            Point: Point,\n            Box: Box,\n            Ring: Ring,\n            Sector: Sector,\n            ShapeBuilder: ShapeBuilder,\n            ShapeElement: ShapeElement,\n            ChartElement: ChartElement,\n            BoxElement: BoxElement,\n            RootElement: RootElement,\n            FloatElement: FloatElement,\n            Text: Text,\n            TextBox: TextBox,\n            Title: Title,\n            AxisLabel: AxisLabel,\n            Axis: Axis,\n            Note: Note,\n            CategoryAxis: CategoryAxis,\n            DateCategoryAxis: DateCategoryAxis,\n            DateValueAxis: DateValueAxis,\n            NumericAxis: NumericAxis,\n            LogarithmicAxis: LogarithmicAxis,\n            PolarAxis: PolarAxis,\n            RadarCategoryAxis: RadarCategoryAxis,\n            RadarNumericAxis: RadarNumericAxis,\n            RadarLogarithmicAxis: RadarLogarithmicAxis,\n            CurveProcessor: CurveProcessor,\n            Gradients: GRADIENTS,\n            rectToBox: rectToBox,\n            addClass: addClass,\n            removeClass: removeClass,\n            alignPathToPixel: alignPathToPixel,\n            clockwise: clockwise,\n            deepExtend: deepExtend,\n            elementStyles: elementStyles,\n            getSpacing: getSpacing,\n            getter: getter,\n            grep: grep,\n            hasClasses: hasClasses,\n            inArray: inArray,\n            interpolateValue: interpolateValue,\n            InstanceObserver: InstanceObserver,\n            isArray: isArray,\n            isFunction: isFunction,\n            isNumber: isNumber,\n            isObject: isObject,\n            isString: isString,\n            map: map,\n            mousewheelDelta: mousewheelDelta,\n            FontLoader: FontLoader,\n            setDefaultOptions: setDefaultOptions,\n            sparseArrayLimits: sparseArrayLimits,\n            styleValue: styleValue,\n            append: append,\n            bindEvents: bindEvents,\n            Class: Class,\n            defined: defined,\n            deg: deg,\n            elementOffset: elementOffset,\n            elementSize: elementSize,\n            eventElement: eventElement,\n            eventCoordinates: eventCoordinates,\n            last: last,\n            limitValue: limitValue,\n            logToConsole: kendo.logToConsole,\n            objectKey: objectKey,\n            rad: rad,\n            round: round,\n            unbindEvents: unbindEvents,\n            valueOrDefault: valueOrDefault,\n            absoluteDateDiff: absoluteDateDiff,\n            addDuration: addDuration,\n            addTicks: addTicks,\n            ceilDate: ceilDate,\n            dateComparer: dateComparer,\n            dateDiff: dateDiff,\n            dateEquals: dateEquals,\n            dateIndex: dateIndex,\n            duration: duration,\n            floorDate: floorDate,\n            lteDateIndex: lteDateIndex,\n            startOfWeek: startOfWeek,\n            toDate: toDate,\n            parseDate: parseDate,\n            parseDates: parseDates,\n            toTime: toTime\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/core', ['dataviz/core/kendo-core'], f);\n}(function () {\n    (function ($) {\n        var dataviz = kendo.dataviz;\n        var services = dataviz.services;\n        var draw = kendo.drawing;\n        dataviz.ExportMixin = {\n            extend: function (proto, skipLegacy) {\n                if (!proto.exportVisual) {\n                    throw new Error('Mixin target has no exportVisual method defined.');\n                }\n                proto.exportSVG = this.exportSVG;\n                proto.exportImage = this.exportImage;\n                proto.exportPDF = this.exportPDF;\n                if (!skipLegacy) {\n                    proto.svg = this.svg;\n                    proto.imageDataURL = this.imageDataURL;\n                }\n            },\n            exportSVG: function (options) {\n                return draw.exportSVG(this.exportVisual(), options);\n            },\n            exportImage: function (options) {\n                return draw.exportImage(this.exportVisual(options), options);\n            },\n            exportPDF: function (options) {\n                return draw.exportPDF(this.exportVisual(), options);\n            },\n            svg: function () {\n                if (draw.svg.Surface) {\n                    return draw.svg.exportGroup(this.exportVisual());\n                } else {\n                    throw new Error('SVG Export failed. Unable to export instantiate kendo.drawing.svg.Surface');\n                }\n            },\n            imageDataURL: function () {\n                if (!kendo.support.canvas) {\n                    return null;\n                }\n                if (draw.canvas.Surface) {\n                    var container = $('<div />').css({\n                        display: 'none',\n                        width: this.element.width(),\n                        height: this.element.height()\n                    }).appendTo(document.body);\n                    var surface = new draw.canvas.Surface(container[0]);\n                    surface.draw(this.exportVisual());\n                    var image = surface._rootElement.toDataURL();\n                    surface.destroy();\n                    container.remove();\n                    return image;\n                } else {\n                    throw new Error('Image Export failed. Unable to export instantiate kendo.drawing.canvas.Surface');\n                }\n            }\n        };\n        services.IntlService.register({\n            format: function (format) {\n                return kendo.format.apply(null, [format].concat(Array.prototype.slice.call(arguments, 1)));\n            },\n            toString: kendo.toString,\n            parseDate: kendo.parseDate\n        });\n        services.TemplateService.register({ compile: kendo.template });\n        dataviz.Point2D = dataviz.Point;\n        dataviz.Box2D = dataviz.Box;\n        dataviz.mwDelta = function (e) {\n            return dataviz.mousewheelDelta(e.originalEvent);\n        };\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.core', [\n        'dataviz/core/kendo-core',\n        'dataviz/core/core'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.core',\n        name: 'Core',\n        description: 'The DataViz core functions',\n        category: 'dataviz',\n        depends: [\n            'core',\n            'drawing'\n        ],\n        hidden: true\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}