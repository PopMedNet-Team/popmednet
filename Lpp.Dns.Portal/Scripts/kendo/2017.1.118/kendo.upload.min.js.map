{"version":3,"sources":["kendo.upload.js"],"names":["f","define","$","undefined","getFileName","input","map","inputFiles","file","name","join","$input","files","getAllFileInfo","stripPath","value","extension","getFileExtension","size","rawFiles","getFileInfo","rawFile","fileName","kendo","htmlEncode","fileSize","matches","match","rFileExtension","slashIndex","lastIndexOf","substr","assignGuidToFiles","unique","uid","guid","validateFiles","validationInfo","i","allowedExtensions","parseAllowedExtensions","maxFileSize","minFileSize","length","validateFileExtension","validateFileSize","extensions","ext","parsedExt","substring","toLowerCase","indexOf","validationErrors","inArray","INVALIDFILEEXTENSION","push","INVALIDMINFILESIZE","INVALIDMAXFILESIZE","getTotalFilesSizeMessage","totalSize","toFixed","shouldRemoveFileEntry","upload","multiple","wrapper","removeUploadedFile","fileEntry","eventArgs","shouldSendRemoveRequest","fileNames","_supportsRemove","data","_removeFileEntry","_submitRemove","textStatus","xhr","prevented","trigger","SUCCESS","operation","response","XMLHttpRequest","ERROR","logToConsole","responseText","tryParseJSON","onSuccess","onError","success","json","parseJSON","normalizeJSON","e","stopEvent","stopPropagation","preventDefault","bindDragEventWrappers","element","namespace","onDragEnter","onDragLeave","hideInterval","lastDrag","on","Date","setInterval","sinceLastDrag","clearInterval","isFileUploadStarted","is","getFileEntry","target","closest","iframeUploadModule","formDataUploadModule","window","Widget","ui","antiForgeryTokens","NS","SELECT","UPLOAD","COMPLETE","CANCEL","CLEAR","PROGRESS","REMOVE","VALIDATIONERRORS","PROGRESSHIDEDELAY","PROGRESSHIDEDURATION","headerStatusIcon","loading","warning","Upload","extend","init","options","activeInput","ns","initialFiles","that","this","fn","call","localization","_wrapInput","_activeInput","toggle","enabled","_ns","proxy","_onParentFormSubmit","_onParentFormReset","async","saveUrl","_module","_supportsFormData","_async","_renderInitialFiles","syncUploadModule","_supportsDrop","dropZone","_setupCustomDropZone","_setupDropZone","_onFileAction","_onClearSelected","_onUploadSelected","val","_onInputChange","events","showFileList","template","removeVerb","autoUpload","withCredentials","accept","select","cancel","retry","remove","clearSelectedFiles","uploadSelectedFiles","dropFilesHere","statusUploading","statusUploaded","statusWarning","statusFailed","headerStatusUploading","headerStatusUploaded","invalidMaxFileSize","invalidMinFileSize","invalidFileExtension","validation","setOptions","attr","_supportsMultiple","enable","disable","toggleClass","prop","focus","destroy","customDropZone","document","add","off","onSaveSelected","getFiles","filesData","j","allFiles","listItems","find","clearAllFiles","each","index","_removeFileByDomElement","removeAllFiles","removeFileByUid","_removeFileByUid","clearFileByUid","clearFile","callback","_removeFile","removeFile","fileData","hasClass","onCancel","onRemove","_hideHeaderUploadstatus","_updateHeaderUploadStatus","_addInput","sourceInput","nodeType","clone","insertAfter","hide","removeAttr","parent","addClass","removeClass","_onInputKeyDown","firstButton","keyCode","keys","TAB","_inputFiles","_isAsyncNonBatch","onSelect","_onDrop","dt","originalEvent","dataTransfer","droppedFiles","splice","_filesContainValidationErrors","hasErrors","batch","currentFile","idx","_enqueueFile","prepend","_fileAction","_prepareTemplateData","templateData","_prepareDefaultSingleFileEntryTemplate","errors","_prepareDefaultMultipleFileEntriesTemplate","filesHaveValidationErrors","totalFileSize","sort","a","b","existingFileEntries","removeEventArgs","fileUid","fileList","appendTo","angular","elements","width","headers","allCompletedFiles","allInvalidFiles","_hideUploadButton","fileElement","actionKey","classDictionary","iconsClassDictionary","hasOwnProperty","_clearFileAction","append","show","_renderAction","_fileState","stateKey","states","uploading","text","uploaded","failed","currentState","actionClass","actionText","iconClass","empty","button","icon","hasValidationErrors","_checkAllComplete","finish","onRetry","clearEventArgs","_onFileProgress","percentComplete","progressPct","_onUploadSuccess","_setUploadErrorState","_hideUploadProgress","_onUploadError","uploadPercentage","delay","fadeOut","css","_showUploadButton","uploadButton","clearButton","_showHeaderUploadStatus","isUploading","headerUploadStatus","after","failedUploads","headerUploadStatusIcon","currentlyUploading","not","currentlyInvalid","html","onAbort","setTimeout","FormData","windows","_userAgent","support","browser","opera","safari","userAgent","isChrome","test","isSafari","isWindowsSafari","navigator","wrap","_bindDocumentDragEventWrappers","removeUrl","removeField","params","jQuery","ajax","type","dataType","dataFilter","url","traditional","error","xhrFields","prototype","filesContainErrors","relatedInput","iframes","_frameId","prepareUpload","performUpload","iframe","form","saveField","createFrame","registerFrame","createForm","frame","key","dataInput","cleanupFrame","unregisterFrame","body","prependTo","one","onIframeLoad","submit","module","started","contents","ex","processResponse","fakeXHR","jsonResult","statusText","status","stopFrameSubmit","id","action","stop","execCommand","grep","sourceElement","fileEntries","enqueueFiles","filesLength","formData","createFormData","createXHR","removeFileEntry","populateFormData","postFormData","stopUploadRequest","addEventListener","onRequestSuccess","onRequestError","onRequestProgress","open","setRequestHeader","send","raiseError","cleanupFileEntry","uploadComplete","Math","round","loaded","total","abort","plugin","amd","a1","a2","a3"],"mappings":"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","file":"kendo.upload.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.upload', ['kendo.core'], f);\n}(function () {\n    var __meta__ = {\n        id: 'upload',\n        name: 'Upload',\n        category: 'web',\n        description: 'The Upload widget uses progressive enhancement to deliver the best possible uploading experience to users.',\n        depends: ['core']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, antiForgeryTokens = kendo.antiForgeryTokens, logToConsole = kendo.logToConsole, rFileExtension = /\\.([^\\.]+)$/, NS = '.kendoUpload', SELECT = 'select', UPLOAD = 'upload', SUCCESS = 'success', ERROR = 'error', COMPLETE = 'complete', CANCEL = 'cancel', CLEAR = 'clear', PROGRESS = 'progress', REMOVE = 'remove', VALIDATIONERRORS = 'validationErrors', INVALIDMAXFILESIZE = 'invalidMaxFileSize', INVALIDMINFILESIZE = 'invalidMinFileSize', INVALIDFILEEXTENSION = 'invalidFileExtension', PROGRESSHIDEDELAY = 1000, PROGRESSHIDEDURATION = 2000;\n        var headerStatusIcon = {\n            loading: 'k-i-loading',\n            warning: 'k-i-warning',\n            success: 'k-i-check'\n        };\n        var Upload = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.name = element.name;\n                that.multiple = that.options.multiple;\n                that.localization = that.options.localization;\n                var activeInput = that.element;\n                that.wrapper = activeInput.closest('.k-upload');\n                if (that.wrapper.length === 0) {\n                    that.wrapper = that._wrapInput(activeInput);\n                }\n                that._activeInput(activeInput);\n                that.toggle(that.options.enabled);\n                var ns = that._ns = NS + '-' + kendo.guid();\n                activeInput.closest('form').on('submit' + ns, $.proxy(that._onParentFormSubmit, that)).on('reset' + ns, $.proxy(that._onParentFormReset, that));\n                if (that.options.async.saveUrl) {\n                    that._module = that._supportsFormData() ? new formDataUploadModule(that) : new iframeUploadModule(that);\n                    that._async = true;\n                    var initialFiles = that.options.files;\n                    if (initialFiles.length > 0) {\n                        that._renderInitialFiles(initialFiles);\n                    }\n                } else {\n                    that._module = new syncUploadModule(that);\n                }\n                if (that._supportsDrop()) {\n                    if (that.options.dropZone !== '') {\n                        that._setupCustomDropZone();\n                    } else {\n                        that._setupDropZone();\n                    }\n                }\n                that.wrapper.on('click', '.k-upload-action', $.proxy(that._onFileAction, that)).on('click', '.k-clear-selected', $.proxy(that._onClearSelected, that)).on('click', '.k-upload-selected', $.proxy(that._onUploadSelected, that));\n                if (that.element.val()) {\n                    that._onInputChange({ target: that.element });\n                }\n            },\n            events: [\n                SELECT,\n                UPLOAD,\n                SUCCESS,\n                ERROR,\n                COMPLETE,\n                CANCEL,\n                CLEAR,\n                PROGRESS,\n                REMOVE\n            ],\n            options: {\n                name: 'Upload',\n                enabled: true,\n                multiple: true,\n                showFileList: true,\n                template: '',\n                files: [],\n                async: {\n                    removeVerb: 'POST',\n                    autoUpload: true,\n                    withCredentials: true,\n                    accept: '*/*; q=0.5, application/json'\n                },\n                localization: {\n                    'select': 'Select files...',\n                    'cancel': 'Cancel',\n                    'retry': 'Retry',\n                    'remove': 'Remove',\n                    'clearSelectedFiles': 'Clear',\n                    'uploadSelectedFiles': 'Upload',\n                    'dropFilesHere': 'drop files here to upload',\n                    'statusUploading': 'uploading',\n                    'statusUploaded': 'uploaded',\n                    'statusWarning': 'warning',\n                    'statusFailed': 'failed',\n                    'headerStatusUploading': 'Uploading...',\n                    'headerStatusUploaded': 'Done',\n                    'invalidMaxFileSize': 'File size too large.',\n                    'invalidMinFileSize': 'File size too small.',\n                    'invalidFileExtension': 'File type not allowed.'\n                },\n                validation: {\n                    allowedExtensions: [],\n                    maxFileSize: 0,\n                    minFileSize: 0\n                },\n                dropZone: ''\n            },\n            setOptions: function (options) {\n                var that = this, activeInput = that.element;\n                Widget.fn.setOptions.call(that, options);\n                that.multiple = that.options.multiple;\n                activeInput.attr('multiple', that._supportsMultiple() ? that.multiple : false);\n                that.toggle(that.options.enabled);\n            },\n            enable: function (enable) {\n                enable = typeof enable === 'undefined' ? true : enable;\n                this.toggle(enable);\n            },\n            disable: function () {\n                this.toggle(false);\n            },\n            toggle: function (enable) {\n                enable = typeof enable === 'undefined' ? enable : !enable;\n                this.wrapper.toggleClass('k-state-disabled', enable);\n                this.element.prop('disabled', enable);\n            },\n            focus: function () {\n                this.element.focus();\n            },\n            destroy: function () {\n                var that = this;\n                var customDropZone = $(that.options.dropZone);\n                $(document).add($('.k-dropzone', that.wrapper)).add(that.wrapper.closest('form')).off(that._ns);\n                if (customDropZone.length > 0) {\n                    customDropZone.off(that._ns);\n                }\n                $(that.element).off(NS);\n                Widget.fn.destroy.call(that);\n            },\n            upload: function () {\n                var that = this;\n                that._module.onSaveSelected();\n            },\n            getFiles: function () {\n                var that = this;\n                var filesData;\n                var allFiles = [];\n                var listItems = that.wrapper.find('.k-file');\n                for (var i = 0; i < listItems.length; i++) {\n                    filesData = $(listItems[i]).data('fileNames');\n                    if (filesData) {\n                        for (var j = 0; j < filesData.length; j++) {\n                            allFiles.push(filesData[j]);\n                        }\n                    }\n                }\n                return allFiles;\n            },\n            clearAllFiles: function () {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                files.each(function (index, file) {\n                    that._removeFileByDomElement(file, false);\n                });\n            },\n            removeAllFiles: function () {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                files.each(function (index, file) {\n                    that._removeFileByDomElement(file, true);\n                });\n            },\n            removeFileByUid: function (uid) {\n                this._removeFileByUid(uid, true);\n            },\n            clearFileByUid: function (uid) {\n                this._removeFileByUid(uid, false);\n            },\n            _removeFileByUid: function (uid, shouldSendRemoveRequest) {\n                var that = this;\n                var fileEntry;\n                if (typeof uid !== 'string') {\n                    return;\n                }\n                fileEntry = $('.k-file[' + kendo.attr('uid') + '=\"' + uid + '\"]', that.wrapper);\n                if (fileEntry.length > 0) {\n                    that._removeFileByDomElement(fileEntry, shouldSendRemoveRequest);\n                }\n            },\n            clearFile: function (callback) {\n                this._removeFile(callback, false);\n            },\n            removeFile: function (callback) {\n                this._removeFile(callback, true);\n            },\n            _removeFile: function (callback, shouldSendRemoveRequest) {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                var fileData;\n                if (typeof callback === 'function') {\n                    files.each(function (index, file) {\n                        fileData = $(file).data('fileNames');\n                        if (callback(fileData)) {\n                            that._removeFileByDomElement(file, shouldSendRemoveRequest);\n                        }\n                    });\n                }\n            },\n            _removeFileByDomElement: function (fileEntry, shouldSendRemoveRequest) {\n                var that = this;\n                var fileData = { target: $(fileEntry, that.wrapper) };\n                var allFiles;\n                if (that.options.async.saveUrl) {\n                    if ($(fileEntry).hasClass('k-file-progress')) {\n                        that._module.onCancel(fileData);\n                    } else {\n                        that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                    }\n                    allFiles = $('.k-file', that.wrapper);\n                    if (allFiles.length === 0) {\n                        that._hideHeaderUploadstatus();\n                    } else {\n                        that._updateHeaderUploadStatus();\n                    }\n                } else {\n                    that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                }\n            },\n            _addInput: function (sourceInput) {\n                if (!sourceInput[0].nodeType) {\n                    return;\n                }\n                var that = this, input = sourceInput.clone().val('');\n                input.insertAfter(that.element).data('kendoUpload', that);\n                $(that.element).hide().attr('tabindex', '-1').removeAttr('id').off(NS);\n                that._activeInput(input);\n                that.element.focus();\n            },\n            _activeInput: function (input) {\n                var that = this, wrapper = that.wrapper;\n                that.element = input;\n                input.attr('multiple', that._supportsMultiple() ? that.multiple : false).attr('autocomplete', 'off').on('click' + NS, function (e) {\n                    if (wrapper.hasClass('k-state-disabled')) {\n                        e.preventDefault();\n                    }\n                }).on('focus' + NS, function () {\n                    $(this).parent().addClass('k-state-focused');\n                }).on('blur' + NS, function () {\n                    $(this).parent().removeClass('k-state-focused');\n                }).on('change' + NS, $.proxy(that._onInputChange, that)).on('keydown' + NS, $.proxy(that._onInputKeyDown, that));\n            },\n            _onInputKeyDown: function (e) {\n                var that = this;\n                var firstButton = that.wrapper.find('.k-upload-action:visible:first');\n                if (e.keyCode === kendo.keys.TAB && firstButton.length > 0) {\n                    e.preventDefault();\n                    firstButton.focus();\n                }\n            },\n            _onInputChange: function (e) {\n                var that = this;\n                var input = $(e.target);\n                var files = assignGuidToFiles(that._inputFiles(input), that._isAsyncNonBatch());\n                validateFiles(files, that.options.validation);\n                var prevented = that.trigger(SELECT, { files: files });\n                if (prevented) {\n                    that._addInput(input);\n                    input.remove();\n                } else {\n                    that._module.onSelect({ target: input }, files);\n                }\n            },\n            _onDrop: function (e) {\n                var dt = e.originalEvent.dataTransfer;\n                var that = this;\n                var droppedFiles = dt.files;\n                var files = assignGuidToFiles(getAllFileInfo(droppedFiles), that._isAsyncNonBatch());\n                stopEvent(e);\n                if (droppedFiles.length > 0 && !that.wrapper.hasClass('k-state-disabled')) {\n                    if (!that.multiple && files.length > 1) {\n                        files.splice(1, files.length - 1);\n                    }\n                    validateFiles(files, that.options.validation);\n                    var prevented = that.trigger(SELECT, { files: files });\n                    if (!prevented) {\n                        that._module.onSelect({ target: $('.k-dropzone', that.wrapper) }, files);\n                    }\n                }\n            },\n            _filesContainValidationErrors: function (files) {\n                var hasErrors = false;\n                $(files).each(function (index, file) {\n                    if (file[VALIDATIONERRORS] && file[VALIDATIONERRORS].length > 0) {\n                        hasErrors = true;\n                        return false;\n                    }\n                });\n                return hasErrors;\n            },\n            _isAsyncNonBatch: function () {\n                return this._async && !this.options.async.batch || false;\n            },\n            _renderInitialFiles: function (files) {\n                var that = this;\n                var idx = 0;\n                files = assignGuidToFiles(files, true);\n                for (idx = 0; idx < files.length; idx++) {\n                    var currentFile = files[idx];\n                    var fileEntry = that._enqueueFile(currentFile.name, { fileNames: [currentFile] });\n                    fileEntry.addClass('k-file-success').data('files', [files[idx]]);\n                    if (!that.options.template) {\n                        $('.k-upload-status', fileEntry).prepend('<span class=\\'k-upload-pct\\'>100%</span>');\n                    }\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    }\n                }\n            },\n            _prepareTemplateData: function (name, data) {\n                var filesData = data.fileNames, templateData = {}, totalSize = 0, idx = 0;\n                for (idx = 0; idx < filesData.length; idx++) {\n                    totalSize += filesData[idx].size;\n                }\n                templateData.name = name;\n                templateData.size = totalSize;\n                templateData.files = data.fileNames;\n                return templateData;\n            },\n            _prepareDefaultSingleFileEntryTemplate: function (data) {\n                var that = this;\n                var file = data.fileNames[0];\n                var fileSize = getTotalFilesSizeMessage(data.fileNames);\n                var errors = file[VALIDATIONERRORS];\n                var template = '';\n                if (errors && errors.length > 0) {\n                    template += '<li class=\\'k-file k-file-invalid\\'><span class=\\'k-progress\\'></span>' + '<span class=\\'k-file-invalid-extension-wrapper\\'>' + '<span class=\\'k-file-invalid-icon\\'>!</span>' + '<span class=\\'k-file-state\\'></span>' + '</span>' + '<span class=\\'k-file-name-size-wrapper\\'>' + '<span class=\\'k-file-name k-file-name-invalid\\' title=\\'' + file.name + '\\'>' + file.name + '</span>' + '<span class=\\'k-file-validation-message\\'>' + that.localization[errors[0]] + '</span>' + '</span>';\n                } else {\n                    template += '<li class=\\'k-file\\'><span class=\\'k-progress\\'></span>' + '<span class=\\'k-file-extension-wrapper\\'>' + '<span class=\\'k-file-extension\\'>' + file.extension.substring(1) + '</span>' + '<span class=\\'k-file-state\\'></span>' + '</span>' + '<span class=\\'k-file-name-size-wrapper\\'><span class=\\'k-file-name\\' title=\\'' + file.name + '\\'>' + file.name + '</span>' + '<span class=\\'k-file-size\\'>' + fileSize + '</span></span>';\n                }\n                template += '<strong class=\\'k-upload-status\\'></strong>';\n                return $(template);\n            },\n            _prepareDefaultMultipleFileEntriesTemplate: function (data) {\n                var that = this;\n                var files = data.fileNames;\n                var filesHaveValidationErrors = that._filesContainValidationErrors(files);\n                var totalFileSize = getTotalFilesSizeMessage(files);\n                var template = '';\n                var i, currentFile;\n                if (filesHaveValidationErrors) {\n                    template += '<li class=\\'k-file k-file-invalid\\'><span class=\\'k-progress\\'></span>' + '<span class=\\'k-multiple-files-invalid-extension-wrapper\\'>' + '<span class=\\'k-file-invalid-icon\\'>!</span>';\n                } else {\n                    template += '<li class=\\'k-file\\'><span class=\\'k-progress\\'></span>' + '<span class=\\'k-multiple-files-extension-wrapper\\'>';\n                }\n                template += '<span class=\\'k-file-state\\'></span></span>';\n                files.sort(function (a, b) {\n                    if (a[VALIDATIONERRORS]) {\n                        return -1;\n                    }\n                    if (b[VALIDATIONERRORS]) {\n                        return 1;\n                    }\n                    return 0;\n                });\n                template += '<span class=\\'k-file-name-size-wrapper\\'>';\n                for (i = 0; i < files.length; i++) {\n                    currentFile = files[i];\n                    if (currentFile[VALIDATIONERRORS] && currentFile[VALIDATIONERRORS].length > 0) {\n                        template += '<span class=\\'k-file-name k-file-name-invalid\\' title=\\'' + currentFile.name + '\\'>' + currentFile.name + '</span>';\n                    } else {\n                        template += '<span class=\\'k-file-name\\' title=\\'' + currentFile.name + '\\'>' + currentFile.name + '</span>';\n                    }\n                }\n                if (filesHaveValidationErrors) {\n                    template += '<span class=\\'k-file-validation-message\\'>Invalid file(s). Please check file upload requirements.</span>';\n                } else {\n                    template += '<span class=\\'k-file-information\\'>Total: ' + files.length + ' files, ' + totalFileSize + '</span>';\n                }\n                template += '</span><strong class=\\'k-upload-status\\'></strong>';\n                return $(template);\n            },\n            _enqueueFile: function (name, data) {\n                var that = this;\n                var existingFileEntries;\n                var fileEntry;\n                var fileUid = data.fileNames[0].uid;\n                var fileList = $('.k-upload-files', that.wrapper);\n                var options = that.options;\n                var template = options.template;\n                var templateData;\n                var removeEventArgs;\n                if (fileList.length === 0) {\n                    fileList = $('<ul class=\\'k-upload-files k-reset\\'></ul>').appendTo(that.wrapper);\n                    if (!that.options.showFileList) {\n                        fileList.hide();\n                    }\n                    that.wrapper.removeClass('k-upload-empty');\n                }\n                existingFileEntries = $('.k-file', fileList);\n                if (!template) {\n                    if (data.fileNames.length === 1) {\n                        fileEntry = that._prepareDefaultSingleFileEntryTemplate(data);\n                    } else {\n                        fileEntry = that._prepareDefaultMultipleFileEntriesTemplate(data);\n                    }\n                } else {\n                    templateData = that._prepareTemplateData(name, data);\n                    template = kendo.template(template);\n                    fileEntry = $('<li class=\\'k-file\\'>' + template(templateData) + '</li>');\n                    fileEntry.find('.k-upload-action').addClass('k-button');\n                    that.angular('compile', function () {\n                        return {\n                            elements: fileEntry,\n                            data: [templateData]\n                        };\n                    });\n                }\n                fileEntry.attr(kendo.attr('uid'), fileUid).appendTo(fileList).data(data);\n                if (!that._async) {\n                    $('.k-progress', fileEntry).width('100%');\n                }\n                if (!that.multiple && existingFileEntries.length > 0) {\n                    removeEventArgs = {\n                        files: existingFileEntries.data('fileNames'),\n                        headers: {}\n                    };\n                    if (!that.trigger(REMOVE, removeEventArgs)) {\n                        that._module.onRemove({ target: $(existingFileEntries, that.wrapper) }, removeEventArgs);\n                    }\n                }\n                return fileEntry;\n            },\n            _removeFileEntry: function (fileEntry) {\n                var that = this;\n                var fileList = fileEntry.closest('.k-upload-files');\n                var allFiles, allCompletedFiles, allInvalidFiles;\n                fileEntry.remove();\n                allFiles = $('.k-file', fileList);\n                allCompletedFiles = $('.k-file-success, .k-file-error', fileList);\n                allInvalidFiles = $('.k-file-invalid', fileList);\n                if (allCompletedFiles.length === allFiles.length || allInvalidFiles.length === allFiles.length) {\n                    this._hideUploadButton();\n                }\n                if (allFiles.length === 0) {\n                    fileList.remove();\n                    that.wrapper.addClass('k-upload-empty');\n                    that._hideHeaderUploadstatus();\n                } else {\n                    that._updateHeaderUploadStatus();\n                }\n            },\n            _fileAction: function (fileElement, actionKey) {\n                var classDictionary = {\n                    remove: 'k-i-x',\n                    cancel: 'k-i-cancel',\n                    retry: 'k-i-retry'\n                };\n                var iconsClassDictionary = {\n                    remove: 'k-i-close',\n                    cancel: 'k-i-close',\n                    retry: 'k-i-reload'\n                };\n                if (!classDictionary.hasOwnProperty(actionKey)) {\n                    return;\n                }\n                this._clearFileAction(fileElement);\n                if (!this.options.template) {\n                    fileElement.find('.k-upload-status .k-upload-action').remove();\n                    fileElement.find('.k-upload-status').append(this._renderAction(classDictionary[actionKey], this.localization[actionKey], iconsClassDictionary[actionKey]));\n                } else {\n                    fileElement.find('.k-upload-action').addClass('k-button').append('<span class=\\'k-icon ' + iconsClassDictionary[actionKey] + ' ' + classDictionary[actionKey] + '\\' title=\\'' + this.localization[actionKey] + '\\'' + 'aria-label=\\'' + this.localization[actionKey] + '\\'></span>').show();\n                }\n            },\n            _fileState: function (fileEntry, stateKey) {\n                var localization = this.localization, states = {\n                        uploading: { text: localization.statusUploading },\n                        uploaded: { text: localization.statusUploaded },\n                        failed: { text: localization.statusFailed }\n                    }, currentState = states[stateKey];\n                if (currentState) {\n                    $('span.k-file-state', fileEntry).text(currentState.text);\n                }\n            },\n            _renderAction: function (actionClass, actionText, iconClass) {\n                if (actionClass !== '') {\n                    return $('<button type=\\'button\\' class=\\'k-button k-upload-action\\'>' + '<span class=\\'k-icon ' + iconClass + ' ' + actionClass + '\\' title=\\'' + actionText + '\\' aria-label=\\'' + actionText + '\\'></span>' + '</button>').on('focus', function () {\n                        $(this).addClass('k-state-focused');\n                    }).on('blur', function () {\n                        $(this).removeClass('k-state-focused');\n                    });\n                } else {\n                    return $('<button type=\\'button\\' class=\\'k-button\\'>' + actionText + '</button>');\n                }\n            },\n            _clearFileAction: function (fileElement) {\n                $('.k-upload-action', fileElement).empty().hide();\n            },\n            _onFileAction: function (e) {\n                var that = this;\n                if (!that.wrapper.hasClass('k-state-disabled')) {\n                    var button = $(e.target).closest('.k-upload-action');\n                    var icon = button.find('.k-icon');\n                    var fileEntry = button.closest('.k-file');\n                    var files = fileEntry.data('fileNames');\n                    var hasValidationErrors = that._filesContainValidationErrors(files);\n                    var eventArgs = {\n                        files: files,\n                        headers: {}\n                    };\n                    if (icon.hasClass('k-i-x')) {\n                        if (!that.trigger(REMOVE, eventArgs)) {\n                            that._module.onRemove({ target: $(fileEntry, that.wrapper) }, eventArgs, !hasValidationErrors);\n                        }\n                    } else if (icon.hasClass('k-i-cancel')) {\n                        that.trigger(CANCEL, eventArgs);\n                        that._module.onCancel({ target: $(fileEntry, that.wrapper) });\n                        that._checkAllComplete();\n                        that._updateHeaderUploadStatus();\n                    } else if (icon.hasClass('k-i-retry')) {\n                        $('.k-i-warning', fileEntry).remove();\n                        $('.k-progress', fileEntry).finish().show();\n                        that._module.onRetry({ target: $(fileEntry, that.wrapper) });\n                    }\n                }\n                return false;\n            },\n            _onUploadSelected: function () {\n                var that = this;\n                var wrapper = that.wrapper;\n                if (!wrapper.hasClass('k-state-disabled')) {\n                    this._module.onSaveSelected();\n                }\n                return false;\n            },\n            _onClearSelected: function () {\n                var that = this;\n                var wrapper = that.wrapper;\n                var clearEventArgs = {};\n                if (!wrapper.hasClass('k-state-disabled') && !that.trigger(CLEAR, clearEventArgs)) {\n                    that.clearAllFiles();\n                }\n                return false;\n            },\n            _onFileProgress: function (e, percentComplete) {\n                var progressPct;\n                if (percentComplete > 100) {\n                    percentComplete = 100;\n                }\n                if (!this.options.template) {\n                    progressPct = $('.k-upload-pct', e.target);\n                    if (progressPct.length === 0) {\n                        $('.k-upload-status', e.target).prepend('<span class=\\'k-upload-pct\\'></span>');\n                    }\n                    $('.k-upload-pct', e.target).text(percentComplete + '%');\n                    $('.k-progress', e.target).width(percentComplete + '%');\n                } else {\n                    $('.k-progress', e.target).width(percentComplete + '%');\n                }\n                this.trigger(PROGRESS, {\n                    files: getFileEntry(e).data('fileNames'),\n                    percentComplete: percentComplete\n                });\n            },\n            _onUploadSuccess: function (e, response, xhr) {\n                var that = this;\n                var fileEntry = getFileEntry(e);\n                var prevented = that.trigger(SUCCESS, {\n                    files: fileEntry.data('fileNames'),\n                    response: response,\n                    operation: 'upload',\n                    XMLHttpRequest: xhr\n                });\n                if (prevented) {\n                    that._setUploadErrorState(fileEntry);\n                } else {\n                    that._fileState(fileEntry, 'uploaded');\n                    fileEntry.removeClass('k-file-progress').addClass('k-file-success');\n                    that._updateHeaderUploadStatus();\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    } else {\n                        that._clearFileAction(fileEntry);\n                    }\n                }\n                that._hideUploadProgress(fileEntry);\n                that._checkAllComplete();\n            },\n            _onUploadError: function (e, xhr) {\n                var that = this;\n                var fileEntry = getFileEntry(e);\n                that._setUploadErrorState(fileEntry);\n                that.trigger(ERROR, {\n                    operation: 'upload',\n                    files: fileEntry.data('fileNames'),\n                    XMLHttpRequest: xhr\n                });\n                logToConsole('Server response: ' + xhr.responseText);\n                that._hideUploadProgress(fileEntry);\n                that._checkAllComplete();\n            },\n            _setUploadErrorState: function (fileEntry) {\n                var that = this;\n                var uploadPercentage = $('.k-upload-pct', fileEntry);\n                that._fileState(fileEntry, 'failed');\n                fileEntry.removeClass('k-file-progress').addClass('k-file-error');\n                $('.k-progress', fileEntry).width('100%');\n                if (uploadPercentage.length > 0) {\n                    uploadPercentage.empty().removeClass('k-upload-pct').addClass('k-icon k-i-warning');\n                } else {\n                    $('.k-upload-status', fileEntry).prepend('<span class=\\'k-icon k-i-warning\\'></span>');\n                }\n                this._updateHeaderUploadStatus();\n                this._fileAction(fileEntry, 'retry');\n            },\n            _hideUploadProgress: function (fileEntry) {\n                $('.k-progress', fileEntry).delay(PROGRESSHIDEDELAY).fadeOut(PROGRESSHIDEDURATION, function () {\n                    $(this).css('width', '0%');\n                });\n            },\n            _showUploadButton: function () {\n                var that = this;\n                var uploadButton = $('.k-upload-selected', that.wrapper);\n                var clearButton = $('.k-clear-selected', that.wrapper);\n                if (uploadButton.length === 0) {\n                    uploadButton = that._renderAction('', this.localization.uploadSelectedFiles).addClass('k-upload-selected');\n                    clearButton = that._renderAction('', this.localization.clearSelectedFiles).addClass('k-clear-selected');\n                }\n                this.wrapper.append(clearButton, uploadButton);\n            },\n            _hideUploadButton: function () {\n                $('.k-upload-selected, .k-clear-selected', this.wrapper).remove();\n            },\n            _showHeaderUploadStatus: function (isUploading) {\n                var that = this;\n                var localization = that.localization;\n                var dropZone = $('.k-dropzone', that.wrapper);\n                var headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                if (headerUploadStatus.length !== 0) {\n                    headerUploadStatus.remove();\n                }\n                headerUploadStatus = '<strong class=\"k-upload-status k-upload-status-total\"><span class=\"k-icon\"></span></strong>';\n                if (isUploading) {\n                    headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploading);\n                    headerUploadStatus.find('.k-icon').addClass(headerStatusIcon.loading);\n                } else {\n                    headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploaded);\n                    headerUploadStatus.find('.k-icon').addClass(headerStatusIcon.warning);\n                }\n                if (dropZone.length > 0) {\n                    dropZone.append(headerUploadStatus);\n                } else {\n                    $('.k-upload-button', that.wrapper).after(headerUploadStatus);\n                }\n            },\n            _updateHeaderUploadStatus: function () {\n                var that = this;\n                var headerUploadStatus = $('.k-upload-status-total', this.wrapper);\n                var currentlyUploading = $('.k-file', that.wrapper).not('.k-file-success, .k-file-error, .k-file-invalid');\n                var currentlyInvalid = $('.k-file-invalid', that.wrapper);\n                var failedUploads, headerUploadStatusIcon;\n                if (currentlyUploading.length === 0 || currentlyInvalid.length > 0) {\n                    failedUploads = $('.k-file.k-file-error, .k-file.k-file-invalid', that.wrapper);\n                    headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                    headerUploadStatusIcon = $('.k-icon', headerUploadStatus).removeClass().addClass('k-icon').addClass(failedUploads.length !== 0 ? headerStatusIcon.warning : headerStatusIcon.success);\n                    headerUploadStatus.html(headerUploadStatusIcon).append(that.localization.headerStatusUploaded);\n                }\n            },\n            _hideHeaderUploadstatus: function () {\n                $('.k-upload-status-total', this.wrapper).remove();\n            },\n            _onParentFormSubmit: function () {\n                var upload = this, element = upload.element;\n                if (typeof this._module.onAbort !== 'undefined') {\n                    this._module.onAbort();\n                }\n                if (!element.value) {\n                    var input = $(element);\n                    input.attr('disabled', 'disabled');\n                    window.setTimeout(function () {\n                        input.removeAttr('disabled');\n                    }, 0);\n                }\n            },\n            _onParentFormReset: function () {\n                $('.k-upload-files', this.wrapper).remove();\n            },\n            _supportsFormData: function () {\n                return typeof FormData != 'undefined';\n            },\n            _supportsMultiple: function () {\n                var windows = this._userAgent().indexOf('Windows') > -1;\n                return !kendo.support.browser.opera && !(kendo.support.browser.safari && windows);\n            },\n            _supportsDrop: function () {\n                var userAgent = this._userAgent().toLowerCase();\n                var isChrome = /chrome/.test(userAgent);\n                var isSafari = !isChrome && /safari/.test(userAgent);\n                var isWindowsSafari = isSafari && /windows/.test(userAgent);\n                return !isWindowsSafari && this._supportsFormData() && this.options.async.saveUrl;\n            },\n            _userAgent: function () {\n                return navigator.userAgent;\n            },\n            _setupDropZone: function () {\n                var that = this;\n                $('.k-upload-button', that.wrapper).wrap('<div class=\\'k-dropzone\\'></div>');\n                var ns = that._ns;\n                var dropZone = $('.k-dropzone', that.wrapper).append($('<em>' + that.localization.dropFilesHere + '</em>')).on('dragenter' + ns, stopEvent).on('dragover' + ns, function (e) {\n                    e.preventDefault();\n                }).on('drop' + ns, $.proxy(that._onDrop, that));\n                bindDragEventWrappers(dropZone, ns, function () {\n                    if (!dropZone.closest('.k-upload').hasClass('k-state-disabled')) {\n                        dropZone.addClass('k-dropzone-hovered');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-hovered');\n                });\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n            _setupCustomDropZone: function () {\n                var that = this;\n                var dropZone = $(that.options.dropZone);\n                $('.k-upload-button', that.wrapper).wrap('<div class=\\'k-dropzone\\'></div>');\n                var ns = that._ns;\n                dropZone.on('dragenter' + ns, stopEvent).on('dragover' + ns, function (e) {\n                    e.preventDefault();\n                }).on('drop' + ns, $.proxy(that._onDrop, that));\n                bindDragEventWrappers(dropZone, ns, function (e) {\n                    if (!that.wrapper.hasClass('k-state-disabled')) {\n                        dropZone.removeClass('k-dropzone-hovered');\n                        $(e.target).addClass('k-dropzone-hovered');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-hovered');\n                });\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n            _bindDocumentDragEventWrappers: function (dropZone) {\n                var that = this;\n                var ns = that._ns;\n                bindDragEventWrappers($(document), ns, function () {\n                    if (!that.wrapper.hasClass('k-state-disabled')) {\n                        dropZone.addClass('k-dropzone-active');\n                        dropZone.closest('.k-upload').removeClass('k-upload-empty');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-active');\n                    if ($('li.k-file', dropZone.closest('.k-upload')).length === 0) {\n                        dropZone.closest('.k-upload').addClass('k-upload-empty');\n                    }\n                });\n            },\n            _supportsRemove: function () {\n                return !!this.options.async.removeUrl;\n            },\n            _submitRemove: function (fileNames, eventArgs, onSuccess, onError) {\n                var upload = this, removeField = upload.options.async.removeField || 'fileNames', params = $.extend(eventArgs.data, antiForgeryTokens());\n                params[removeField] = fileNames;\n                jQuery.ajax({\n                    type: this.options.async.removeVerb,\n                    dataType: 'json',\n                    dataFilter: normalizeJSON,\n                    url: this.options.async.removeUrl,\n                    traditional: true,\n                    data: params,\n                    headers: eventArgs.headers,\n                    success: onSuccess,\n                    error: onError,\n                    xhrFields: { withCredentials: this.options.async.withCredentials }\n                });\n            },\n            _wrapInput: function (input) {\n                var that = this;\n                var options = that.options;\n                input.wrap('<div class=\\'k-widget k-upload k-header\\'><div class=\\'k-button k-upload-button\\' aria-label=\\'' + this.localization.select + '\\'></div></div>');\n                if (!options.async.saveUrl) {\n                    input.closest('.k-upload').addClass('k-upload-sync');\n                }\n                input.closest('.k-upload').addClass('k-upload-empty');\n                input.closest('.k-button').append('<span>' + this.localization.select + '</span>');\n                return input.closest('.k-upload');\n            },\n            _checkAllComplete: function () {\n                if ($('.k-file.k-file-progress', this.wrapper).length === 0) {\n                    this.trigger(COMPLETE);\n                }\n            },\n            _inputFiles: function (sourceInput) {\n                return inputFiles(sourceInput);\n            }\n        });\n        var syncUploadModule = function (upload) {\n            this.name = 'syncUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.element.closest('form').attr('enctype', 'multipart/form-data').attr('encoding', 'multipart/form-data');\n        };\n        syncUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var filesContainErrors = upload._filesContainValidationErrors(files);\n                upload._addInput(sourceInput);\n                var fileData = { 'fileNames': files };\n                if (filesContainErrors) {\n                    sourceInput.remove();\n                } else {\n                    fileData.relatedInput = sourceInput;\n                }\n                var file = upload._enqueueFile(getFileName(sourceInput), fileData);\n                if (filesContainErrors) {\n                    upload._hideUploadProgress(file);\n                }\n                upload._fileAction(file, REMOVE);\n            },\n            onRemove: function (e) {\n                var fileEntry = getFileEntry(e);\n                var relatedInput = fileEntry.data('relatedInput');\n                if (relatedInput) {\n                    relatedInput.remove();\n                }\n                this.upload._removeFileEntry(fileEntry);\n            }\n        };\n        var iframeUploadModule = function (upload) {\n            this.name = 'iframeUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.iframes = [];\n        };\n        Upload._frameId = 0;\n        iframeUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var hasValidationErrors = upload._filesContainValidationErrors(files);\n                var fileEntry = this.prepareUpload(sourceInput, files, hasValidationErrors);\n                if (upload.options.async.autoUpload) {\n                    if (!hasValidationErrors) {\n                        this.performUpload(fileEntry);\n                    } else {\n                        upload._fileAction(fileEntry, REMOVE);\n                        upload._showHeaderUploadStatus(false);\n                    }\n                } else {\n                    upload._fileAction(fileEntry, REMOVE);\n                    if (!hasValidationErrors) {\n                        upload._showUploadButton();\n                    } else {\n                        upload._updateHeaderUploadStatus();\n                    }\n                }\n                if (hasValidationErrors) {\n                    upload._hideUploadProgress(fileEntry);\n                }\n            },\n            prepareUpload: function (sourceInput, files, hasValidationErrors) {\n                var upload = this.upload;\n                var activeInput = $(upload.element);\n                var name = upload.options.async.saveField || sourceInput.attr('name');\n                var fileEntry, fileData, iframe, form;\n                upload._addInput(sourceInput);\n                sourceInput.attr('name', name);\n                if (!hasValidationErrors) {\n                    iframe = this.createFrame(upload.name + '_' + Upload._frameId++);\n                    this.registerFrame(iframe);\n                    form = this.createForm(upload.options.async.saveUrl, iframe.attr('name')).append(activeInput);\n                    fileData = {\n                        'frame': iframe,\n                        'relatedInput': activeInput,\n                        'fileNames': files\n                    };\n                } else {\n                    sourceInput.remove();\n                    fileData = { 'fileNames': files };\n                }\n                fileEntry = upload._enqueueFile(getFileName(sourceInput), fileData);\n                if (iframe) {\n                    iframe.data({\n                        'form': form,\n                        'file': fileEntry\n                    });\n                }\n                return fileEntry;\n            },\n            performUpload: function (fileEntry) {\n                var e = { files: fileEntry.data('fileNames') };\n                var iframe = fileEntry.data('frame');\n                var upload = this.upload;\n                if (!upload.trigger(UPLOAD, e)) {\n                    upload._hideUploadButton();\n                    upload._showHeaderUploadStatus(true);\n                    iframe.appendTo(document.body);\n                    var form = iframe.data('form').attr('action', upload.options.async.saveUrl).appendTo(document.body);\n                    e.data = $.extend({}, e.data, antiForgeryTokens());\n                    for (var key in e.data) {\n                        var dataInput = form.find('input[name=\\'' + key + '\\']');\n                        if (dataInput.length === 0) {\n                            dataInput = $('<input>', {\n                                type: 'hidden',\n                                name: key\n                            }).prependTo(form);\n                        }\n                        dataInput.val(e.data[key]);\n                    }\n                    upload._fileAction(fileEntry, CANCEL);\n                    upload._fileState(fileEntry, 'uploading');\n                    $(fileEntry).removeClass('k-file-error').addClass('k-file-progress');\n                    iframe.one('load', $.proxy(this.onIframeLoad, this));\n                    form[0].submit();\n                } else {\n                    upload._removeFileEntry(iframe.data('file'));\n                    this.cleanupFrame(iframe);\n                    this.unregisterFrame(iframe);\n                }\n            },\n            onSaveSelected: function () {\n                var module = this;\n                var upload = module.upload;\n                $('.k-file', this.element).each(function () {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data('fileNames'));\n                    if (!started && !hasValidationErrors) {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n            onIframeLoad: function (e) {\n                var iframe = $(e.target), responseText;\n                try {\n                    responseText = iframe.contents().text();\n                } catch (ex) {\n                    responseText = 'Error trying to get server response: ' + ex;\n                }\n                this.processResponse(iframe, responseText);\n            },\n            processResponse: function (iframe, responseText) {\n                var fileEntry = iframe.data('file'), module = this, fakeXHR = { responseText: responseText };\n                tryParseJSON(responseText, function (jsonResult) {\n                    $.extend(fakeXHR, {\n                        statusText: 'OK',\n                        status: '200'\n                    });\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, fakeXHR);\n                    module.cleanupFrame(iframe);\n                    module.unregisterFrame(iframe);\n                }, function () {\n                    $.extend(fakeXHR, {\n                        statusText: 'error',\n                        status: '500'\n                    });\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, fakeXHR);\n                });\n            },\n            onCancel: function (e) {\n                var iframe = $(e.target).data('frame');\n                this.stopFrameSubmit(iframe);\n                this.cleanupFrame(iframe);\n                this.unregisterFrame(iframe);\n                this.upload._removeFileEntry(iframe.data('file'));\n            },\n            onRetry: function (e) {\n                var fileEntry = getFileEntry(e);\n                this.performUpload(fileEntry);\n            },\n            onRemove: function (e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                var iframe = fileEntry.data('frame');\n                if (iframe) {\n                    module.unregisterFrame(iframe);\n                    upload._removeFileEntry(fileEntry);\n                    module.cleanupFrame(iframe);\n                } else {\n                    if (fileEntry.hasClass('k-file-success')) {\n                        removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                    } else {\n                        upload._removeFileEntry(fileEntry);\n                    }\n                }\n            },\n            onAbort: function () {\n                var element = this.element, module = this;\n                $.each(this.iframes, function () {\n                    $('input', this.data('form')).appendTo(element);\n                    module.stopFrameSubmit(this[0]);\n                    this.data('form').remove();\n                    this.remove();\n                });\n                this.iframes = [];\n            },\n            createFrame: function (id) {\n                return $('<iframe' + ' name=\\'' + id + '\\'' + ' id=\\'' + id + '\\'' + ' style=\\'display:none;\\' />');\n            },\n            createForm: function (action, target) {\n                return $('<form enctype=\\'multipart/form-data\\' method=\\'POST\\'' + ' action=\\'' + action + '\\'' + ' target=\\'' + target + '\\'' + '/>');\n            },\n            stopFrameSubmit: function (frame) {\n                if (typeof frame.stop != 'undefined') {\n                    frame.stop();\n                } else if (frame.document) {\n                    frame.document.execCommand('Stop');\n                }\n            },\n            registerFrame: function (frame) {\n                this.iframes.push(frame);\n            },\n            unregisterFrame: function (frame) {\n                this.iframes = $.grep(this.iframes, function (value) {\n                    return value.attr('name') != frame.attr('name');\n                });\n            },\n            cleanupFrame: function (frame) {\n                var form = frame.data('form');\n                frame.data('file').data('frame', null);\n                setTimeout(function () {\n                    form.remove();\n                    frame.remove();\n                }, 1);\n            }\n        };\n        var formDataUploadModule = function (upload) {\n            this.name = 'formDataUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n        };\n        formDataUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var module = this;\n                var sourceElement = $(e.target);\n                var fileEntries = this.prepareUpload(sourceElement, files);\n                var hasValidationErrors;\n                $.each(fileEntries, function () {\n                    hasValidationErrors = upload._filesContainValidationErrors($(this.data('fileNames')));\n                    if (upload.options.async.autoUpload) {\n                        if (!hasValidationErrors) {\n                            module.performUpload(this);\n                        } else {\n                            upload._fileAction(this, REMOVE);\n                            upload._showHeaderUploadStatus(false);\n                        }\n                    } else {\n                        upload._fileAction(this, REMOVE);\n                        if (!hasValidationErrors) {\n                            upload._showUploadButton();\n                        } else {\n                            upload._updateHeaderUploadStatus();\n                        }\n                    }\n                    if (hasValidationErrors) {\n                        upload._hideUploadProgress(this);\n                    }\n                });\n            },\n            prepareUpload: function (sourceElement, files) {\n                var fileEntries = this.enqueueFiles(files);\n                if (sourceElement.is('input')) {\n                    $.each(fileEntries, function () {\n                        $(this).data('relatedInput', sourceElement);\n                    });\n                    sourceElement.data('relatedFileEntries', fileEntries);\n                    this.upload._addInput(sourceElement);\n                }\n                return fileEntries;\n            },\n            enqueueFiles: function (files) {\n                var upload = this.upload;\n                var name;\n                var i;\n                var filesLength = files.length;\n                var currentFile;\n                var fileEntry;\n                var fileEntries = [];\n                if (upload.options.async.batch === true) {\n                    name = $.map(files, function (file) {\n                        return file.name;\n                    }).join(', ');\n                    fileEntry = upload._enqueueFile(name, { fileNames: files });\n                    fileEntry.data('files', files);\n                    fileEntries.push(fileEntry);\n                } else {\n                    for (i = 0; i < filesLength; i++) {\n                        currentFile = files[i];\n                        name = currentFile.name;\n                        fileEntry = upload._enqueueFile(name, { fileNames: [currentFile] });\n                        fileEntry.data('files', [currentFile]);\n                        fileEntries.push(fileEntry);\n                    }\n                }\n                return fileEntries;\n            },\n            performUpload: function (fileEntry) {\n                var upload = this.upload, formData = this.createFormData(), xhr = this.createXHR(), e = {\n                        files: fileEntry.data('fileNames'),\n                        XMLHttpRequest: xhr\n                    };\n                if (!upload.trigger(UPLOAD, e)) {\n                    upload._fileAction(fileEntry, CANCEL);\n                    upload._hideUploadButton();\n                    upload._showHeaderUploadStatus(true);\n                    if (e.formData) {\n                        formData = e.formData;\n                    } else {\n                        e.data = $.extend({}, e.data, antiForgeryTokens());\n                        for (var key in e.data) {\n                            formData.append(key, e.data[key]);\n                        }\n                        this.populateFormData(formData, fileEntry.data('files'));\n                    }\n                    upload._fileState(fileEntry, 'uploading');\n                    $(fileEntry).removeClass('k-file-error').addClass('k-file-progress');\n                    this.postFormData(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                } else {\n                    this.removeFileEntry(fileEntry);\n                }\n            },\n            onSaveSelected: function () {\n                var module = this;\n                var upload = module.upload;\n                $('.k-file', this.element).each(function () {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data('fileNames'));\n                    if (!started && !hasValidationErrors) {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n            onCancel: function (e) {\n                var fileEntry = getFileEntry(e);\n                this.stopUploadRequest(fileEntry);\n                this.removeFileEntry(fileEntry);\n            },\n            onRetry: function (e) {\n                var fileEntry = getFileEntry(e);\n                this.performUpload(fileEntry);\n            },\n            onRemove: function (e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                if (fileEntry.hasClass('k-file-success')) {\n                    removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                } else {\n                    module.removeFileEntry(fileEntry);\n                }\n            },\n            createXHR: function () {\n                return new XMLHttpRequest();\n            },\n            postFormData: function (url, data, fileEntry, xhr) {\n                var module = this;\n                fileEntry.data('request', xhr);\n                xhr.addEventListener('load', function (e) {\n                    module.onRequestSuccess.call(module, e, fileEntry);\n                }, false);\n                xhr.addEventListener(ERROR, function (e) {\n                    module.onRequestError.call(module, e, fileEntry);\n                }, false);\n                xhr.upload.addEventListener('progress', function (e) {\n                    module.onRequestProgress.call(module, e, fileEntry);\n                }, false);\n                xhr.open('POST', url, true);\n                xhr.withCredentials = this.upload.options.async.withCredentials;\n                var accept = this.upload.options.async.accept;\n                if (accept) {\n                    xhr.setRequestHeader('Accept', accept);\n                }\n                xhr.send(data);\n            },\n            createFormData: function () {\n                return new FormData();\n            },\n            populateFormData: function (data, files) {\n                var upload = this.upload, i, length = files.length;\n                for (i = 0; i < length; i++) {\n                    data.append(upload.options.async.saveField || upload.name, files[i].rawFile);\n                }\n                return data;\n            },\n            onRequestSuccess: function (e, fileEntry) {\n                var xhr = e.target, module = this;\n                function raiseError() {\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, xhr);\n                }\n                if (xhr.status >= 200 && xhr.status <= 299) {\n                    tryParseJSON(xhr.responseText, function (jsonResult) {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                        module.cleanupFileEntry(fileEntry);\n                    }, raiseError);\n                } else {\n                    raiseError();\n                }\n            },\n            onRequestError: function (e, fileEntry) {\n                var xhr = e.target;\n                this.upload._onUploadError({ target: $(fileEntry, this.upload.wrapper) }, xhr);\n            },\n            cleanupFileEntry: function (fileEntry) {\n                var relatedInput = fileEntry.data('relatedInput'), uploadComplete = true;\n                if (relatedInput) {\n                    $.each(relatedInput.data('relatedFileEntries') || [], function () {\n                        if (this.parent().length > 0 && this[0] != fileEntry[0]) {\n                            uploadComplete = uploadComplete && this.hasClass('k-file-success');\n                        }\n                    });\n                    if (uploadComplete) {\n                        relatedInput.remove();\n                    }\n                }\n            },\n            removeFileEntry: function (fileEntry) {\n                this.cleanupFileEntry(fileEntry);\n                this.upload._removeFileEntry(fileEntry);\n            },\n            onRequestProgress: function (e, fileEntry) {\n                var percentComplete = Math.round(e.loaded * 100 / e.total);\n                this.upload._onFileProgress({ target: $(fileEntry, this.upload.wrapper) }, percentComplete);\n            },\n            stopUploadRequest: function (fileEntry) {\n                fileEntry.data('request').abort();\n            }\n        };\n        function getFileName(input) {\n            return $.map(inputFiles(input), function (file) {\n                return file.name;\n            }).join(', ');\n        }\n        function inputFiles($input) {\n            var input = $input[0];\n            if (input.files) {\n                return getAllFileInfo(input.files);\n            } else {\n                return [{\n                        name: stripPath(input.value),\n                        extension: getFileExtension(input.value),\n                        size: null\n                    }];\n            }\n        }\n        function getAllFileInfo(rawFiles) {\n            return $.map(rawFiles, function (file) {\n                return getFileInfo(file);\n            });\n        }\n        function getFileInfo(rawFile) {\n            var fileName = rawFile.name || rawFile.fileName;\n            return {\n                name: kendo.htmlEncode(fileName),\n                extension: getFileExtension(fileName),\n                size: typeof rawFile.size == 'number' ? rawFile.size : rawFile.fileSize,\n                rawFile: rawFile\n            };\n        }\n        function getFileExtension(fileName) {\n            var matches = fileName.match(rFileExtension);\n            return matches ? matches[0] : '';\n        }\n        function stripPath(name) {\n            var slashIndex = name.lastIndexOf('\\\\');\n            return slashIndex != -1 ? name.substr(slashIndex + 1) : name;\n        }\n        function assignGuidToFiles(files, unique) {\n            var uid = kendo.guid();\n            return $.map(files, function (file) {\n                file.uid = unique ? kendo.guid() : uid;\n                return file;\n            });\n        }\n        function validateFiles(files, validationInfo) {\n            var allowedExtensions = parseAllowedExtensions(validationInfo.allowedExtensions);\n            var maxFileSize = validationInfo.maxFileSize;\n            var minFileSize = validationInfo.minFileSize;\n            for (var i = 0; i < files.length; i++) {\n                validateFileExtension(files[i], allowedExtensions);\n                validateFileSize(files[i], minFileSize, maxFileSize);\n            }\n        }\n        function parseAllowedExtensions(extensions) {\n            var allowedExtensions = $.map(extensions, function (ext) {\n                var parsedExt = ext.substring(0, 1) === '.' ? ext : '.' + ext;\n                return parsedExt.toLowerCase();\n            });\n            return allowedExtensions;\n        }\n        function validateFileExtension(file, allowedExtensions) {\n            if (allowedExtensions.length > 0) {\n                if (allowedExtensions.indexOf(file.extension.toLowerCase()) < 0) {\n                    file.validationErrors = file.validationErrors || [];\n                    if ($.inArray(INVALIDFILEEXTENSION, file.validationErrors) === -1) {\n                        file.validationErrors.push(INVALIDFILEEXTENSION);\n                    }\n                }\n            }\n        }\n        function validateFileSize(file, minFileSize, maxFileSize) {\n            if (minFileSize !== 0 && file.size < minFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMINFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMINFILESIZE);\n                }\n            }\n            if (maxFileSize !== 0 && file.size > maxFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMAXFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMAXFILESIZE);\n                }\n            }\n        }\n        function getTotalFilesSizeMessage(files) {\n            var totalSize = 0;\n            if (typeof files[0].size == 'number') {\n                for (var i = 0; i < files.length; i++) {\n                    if (files[i].size) {\n                        totalSize += files[i].size;\n                    }\n                }\n            } else {\n                return '';\n            }\n            totalSize /= 1024;\n            if (totalSize < 1024) {\n                return totalSize.toFixed(2) + ' KB';\n            } else {\n                return (totalSize / 1024).toFixed(2) + ' MB';\n            }\n        }\n        function shouldRemoveFileEntry(upload) {\n            return !upload.multiple && $('.k-file', upload.wrapper).length > 1;\n        }\n        function removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest) {\n            if (!upload._supportsRemove()) {\n                if (shouldRemoveFileEntry(upload) || !shouldSendRemoveRequest) {\n                    upload._removeFileEntry(fileEntry);\n                }\n                return;\n            }\n            var files = fileEntry.data('fileNames');\n            var fileNames = $.map(files, function (file) {\n                return file.name;\n            });\n            if (shouldSendRemoveRequest === false) {\n                upload._removeFileEntry(fileEntry);\n                return;\n            }\n            upload._submitRemove(fileNames, eventArgs, function onSuccess(data, textStatus, xhr) {\n                var prevented = upload.trigger(SUCCESS, {\n                    operation: 'remove',\n                    files: files,\n                    response: data,\n                    XMLHttpRequest: xhr\n                });\n                if (!prevented) {\n                    upload._removeFileEntry(fileEntry);\n                }\n            }, function onError(xhr) {\n                if (shouldRemoveFileEntry(upload)) {\n                    upload._removeFileEntry(fileEntry);\n                }\n                upload.trigger(ERROR, {\n                    operation: 'remove',\n                    files: files,\n                    XMLHttpRequest: xhr\n                });\n                logToConsole('Server response: ' + xhr.responseText);\n            });\n        }\n        function tryParseJSON(input, onSuccess, onError) {\n            var success = false, json = '';\n            try {\n                json = $.parseJSON(normalizeJSON(input));\n                success = true;\n            } catch (e) {\n                onError();\n            }\n            if (success) {\n                onSuccess(json);\n            }\n        }\n        function normalizeJSON(input) {\n            if (typeof input === 'undefined' || input === '') {\n                input = '{}';\n            }\n            return input;\n        }\n        function stopEvent(e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        function bindDragEventWrappers(element, namespace, onDragEnter, onDragLeave) {\n            var hideInterval, lastDrag;\n            element.on('dragenter' + namespace, function (e) {\n                onDragEnter(e);\n                lastDrag = new Date();\n                if (!hideInterval) {\n                    hideInterval = setInterval(function () {\n                        var sinceLastDrag = new Date() - lastDrag;\n                        if (sinceLastDrag > 100) {\n                            onDragLeave();\n                            clearInterval(hideInterval);\n                            hideInterval = null;\n                        }\n                    }, 100);\n                }\n            }).on('dragover' + namespace, function () {\n                lastDrag = new Date();\n            });\n        }\n        function isFileUploadStarted(fileEntry) {\n            return fileEntry.is('.k-file-progress, .k-file-success, .k-file-error');\n        }\n        function getFileEntry(e) {\n            return $(e.target).closest('.k-file');\n        }\n        kendo.ui.plugin(Upload);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}