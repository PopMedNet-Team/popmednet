{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","$","normalizeText","text","String","replace","REPLACE_REGEX","SPACE","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","styleKey","cacheKey","cachedResult","baselineMarker","textStr","box","_baselineMarker","cloneNode","textContent","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","countNumbers","values","num","count","isNumber","getField","field","row","getter","evalOptions","context","state","dryRun","defaults","depth","needsEval","property","propValue","excluded","MAX_EXPAND_DEPTH","inArray","hasOwnProperty","isFunction","valueOrDefault","isObject","categoriesCount","series","seriesCount","categories","Math","max","data","toGeometryPoint","lintPoint","stepAxis","stepDir","axis","dir","result","GeometryPoint","anyHasZIndex","elements","idx","defined","zIndex","hasGradientOverlay","overlay","gradient","forEach","callback","forEachReverse","areNumbers","hasValue","wrapData","seriesItem","isArray","paneID","ID","segmentVisible","fields","index","pointVisibility","visible","bindSegments","pointData","points","sum","SeriesBinder","bindPoint","valueFields","isString","parseFloat","abs","total","equalsIgnoreCase","a","b","toLowerCase","filterSeriesByType","types","currentSeries","seriesTypes","concat","type","getDateField","intlService","parseDate","isDateAxis","axisOptions","sampleCategory","dateCategory","Date","DATE","singleItemOrArray","array","axisGroupBox","axes","axisBox","contentBox","wrap","clone","Box","paneAnchor","pane","anchor","isTransparent","color","setValue","fieldName","target","parentObj","indexOf","split","shift","appendIfNotNull","element","updateAxisOptions","targetOptions","axesOptions","CategoryAxis","categoryAxis","valueAxis","axisIndex","groupSeries","axisIx","grep","s","preventDefault","_defaultPrevented","acceptKey","e","mouseKey","event","accept","ctrlKey","shiftKey","altKey","toChartAxisRanges","axisRanges","axisRange","ranges","name","min","range","createDiv","className","closestHandle","hasClasses","stopPropagation","updateAxisOptions$1","vertical","yAxis","xAxis","tooltipAlignment","angle","horizontal","radians","dataviz","rad","sine","round","sin","DEFAULT_PRECISION","cosine","cos","RAD_60","CENTER","RIGHT","LEFT","RAD_30","BOTTOM","TOP","intersection","b1","b2","ua","uat","x","y","ub","Point","xComparer","resolveAxisAliases","alias","aliases","AXIS_NAMES","pointByCategoryName","category","applyAxisDefaults","themeOptions","mapAxisOptions","axisColor","axisDefaults","themeAxisDefaults","axisName","line","labels","title","applySeriesDefaults","seriesType","baseOptions","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","tooltip","_defaults","bar","column","rangeColumn","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","last","transpose","rows","rowIx","colCount","colIx","rowCount","clearMissingValues","originalOptions","fieldValue","originalValue","nullValue","datavizConstants","MAX_VALUE","MIN_VALUE","VALUE","WHITE","CIRCLE","X","Y","BLACK","ARC","ChartElement","alignPathToPixel","setDefaultOptions","eventElement","getTemplate","TextBox","ShapeElement","getSpacing","CurveProcessor","append","styleValue","BoxElement","DateCategoryAxis","elementStyles","bindEvents","services","unbindEvents","limitValue","support","drawing","Path","Animation","AnimationFactory","Group","Color","geometry","transform","ChartAxis","ChartPane","ChartPlotArea","Aggregates","STD_ERR","STD_DEV","percentRegex","standardDeviationRegex","ErrorRangeCalculator","browser","INITIAL_ANIMATION_DURATION","FADEIN","GLASS","BORDER_BRIGHTNESS","TOOLTIP_OFFSET","START_SCALE","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","LINE_MARKER_SIZE","ZERO","INTERPOLATE","GAP","ABOVE","BELOW","SMOOTH","STEP","AREA","BAR","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","COLUMN","DONUT","FUNNEL","HORIZONTAL_WATERFALL","LINE","OHLC","PIE","POLAR_AREA","POLAR_LINE","POLAR_SCATTER","RADAR_AREA","RADAR_COLUMN","RADAR_LINE","RANGE_AREA","RANGE_BAR","RANGE_COLUMN","SCATTER","SCATTER_LINE","VERTICAL_AREA","VERTICAL_BOX_PLOT","VERTICAL_BULLET","VERTICAL_LINE","VERTICAL_RANGE_AREA","WATERFALL","EQUALLY_SPACED_SERIES","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","SERIES_CLICK","SERIES_HOVER","PLOT_AREA_CLICK","PLOT_AREA_HOVER","DRAG","DRAG_END","DRAG_START","ZOOM_START","ZOOM","ZOOM_END","SELECT_START","SELECT","SELECT_END","RENDER","SHOW_TOOLTIP","HIDE_TOOLTIP","LOGARITHMIC","CATEGORY","INSIDE_END","INSIDE_BASE","OUTSIDE_END","MOUSEWHEEL","MOUSEWHEEL_DELAY","constants","DEFAULT_ERROR_BAR_WIDTH","ErrorBarBase","CategoricalErrorBar","CategoricalChart","PointEventsMixin","NoteMixin","LinePoint","LineSegment","StepLineMixin","StepLineSegment","SplineSegment","LineChartMixin","ClipAnimation","ClipAnimationMixin","LineChart","AreaSegment","StepAreaSegment","SplineAreaSegment","AreaChart","AxisGroupRangeTracker","BarLabel","BAR_ALIGN_MIN_WIDTH","Bar","ClusterLayout","StackWrap","BarChart","Candlestick","CandlestickChart","BoxPlot","VerticalBoxPlot","BoxPlotChart","ScatterErrorBar","ScatterChart","Bubble","BubbleChart","Target","Bullet","BulletChart","BaseTooltip","CrosshairTooltip","Crosshair","ChartContainer","Pane","PlotAreaBase","PlotAreaEventsMixin","SeriesAggregator","DefaultAggregates","RangeBar","RangeBarChart","RangeLinePoint","AUTO","DEFAULT_FROM_FORMAT","DEFAULT_TO_FORMAT","RangeAreaPoint","RangeAreaSegment","SplineRangeAreaSegment","StepRangeAreaSegment","RangeAreaChart","OHLCPoint","OHLCChart","WaterfallSegment","WaterfallChart","AREA_SERIES","OUT_OF_RANGE_SERIES","CategoricalPlotArea","Highlight","Pannable","ZoomSelection","MousewheelZoom","LegendLayout","LegendItem","HORIZONTAL","POINTER","CUSTOM","Legend","PlotAreaFactory","ZOOM_ACCELERATION","SELECTOR_HEIGHT_ADJUST","Selection","Tooltip","SharedTooltip","BarChartAnimation","BubbleAnimation","FadeInAnimation","PieAnimation","ScatterLineChart","XYPlotArea","PieSegment","PieChartMixin","PIE_SECTOR_ANIM_DELAY","PieChart","PiePlotArea","DonutSegment","DONUT_SECTOR_ANIM_DELAY","DonutChart","DonutPlotArea","DEFAULT_PADDING","PolarPlotAreaBase","PolarScatterChart","PolarLineChart","SplinePolarAreaSegment","PolarAreaSegment","PolarAreaChart","PolarPlotArea","RadarLineChart","SplineRadarAreaSegment","RadarAreaSegment","RadarAreaChart","RadarSegment","RadarClusterLayout","RadarStackLayout","RadarBarChart","RadarPlotArea","FunnelSegment","FunnelChart","FunnelPlotArea","COLOR","FIRST","FROM","MAX","MIN","NOTE_TEXT","SUMMARY_FIELD","TO","MOUSEMOVE","CONTEXTMENU","MOUSEMOVE_DELAY","Chart","_axis","point","getCategory","getValue","slot","from","to","limit","valueRange","visual","chartsVisual","chartContainer","plotArea","_plotArea","backgroundVisual","_bgVisual","sumOrNull","avg","first","_valueFields","_otherFields","_nullValue","_undefinedValue","register","otherFields","this$1","_makeValue","undefined","canonicalFields","pointIx","item","fieldData","srcValueFields","srcPointFields","Array","slice","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","RegExp","errorValue","initGlobalRanges","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","low","high","globalRange","getStandardError","binder","OBJECT","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","squareDifferenceSum","pow","msie","isVertical","chart","fn","call","reflow","targetBox","linePoints","endCaps","getAxis","valueBox","getSlot","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","y1","y2","x1","x2","boxSize","floor","createVisual","rect","toRect","sender","getSender","createDefaultVisual","defaultVisual","ref","lineOptions","stroke","dashType","moveTo","lineTo","animation","delay","seriesValueAxis","chartService","seriesCategoryAxis","valueAxisRanges","categoryPoints","seriesPoints","seriesOptions","_evalSeries","render","traverseDataPoints","addValue","bind","pointOptions","seriesIx","pointType","prototype","invertAxes","plotValue","categoryIx","otherValues","categorySum","other","stack","otherStack","isStacked100","group","plotRange","startValue","positive","prevValue","isStackedBar","otherValue","axisCrossingValue","isStacked","STRING","categoryAxisCrossingValue","stackLimits","stackName","pIx","isFinite","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","sparseArrayLimits","addErrorBar","errorBars","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","errorBar","updateRange","createPoint","owner","noteText","dataItem","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","valueSlot","pointSlot","categorySlot","aboveAxis","stackValue","percentage","reflowPoint","reflowCategories","clip","limitPoints","limitPoint","limittedSlot","limitSlot","equals","reverse","crossingValues","axisCrossingValues","slotX","slotY","seriesIx$1","currentCategory","seriesIx$2","_outOfRangeCallback","_bindPoint","outOfRangePoint","bindCache","_bindCache","formatPointValue","format","auto","click","trigger","eventArgs","hover","runningTotal","originalEvent","createNote","notes","label","note","Note","tooltipTracking","labelTemplate","labelText","markers","_rendered","createMarker","formatValue","align","vAlign","margin","left","right","markerBorder","background","border","brightness","toHex","rotation","opacity","markerBox","_childBox","childBox","noteTargetBox","reflowLabel","position","alignTo","createHighlight","highlight","defaultColor","shadow","getElement","highlightVisual","highlightVisualArgs","halfSize","paddingBox","Rect","tooltipAnchor","horizontalAlign","verticalAlign","clipBox","showTooltip","overlaps","overlapsBox","unclipElements","noclip","padding","HIGHLIGHT_ZINDEX","toGeometryPoints","fromPoints","closed","close","aliasFor","coords","parent","getNearestPoint","calculateStepPoints","stepPoint","justified","previousPoint","curveProcessor","segments","curve","process","apply","renderSegments","lastSegment","sortedPoints","pointCount","_segments","sortPoints","seriesMissingValues","createSegment","_addSegment","children","unshift","segment","missingValues","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","setup","_setEnd","step","pos","interpolateValue","topRight","bottomRight","suspend","setX","resume","duration","createAnimation","clipPath","root","getRoot","transitions","fromRect","_setChildrenAnimation","animationPoints","prevSegment","stackPoints","createFill","fill","createStroke","lineCap","strokeSegments","_strokeSegments","createStrokeSegments","segmentsFromPoints","stackSegments","createStackSegments","Segment","hasStackSegment","fillSegments","hasStackSegments","fillToAxes","fillPath","crossingValue","endSlot","firstPoint","lastPoint","end","controlOut","controlIn","previousSegment","_gapStackPoints","stackPoint","_stackPoints","endIdx","pointOffset","currentSeriesIx","gapStackPoint","startIdx","_outOfRangeMinPoint","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","update","chartAxisRanges","chartRange","reset","query","content","textBox","textOptions","labelBox","top","bottom","alignToClipBox","start","parentBox","createLabel","customVisual","rectVisual","createRect","path","strokeOpacity","getBorderColor","lineJoin","createGradientOverlay","baseColor","_brightness","borderColor","rtl","gap","spacing","slots","slotSize","child","currentChild","positionAxis","childrenCount","snapTo","clusterType","stackType","cluster","stackWrap","labelOptions","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","zeroSlot","stackAxis","childrenLength","_setAnimationOptions","pointVisual","origin","mid","ocSlot","open","lhSlot","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","container","set","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","whiskerSlot","boxSlot","medianSlot","meanSlot","q1","q3","reflowBoxSlot","lower","upper","reflowWhiskerSlot","median","mean","meanPoints","calcMeanPoints","whiskerPoints","calcWhiskerPoints","medianPoints","calcMedianPoints","renderOutliers","outlierValue","markersBorder","shape","outliers","outerFence","extremes","reflowOutliers","move","whiskers","CROSS","filterOutliers","items","seriesAxes","_initFields","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","intl","xAxisName","yAxisName","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","ref$1","radius","highlightGroup","Circle","createGradient","stops","offset","_maxSize","negativeValues","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","PI","targetValueSlot","targetSlotX","targetSlotY","targetSlot","bodyVisual","create","bulletOptions","isNaN","getStyle","pointColor","backgroundColor","font","borderWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","show","tooltipOptions","percBrightness","notify","hide","destroy","crosshair","formatService","initAxisName","showAt","stickyMode","formattedValue","dateFormats","baseUnit","getAnchor","ref_options","lineBox","bbox","bottomLeft","translate","topLeft","moveLine","lineEnd","getBox","dim","lineStart","pointCategoryIndex","axisLineBox","currentAxis","shouldClip","_clipBox","chartsBox","clipRect","unclipLabels","stackRoot","j","charts","isStackRoot","id","createTitle","titleOptions","Title","buildTitle","appendAxis","appendChart","empty","i$1","removeAxis","removeChart","pop","visualStyle","renderComplete","createGridLines","clipRoot","gridLines","altAxis","allAxes","vGridLines","hGridLines","refresh","clear","renderVisual","axisValueField","length$1","idx$1","axis$1","lineBox$1","shrinkToFit","initFields","initSeries","legend","crosshairs","createPanes","createCrosshairs","setTitle","currentPane","panes","paneOptions","panesLength","paneIndex","currentCrosshair","removeCrosshairs","splice","hideCrosshairs","findPane","matchingPane","findPointPane","containsPoint","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","itemLabelOptions","markerColor","inactiveItems","inactiveItemsLabels","visibleInLegend","active","groupAxes","paneIx","paneAxes","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","reflowAxes","reflowCharts","redraw","panesArray","crossingAxes","valuesToAdd","defaultValue","alignAxisTo","targetAxis","targetCrossingValue","slotEdge","targetEdge","alignAxes","paneId","anchorCrossings","pane$1","paneId$1","visible$1","anchor$1","anchorCrossings$1","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","COORD_PRECISION","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","shrinked","overflowY","fitAxes","paneBox","offsetY","currentAxis$1","offsetX","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","currentPane$1","i$2","currentPane$2","remainingHeight","remainingPanes","autoHeightPanes","parseInt","backgroundBox","axisA","axisB","axesCount","chartsBoxes","boxes","addBackgroundPaths","multipath","paths","backgroundContainsPoint","bg","MultiPath","appendVisual","pointsByCategoryIndex","categoryIndex","pointsBySeriesIndex","seriesIndex","filterPoints","pointsBySeriesName","findPoint","paneByPoint","_dispatchEvent","defaultAggregates","fieldAggregate","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","aggregatePoints","srcPoints","srcValues","_bindPoints","firstDataItem","dataItems","_bindField","aggregates","fromOptions","toOptions","labelFrom","_createLabel","labelTo","plotLimits","initLabelsFormat","fromPoint","toPoint","copyFields","fromBox","toBox","positionLabels","fromLabelPosition","toLabelPosition","toPoints","fromSegments","toPath","fromPath","createCurveSegments","segmentType","fromSlot","toSlot","oPoints","cPoints","lhPoints","oSlot","cSlot","createSegments","summary","totalCategories","prevPoint","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","paneSeries","visibleSeries","groups","groupIx","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createRangeAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","dateAxis","srcSeries","processedSeries","categoryField","aggregateSeries","filterSeries","minCategory","srcCategories","totalRangeIndices","outOfRangePoints","ceil","_outOfRangeMaxPoint","_seriesMax","aggregatorSeries","srcData","outOfRangeMinIdx","outOfRangeMaxIdx","getFn","outOfRangeMinCategory","outOfRangeMaxCategory","aggregator","categoriesToAdd","defaultPaneName","paneName","stackableChartOptions","firstSeries","axisSeries","categoryAxes","unique","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","rangeAreaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","definitions","isJustified","defaultAxisRange","axisType","tracker","defaultRange","roundToMajorUnit","LogarithmicAxis","NumericAxis","eventType","_eventCoordinates","pointPane","_points","arrayPoints","toggleHighlight","hasHighlight","togglePointHighlight","toggleHandler","toggle","isHighlighted","_active","_panAxes","pan","delta","lock","updatedAxes","limitRange","marqueeColor","marquee","_marquee","removeElement","setStyles","styles","zoomPane","_zoomPane","_elementOffset","_zoomPaneClipBox","pageX","pageY","chartElement","elementOffset","_selectionPosition","elementOffset$$1","selectionPosition","_updateAxisRanges","zoom","pointsRange","startLocation","location","updateRanges","zoomRange","legendItem","Layout","lineSpacing","orientation","clippedBBox","rectToBox","addVisual","createContainer","FloatElement","markerOptions","cursor","eventSink","_itemOverlay","widget","args","_legendItemHover","pointIndex","leave","_unsetActivePoint","renderChildren","createItems","userAlign","getService","innerElement","hasItems","legendBox","containerCustomReflow","containerReflow","alignTarget","containerBox","_registry","registry","match","observer","_dateAxis","initOptions","createElements","_index","selection","leftHandle","rightHandle","selectionStyles","leftHandleHeight","rightHandleHeight","wrapper","direction","leftMask","rightMask","borderLeftWidth","borderRightWidth","_mousewheelHandler","mousewheel","_mousewheel","obj","_domEvents","DomEventsBuilder","_start","_move","_end","tap","_tap","press","_press","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","clearTimeout","_mwTimeout","_state","_rangeEventArgs","_value","moveTarget","handle","addClass","oldRange","span","scale","removeClass","rightClick","which","mousewheelDelta","expand","setTimeout","p0","_toModelCoordinates","touches","p1","_slot","rightMaskWidth","distance","edge","leftMaskWidth","fromValue","toValue","zDir","_current","tooltipPoints","_slotAnchor","_defaultAnchor","shared","categoryText","categoryFormat","centerPoint","slotCenter","fromScale","abort","scaleX","scaleY","easing","fadeTo","missingValue","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","DateValueAxis","axisPane$1","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","sector","brightnessValue","themeLabels","theme","animationDelay","labelHeight","labelWidth","lp","labelsOptions","labelsDistance","middle","startAngle","innerRadius","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","ShapeBuilder","createRing","midAndle","midPoint","DEFAULT_FONT","createLegendItem","pointVisible","legendOptions","legendItems","colorsCount","anglePerValue","constantAngle","currentAngle","explode","seriesColors","Ring","evalSegmentOptions","segmentOptions","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","boxCenter","leftSideLabels","rightSideLabels","seriesConfig","seriesConfigs","setRadius","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","lr","firstBox","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelsCount","labelDistance","boxY","hAlignLabel","connectorsColor","connectorLine","sr","crossing","connectors","_connectorLines","pointInCircle","reverseValue","second","originalX","sector_center","cx","cy","t","createPieChart","pieChart","totalSize","seriesWithoutSize","holeSize","currentSize","currentSeries$1","createDonutChart","donutChart","createPolarAxis","createValueAxis","polarAxis","axisDefaultRange","valueAxisOptions","RadarLogarithmicAxis","RadarNumericAxis","valueAxisBox","heightDiff","valueRadius","onCircle","_polarAxisCenter","centerSegment","_hasMissingValuesGap","PolarAxis","majorGridLines","minorGridLines","scatterChart","xValue","yValue","slotAngle","slotSector","childSector","RadarCategoryAxis","_hasBarCharts","_isStacked100","chartOptions","chartBox","createPath","labelPadding","dynamicSlopeReflow","totalHeight","lastUpperSide","previousOffset","previousHeight","nextSegment","nextPercentage","firstSegment","maxSegment","dynamicHeight","segmentSpacing","constantSlopeReflow","decreasingWidth","neckRatio","topMostWidth","finalNarrow","dynamicSlope","createFunnelChart","funnelChart","errorLow","errorHigh","userOptions","observers","addObserver","ChartService","_initElement","_originalOptions","_theme","_initTheme","_initSurface","_initHandlers","bindCategories","FontLoader","preloadFonts","_destroyed","_redraw","_attachEvents","_setElementClass","firstChild","seriesCopies","applyDefaults","applySeriesColors","getSize","resize","force","_resize","_noTransitionsRedraw","_model","findAxisByName","findPaneByName","findPaneByIndex","filter","seriesName","categoryName","togglePointsHighlight","_highlight","_sharedTooltip","_tooltip","hideTooltip","surface","_surfaceWrap","chartArea","elementSize","renderAs","Surface","model","_getModel","_destroyView","traverse","draw","play","_createTooltip","_setupSelection","_createPannable","_createZoomSelection","_createMousewheelZoom","_navState","_cancelDomEvents","exportVisual","exportOptions","currentOptions","pannable","_pannable","zoomable","_zoomSelection","_toggleDomDrag","domEvents","toggleDrag","requiresHandlers","_mousewheelZoom","_toggleDomZoom","toggleZoom","_createSharedTooltip","seriesColor","colors","_createPlotArea","RootElement","_modelOptions","DEFAULT_WIDTH","DEFAULT_HEIGHT","skipSeries","_hasSelection","_selections","selections","select","addDuration","weekStartDay","_selectStart","_select","_selectEnd","_clickHandler","_click","_surfaceMouseenterHandler","_mouseover","_surfaceMouseleaveHandler","_mouseout","_mousemove","throttle","removeObserver","eventNames","isDefaultPrevented","_toDocumentCoordinates","obj$1","_shouldAttachMouseMove","cancel","_stopDragEvent","_gestureDistance","suspendTracking","_zooming","resumeTracking","previousGestureDistance","scaleDelta","mousewheelZoom","_drawingChartElement","_startNavigation","_suppressHover","ranges$1","translateRange","_endNavigation","prevented","totalDelta","scaleRange","chartEvent","_getChartElement","eventTarget","closest","coordinates","eventCoordinates","_elementPadding","_padding","clientX","clientY","drawingElement","_activePoint","_propagateClick","_startHover","handlingTap","_mouseMoveTrackHandler","_mouseMoveTracking","seriesPoint","_trackCrosshairs","_trackSharedTooltip","pointArgs","hoverArgs","_tooltipCategoryIx","hideElements","_deferRedraw","_clearRedrawTimeout","_redrawTimeout","clearInterval","autoBind","bindCategoryAxisFromSeries","onAxis","dataLength","dataIx","dataRow","uniqueCategories","_isBindable","transitionsState","updateMouseMoveHandler","applyOptions","setOptions","createProxyMember","instance","_instance","arguments","nameTemplate","seriesClone","legacyTemplate","groupNameTemplate","logToConsole","template","_slotCount","_groupIx","_groupValue","normalizeStyle","ChartInstanceObserver","proxyMembers","SeriesVisibilityState","geom","ChartSeries","NS","outerWidth","_outerWidth","outerHeight","_outerHeight","KendoChart","Widget","ui","DataSource","InstanceObserver","proxy","MOUSELEAVE_NS","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","CHANGE","DATABOUND","LEAVE","Observable","TOOLTIP_ANIMATION_DURATION","TOOLTIP_SHOW_DELAY","TOOLTIP_INVERSE","SHARED_TOOLTIP_CLASS","RTL","events","UserEvents","global","multiTouch","fastTap","handlerMap","legendItemClick","dataSource","_seriesVisibility","_initDataSource","_bindSeries","_bindCategories","dimensions","_setEvents","_getThemeOptions","_sourceSeries","setDataSource","_hasDataSource","_onDataChanged","unbind","_dataChangeHandler","_hasData","fetch","off","_destroyCrosshairTooltips","findSeries","findSeriesByName","_createSeries","findSeriesByIndex","_seriesOptions","on","_mouseleave","relatedTarget","themes","themeName","autoTheme","_initChart","_createChart","_isRtl","_onInit","_initTooltip","tooltips","_crosshairTooltips","_getCrosshairTooltip","_showTooltip","_hideTooltip","_onRender","_copyMembers","names","_events","_tooltipleave","_onLegendItemClick","_legendItemClick","save","_bindData","groupedSeries","view","grouped","seriesVisibility","applyByGroup","applyByIndex","seriesData","categoriesData","_bindCategoryAxis","isRtl","css","ExportMixin","PDFMixin","plugin","action","mobileScrollerSelector","useWithBlock","paramName","attr","_mobileScroller","_clearShowTimeout","remove","sharedTemplate","_offset","_ensureElement","stop","animate","showTimeout","_measure","zoomLevel","viewport","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","movable","_fit","toggleClass","_sharedContent","_pointContent","html","_hideElement","nameColumn","colorMarker","colspan","appendTo","contains","fadeOut","always","tooltipTemplate","xLow","xHigh","yLow","yHigh","viewPortSize","output","_chart","_pane","_options","_filterPoints","_clearFields","toggleVisibility","hasFilter","_filterData"],"mappings":"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ACNC,GAAM,MACNC,GAAY,WACZC,GAAgB,UAChBC,GAAK,KACThD,GAAgBrf,QAAQikB,SAASvF,IAC7BxH,GACAK,GACAI,GACAiB,GACA3B,GACAwB,GACAnB,GACAM,GACAP,GACAsB,GACAxB,GACAuB,GACAJ,GACAD,GACAS,GACApB,GACAU,GACAS,KAEJwG,GAAgBrf,QAAQikB,SAASjE,IAC7BzH,GACAC,GACApB,KAEJiI,GAAgBrf,QAAQikB,SAAS5D,IAAcxI,KAC/CwH,GAAgBrf,QAAQikB,SAASxD,IAAgBjJ,KACjD6H,GAAgBrf,QAAQikB,SAASpC,IAAiBpK,KAClD4H,GAAgBrf,QAAQikB,SAAShD,IAC7BnJ,GACAC,GACAC,KAEJqH,GAAgBrf,QAAQikB,SAASvC,IAC7BzJ,GACAC,GACAC,KAEJ1Q,GAAazH,QAAQikB,UACjB/M,GACAK,GACAI,GACAiB,GACA3B,GACAwB,KACAxF,KACAkH,GACA2H,GACAK,GACAhM,GACAC,KAEJ3O,GAAazH,QAAQikB,UACjB3L,GACAD,GACAD,GACAS,KAEAmJ,GACAK,KAEAlI,GACA2H,GACAK,KAEJ1a,GAAazH,QAAQikB,UACjBnL,GACApB,KACAzE,KACAkH,GACA2H,GACAK,GACAC,KAEJ3a,GAAazH,QAAQikB,UACjBnM,GACAC,GACAC,KAEA5E,GACAC,KACAyO,KACJra,GAAazH,QAAQikB,UACjBhM,GACAC,GACAC,KACAlF,KAAS6O,KACbra,GAAazH,QAAQikB,UAAUxM,KAAUxE,KACrCkH,GACA2H,GACA,kBACA,YAEJtE,GAAkBxd,QAAQikB,UACtB/M,GACAK,GACAI,GACAiB,GACA3B,GACAwB,GACAK,GACApB,KAEAzW,MAAOghB,GACPjY,MAAO+X,GACPoL,SAAUpL,GACV+oC,SAAU5oC,GACV6oC,UAAW9oC,KAEfzE,GAAkBxd,QAAQikB,UACtB3L,GACAD,GACAD,GACAS,KAEAkK,KAAMb,GACNc,GAAIf,GACJjY,MAAO+X,GACPoL,SAAUpL,KAEdvE,GAAkBxd,QAAQikB,UACtBhM,GACAC,GACAC,KAEAlX,MA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","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var REPLACE_REGEX = /\\r?\\n|\\r|\\t/g;\n        var SPACE = ' ';\n        function normalizeText(text) {\n            return String(text).replace(REPLACE_REGEX, SPACE);\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: pre!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, options) {\n                if (options === void 0) {\n                    options = {};\n                }\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = options.box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n                measureBox.textContent = textStr;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (textStr.length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey,\n            normalizeText: normalizeText\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/kendo-chart', [\n        'kendo.core',\n        'kendo.color',\n        'kendo.drawing',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var dataviz = kendo.dataviz;\n        var Class = dataviz.Class;\n        var isNumber = dataviz.isNumber;\n        var datavizConstants = dataviz.constants;\n        var MAX_VALUE = datavizConstants.MAX_VALUE;\n        var MIN_VALUE = datavizConstants.MIN_VALUE;\n        var VALUE = datavizConstants.VALUE;\n        var CENTER = datavizConstants.CENTER;\n        var TOP = datavizConstants.TOP;\n        var BOTTOM = datavizConstants.BOTTOM;\n        var LEFT = datavizConstants.LEFT;\n        var WHITE = datavizConstants.WHITE;\n        var CIRCLE = datavizConstants.CIRCLE;\n        var X = datavizConstants.X;\n        var Y = datavizConstants.Y;\n        var RIGHT = datavizConstants.RIGHT;\n        var BLACK = datavizConstants.BLACK;\n        var DATE = datavizConstants.DATE;\n        var DEFAULT_PRECISION = datavizConstants.DEFAULT_PRECISION;\n        var ARC = datavizConstants.ARC;\n        var defined = dataviz.defined;\n        var getter = dataviz.getter;\n        var isArray = dataviz.isArray;\n        var ChartElement = dataviz.ChartElement;\n        var Point = dataviz.Point;\n        var Box = dataviz.Box;\n        var alignPathToPixel = dataviz.alignPathToPixel;\n        var setDefaultOptions = dataviz.setDefaultOptions;\n        var inArray = dataviz.inArray;\n        var isFunction = dataviz.isFunction;\n        var valueOrDefault = dataviz.valueOrDefault;\n        var isObject = dataviz.isObject;\n        var deepExtend = dataviz.deepExtend;\n        var last = dataviz.last;\n        var eventElement = dataviz.eventElement;\n        var getTemplate = dataviz.getTemplate;\n        var TextBox = dataviz.TextBox;\n        var ShapeElement = dataviz.ShapeElement;\n        var getSpacing = dataviz.getSpacing;\n        var CurveProcessor = dataviz.CurveProcessor;\n        var append = dataviz.append;\n        var isString = dataviz.isString;\n        var parseDate = dataviz.parseDate;\n        var styleValue = dataviz.styleValue;\n        var CategoryAxis = dataviz.CategoryAxis;\n        var BoxElement = dataviz.BoxElement;\n        var round = dataviz.round;\n        var grep = dataviz.grep;\n        var DateCategoryAxis = dataviz.DateCategoryAxis;\n        var elementStyles = dataviz.elementStyles;\n        var hasClasses = dataviz.hasClasses;\n        var bindEvents = dataviz.bindEvents;\n        var services = dataviz.services;\n        var unbindEvents = dataviz.unbindEvents;\n        var limitValue = dataviz.limitValue;\n        var support = kendo.support;\n        var drawing = kendo.drawing;\n        var Path = drawing.Path;\n        var Animation = drawing.Animation;\n        var AnimationFactory = drawing.AnimationFactory;\n        var Group = drawing.Group;\n        var Color = kendo.Color;\n        var geometry = kendo.geometry;\n        var GeometryPoint = geometry.Point;\n        var transform = geometry.transform;\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n                this.options = axis.options;\n            },\n            value: function (point) {\n                var axis = this._axis;\n                var value = axis.getCategory ? axis.getCategory(point) : axis.getValue(point);\n                return value;\n            },\n            slot: function (from, to, limit) {\n                if (limit === void 0) {\n                    limit = true;\n                }\n                return this._axis.slot(from, to, limit);\n            },\n            range: function () {\n                return this._axis.range();\n            },\n            valueRange: function () {\n                return this._axis.valueRange();\n            }\n        });\n        var ChartPane = kendo.Class.extend({\n            init: function (pane) {\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n            }\n        });\n        var ChartPlotArea = Class.extend({\n            init: function (plotArea) {\n                this._plotArea = plotArea;\n                this.visual = plotArea.visual;\n                this.backgroundVisual = plotArea._bgVisual;\n            }\n        });\n        function countNumbers(values) {\n            var length = values.length;\n            var count = 0;\n            for (var i = 0; i < length; i++) {\n                var num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        var Aggregates = {\n            min: function (values) {\n                var length = values.length;\n                var min = MAX_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        min = Math.min(min, value);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var length = values.length;\n                var max = MIN_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        max = Math.max(max, value);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length;\n                var sum = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        sum += value;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length;\n                var count = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var count = countNumbers(values);\n                var result = values[0];\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        return value;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var this$1 = this;\n                if (valueFields === void 0) {\n                    valueFields = [VALUE];\n                }\n                if (otherFields === void 0) {\n                    otherFields = {};\n                }\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    var type = seriesTypes[i];\n                    this$1._valueFields[type] = valueFields;\n                    this$1._otherFields[type] = otherFields;\n                    this$1._nullValue[type] = this$1._makeValue(valueFields, null);\n                    this$1._undefinedValue[type] = this$1._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var data = series.data;\n                var pointData = defined(item) ? item : data[pointIx];\n                var result = { valueFields: { value: pointData } };\n                var valueFields = this.valueFields(series);\n                var otherFields = this._otherFields[series.type];\n                var fields, value;\n                if (pointData === null) {\n                    value = this._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = this._undefinedValue[series.type];\n                } else if (Array.isArray(pointData)) {\n                    var fieldData = pointData.slice(valueFields.length);\n                    value = this._bindFromArray(pointData, valueFields);\n                    fields = this._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === 'object') {\n                    var srcValueFields = this.sourceFields(series, valueFields);\n                    var srcPointFields = this.sourceFields(series, otherFields);\n                    value = this._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {};\n                var length = fields.length;\n                for (var i = 0; i < length; i++) {\n                    var fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {};\n                if (fields) {\n                    var length = Math.min(fields.length, array.length);\n                    for (var i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                if (srcFields === void 0) {\n                    srcFields = fields;\n                }\n                var value = {};\n                if (fields) {\n                    var length = fields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = fields[i];\n                        var srcFieldName = srcFields[i];\n                        value[fieldName] = getField(srcFieldName, object);\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var sourceFields = [];\n                if (canonicalFields) {\n                    var length = canonicalFields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = canonicalFields[i];\n                        var sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] || fieldName);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var STD_ERR = 'stderr';\n        var STD_DEV = 'stddev';\n        var percentRegex = /percent(?:\\w*)\\((\\d+)\\)/;\n        var standardDeviationRegex = new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$');\n        var ErrorRangeCalculator = Class.extend({\n            init: function (errorValue, series, field) {\n                this.initGlobalRanges(errorValue, series, field);\n            },\n            initGlobalRanges: function (errorValue, series, field) {\n                var data = series.data;\n                var deviationMatch = standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var average = this.getAverage(data);\n                    var deviation = this.getStandardDeviation(data, average, false);\n                    var multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1;\n                    var errorRange = {\n                        low: average.value - deviation * multiple,\n                        high: average.value + deviation * multiple\n                    };\n                    this.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var standardError = this.getStandardError(data, this.getAverage(data));\n                    this.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data;\n                var binder = SeriesBinder.current;\n                var valueFields = binder.valueFields(series);\n                var item = defined(data[0]) ? data[0] : {};\n                var valueGetter;\n                if (isArray(item)) {\n                    var index = field ? valueFields.indexOf(field) : 0;\n                    valueGetter = getter('[' + index + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === datavizConstants.OBJECT) {\n                    var srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[valueFields.indexOf(field)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var low, high, value;\n                if (!defined(errorValue)) {\n                    return null;\n                }\n                if (this.globalRange) {\n                    return this.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - Math.abs(percentValue);\n                    high = pointValue + Math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / Math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var this$1 = this;\n                var length = data.length;\n                var total = isSample ? average.count - 1 : average.count;\n                var squareDifferenceSum = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += Math.pow(value - average.value, 2);\n                    }\n                }\n                return Math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var this$1 = this;\n                var length = data.length;\n                var sum = 0;\n                var count = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        });\n        var browser = support.browser || {};\n        var INITIAL_ANIMATION_DURATION = 600;\n        var FADEIN = 'fadeIn';\n        var GLASS = 'glass';\n        var BORDER_BRIGHTNESS = 0.8;\n        var TOOLTIP_OFFSET = 5;\n        var START_SCALE = browser.msie ? 0.001 : 0;\n        var ERROR_LOW_FIELD = 'errorLow';\n        var ERROR_HIGH_FIELD = 'errorHigh';\n        var X_ERROR_LOW_FIELD = 'xErrorLow';\n        var X_ERROR_HIGH_FIELD = 'xErrorHigh';\n        var Y_ERROR_LOW_FIELD = 'yErrorLow';\n        var Y_ERROR_HIGH_FIELD = 'yErrorHigh';\n        var LINE_MARKER_SIZE = 8;\n        var ZERO = 'zero';\n        var INTERPOLATE = 'interpolate';\n        var GAP = 'gap';\n        var ABOVE = 'above';\n        var BELOW = 'below';\n        var SMOOTH = 'smooth';\n        var STEP = 'step';\n        var AREA = 'area';\n        var BAR = 'bar';\n        var BOX_PLOT = 'boxPlot';\n        var BUBBLE = 'bubble';\n        var BULLET = 'bullet';\n        var CANDLESTICK = 'candlestick';\n        var COLUMN = 'column';\n        var DONUT = 'donut';\n        var FUNNEL = 'funnel';\n        var HORIZONTAL_WATERFALL = 'horizontalWaterfall';\n        var LINE = 'line';\n        var OHLC = 'ohlc';\n        var PIE = 'pie';\n        var POLAR_AREA = 'polarArea';\n        var POLAR_LINE = 'polarLine';\n        var POLAR_SCATTER = 'polarScatter';\n        var RADAR_AREA = 'radarArea';\n        var RADAR_COLUMN = 'radarColumn';\n        var RADAR_LINE = 'radarLine';\n        var RANGE_AREA = 'rangeArea';\n        var RANGE_BAR = 'rangeBar';\n        var RANGE_COLUMN = 'rangeColumn';\n        var SCATTER = 'scatter';\n        var SCATTER_LINE = 'scatterLine';\n        var VERTICAL_AREA = 'verticalArea';\n        var VERTICAL_BOX_PLOT = 'verticalBoxPlot';\n        var VERTICAL_BULLET = 'verticalBullet';\n        var VERTICAL_LINE = 'verticalLine';\n        var VERTICAL_RANGE_AREA = 'verticalRangeArea';\n        var WATERFALL = 'waterfall';\n        var EQUALLY_SPACED_SERIES = [\n            BAR,\n            COLUMN,\n            OHLC,\n            CANDLESTICK,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            BULLET,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ];\n        var LEGEND_ITEM_CLICK = 'legendItemClick';\n        var LEGEND_ITEM_HOVER = 'legendItemHover';\n        var SERIES_CLICK = 'seriesClick';\n        var SERIES_HOVER = 'seriesHover';\n        var PLOT_AREA_CLICK = 'plotAreaClick';\n        var PLOT_AREA_HOVER = 'plotAreaHover';\n        var DRAG = 'drag';\n        var DRAG_END = 'dragEnd';\n        var DRAG_START = 'dragStart';\n        var ZOOM_START = 'zoomStart';\n        var ZOOM = 'zoom';\n        var ZOOM_END = 'zoomEnd';\n        var SELECT_START = 'selectStart';\n        var SELECT = 'select';\n        var SELECT_END = 'selectEnd';\n        var RENDER = 'render';\n        var SHOW_TOOLTIP = 'showTooltip';\n        var HIDE_TOOLTIP = 'hideTooltip';\n        var LOGARITHMIC = 'log';\n        var CATEGORY = 'category';\n        var INSIDE_END = 'insideEnd';\n        var INSIDE_BASE = 'insideBase';\n        var OUTSIDE_END = 'outsideEnd';\n        var MOUSEWHEEL = 'DOMMouseScroll mousewheel';\n        var MOUSEWHEEL_DELAY = 150;\n        var constants = {\n            INITIAL_ANIMATION_DURATION: INITIAL_ANIMATION_DURATION,\n            FADEIN: FADEIN,\n            LEGEND_ITEM_CLICK: LEGEND_ITEM_CLICK,\n            LEGEND_ITEM_HOVER: LEGEND_ITEM_HOVER,\n            SERIES_CLICK: SERIES_CLICK,\n            SERIES_HOVER: SERIES_HOVER,\n            GLASS: GLASS,\n            BORDER_BRIGHTNESS: BORDER_BRIGHTNESS,\n            TOOLTIP_OFFSET: TOOLTIP_OFFSET,\n            START_SCALE: START_SCALE,\n            ERROR_LOW_FIELD: ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD: ERROR_HIGH_FIELD,\n            X_ERROR_LOW_FIELD: X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD: X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD: Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD: Y_ERROR_HIGH_FIELD,\n            LINE_MARKER_SIZE: LINE_MARKER_SIZE,\n            INTERPOLATE: INTERPOLATE,\n            ZERO: ZERO,\n            SMOOTH: SMOOTH,\n            STEP: STEP,\n            CATEGORY: CATEGORY,\n            FUNNEL: FUNNEL,\n            BAR: BAR,\n            CANDLESTICK: CANDLESTICK,\n            PIE: PIE,\n            COLUMN: COLUMN,\n            AREA: AREA,\n            VERTICAL_BULLET: VERTICAL_BULLET,\n            BOX_PLOT: BOX_PLOT,\n            OHLC: OHLC,\n            WATERFALL: WATERFALL,\n            LINE: LINE,\n            BULLET: BULLET,\n            VERTICAL_LINE: VERTICAL_LINE,\n            VERTICAL_AREA: VERTICAL_AREA,\n            RANGE_AREA: RANGE_AREA,\n            VERTICAL_RANGE_AREA: VERTICAL_RANGE_AREA,\n            RANGE_COLUMN: RANGE_COLUMN,\n            VERTICAL_BOX_PLOT: VERTICAL_BOX_PLOT,\n            RANGE_BAR: RANGE_BAR,\n            HORIZONTAL_WATERFALL: HORIZONTAL_WATERFALL,\n            SCATTER: SCATTER,\n            SCATTER_LINE: SCATTER_LINE,\n            BUBBLE: BUBBLE,\n            RADAR_AREA: RADAR_AREA,\n            RADAR_LINE: RADAR_LINE,\n            RADAR_COLUMN: RADAR_COLUMN,\n            POLAR_LINE: POLAR_LINE,\n            POLAR_AREA: POLAR_AREA,\n            POLAR_SCATTER: POLAR_SCATTER,\n            RENDER: RENDER,\n            PLOT_AREA_CLICK: PLOT_AREA_CLICK,\n            PLOT_AREA_HOVER: PLOT_AREA_HOVER,\n            LOGARITHMIC: LOGARITHMIC,\n            DRAG: DRAG,\n            DRAG_START: DRAG_START,\n            DRAG_END: DRAG_END,\n            ZOOM_START: ZOOM_START,\n            ZOOM: ZOOM,\n            ZOOM_END: ZOOM_END,\n            SELECT_START: SELECT_START,\n            SELECT: SELECT,\n            SELECT_END: SELECT_END,\n            GAP: GAP,\n            DONUT: DONUT,\n            INSIDE_END: INSIDE_END,\n            INSIDE_BASE: INSIDE_BASE,\n            OUTSIDE_END: OUTSIDE_END,\n            MOUSEWHEEL: MOUSEWHEEL,\n            MOUSEWHEEL_DELAY: MOUSEWHEEL_DELAY,\n            SHOW_TOOLTIP: SHOW_TOOLTIP,\n            HIDE_TOOLTIP: HIDE_TOOLTIP,\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES,\n            ABOVE: ABOVE,\n            BELOW: BELOW\n        };\n        var DEFAULT_ERROR_BAR_WIDTH = 4;\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                ChartElement.fn.init.call(this, options);\n                this.low = low;\n                this.high = high;\n                this.isVertical = isVertical;\n                this.chart = chart;\n                this.series = series;\n            },\n            reflow: function (targetBox) {\n                var endCaps = this.options.endCaps;\n                var isVertical = this.isVertical;\n                var axis = this.getAxis();\n                var valueBox = axis.getSlot(this.low, this.high);\n                var centerBox = targetBox.center();\n                var capsWidth = this.getCapsWidth(targetBox, isVertical);\n                var capValue = isVertical ? centerBox.x : centerBox.y;\n                var capStart = capValue - capsWidth;\n                var capEnd = capValue + capsWidth;\n                var linePoints;\n                if (isVertical) {\n                    linePoints = [\n                        new Point(centerBox.x, valueBox.y1),\n                        new Point(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(capStart, valueBox.y1), new Point(capEnd, valueBox.y1), new Point(capStart, valueBox.y2), new Point(capEnd, valueBox.y2));\n                    }\n                    this.box = new Box(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        new Point(valueBox.x1, centerBox.y),\n                        new Point(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(valueBox.x1, capStart), new Point(valueBox.x1, capEnd), new Point(valueBox.x2, capStart), new Point(valueBox.x2, capEnd));\n                    }\n                    this.box = new Box(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                this.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height();\n                var capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual = options.visual;\n                if (visual) {\n                    this.visual = visual({\n                        low: this.low,\n                        high: this.high,\n                        rect: this.box.toRect(),\n                        sender: this.getSender(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            this$1.createDefaultVisual();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    this.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var linePoints = ref.linePoints;\n                var lineOptions = {\n                    stroke: {\n                        color: options.color,\n                        width: options.line.width,\n                        dashType: options.line.dashType\n                    }\n                };\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    alignPathToPixel(line);\n                    this$1.visual.append(line);\n                }\n            }\n        });\n        setDefaultOptions(ErrorBarBase, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            endCaps: true,\n            line: { width: 2 },\n            zIndex: 1\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axis = this.chart.seriesValueAxis(this.series);\n                return axis;\n            }\n        });\n        var MAX_EXPAND_DEPTH = 5;\n        function evalOptions(options, context, state, dryRun) {\n            if (state === void 0) {\n                state = {};\n            }\n            if (dryRun === void 0) {\n                dryRun = false;\n            }\n            var defaults = state.defaults = state.defaults || {};\n            var depth = state.depth = state.depth || 0;\n            var needsEval = false;\n            state.excluded = state.excluded || [];\n            if (depth > MAX_EXPAND_DEPTH) {\n                return null;\n            }\n            for (var property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    var propValue = options[property];\n                    if (isFunction(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (isObject(propValue)) {\n                        if (!dryRun) {\n                            state.defaults = defaults[property];\n                        }\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length;\n            var categories = 0;\n            for (var i = 0; i < seriesCount; i++) {\n                categories = Math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                this.valueAxisRanges = {};\n                this.points = [];\n                this.categoryPoints = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    var otherValues = [];\n                    var categorySum = 0;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += Math.abs(other.value);\n                                otherValues.push(Math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var this$1 = this;\n                if (startValue === void 0) {\n                    startValue = 0;\n                }\n                var categoryPoints = this.categoryPoints[point.categoryIx];\n                if (this.options.isStacked) {\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === datavizConstants.STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this$1.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this$1.options.isStacked100) {\n                                plotValue = Math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    isNumber(point.value) ? point.value : axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var this$1 = this;\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPoints = this$1.categoryPoints[i];\n                    if (!categoryPoints) {\n                        continue;\n                    }\n                    for (var pIx = 0; pIx < categoryPoints.length; pIx++) {\n                        var point = categoryPoints[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this$1.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = Math.max(max, to);\n                                    min = Math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var isStacked = ref.isStacked;\n                var chartSeries = ref.series;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        var limits = limitsCache[key];\n                        if (!limits) {\n                            limits = this$1.stackLimits(axisName, series.stack);\n                            var errorTotals = this$1.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = Math.min(limits.min, dataviz.sparseArrayLimits(errorTotals.negative).min);\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = Math.max(limits.max, dataviz.sparseArrayLimits(errorTotals.positive).max);\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            this$1.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var value = point.value;\n                var series = point.series;\n                var seriesIx = point.seriesIx;\n                var errorBars = point.options.errorBars;\n                var lowValue = data.fields[ERROR_LOW_FIELD];\n                var highValue = data.fields[ERROR_HIGH_FIELD];\n                var errorRange;\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    this.seriesErrorRanges = this.seriesErrorRanges || [];\n                    this.seriesErrorRanges[seriesIx] = this.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = this.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    this.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var isVertical = !this.options.invertAxes;\n                var options = point.options.errorBars;\n                var series = point.series;\n                var low = point.low;\n                var high = point.high;\n                if (this.options.isStacked) {\n                    var stackedErrorRange = this.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    this.updateRange({ value: low }, fields);\n                    this.updateRange({ value: high }, fields);\n                }\n                var errorBar = new CategoricalErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var plotValue = this.plotRange(point, 0)[1] - point.value;\n                var low = point.low + plotValue;\n                var high = point.high + plotValue;\n                this.errorTotals = this.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    this.errorTotals.negative[categoryIx] = Math.min(this.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    this.errorTotals.positive[categoryIx] = Math.max(this.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = this.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = this.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    this.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = this.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = this;\n                    point.noteText = data.fields.noteText;\n                    if (!defined(point.dataItem)) {\n                        point.dataItem = series.data[categoryIx];\n                    }\n                    this.addErrorBar(point, data, categoryIx);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                this.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, pointOptions);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return pointOptions;\n            },\n            updateRange: function (data, fields) {\n                var axisName = fields.series.axis;\n                var value = data.value;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, value);\n                    axisRange.max = Math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea;\n                var axisName = series.axis;\n                var axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var categorySlots = this.categorySlots = [];\n                var chartPoints = this.points;\n                var categoryAxis = this.categoryAxis;\n                var pointIx = 0;\n                this.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    var valueAxis = this$1.seriesValueAxis(currentSeries);\n                    var point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = this$1.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = this$1.plotRange(point, valueAxis.startValue());\n                        var valueSlot = this$1.valueSlot(valueAxis, plotRange);\n                        if (valueSlot) {\n                            var pointSlot = this$1.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = this$1.aboveAxis(point, valueAxis);\n                            point.stackValue = plotRange[1];\n                            if (this$1.options.isStacked100) {\n                                point.percentage = this$1.plotValue(point);\n                            }\n                            this$1.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.reflowCategories(categorySlots);\n                if (!this.options.clip && this.options.limitPoints && this.points.length) {\n                    this.limitPoints();\n                }\n                this.box = targetBox;\n            },\n            valueSlot: function (valueAxis, plotRange) {\n                return valueAxis.getSlot(plotRange[0], plotRange[1], !this.options.clip);\n            },\n            limitPoints: function () {\n                var this$1 = this;\n                var categoryPoints = this.categoryPoints;\n                var points = categoryPoints[0].concat(last(categoryPoints));\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx]) {\n                        this$1.limitPoint(points[idx]);\n                    }\n                }\n            },\n            limitPoint: function (point) {\n                var limittedSlot = this.categoryAxis.limitSlot(point.box);\n                if (!limittedSlot.equals(point.box)) {\n                    point.reflow(limittedSlot);\n                }\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis;\n                var options = valueAxis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var options = this.options;\n                var invertAxes = options.invertAxes;\n                var slotX = invertAxes ? valueSlot : categorySlot;\n                var slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var count = categoriesCount(series);\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this$1._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (var seriesIx$1 = 0; seriesIx$1 < seriesCount; seriesIx$1++) {\n                        var currentSeries = series[seriesIx$1];\n                        var currentCategory = categories[categoryIx];\n                        var pointData = this$1._bindPoint(currentSeries, seriesIx$1, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx$1\n                        });\n                    }\n                }\n                for (var seriesIx$2 = 0; seriesIx$2 < seriesCount; seriesIx$2++) {\n                    this$1._outOfRangeCallback(series[seriesIx$2], '_outOfRangeMaxPoint', seriesIx$2, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx,\n                        dataItem: outOfRangePoint.item\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        setDefaultOptions(CategoricalChart, {\n            series: [],\n            invertAxes: false,\n            isStacked: false,\n            clip: true,\n            limitPoints: true\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: eventElement(e),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var options = this.options.notes;\n                var text = this.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    this.note = new dataviz.Note({\n                        value: this.value,\n                        text: text,\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        series: this.series\n                    }, this.options.notes, this.owner.chartService);\n                    this.append(this.note);\n                }\n            }\n        };\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n            },\n            render: function () {\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                if (markers.visible && markers.size) {\n                    this.marker = this.createMarker();\n                    this.append(this.marker);\n                }\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var labelText = this.value;\n                    if (labelTemplate) {\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            series: this.series\n                        });\n                    } else if (labels.format) {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels));\n                    this.append(this.label);\n                }\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: function () {\n            },\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var aboveAxis = ref.aboveAxis;\n                var vertical = options.vertical;\n                this.render();\n                this.box = targetBox;\n                var childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                this._childBox = childBox;\n                if (this.marker) {\n                    this.marker.reflow(childBox);\n                }\n                this.reflowLabel(childBox);\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (this.note) {\n                    var noteTargetBox = this.markerBox();\n                    if (!(options.markers.visible && options.markers.size)) {\n                        var center = noteTargetBox.center();\n                        noteTargetBox = new Box(center.x, center.y, center.x, center.y);\n                    }\n                    this.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(this.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var markers = this.options.highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var size = options.size + (options.border.width || 0) + (markers.border.width || 0);\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: size,\n                    height: size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual, rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geometry.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function () {\n                var markerBox = this.markerBox();\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    var x = markerBox.x2 + TOOLTIP_OFFSET;\n                    var horizontalAlign = LEFT;\n                    var y, verticalAlign;\n                    if (this.aboveAxis) {\n                        y = markerBox.y1;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        y = markerBox.y2;\n                        verticalAlign = TOP;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            },\n            unclipElements: function () {\n                if (this.label) {\n                    this.label.options.noclip = true;\n                }\n                if (this.note) {\n                    this.note.options.noclip = true;\n                }\n            }\n        });\n        LinePoint.prototype.defaults = {\n            vertical: true,\n            markers: {\n                visible: true,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                position: ABOVE,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: '#fff',\n                        width: 2\n                    }\n                },\n                zIndex: datavizConstants.HIGHLIGHT_ZINDEX\n            },\n            errorBars: { line: { width: 1 } }\n        };\n        deepExtend(LinePoint.prototype, PointEventsMixin);\n        deepExtend(LinePoint.prototype, NoteMixin);\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                ChartElement.fn.init.call(this);\n                this.linePoints = linePoints;\n                this.series = series;\n                this.seriesIx = seriesIx;\n            },\n            points: function () {\n                return this.toGeometryPoints(this.linePoints);\n            },\n            toGeometryPoints: function (points) {\n                var result = [];\n                for (var i = 0, length = points.length; i < length; i++) {\n                    if (points[i] && points[i].visible !== false) {\n                        result.push(points[i]._childBox.toRect().center());\n                    }\n                }\n                return result;\n            },\n            createVisual: function () {\n                var ref = this;\n                var options = ref.options;\n                var series = ref.series;\n                var color = series.color;\n                var defaults = series._defaults;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                return this.parent.getNearestPoint(coords.x, coords.y, this.seriesIx);\n            }\n        });\n        setDefaultOptions(LineSegment, { closed: false });\n        var StepLineMixin = {\n            calculateStepPoints: function (points) {\n                var categoryAxis = this.parent.plotArea.seriesCategoryAxis(this.series);\n                var ref = categoryAxis.options;\n                var justified = ref.justified;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var stepAxis = vertical ? X : Y;\n                var axis = vertical ? Y : X;\n                var stepDir = reverse ? 2 : 1;\n                var dir = stepDir;\n                var previousPoint = toGeometryPoint(points[0], stepAxis, stepDir, axis, dir);\n                var result = [previousPoint];\n                for (var idx = 1; idx < points.length; idx++) {\n                    var point = toGeometryPoint(points[idx], stepAxis, stepDir, axis, dir);\n                    if (previousPoint[stepAxis] !== point[stepAxis]) {\n                        var stepPoint = new GeometryPoint();\n                        stepPoint[stepAxis] = previousPoint[stepAxis];\n                        stepPoint[axis] = point[axis];\n                        result.push(stepPoint, point);\n                    }\n                    previousPoint = point;\n                }\n                if (!justified) {\n                    result.push(toGeometryPoint(last(points), stepAxis, stepDir, axis, reverse ? 1 : 2));\n                } else if (previousPoint !== last(result)) {\n                    result.push(previousPoint);\n                }\n                return result;\n            }\n        };\n        function toGeometryPoint(lintPoint, stepAxis, stepDir, axis, dir) {\n            var box = lintPoint.box;\n            var result = new GeometryPoint();\n            result[stepAxis] = box[stepAxis + stepDir];\n            result[axis] = box[axis + dir];\n            return result;\n        }\n        var StepLineSegment = LineSegment.extend({\n            points: function () {\n                return this.calculateStepPoints(this.linePoints);\n            }\n        });\n        deepExtend(StepLineSegment.prototype, StepLineMixin);\n        var SplineSegment = LineSegment.extend({\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesPoints = ref.seriesPoints;\n                var series = options.series;\n                var seriesCount = seriesPoints.length;\n                var lastSegment;\n                this._segments = [];\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var sortedPoints = this$1.sortPoints(seriesPoints[seriesIx]);\n                    var pointCount = sortedPoints.length;\n                    var linePoints = [];\n                    for (var pointIx = 0; pointIx < pointCount; pointIx++) {\n                        var point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (this$1.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this$1._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this$1._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues;\n                var assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimation = Animation.extend({\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(dataviz.interpolateValue(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        setDefaultOptions(ClipAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register('clip', ClipAnimation);\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.box;\n                    var clipPath = Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n                this.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var missingValues = this.seriesMissingValues(series);\n                var value = data.valueFields.value;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var this$1 = this;\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this$1.plotValue(other);\n                        if (this$1.options.isStacked100) {\n                            plotValue = Math.min(plotValue, 1);\n                        }\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(LineChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, currentSeries, seriesIx, prevSegment, stackPoints) {\n                LineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.prevSegment = prevSegment;\n                this.stackPoints = stackPoints;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var lineOptions = series.line || {};\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                if (lineOptions.width > 0 && lineOptions.visible !== false) {\n                    this.createStroke({\n                        stroke: deepExtend({\n                            color: color,\n                            opacity: series.opacity,\n                            lineCap: 'butt'\n                        }, lineOptions)\n                    });\n                }\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    segments = this._strokeSegments = this.createStrokeSegments();\n                }\n                return segments;\n            },\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.points());\n            },\n            stackSegments: function () {\n                if (this.prevSegment) {\n                    return this.prevSegment.createStackSegments(this.stackPoints);\n                }\n                return this.createStackSegments(this.stackPoints);\n            },\n            createStackSegments: function (stackPoints) {\n                return this.segmentsFromPoints(this.toGeometryPoints(stackPoints)).reverse();\n            },\n            segmentsFromPoints: function (points) {\n                return points.map(function (point) {\n                    return new geometry.Segment(point);\n                });\n            },\n            createStroke: function (style) {\n                var stroke = new Path(style);\n                stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                this.visual.append(stroke);\n            },\n            hasStackSegment: function () {\n                return this.prevSegment || this.stackPoints && this.stackPoints.length;\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var hasStackSegments = this.hasStackSegment();\n                if (hasStackSegments) {\n                    var stackSegments = this.stackSegments();\n                    append(fillSegments, stackSegments);\n                }\n                var fill = new Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                if (!hasStackSegments && strokeSegments.length > 1) {\n                    this.fillToAxes(fill);\n                }\n                this.visual.append(fill);\n            },\n            fillToAxes: function (fillPath) {\n                var chart = this.parent;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var crossingValue = chart.categoryAxisCrossingValue(valueAxis);\n                var endSlot = valueAxis.getSlot(crossingValue, crossingValue, true);\n                var segments = this.strokeSegments();\n                var firstPoint = segments[0].anchor();\n                var lastPoint = last(segments).anchor();\n                var end = invertAxes ? endSlot.x1 : endSlot.y1;\n                if (invertAxes) {\n                    fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                } else {\n                    fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                }\n            }\n        });\n        var StepAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.calculateStepPoints(this.linePoints));\n            },\n            createStackSegments: function (stackPoints) {\n                return this.segmentsFromPoints(this.calculateStepPoints(stackPoints)).reverse();\n            }\n        });\n        deepExtend(StepAreaSegment.prototype, StepLineMixin);\n        var SplineAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var linePoints = this.points();\n                return curveProcessor.process(linePoints);\n            },\n            createStackSegments: function () {\n                var strokeSegments = this.strokeSegments();\n                var stackSegments = [];\n                for (var idx = strokeSegments.length - 1; idx >= 0; idx--) {\n                    var segment = strokeSegments[idx];\n                    stackSegments.push(new geometry.Segment(segment.anchor(), segment.controlOut(), segment.controlIn()));\n                }\n                return stackSegments;\n            }\n        });\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var previousSegment;\n                var stackPoints;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues !== 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                        previousSegment = prevSegment;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                }\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        var stackPoint = stackPoints[idx];\n                        var pointSlot = this$1.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var this$1 = this;\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var length = linePoints.length;\n                if (startIdx < 0) {\n                    startIdx = 0;\n                    length--;\n                }\n                var endIdx = startIdx + length;\n                var pointOffset = this.seriesOptions[0]._outOfRangeMinPoint ? 1 : 0;\n                var stackPoints = [];\n                this._stackPoints = this._stackPoints || [];\n                for (var categoryIx = startIdx; categoryIx < endIdx; categoryIx++) {\n                    var pointIx = categoryIx + pointOffset;\n                    var currentSeriesIx = seriesIx;\n                    var point = void 0;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][pointIx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && categoryIx > startIdx && !seriesPoints[currentSeriesIx][pointIx - 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && categoryIx + 1 < endIdx && !seriesPoints[currentSeriesIx][pointIx + 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        var gapStackPoint = this$1._createGapStackPoint(categoryIx);\n                        this$1._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, pointIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var index = seriesIdx;\n                var point;\n                while (index > 0 && !point) {\n                    index--;\n                    point = seriesPoints[index][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[index][pointIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                this.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var axisRanges = this.axisRanges;\n                for (var axisName in chartAxisRanges) {\n                    var chartRange = chartAxisRanges[axisName];\n                    var range = axisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = Math.min(range.min, chartRange.min);\n                    range.max = Math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var BarLabel = ChartElement.extend({\n            init: function (content, options) {\n                ChartElement.fn.init.call(this, options);\n                this.textBox = new TextBox(content, this.options);\n                this.append(this.textBox);\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var aboveAxis = options.aboveAxis;\n                var text = this.children[0];\n                var textOptions = text.options;\n                var box = text.box;\n                var padding = text.options.padding;\n                var labelBox = targetBox;\n                textOptions.align = vertical ? CENTER : LEFT;\n                textOptions.vAlign = vertical ? TOP : CENTER;\n                if (options.position === INSIDE_END) {\n                    if (vertical) {\n                        textOptions.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            textOptions.vAlign = BOTTOM;\n                        }\n                    } else {\n                        textOptions.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position === CENTER) {\n                    textOptions.vAlign = CENTER;\n                    textOptions.align = CENTER;\n                } else if (options.position === INSIDE_BASE) {\n                    if (vertical) {\n                        textOptions.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        textOptions.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position === OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            labelBox = new Box(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        textOptions.align = CENTER;\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            labelBox = new Box(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (labelBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (labelBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(labelBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var vertical = this.options.vertical;\n                var field = vertical ? Y : X;\n                var start = field + '1';\n                var end = field + '2';\n                var text = this.children[0];\n                var parentBox = this.parent.box;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    var targetBox = text.paddingBox.clone();\n                    targetBox[start] = Math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = Math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        setDefaultOptions(BarLabel, {\n            position: OUTSIDE_END,\n            margin: getSpacing(3),\n            padding: getSpacing(4),\n            color: BLACK,\n            background: '',\n            border: {\n                width: 1,\n                color: ''\n            },\n            aboveAxis: true,\n            vertical: false,\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            zIndex: 2\n        });\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient !== 'none';\n        }\n        var BAR_ALIGN_MIN_WIDTH = 6;\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.options = options;\n                this.color = options.color || WHITE;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.value = value;\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var labelText;\n                    if (labelTemplate) {\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            series: this.series\n                        });\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, labels));\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                this.render();\n                var label = this.label;\n                this.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = this.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var options = ref.options;\n                var customVisual = options.visual;\n                if (this.visible !== false) {\n                    ChartElement.fn.createVisual.call(this);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            sender: this.getSender(),\n                            series: this.series,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        this.createRect(this.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    var overlay = this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay));\n                    visual.append(overlay);\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var color = this.color;\n                var border = this.options.border;\n                var brightness = border._brightness || BORDER_BRIGHTNESS;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var aboveAxis = ref.aboveAxis;\n                var clipBox = this.owner.pane.clipBox() || box;\n                var horizontalAlign = LEFT;\n                var verticalAlign = TOP;\n                var x, y;\n                if (options.vertical) {\n                    x = Math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n                    if (aboveAxis) {\n                        y = Math.max(box.y1, clipBox.y1);\n                    } else {\n                        y = Math.min(box.y2, clipBox.y2);\n                        verticalAlign = BOTTOM;\n                    }\n                } else {\n                    var x1 = Math.max(box.x1, clipBox.x1);\n                    var x2 = Math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        verticalAlign = BOTTOM;\n                        if (aboveAxis) {\n                            horizontalAlign = RIGHT;\n                            x = x2;\n                        } else {\n                            x = x1;\n                        }\n                        y = Math.max(box.y1, clipBox.y1) - TOOLTIP_OFFSET;\n                    } else {\n                        if (aboveAxis) {\n                            x = x2 + TOOLTIP_OFFSET;\n                        } else {\n                            x = x1 - TOOLTIP_OFFSET;\n                            horizontalAlign = RIGHT;\n                        }\n                        y = Math.max(box.y1, clipBox.y1);\n                    }\n                }\n                return {\n                    point: new Point(x, y),\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Bar.prototype, PointEventsMixin);\n        deepExtend(Bar.prototype, NoteMixin);\n        Bar.prototype.defaults = {\n            border: { width: 1 },\n            vertical: true,\n            overlay: { gradient: 'glass' },\n            labels: {\n                visible: false,\n                format: '{0}'\n            },\n            opacity: 1,\n            notes: { label: {} }\n        };\n        function forEach(elements, callback) {\n            elements.forEach(callback);\n        }\n        function forEachReverse(elements, callback) {\n            var length = elements.length;\n            for (var idx = length - 1; idx >= 0; idx--) {\n                callback(elements[idx], idx - length - 1);\n            }\n        }\n        var ClusterLayout = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.forEach = options.rtl ? forEachReverse : forEach;\n            },\n            reflow: function (box) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var gap = ref.gap;\n                var spacing = ref.spacing;\n                var children = this.children;\n                var count = children.length;\n                var axis = vertical ? Y : X;\n                var slots = count + gap + spacing * (count - 1);\n                var slotSize = (vertical ? box.height() : box.width()) / slots;\n                var position = box[axis + 1] + slotSize * (gap / 2);\n                this.forEach(children, function (child, idx) {\n                    var childBox = (child.box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    child.reflow(childBox);\n                    if (idx < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                });\n            }\n        });\n        setDefaultOptions(ClusterLayout, {\n            vertical: false,\n            gap: 0,\n            spacing: 0\n        });\n        var StackWrap = ChartElement.extend({\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var positionAxis = this.options.vertical ? X : Y;\n                var children = this.children;\n                var childrenCount = children.length;\n                var box = this.box = new Box();\n                for (var i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i];\n                    if (currentChild.visible !== false) {\n                        var childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this$1.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        setDefaultOptions(StackWrap, { vertical: true });\n        var BarChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var isStacked = options.isStacked;\n                var value = this.pointValue(data);\n                var pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position === OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var pointType = this.pointType();\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    var clusterType = this.clusterType();\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = this.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === datavizConstants.STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var options = this.options;\n                var categorySlot = categoryAxis.getSlot(categoryIx);\n                var startValue = valueAxis.startValue();\n                if (options.isStacked) {\n                    var zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    var stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                CategoricalChart.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    var pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this$1.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new GeometryPoint(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        setDefaultOptions(BarChart, { animation: { type: BAR } });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var ocSlot = valueAxis.getSlot(value.open, value.close);\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                this.realBody = ocSlot;\n                var mid = lhSlot.center().x;\n                var points = [];\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                this.lines = points;\n                this.box = lhSlot.clone().wrap(ocSlot);\n                if (!this._rendered) {\n                    this._rendered = true;\n                    this.createNote();\n                }\n                this.reflowNote();\n            },\n            reflowNote: function () {\n                if (this.note) {\n                    this.note.reflow(this.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var border = this.options.border;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(this.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                var clipBox = this.owner.pane.clipBox() || box;\n                return {\n                    point: new Point(box.x2 + TOOLTIP_OFFSET, Math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET),\n                    align: {\n                        horizontal: LEFT,\n                        vertical: TOP\n                    }\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        setDefaultOptions(Candlestick, {\n            vertical: true,\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{4:d}</th></tr>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            }\n        });\n        deepExtend(Candlestick.prototype, PointEventsMixin);\n        deepExtend(Candlestick.prototype, NoteMixin);\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        var CandlestickChart = CategoricalChart.extend({\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var pointType = this.pointType();\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var color = data.fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type === CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.vertical = !this.options.invertAxes;\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var parts = this.splitValue(value);\n                var axisRange = this.valueAxisRanges[axisName];\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.prototype, ClipAnimationMixin);\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                Candlestick.fn.init.call(this, value, options);\n                this.createNote();\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var whiskerSlot, boxSlot;\n                this.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                this.realBody = boxSlot;\n                this.reflowBoxSlot(box);\n                this.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                this.reflowWhiskerSlot(box);\n                var medianSlot = valueAxis.getSlot(value.median);\n                if (value.mean) {\n                    var meanSlot = valueAxis.getSlot(value.mean);\n                    this.meanPoints = this.calcMeanPoints(box, meanSlot);\n                }\n                this.whiskerPoints = this.calcWhiskerPoints(boxSlot, whiskerSlot);\n                this.medianPoints = this.calcMedianPoints(box, medianSlot);\n                this.box = whiskerSlot.clone().wrap(boxSlot);\n                this.reflowNote();\n            },\n            reflowBoxSlot: function (box) {\n                this.boxSlot.x1 = box.x1;\n                this.boxSlot.x2 = box.x2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.x1 = box.x1;\n                this.whiskerSlot.x2 = box.x2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            box.x1,\n                            meanSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            meanSlot.y1\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().x;\n                return [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n            },\n            renderOutliers: function (options) {\n                var this$1 = this;\n                var value = this.value;\n                var outliers = value.outliers || [];\n                var outerFence = Math.abs(value.q3 - value.q1) * 3;\n                var elements = [];\n                var markers = options.markers || {};\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    var markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(this$1.color)) {\n                            markersBorder.color = this$1.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    var shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var this$1 = this;\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var center = this.box.center();\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue);\n                    if (this$1.options.vertical) {\n                        markerBox.move(center.x);\n                    } else {\n                        markerBox.move(undefined, center.y);\n                    }\n                    this$1.box = this$1.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.whiskers);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.fn.getBorderColor.call(this);\n            }\n        });\n        setDefaultOptions(BoxPlot, {\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            median: { color: '#f6f6f6' },\n            mean: {\n                width: 2,\n                dashType: 'dash',\n                color: '#f6f6f6'\n            },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{6:d}</th></tr>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            },\n            outliers: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: datavizConstants.CROSS,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            },\n            extremes: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            }\n        });\n        deepExtend(BoxPlot.prototype, PointEventsMixin);\n        var VerticalBoxPlot = BoxPlot.extend({\n            reflowBoxSlot: function (box) {\n                this.boxSlot.y1 = box.y1;\n                this.boxSlot.y2 = box.y2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.y1 = box.y1;\n                this.whiskerSlot.y2 = box.y2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            meanSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            meanSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().y;\n                return [\n                    [\n                        [\n                            whiskerSlot.x1,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid\n                        ],\n                        [\n                            boxSlot.x1,\n                            mid\n                        ]\n                    ],\n                    [\n                        [\n                            whiskerSlot.x2,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid\n                        ],\n                        [\n                            boxSlot.x2,\n                            mid\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            medianSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            medianSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                if (this.options.invertAxes) {\n                    return VerticalBoxPlot;\n                }\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                var parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length;\n                var result = [];\n                for (var i = 0; i < length; i++) {\n                    var item = items[i];\n                    if (defined(item) && item !== null) {\n                        result.push(item);\n                    }\n                }\n                return result;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axes = this.chart.seriesAxes(this.series);\n                var axis = this.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this._initFields();\n                this.render();\n            },\n            _initFields: function () {\n                this.xAxisRanges = {};\n                this.yAxisRanges = {};\n                this.points = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            addErrorBar: function (point, field, fields) {\n                var value = point.value[field];\n                var valueErrorField = field + 'Value';\n                var lowField = field + 'ErrorLow';\n                var highField = field + 'ErrorHigh';\n                var seriesIx = fields.seriesIx;\n                var series = fields.series;\n                var errorBars = point.options.errorBars;\n                var lowValue = fields[lowField];\n                var highValue = fields[highField];\n                if (isNumber(value)) {\n                    var errorRange;\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        this.seriesErrorRanges = this.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        this.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var low = errorRange.low;\n                var high = errorRange.high;\n                var series = point.series;\n                var options = point.options.errorBars;\n                var isVertical = field === Y;\n                var item = {};\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                var errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                this.updateRange(item, series);\n                item[field] = high;\n                this.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var x = value.x;\n                var y = value.y;\n                var seriesIx = fields.seriesIx;\n                var series = this.options.series[seriesIx];\n                var missingValues = this.seriesMissingValues(series);\n                var seriesPoints = this.seriesPoints[seriesIx];\n                var pointValue = value;\n                if (!(hasValue(x) && hasValue(y))) {\n                    pointValue = this.createMissingValue(pointValue, missingValues);\n                }\n                var point;\n                if (pointValue) {\n                    point = this.createPoint(pointValue, fields);\n                    if (point) {\n                        $.extend(point, fields);\n                        this.addErrorBar(point, X, fields);\n                        this.addErrorBar(point, Y, fields);\n                    }\n                    this.updateRange(pointValue, fields.series);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: function () {\n            },\n            updateRange: function (value, series) {\n                var intlService = this.chartService.intl;\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var x = value.x;\n                var y = value.y;\n                var xAxisRange = this.xAxisRanges[xAxisName];\n                var yAxisRange = this.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = this.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(x)) {\n                        x = parseDate(intlService, x);\n                    }\n                    xAxisRange.min = Math.min(xAxisRange.min, x);\n                    xAxisRange.max = Math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = this.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(y)) {\n                        y = parseDate(intlService, y);\n                    }\n                    yAxisRange.min = Math.min(yAxisRange.min, y);\n                    yAxisRange.max = Math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, options);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return pointOptions;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var plotArea = this.plotArea;\n                var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n                var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var chartPoints = this.points;\n                var limit = !this.options.clip;\n                var pointIx = 0;\n                this.traverseDataPoints(function (value, fields) {\n                    var point = chartPoints[pointIx++];\n                    var seriesAxes = this$1.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n                    var slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n                    if (point) {\n                        if (slotX && slotY) {\n                            var pointSlot = this$1.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var seriesPoints = ref.seriesPoints;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                        var value = ref$1.valueFields;\n                        var fields = ref$1.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: this$1\n                        }, fields));\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        setDefaultOptions(ScatterChart, {\n            series: [],\n            tooltip: { format: '{0}, {1}' },\n            labels: { format: '{0}, {1}' },\n            clip: true\n        });\n        deepExtend(ScatterChart.prototype, ClipAnimationMixin, { _bindPoint: CategoricalChart.prototype._bindPoint });\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                LinePoint.fn.init.call(this, value, options);\n                this.category = value.category;\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = (markers.size + markers.border.width + border.width) / 2;\n                var highlightGroup = new Group();\n                var shadow = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y + radius / 5 + border.width / 2\n                ], radius + border.width / 2), {\n                    stroke: { color: 'none' },\n                    fill: this.createGradient({\n                        gradient: 'bubbleShadow',\n                        color: markers.background,\n                        stops: [\n                            {\n                                offset: 0,\n                                color: markers.background,\n                                opacity: 0.3\n                            },\n                            {\n                                offset: 1,\n                                color: markers.background,\n                                opacity: 0\n                            }\n                        ]\n                    })\n                });\n                var overlay = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                highlightGroup.append(shadow, overlay);\n                return highlightGroup;\n            }\n        });\n        Bubble.prototype.defaults = deepExtend({}, Bubble.prototype.defaults, {\n            labels: { position: CENTER },\n            highlight: {\n                opacity: 1,\n                border: {\n                    color: '#fff',\n                    width: 2,\n                    opacity: 1\n                }\n            }\n        });\n        var BubbleChart = ScatterChart.extend({\n            _initFields: function () {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn._initFields.call(this);\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = Math.max(this._maxSize, Math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                this.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(this, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointsCount = series.data.length;\n                var delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount);\n                var animationOptions = {\n                    delay: delay,\n                    duration: INITIAL_ANIMATION_DURATION - delay,\n                    type: BUBBLE\n                };\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                var pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                var point = new Bubble(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var boxSize = Math.min(box.width(), box.height());\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesPoints = this$1.seriesPoints[seriesIx];\n                    var minSize = currentSeries.minSize || Math.max(boxSize * 0.02, 10);\n                    var maxSize = currentSeries.maxSize || boxSize * 0.2;\n                    var minR = minSize / 2;\n                    var maxR = maxSize / 2;\n                    var minArea = Math.PI * minR * minR;\n                    var maxArea = Math.PI * maxR * maxR;\n                    var areaRange = maxArea - minArea;\n                    var areaRatio = areaRange / this$1._maxSize;\n                    for (var pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = Math.abs(point.value.size) * areaRatio;\n                            var radius = Math.sqrt((minArea + area) / Math.PI);\n                            var baseZIndex = valueOrDefault(point.options.zIndex, 0);\n                            var zIndex = baseZIndex + (1 - radius / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: radius * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: function () {\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(BubbleChart, {\n            tooltip: { format: '{3}' },\n            labels: { format: '{3}' }\n        });\n        var Target = ShapeElement.extend({});\n        deepExtend(Target.prototype, PointEventsMixin);\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.aboveAxis = this.options.aboveAxis;\n                this.color = options.color || WHITE;\n                this.value = value;\n            },\n            render: function () {\n                var options = this.options;\n                if (!this._rendered) {\n                    this._rendered = true;\n                    if (defined(this.value.target)) {\n                        this.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || this.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        this.target.value = this.value;\n                        this.target.dataItem = this.dataItem;\n                        this.target.series = this.series;\n                        this.append(this.target);\n                    }\n                    this.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var ref = this;\n                var options = ref.options;\n                var target = ref.target;\n                var chart = ref.owner;\n                var invertAxes = options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.options);\n                var categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis);\n                var targetValueSlot = valueAxis.getSlot(this.value.target);\n                var targetSlotX = invertAxes ? targetValueSlot : categorySlot;\n                var targetSlotY = invertAxes ? categorySlot : targetValueSlot;\n                if (target) {\n                    var targetSlot = new Box(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (this.note) {\n                    this.note.reflow(box);\n                }\n                this.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            createHighlight: function (style) {\n                return Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        Bullet.prototype.tooltipAnchor = Bar.prototype.tooltipAnchor;\n        setDefaultOptions(Bullet, {\n            border: { width: 1 },\n            vertical: false,\n            opacity: 1,\n            target: {\n                shape: '',\n                border: {\n                    width: 0,\n                    color: 'green'\n                },\n                line: { width: 2 }\n            },\n            tooltip: { format: 'Current: {0}<br />Target: {1}' }\n        });\n        deepExtend(Bullet.prototype, PointEventsMixin);\n        deepExtend(Bullet.prototype, NoteMixin);\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                wrapData(options);\n                CategoricalChart.fn.init.call(this, plotArea, options);\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var value = data.valueFields;\n                var bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = this.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                var bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var current = value.current;\n                var target = value.target;\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, current, target);\n                    axisRange.max = Math.max(axisRange.max, current, target);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    point.options.animation = this$1.options.animation;\n                    point.createAnimation();\n                }\n            }\n        });\n        BulletChart.prototype._setAnimationOptions = BarChart.prototype._setAnimationOptions;\n        setDefaultOptions(BulletChart, { animation: { type: BAR } });\n        function wrapData(options) {\n            var series = options.series;\n            for (var i = 0; i < series.length; i++) {\n                var seriesItem = series[i];\n                var data = seriesItem.data;\n                if (data && !isArray(data[0]) && !isObject(data[0])) {\n                    seriesItem.data = [data];\n                }\n            }\n        }\n        var BaseTooltip = Class.extend({\n            init: function (chartService, options) {\n                this.chartService = chartService;\n                this.options = deepExtend({}, this.options, options);\n            },\n            getStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                var padding = getSpacing(options.padding || {}, 'auto');\n                return {\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: styleValue(options.border.width),\n                    paddingTop: styleValue(padding.top),\n                    paddingBottom: styleValue(padding.bottom),\n                    paddingLeft: styleValue(padding.left),\n                    paddingRight: styleValue(padding.right)\n                };\n            },\n            show: function (options, tooltipOptions, point) {\n                options.format = tooltipOptions.format;\n                var style = this.getStyle(tooltipOptions, point);\n                options.style = style;\n                if (!defined(tooltipOptions.color) && new Color(style.backgroundColor).percBrightness() > 180) {\n                    options.className = 'k-chart-tooltip-inverse';\n                }\n                this.chartService.notify(SHOW_TOOLTIP, options);\n            },\n            hide: function () {\n                if (this.chartService) {\n                    this.chartService.notify(HIDE_TOOLTIP);\n                }\n            },\n            destroy: function () {\n                delete this.chartService;\n            }\n        });\n        setDefaultOptions(BaseTooltip, {\n            border: { width: 1 },\n            opacity: 1\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (chartService, crosshair, options) {\n                BaseTooltip.fn.init.call(this, chartService, options);\n                this.crosshair = crosshair;\n                this.formatService = chartService.format;\n                this.initAxisName();\n            },\n            initAxisName: function () {\n                var axis = this.crosshair.axis;\n                var plotArea = axis.plotArea;\n                var name;\n                if (plotArea.categoryAxis) {\n                    name = axis.getCategory ? 'categoryAxis' : 'valueAxis';\n                } else {\n                    name = axis.options.vertical ? 'yAxis' : 'xAxis';\n                }\n                this.axisName = name;\n            },\n            showAt: function (point) {\n                var ref = this;\n                var axis = ref.crosshair.axis;\n                var options = ref.options;\n                var value = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                var formattedValue = value;\n                if (options.format) {\n                    formattedValue = this.formatService.auto(options.format, value);\n                } else if (axis.options.type === DATE) {\n                    formattedValue = this.formatService.auto(axis.options.labels.dateFormats[axis.options.baseUnit], value);\n                }\n                this.show({\n                    point: point,\n                    anchor: this.getAnchor(),\n                    crosshair: this.crosshair,\n                    value: formattedValue,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                }, this.options);\n            },\n            hide: function () {\n                this.chartService.notify(HIDE_TOOLTIP, {\n                    crosshair: this.crosshair,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                });\n            },\n            getAnchor: function () {\n                var ref = this;\n                var crosshair = ref.crosshair;\n                var ref_options = ref.options;\n                var position = ref_options.position;\n                var padding = ref_options.padding;\n                var vertical = !crosshair.axis.options.vertical;\n                var lineBox = crosshair.line.bbox();\n                var horizontalAlign, verticalAlign, point;\n                if (vertical) {\n                    horizontalAlign = CENTER;\n                    if (position === BOTTOM) {\n                        verticalAlign = TOP;\n                        point = lineBox.bottomLeft().translate(0, padding);\n                    } else {\n                        verticalAlign = BOTTOM;\n                        point = lineBox.topLeft().translate(0, -padding);\n                    }\n                } else {\n                    verticalAlign = CENTER;\n                    if (position === LEFT) {\n                        horizontalAlign = RIGHT;\n                        point = lineBox.topLeft().translate(-padding, 0);\n                    } else {\n                        horizontalAlign = LEFT;\n                        point = lineBox.topRight().translate(padding, 0);\n                    }\n                }\n                return {\n                    point: point,\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            }\n        });\n        setDefaultOptions(CrosshairTooltip, { padding: 10 });\n        var Crosshair = ChartElement.extend({\n            init: function (chartService, axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    this.tooltip = new CrosshairTooltip(chartService, this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                if (this.tooltip) {\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var ref = this;\n                var axis = ref.axis;\n                var point = ref.point;\n                var vertical = axis.options.vertical;\n                var box = this.getBox();\n                var dim = vertical ? Y : X;\n                var lineStart = new GeometryPoint(box.x1, box.y1);\n                var lineEnd;\n                if (vertical) {\n                    lineEnd = new GeometryPoint(box.x2, box.y1);\n                } else {\n                    lineEnd = new GeometryPoint(box.x1, box.y2);\n                }\n                if (point) {\n                    if (this.stickyMode) {\n                        var slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                this.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var axis = this.axis;\n                var axes = axis.pane.axes;\n                var length = axes.length;\n                var vertical = axis.options.vertical;\n                var box = axis.lineBox().clone();\n                var dim = vertical ? X : Y;\n                var axisLineBox;\n                for (var i = 0; i < length; i++) {\n                    var currentAxis = axes[i];\n                    if (currentAxis.options.vertical !== vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                if (this.tooltip) {\n                    this.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(this);\n            }\n        });\n        setDefaultOptions(Crosshair, {\n            color: BLACK,\n            width: 2,\n            zIndex: -1,\n            tooltip: { visible: false }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                ChartElement.fn.init.call(this, options);\n                this.pane = pane;\n            },\n            shouldClip: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                return this.pane.chartsBox();\n            },\n            createVisual: function () {\n                this.visual = new Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = Path.fromRect(clipRect);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            unclipLabels: function () {\n                var ref = this;\n                var charts = ref.children;\n                var clipBox = ref.clipBox;\n                for (var i = 0; i < charts.length; i++) {\n                    var points = charts[i].points || {};\n                    var length = points.length;\n                    for (var j = 0; j < length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && point.overlapsBox && point.overlapsBox(clipBox)) {\n                            if (point.unclipElements) {\n                                point.unclipElements();\n                            } else {\n                                var label = point.label;\n                                var note = point.note;\n                                if (label && label.options.visible) {\n                                    if (label.alignToClipBox) {\n                                        label.alignToClipBox(clipBox);\n                                    }\n                                    label.options.noclip = true;\n                                }\n                                if (note && note.options.visible) {\n                                    note.options.noclip = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        ChartContainer.prototype.isStackRoot = true;\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.id = paneID();\n                this.createTitle();\n                this.content = new ChartElement();\n                this.chartContainer = new ChartContainer({}, this);\n                this.append(this.content);\n                this.axes = [];\n                this.charts = [];\n            },\n            createTitle: function () {\n                var titleOptions = this.options.title;\n                if (isObject(titleOptions)) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                this.title = dataviz.Title.buildTitle(titleOptions, this, Pane.prototype.options.title);\n            },\n            appendAxis: function (axis) {\n                this.content.append(axis);\n                this.axes.push(axis);\n                axis.pane = this;\n            },\n            appendChart: function (chart) {\n                if (this.chartContainer.parent !== this.content) {\n                    this.content.append(this.chartContainer);\n                }\n                this.charts.push(chart);\n                this.chartContainer.append(chart);\n                chart.pane = this;\n            },\n            empty: function () {\n                var this$1 = this;\n                var plotArea = this.parent;\n                if (plotArea) {\n                    for (var i = 0; i < this.axes.length; i++) {\n                        plotArea.removeAxis(this$1.axes[i]);\n                    }\n                    for (var i$1 = 0; i$1 < this.charts.length; i$1++) {\n                        plotArea.removeChart(this$1.charts[i$1]);\n                    }\n                }\n                this.axes = [];\n                this.charts = [];\n                this.content.destroy();\n                this.content.children = [];\n                this.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var content;\n                if (last(this.children) === this.content) {\n                    content = this.children.pop();\n                }\n                BoxElement.fn.reflow.call(this, targetBox);\n                if (content) {\n                    this.children.push(content);\n                }\n                if (this.title) {\n                    this.contentBox.y1 += this.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            clipRoot: function () {\n                return this;\n            },\n            createGridLines: function () {\n                var axes = this.axes;\n                var allAxes = axes.concat(this.parent.axes);\n                var vGridLines = [];\n                var hGridLines = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var vertical = axis.options.vertical;\n                    var gridLines = vertical ? vGridLines : hGridLines;\n                    for (var j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            var altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = this.createGradient.bind(this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n            },\n            chartsBox: function () {\n                var axes = this.axes;\n                var length = axes.length;\n                var chartsBox = new Box();\n                for (var idx = 0; idx < length; idx++) {\n                    var axis = axes[idx];\n                    var axisValueField = axis.options.vertical ? Y : X;\n                    var lineBox = axis.lineBox();\n                    chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                if (chartsBox.x2 === 0) {\n                    var allAxes = this.parent.axes;\n                    var length$1 = allAxes.length;\n                    for (var idx$1 = 0; idx$1 < length$1; idx$1++) {\n                        var axis$1 = allAxes[idx$1];\n                        if (!axis$1.options.vertical) {\n                            var lineBox$1 = axis$1.lineBox();\n                            chartsBox.x1 = lineBox$1.x1;\n                            chartsBox.x2 = lineBox$1.x2;\n                        }\n                    }\n                }\n                return chartsBox;\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            }\n        });\n        var ID = 1;\n        function paneID() {\n            return 'pane' + ID++;\n        }\n        Pane.prototype.isStackRoot = true;\n        setDefaultOptions(Pane, {\n            zIndex: -1,\n            shrinkToFit: true,\n            title: { align: LEFT },\n            visible: true\n        });\n        function segmentVisible(series, fields, index) {\n            var visible = fields.visible;\n            if (defined(visible)) {\n                return visible;\n            }\n            var pointVisibility = series.pointVisibility;\n            if (pointVisibility) {\n                return pointVisibility[index];\n            }\n        }\n        function bindSegments(series) {\n            var data = series.data;\n            var points = [];\n            var sum = 0;\n            var count = 0;\n            for (var idx = 0; idx < data.length; idx++) {\n                var pointData = SeriesBinder.current.bindPoint(series, idx);\n                var value = pointData.valueFields.value;\n                if (isString(value)) {\n                    value = parseFloat(value);\n                }\n                if (isNumber(value)) {\n                    pointData.visible = segmentVisible(series, pointData.fields, idx) !== false;\n                    pointData.value = Math.abs(value);\n                    points.push(pointData);\n                    if (pointData.visible) {\n                        sum += pointData.value;\n                    }\n                    if (value !== 0) {\n                        count++;\n                    }\n                } else {\n                    points.push(null);\n                }\n            }\n            return {\n                total: sum,\n                points: points,\n                count: count\n            };\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function filterSeriesByType(series, types) {\n            var result = [];\n            var seriesTypes = [].concat(types);\n            for (var idx = 0; idx < series.length; idx++) {\n                var currentSeries = series[idx];\n                if (inArray(currentSeries.type, seriesTypes)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function getDateField(field, row, intlService) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field;\n            var value = row[key];\n            if (!value) {\n                value = parseDate(intlService, getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type;\n            var dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.initFields(series, options);\n                this.series = series;\n                this.initSeries();\n                this.charts = [];\n                this.options.legend.items = [];\n                this.axes = [];\n                this.crosshairs = [];\n                this.chartService = chartService;\n                this.originalOptions = options;\n                this.createPanes();\n                this.render();\n                this.createCrosshairs();\n            },\n            initFields: function () {\n            },\n            initSeries: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    series[i].index = i;\n                }\n            },\n            createPanes: function () {\n                var this$1 = this;\n                var defaults = { title: { color: (this.options.title || {}).color } };\n                var panes = [];\n                var paneOptions = this.options.panes || [];\n                var panesLength = Math.max(paneOptions.length, 1);\n                function setTitle(options, defaults) {\n                    if (isString(options.title)) {\n                        options.title = { text: options.title };\n                    }\n                    options.title = deepExtend({}, defaults.title, options.title);\n                }\n                for (var i = 0; i < panesLength; i++) {\n                    var options = paneOptions[i] || {};\n                    setTitle(options, defaults);\n                    var currentPane = new Pane(options);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    this$1.append(currentPane);\n                }\n                this.panes = panes;\n            },\n            createCrosshairs: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    for (var j = 0; j < pane.axes.length; j++) {\n                        var axis = pane.axes[j];\n                        if (axis.options.crosshair && axis.options.crosshair.visible) {\n                            var currentCrosshair = new Crosshair(this$1.chartService, axis, axis.options.crosshair);\n                            this$1.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var crosshairs = this.crosshairs;\n                var axes = pane.axes;\n                for (var i = crosshairs.length - 1; i >= 0; i--) {\n                    for (var j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var pane = this.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                this.axes.push(axis);\n                axis.plotArea = this;\n            },\n            removeAxis: function (axisToRemove) {\n                var this$1 = this;\n                var filteredAxes = [];\n                for (var i = 0; i < this.axes.length; i++) {\n                    var axis = this$1.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                this.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                this.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    this.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var this$1 = this;\n                var filteredCharts = [];\n                for (var i = 0; i < this.charts.length; i++) {\n                    var chart = this$1.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                this.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length;\n                var legend = this.options.legend;\n                var labels = legend.labels || {};\n                var inactiveItems = legend.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                var data = [];\n                for (var i = 0; i < count; i++) {\n                    var currentSeries = series[i];\n                    var seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    var text = currentSeries.name;\n                    var labelTemplate = seriesVisible ? getTemplate(labels) : getTemplate(inactiveItemsLabels) || getTemplate(labels);\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: text,\n                            series: currentSeries\n                        });\n                    }\n                    var defaults = currentSeries._defaults;\n                    var color = currentSeries.color;\n                    if (isFunction(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    var itemLabelOptions = void 0, markerColor = void 0;\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (hasValue(text) && text !== '') {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [];\n                var yAxes = [];\n                for (var paneIx = 0; paneIx < panes.length; paneIx++) {\n                    var paneAxes = panes[paneIx].axes;\n                    for (var axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        var axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var this$1 = this;\n                var series = this.series;\n                var seriesByPane = {};\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var pane = this$1.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var result = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var options = this.options.plotArea;\n                var panes = this.panes;\n                var margin = getSpacing(options.margin);\n                this.box = targetBox.clone().unpad(margin);\n                this.reflowPanes();\n                this.reflowAxes(panes);\n                this.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var this$1 = this;\n                var panesArray = [].concat(panes);\n                this.initSeries();\n                for (var i = 0; i < panesArray.length; i++) {\n                    this$1.removeCrosshairs(panesArray[i]);\n                    panesArray[i].empty();\n                }\n                this.render(panesArray);\n                this.reflowAxes(this.panes);\n                this.reflowCharts(panesArray);\n                this.createCrosshairs(panesArray);\n                for (var i$1 = 0; i$1 < panesArray.length; i$1++) {\n                    panesArray[i$1].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                var valuesToAdd = crossingAxes.length - crossingValues.length;\n                var defaultValue = crossingValues[0] || 0;\n                for (var i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true);\n                var slotEdge = axis.options.reverse ? 2 : 1;\n                var targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true);\n                var targetEdge = targetAxis.options.reverse ? 2 : 1;\n                var axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var this$1 = this;\n                var xAnchor = xAxes[0];\n                var yAnchor = yAxes[0];\n                var xAnchorCrossings = this.axisCrossingValues(xAnchor, yAxes);\n                var yAnchorCrossings = this.axisCrossingValues(yAnchor, xAxes);\n                var leftAnchors = {};\n                var rightAnchors = {};\n                var topAnchors = {};\n                var bottomAnchors = {};\n                for (var i = 0; i < yAxes.length; i++) {\n                    var axis = yAxes[i];\n                    var pane = axis.pane;\n                    var paneId = pane.id;\n                    var visible = axis.options.visible !== false;\n                    var anchor = paneAnchor(xAxes, pane) || xAnchor;\n                    var anchorCrossings = xAnchorCrossings;\n                    if (anchor !== xAnchor) {\n                        anchorCrossings = this$1.axisCrossingValues(anchor, yAxes);\n                    }\n                    this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            leftAnchors[paneId] = axis;\n                        }\n                    }\n                    if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            rightAnchors[paneId] = axis;\n                        }\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (var i$1 = 0; i$1 < xAxes.length; i$1++) {\n                    var axis$1 = xAxes[i$1];\n                    var pane$1 = axis$1.pane;\n                    var paneId$1 = pane$1.id;\n                    var visible$1 = axis$1.options.visible !== false;\n                    var anchor$1 = paneAnchor(yAxes, pane$1) || yAnchor;\n                    var anchorCrossings$1 = yAnchorCrossings;\n                    if (anchor$1 !== yAnchor) {\n                        anchorCrossings$1 = this$1.axisCrossingValues(anchor$1, xAxes);\n                    }\n                    this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                    if (axis$1.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis$1.lineBox().y1) === round(anchor$1.lineBox().y1)) {\n                        if (!axis$1._mirrored) {\n                            axis$1.options.labels.mirror = !axis$1.options.labels.mirror;\n                            axis$1._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                        if (topAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(topAnchors[paneId$1].box, TOP).translate(0, -axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            topAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (round(axis$1.lineBox().y2, datavizConstants.COORD_PRECISION) === round(anchor$1.lineBox().y2, datavizConstants.COORD_PRECISION)) {\n                        if (bottomAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(bottomAnchors[paneId$1].box, BOTTOM).translate(0, axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            bottomAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (i$1 !== 0) {\n                        axis$1.alignTo(xAnchor);\n                        axis$1.reflow(axis$1.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var axisBox = axisGroupBox(axes);\n                var overflowX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = Math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                        var currentAxis = axes[i$1];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var shrinked;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var axes = currentPane.axes;\n                    var overflowY = Math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (var j = 0; j < axes.length; j++) {\n                            var currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var offsetX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var paneAxes = currentPane.axes;\n                    var paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        var axisBox = axisGroupBox(paneAxes);\n                        var offsetY = Math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        offsetX = Math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        for (var j = 0; j < paneAxes.length; j++) {\n                            var currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                    var currentAxis$1 = axes[i$1];\n                    currentAxis$1.reflow(currentAxis$1.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var this$1 = this;\n                var axes = this.groupAxes(panes);\n                for (var i = 0; i < panes.length; i++) {\n                    this$1.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    this.alignAxes(axes.x, axes.y);\n                    this.shrinkAxisWidth(panes);\n                    this.autoRotateAxisLabels(axes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisWidth(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.shrinkAxisHeight(panes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisHeight(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref.axes;\n                var panes = ref.panes;\n                var rotated;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (var idx$1 = 0; idx$1 < panes.length; idx$1++) {\n                        this$1.reflowPaneAxes(panes[idx$1]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes;\n                var length = axes.length;\n                if (length > 0) {\n                    for (var i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var charts = this.charts;\n                var count = charts.length;\n                var box = this.box;\n                for (var i = 0; i < count; i++) {\n                    var chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var ref = this;\n                var box = ref.box;\n                var panes = ref.panes;\n                var panesLength = panes.length;\n                var remainingHeight = box.height();\n                var remainingPanes = panesLength;\n                var autoHeightPanes = 0;\n                var top = box.y1;\n                for (var i = 0; i < panesLength; i++) {\n                    var currentPane = panes[i];\n                    var height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            var percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (var i$1 = 0; i$1 < panesLength; i$1++) {\n                    var currentPane$1 = panes[i$1];\n                    if (!currentPane$1.options.height) {\n                        currentPane$1.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (var i$2 = 0; i$2 < panesLength; i$2++) {\n                    var currentPane$2 = panes[i$2];\n                    var paneBox = box.clone().move(box.x1, top);\n                    currentPane$2.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane$2.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var axes = this.axes;\n                var axesCount = axes.length;\n                var box;\n                for (var i = 0; i < axesCount; i++) {\n                    var axisA = axes[i];\n                    for (var j = 0; j < axesCount; j++) {\n                        var axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            var lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || this.box;\n            },\n            chartsBoxes: function () {\n                var panes = this.panes;\n                var boxes = [];\n                for (var idx = 0; idx < panes.length; idx++) {\n                    boxes.push(panes[idx].chartsBox());\n                }\n                return boxes;\n            },\n            addBackgroundPaths: function (multipath) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    multipath.paths.push(Path.fromRect(boxes[idx].toRect()));\n                }\n            },\n            backgroundContainsPoint: function (point) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    if (boxes[idx].containsPoint(point)) {\n                        return true;\n                    }\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options.plotArea;\n                var opacity = options.opacity;\n                var background = options.background;\n                var border = options.border;\n                if (border === void 0) {\n                    border = {};\n                }\n                if (isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = new drawing.MultiPath({\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.addBackgroundPaths(bg);\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts;\n                var result = [];\n                if (categoryIndex !== null) {\n                    for (var i = 0; i < charts.length; i++) {\n                        var chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        var points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (var j = 0; j < points.length; j++) {\n                                var point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                return this.filterPoints(function (point) {\n                    return point.series.index === seriesIndex;\n                });\n            },\n            pointsBySeriesName: function (name) {\n                return this.filterPoints(function (point) {\n                    return point.series.name === name;\n                });\n            },\n            filterPoints: function (callback) {\n                var charts = this.charts;\n                var result = [];\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && callback(point)) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            findPoint: function (callback) {\n                var charts = this.charts;\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && callback(point)) {\n                            return point;\n                        }\n                    }\n                }\n            },\n            paneByPoint: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            }\n        });\n        function axisGroupBox(axes) {\n            var length = axes.length;\n            var box;\n            if (length > 0) {\n                for (var i = 0; i < length; i++) {\n                    var axisBox = axes[i].contentBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || new Box();\n        }\n        function paneAnchor(axes, pane) {\n            for (var i = 0; i < axes.length; i++) {\n                var anchor = axes[i];\n                if (anchor && anchor.pane === pane) {\n                    return anchor;\n                }\n            }\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        setDefaultOptions(PlotAreaBase, {\n            series: [],\n            plotArea: { margin: {} },\n            background: '',\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            legend: {\n                inactiveItems: {\n                    labels: { color: '#919191' },\n                    markers: { color: '#919191' }\n                }\n            }\n        });\n        var PlotAreaEventsMixin = {\n            hover: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n            },\n            click: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n            }\n        };\n        var SeriesAggregator = Class.extend({\n            init: function (series, binder, defaultAggregates) {\n                var canonicalFields = binder.canonicalFields(series);\n                var valueFields = binder.valueFields(series);\n                var sourceFields = binder.sourceFields(series, canonicalFields);\n                var seriesFields = this._seriesFields = [];\n                var defaults = defaultAggregates.query(series.type);\n                var rootAggregate = series.aggregate || defaults;\n                this._series = series;\n                this._binder = binder;\n                for (var i = 0; i < canonicalFields.length; i++) {\n                    var field = canonicalFields[i];\n                    var fieldAggregate = void 0;\n                    if (isObject(rootAggregate)) {\n                        fieldAggregate = rootAggregate[field];\n                    } else if (i === 0 || inArray(field, valueFields)) {\n                        fieldAggregate = rootAggregate;\n                    } else {\n                        break;\n                    }\n                    if (fieldAggregate) {\n                        seriesFields.push({\n                            canonicalName: field,\n                            name: sourceFields[i],\n                            transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                        });\n                    }\n                }\n            },\n            aggregatePoints: function (srcPoints, group) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref._series;\n                var seriesFields = ref._seriesFields;\n                var data = this._bindPoints(srcPoints || []);\n                var firstDataItem = data.dataItems[0];\n                var result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (var i = 0; i < seriesFields.length; i++) {\n                    var field = seriesFields[i];\n                    var srcValues = this$1._bindField(data.values, field.canonicalName);\n                    var value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            setValue(field.name, result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var ref = this;\n                var binder = ref._binder;\n                var series = ref._series;\n                var values = [];\n                var dataItems = [];\n                for (var i = 0; i < points.length; i++) {\n                    var pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [];\n                var count = data.length;\n                for (var i = 0; i < count; i++) {\n                    var item = data[i];\n                    var valueFields = item.valueFields;\n                    var value = void 0;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        });\n        function setValue(fieldName, target, value) {\n            var parentObj = target;\n            var field = fieldName;\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.');\n                while (parts.length > 1) {\n                    field = parts.shift();\n                    if (!defined(parentObj[field])) {\n                        parentObj[field] = {};\n                    }\n                    parentObj = parentObj[field];\n                }\n                field = parts.shift();\n            }\n            parentObj[field] = value;\n        }\n        var DefaultAggregates = Class.extend({\n            init: function () {\n                this._defaults = {};\n            },\n            register: function (seriesTypes, aggregates) {\n                var this$1 = this;\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this$1._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        });\n        DefaultAggregates.current = new DefaultAggregates();\n        var RangeBar = Bar.extend({\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelTemplate = getTemplate(options);\n                var labelText;\n                if (labelTemplate) {\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        percentage: this.percentage,\n                        runningTotal: this.runningTotal,\n                        total: this.total,\n                        series: this.series\n                    });\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options));\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var ref = this;\n                var labelFrom = ref.labelFrom;\n                var labelTo = ref.labelTo;\n                var value = ref.value;\n                this.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = value.from > value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = value.to > value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n            }\n        });\n        RangeBar.prototype.defaults = deepExtend({}, RangeBar.prototype.defaults, {\n            labels: { format: '{0} - {1}' },\n            tooltip: { format: '{1}' }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value.from, point.value.to);\n            },\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var from = value.from;\n                var to = value.to;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, from);\n                    axisRange.max = Math.max(axisRange.max, from);\n                    axisRange.min = Math.min(axisRange.min, to);\n                    axisRange.max = Math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        RangeBarChart.prototype.plotLimits = CategoricalChart.prototype.plotLimits;\n        var RangeLinePoint = LinePoint.extend({\n            aliasFor: function () {\n                return this.parent;\n            }\n        });\n        var AUTO = 'auto';\n        var DEFAULT_FROM_FORMAT = '{0}';\n        var DEFAULT_TO_FORMAT = '{1}';\n        var RangeAreaPoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n                this.initLabelsFormat();\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                var value = this.value;\n                var fromPoint = this.fromPoint = new RangeLinePoint(value, deepExtend({}, this.options, {\n                    labels: labels.from,\n                    markers: markers.from\n                }));\n                var toPoint = this.toPoint = new RangeLinePoint(value, deepExtend({}, this.options, {\n                    labels: labels.to,\n                    markers: markers.to\n                }));\n                this.copyFields(fromPoint);\n                this.copyFields(toPoint);\n                this.append(fromPoint);\n                this.append(toPoint);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var fromBox = targetBox.from;\n                var toBox = targetBox.to;\n                this.positionLabels(fromBox, toBox);\n                this.fromPoint.reflow(fromBox);\n                this.toPoint.reflow(toBox);\n                this.box = this.fromPoint.markerBox().clone().wrap(this.toPoint.markerBox());\n            },\n            createHighlight: function () {\n                var group = new Group();\n                group.append(this.fromPoint.createHighlight());\n                group.append(this.toPoint.createHighlight());\n                return group;\n            },\n            highlightVisual: function () {\n                return this.visual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    from: this.fromPoint.highlightVisualArgs(),\n                    to: this.toPoint.highlightVisualArgs()\n                };\n            },\n            tooltipAnchor: function () {\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(this.box);\n                if (showTooltip) {\n                    var box = this.box;\n                    var center = box.center();\n                    var horizontalAlign = LEFT;\n                    var x, y, verticalAlign;\n                    if (this.options.vertical) {\n                        x = center.x;\n                        y = box.y1 - TOOLTIP_OFFSET;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        x = box.x2 + TOOLTIP_OFFSET;\n                        y = center.y;\n                        verticalAlign = CENTER;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            },\n            unclipElements: function () {\n                this.fromPoint.unclipElements();\n                this.toPoint.unclipElements();\n            },\n            initLabelsFormat: function () {\n                var labels = this.options.labels;\n                if (!labels.format) {\n                    if (!labels.from || !labels.from.format) {\n                        labels.from = $.extend({}, labels.from, { format: DEFAULT_FROM_FORMAT });\n                    }\n                    if (!labels.to || !labels.to.format) {\n                        labels.to = $.extend({}, labels.to, { format: DEFAULT_TO_FORMAT });\n                    }\n                }\n            },\n            positionLabels: function (fromBox, toBox) {\n                var ref = this.options;\n                var labels = ref.labels;\n                var vertical = ref.vertical;\n                if (labels.position === AUTO) {\n                    var fromLabelPosition, toLabelPosition;\n                    if (vertical) {\n                        if (toBox.y1 <= fromBox.y1) {\n                            toLabelPosition = ABOVE;\n                            fromLabelPosition = BELOW;\n                        } else {\n                            toLabelPosition = BELOW;\n                            fromLabelPosition = ABOVE;\n                        }\n                    } else {\n                        if (toBox.x1 <= fromBox.x1) {\n                            toLabelPosition = LEFT;\n                            fromLabelPosition = RIGHT;\n                        } else {\n                            toLabelPosition = RIGHT;\n                            fromLabelPosition = LEFT;\n                        }\n                    }\n                    if (!labels.from || !labels.from.position) {\n                        this.fromPoint.options.labels.position = fromLabelPosition;\n                    }\n                    if (!labels.to || !labels.to.position) {\n                        this.toPoint.options.labels.position = toLabelPosition;\n                    }\n                }\n            },\n            copyFields: function (point) {\n                point.dataItem = this.dataItem;\n                point.category = this.category;\n                point.series = this.series;\n                point.color = this.color;\n                point.owner = this.owner;\n            }\n        });\n        deepExtend(RangeAreaPoint.prototype, PointEventsMixin);\n        deepExtend(RangeAreaPoint.prototype, NoteMixin);\n        RangeAreaPoint.prototype.defaults = {\n            markers: {\n                visible: false,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                position: AUTO\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: WHITE,\n                        width: 2\n                    }\n                },\n                zIndex: datavizConstants.HIGHLIGHT_ZINDEX\n            },\n            tooltip: { format: '{0} - {1}' }\n        };\n        var RangeAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.toGeometryPoints(this.toPoints()));\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.segmentsFromPoints(this.toGeometryPoints(this.fromPoints().reverse()));\n                }\n                return fromSegments;\n            },\n            createStroke: function (style) {\n                var toPath = new Path(style);\n                var fromPath = new Path(style);\n                toPath.segments.push.apply(toPath.segments, this.strokeSegments());\n                fromPath.segments.push.apply(fromPath.segments, this.stackSegments());\n                this.visual.append(toPath);\n                this.visual.append(fromPath);\n            },\n            hasStackSegment: function () {\n                return true;\n            },\n            fromPoints: function () {\n                return this.linePoints.map(function (point) {\n                    return point.fromPoint;\n                });\n            },\n            toPoints: function () {\n                return this.linePoints.map(function (point) {\n                    return point.toPoint;\n                });\n            }\n        });\n        var SplineRangeAreaSegment = RangeAreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.createCurveSegments(this.toPoints());\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.createCurveSegments(this.fromPoints().reverse());\n                }\n                return fromSegments;\n            },\n            createCurveSegments: function (points) {\n                var curveProcessor = new CurveProcessor();\n                return curveProcessor.process(this.toGeometryPoints(points));\n            }\n        });\n        var StepRangeAreaSegment = RangeAreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.calculateStepPoints(this.toPoints()));\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.segmentsFromPoints(this.calculateStepPoints(this.fromPoints()));\n                    fromSegments.reverse();\n                }\n                return fromSegments;\n            }\n        });\n        deepExtend(StepRangeAreaSegment.prototype, StepLineMixin);\n        var RangeAreaChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            pointType: function () {\n                return RangeAreaPoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                if (!hasValue(value.from) && !hasValue(value.to)) {\n                    if (this.seriesMissingValues(series) === ZERO) {\n                        value = {\n                            from: 0,\n                            to: 0\n                        };\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new RangeAreaPoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segmentType;\n                if (style === 'smooth') {\n                    segmentType = SplineRangeAreaSegment;\n                } else if (style === 'step') {\n                    segmentType = StepRangeAreaSegment;\n                } else {\n                    segmentType = RangeAreaSegment;\n                }\n                return new segmentType(linePoints, currentSeries, seriesIx);\n            },\n            plotRange: function (point, startValue) {\n                if (!point) {\n                    return [\n                        startValue,\n                        startValue\n                    ];\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            valueSlot: function (valueAxis, plotRange) {\n                var fromSlot = valueAxis.getSlot(plotRange[0], plotRange[0], !this.options.clip);\n                var toSlot = valueAxis.getSlot(plotRange[1], plotRange[1], !this.options.clip);\n                if (fromSlot && toSlot) {\n                    return {\n                        from: fromSlot,\n                        to: toSlot\n                    };\n                }\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var from = valueSlot.from;\n                var to = valueSlot.to;\n                var fromSlot, toSlot;\n                if (this.options.invertAxes) {\n                    fromSlot = new Box(from.x1, categorySlot.y1, from.x2, categorySlot.y2);\n                    toSlot = new Box(to.x1, categorySlot.y1, to.x2, categorySlot.y2);\n                } else {\n                    fromSlot = new Box(categorySlot.x1, from.y1, categorySlot.x2, from.y2);\n                    toSlot = new Box(categorySlot.x1, to.y1, categorySlot.x2, to.y2);\n                }\n                return {\n                    from: fromSlot,\n                    to: toSlot\n                };\n            },\n            addValue: function (data, fields) {\n                var valueFields = data.valueFields;\n                if (!isNumber(valueFields.from)) {\n                    valueFields.from = valueFields.to;\n                }\n                if (!isNumber(valueFields.to)) {\n                    valueFields.to = valueFields.from;\n                }\n                CategoricalChart.fn.addValue.call(this, data, fields);\n            },\n            updateRange: function (value, fields) {\n                if (value !== null && isNumber(value.from) && isNumber(value.to)) {\n                    var axisName = fields.series.axis;\n                    var axisRange = this.valueAxisRanges[axisName] = this.valueAxisRanges[axisName] || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    var from = value.from;\n                    var to = value.to;\n                    axisRange.min = Math.min(axisRange.min, from, to);\n                    axisRange.max = Math.max(axisRange.max, from, to);\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.from, value.to);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point) {\n                        result.push((point.fromPoint || {}).marker);\n                        result.push((point.toPoint || {}).marker);\n                    }\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(RangeAreaChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var oPoints = [];\n                var cPoints = [];\n                var lhPoints = [];\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                var oSlot = valueAxis.getSlot(value.open, value.open);\n                var cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                var mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                this.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                this.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                this.reflowNote();\n            },\n            createBody: function () {\n            }\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                ChartElement.fn.init.call(this);\n                this.from = from;\n                this.to = to;\n                this.series = series;\n            },\n            linePoints: function () {\n                var from = this.from;\n                var ref = this;\n                var fromBox = ref.from.box;\n                var toBox = ref.to.box;\n                var points = [];\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        setDefaultOptions(WaterfallSegment, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to = void 0;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: categories[categoryIx],\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint = void 0;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this$1.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        var AREA_SERIES = [\n            AREA,\n            VERTICAL_AREA,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ];\n        var OUT_OF_RANGE_SERIES = [\n            LINE,\n            VERTICAL_LINE\n        ].concat(AREA_SERIES);\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            initFields: function (series) {\n                var this$1 = this;\n                this.namedCategoryAxes = {};\n                this.namedValueAxes = {};\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    this.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        VERTICAL_RANGE_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL,\n                        VERTICAL_BOX_PLOT\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            this$1.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n            },\n            render: function (panes) {\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                this.createCategoryAxes(panes);\n                this.aggregateCategories(panes);\n                this.createCategoryAxesLabels(panes);\n                this.createCharts(panes);\n                this.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete this.namedCategoryAxes[axisName];\n                } else {\n                    this.valueAxisRangeTracker.reset(axisName);\n                    delete this.namedValueAxes[axisName];\n                }\n                if (axis === this.categoryAxis) {\n                    delete this.categoryAxis;\n                }\n                if (axis === this.valueAxis) {\n                    delete this.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var this$1 = this;\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this$1.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createRangeAreaChart(filterSeriesByType(series, [\n                    RANGE_AREA,\n                    VERTICAL_RANGE_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, [\n                    BOX_PLOT,\n                    VERTICAL_BOX_PLOT\n                ]), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var this$1 = this;\n                var series = this.srcSeries || this.series;\n                var processedSeries = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n                    var axisPane = this$1.findPane(categoryAxis.options.pane);\n                    var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n                    } else if (isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max)) {\n                        currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                this.srcSeries = series;\n                this.series = processedSeries;\n            },\n            filterSeries: function (series, categoryAxis) {\n                var range = categoryAxis.totalRangeIndices();\n                var justified = categoryAxis.options.justified;\n                var outOfRangePoints = inArray(series.type, OUT_OF_RANGE_SERIES);\n                range.min = isNumber(categoryAxis.options.min) ? Math.floor(range.min) : 0;\n                if (isNumber(categoryAxis.options.max)) {\n                    range.max = justified ? Math.floor(range.max) + 1 : Math.ceil(range.max);\n                } else {\n                    range.max = series.data.length;\n                }\n                var currentSeries = deepExtend({}, series);\n                if (outOfRangePoints) {\n                    var minCategory = range.min - 1;\n                    var srcCategories = categoryAxis.options.srcCategories || [];\n                    if (minCategory >= 0 && minCategory < currentSeries.data.length) {\n                        currentSeries._outOfRangeMinPoint = {\n                            item: currentSeries.data[minCategory],\n                            category: srcCategories[minCategory],\n                            categoryIx: -1\n                        };\n                    }\n                    if (range.max < currentSeries.data.length) {\n                        currentSeries._outOfRangeMaxPoint = {\n                            item: currentSeries.data[range.max],\n                            category: srcCategories[range.max],\n                            categoryIx: range.max - range.min\n                        };\n                    }\n                }\n                categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, currentSeries.data.length);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max);\n                return currentSeries;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var this$1 = this;\n                var outOfRangePoints = inArray(series.type, OUT_OF_RANGE_SERIES);\n                var ref = categoryAxis.options;\n                var categories = ref.categories;\n                var srcCategories = ref.srcCategories;\n                if (srcCategories === void 0) {\n                    srcCategories = categories;\n                }\n                var dataItems = ref.dataItems;\n                if (dataItems === void 0) {\n                    dataItems = [];\n                }\n                var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                var aggregatorSeries = deepExtend({}, series);\n                var result = deepExtend({}, series);\n                var srcData = series.data;\n                var srcPoints = [];\n                var outOfRangeMinIdx = MIN_VALUE;\n                var outOfRangeMaxIdx = MAX_VALUE;\n                var getFn = getField;\n                var outOfRangeMinCategory, outOfRangeMaxCategory;\n                if (dateAxis) {\n                    getFn = getDateField;\n                }\n                for (var i = 0; i < srcData.length; i++) {\n                    var category = void 0;\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[i], this$1.chartService.intl);\n                    } else {\n                        category = srcCategories[i];\n                    }\n                    if (defined(category)) {\n                        var categoryIx = categoryAxis.categoryIndex(category);\n                        if (0 <= categoryIx && categoryIx < categories.length) {\n                            srcPoints[categoryIx] = srcPoints[categoryIx] || [];\n                            srcPoints[categoryIx].push(i);\n                        } else if (outOfRangePoints) {\n                            if (categoryIx < 0) {\n                                if (categoryIx === outOfRangeMinIdx) {\n                                    outOfRangeMinCategory.points.push(i);\n                                } else if (categoryIx > outOfRangeMinIdx) {\n                                    outOfRangeMinIdx = categoryIx;\n                                    outOfRangeMinCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            } else if (categoryIx >= categories.length) {\n                                if (categoryIx === outOfRangeMaxIdx) {\n                                    outOfRangeMaxCategory.points.push(i);\n                                } else if (categoryIx < outOfRangeMaxIdx) {\n                                    outOfRangeMaxIdx = categoryIx;\n                                    outOfRangeMaxCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n                var aggregator = new SeriesAggregator(aggregatorSeries, SeriesBinder.current, DefaultAggregates.current);\n                var data = result.data = [];\n                for (var i$1 = 0; i$1 < categories.length; i$1++) {\n                    data[i$1] = aggregator.aggregatePoints(srcPoints[i$1], categories[i$1]);\n                    if (srcPoints[i$1]) {\n                        dataItems[i$1] = data[i$1];\n                    }\n                }\n                if (outOfRangeMinCategory && data.length) {\n                    result._outOfRangeMinPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMinCategory.points, outOfRangeMinCategory.category),\n                        categoryIx: outOfRangeMinIdx,\n                        category: outOfRangeMinCategory.category\n                    };\n                }\n                if (outOfRangeMaxCategory && data.length) {\n                    result._outOfRangeMaxPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMaxCategory.points, outOfRangeMaxCategory.category),\n                        categoryIx: outOfRangeMaxIdx,\n                        category: outOfRangeMaxCategory.category\n                    };\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var series = chart.options.series;\n                var categoryAxis = this.seriesCategoryAxis(series[0]);\n                var categories = categoryAxis.options.categories;\n                var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n                while (categoriesToAdd--) {\n                    categories.push('');\n                }\n                this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var axisName = series.axis;\n                var axisOptions = [].concat(options.valueAxis);\n                var axis = grep(axisOptions, function (a) {\n                    return a.name === axisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = (panes[0] || {}).name || 'default';\n                var paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var axisName = series.categoryAxis;\n                var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack;\n                var isStacked100 = stack && stack.type === '100%';\n                var clip = pane.options.clip;\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var categoryAxes = [];\n                var unique = {};\n                for (var idx = 0; idx < series.length; idx++) {\n                    var name = series[idx].categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        categoryAxes.push(name);\n                    }\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(series, axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var barChart = new BarChart(this, $.extend({\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var rangeColumnChart = new RangeBarChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var bulletChart = new BulletChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var lineChart = new LineChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var areaChart = new AreaChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(areaChart, pane);\n            },\n            createRangeAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var rangeAreaChart = new RangeAreaChart(this, {\n                    invertAxes: this.invertAxes,\n                    series: series,\n                    clip: pane.options.clip\n                });\n                this.appendChart(rangeAreaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new OHLCChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new CandlestickChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new BoxPlotChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var waterfallChart = new WaterfallChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var this$1 = this;\n                var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n                for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n                    var currentSeries = this$1.series[seriesIx];\n                    if (inArray(currentSeries.type, AREA_SERIES)) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n                    var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var this$1 = this;\n                var invertAxes = this.invertAxes;\n                var definitions = [].concat(this.options.categoryAxis);\n                var axes = [];\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var categories = axisOptions.categories;\n                        if (categories === void 0) {\n                            categories = [];\n                        }\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            reverse: !invertAxes && this$1.chartService.rtl,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = this$1.isJustified();\n                        }\n                        if (this$1.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        var categoryAxis = void 0;\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new DateCategoryAxis(axisOptions, this$1.chartService);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n                        }\n                        if (name) {\n                            if (this$1.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        this$1.appendAxis(categoryAxis);\n                    }\n                }\n                var primaryAxis = this.categoryAxis || axes[0];\n                this.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisY = primaryAxis;\n                } else {\n                    this.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (!inArray(currentSeries.type, AREA_SERIES)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var this$1 = this;\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var definitions = [].concat(this.options.valueAxis);\n                var invertAxes = this.invertAxes;\n                var baseOptions = {\n                    vertical: !invertAxes,\n                    reverse: invertAxes && this.chartService.rtl\n                };\n                var axes = [];\n                if (this.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        var range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = Math.min(range.min, defaultRange.min);\n                            range.max = Math.max(range.max, defaultRange.max);\n                        }\n                        var axisType = void 0;\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = dataviz.LogarithmicAxis;\n                        } else {\n                            axisType = dataviz.NumericAxis;\n                        }\n                        var valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions), this$1.chartService);\n                        if (name) {\n                            if (this$1.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        this$1.appendAxis(valueAxis);\n                    }\n                }\n                var primaryAxis = this.valueAxis || axes[0];\n                this.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisX = primaryAxis;\n                } else {\n                    this.axisY = primaryAxis;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var pane = this.pointPane(point);\n                var categories = [];\n                var values = [];\n                if (!pane) {\n                    return;\n                }\n                var allAxes = pane.axes;\n                for (var i = 0; i < allAxes.length; i++) {\n                    var axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                updateAxisOptions(this.options, axis, options);\n                updateAxisOptions(this.originalOptions, axis, options);\n            }\n        });\n        function updateAxisOptions(targetOptions, axis, options) {\n            var axesOptions = axis instanceof CategoryAxis ? [].concat(targetOptions.categoryAxis) : [].concat(targetOptions.valueAxis);\n            deepExtend(axesOptions[axis.axisIndex], options);\n        }\n        function groupSeries(series, axis, axisIx) {\n            return grep(series, function (s) {\n                return axisIx === 0 && !s.categoryAxis || s.categoryAxis === axis;\n            });\n        }\n        setDefaultOptions(CategoricalPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        deepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points) {\n                var this$1 = this;\n                var arrayPoints = [].concat(points);\n                this.hide();\n                for (var i = 0; i < arrayPoints.length; i++) {\n                    var point = arrayPoints[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this$1.togglePointHighlight(point, true);\n                        this$1._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        stackValue: point.stackValue,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show);\n                    }\n                } else {\n                    point.toggleHighlight(show);\n                }\n            },\n            hide: function () {\n                var this$1 = this;\n                var points = this._points;\n                while (points.length) {\n                    this$1.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element === point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var event = e.event;\n            var accept = key === 'none' && !(event.ctrlKey || event.shiftKey || event.altKey) || event[key + 'Key'];\n            return accept;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                var axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            start: function (e) {\n                this._active = acceptKey(e, this.options.key);\n                return this._active;\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                var active = this._active;\n                this._active = false;\n                return active;\n            },\n            pan: function () {\n                var ref = this;\n                var plotArea = ref.plotArea;\n                var axisRanges = ref.axisRanges;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.plotArea;\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() !== position) {\n                    var axes = plotArea.axes;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        var axis = axes[idx];\n                        if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n                            var range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        Pannable.prototype.options = {\n            key: 'none',\n            lock: 'none'\n        };\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this.createElement();\n            },\n            createElement: function () {\n                var marquee = this._marquee = document.createElement('div');\n                marquee.className = 'k-marquee';\n                var marqueeColor = document.createElement('div');\n                marqueeColor.className = 'k-marquee-color';\n                marquee.appendChild(marqueeColor);\n            },\n            removeElement: function () {\n                if (this._marquee.parentNode) {\n                    this._marquee.parentNode.removeChild(this._marquee);\n                }\n            },\n            setStyles: function (styles) {\n                elementStyles(this._marquee, styles);\n            },\n            start: function (e) {\n                if (acceptKey(e, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._eventCoordinates(e);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    if (zoomPane && zoomPane.clipBox()) {\n                        var clipBox = zoomPane.clipBox().clone();\n                        var offset = this._elementOffset();\n                        clipBox.translate(offset.left, offset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        document.body.appendChild(this._marquee);\n                        this.setStyles({\n                            left: e.pageX + 1,\n                            top: e.pageY + 1,\n                            width: 0,\n                            height: 0\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var ref = elementStyles(chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref.paddingLeft;\n                var paddingTop = ref.paddingTop;\n                var offset = dataviz.elementOffset(chartElement);\n                return {\n                    left: paddingLeft + offset.left,\n                    top: paddingTop + offset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    this.setStyles(this._selectionPosition(e));\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset$$1 = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset$$1.left;\n                    selectionPosition.top -= elementOffset$$1.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this.removeElement();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this.removeElement();\n                delete this._marquee;\n                delete this.chart;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.pointsRange(start, end);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var clipBox = this._zoomPaneClipBox;\n                var startLocation = {\n                    x: e.x.startLocation,\n                    y: e.y.startLocation\n                };\n                var pageX = e.x.location;\n                var pageY = e.y.location;\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = Math.min(startLocation.x, pageX);\n                var top = Math.min(startLocation.y, pageY);\n                var width = Math.abs(startLocation.x - pageX);\n                var height = Math.abs(startLocation.y - pageY);\n                if (lock === X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock === Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (pageX > clipBox.x2) {\n                    width = clipBox.x2 - startLocation.x;\n                }\n                if (pageX < clipBox.x1) {\n                    width = startLocation.x - clipBox.x1;\n                }\n                if (pageY > clipBox.y2) {\n                    height = clipBox.y2 - startLocation.y;\n                }\n                if (pageY < clipBox.y1) {\n                    height = startLocation.y - clipBox.y1;\n                }\n                return {\n                    left: Math.max(left, clipBox.x1),\n                    top: Math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        ZoomSelection.prototype.options = {\n            key: 'shift',\n            lock: 'none'\n        };\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.chart;\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n            },\n            render: function () {\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var vertical = options.vertical;\n                this.visual = new drawing.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal',\n                    reverse: options.rtl\n                });\n                for (var idx = 0; idx < children.length; idx++) {\n                    var legendItem = children[idx];\n                    legendItem.reflow(new Box());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: function () {\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.createContainer();\n                if (!options.rtl) {\n                    this.createMarker();\n                    this.createLabel();\n                } else {\n                    this.createLabel();\n                    this.createMarker();\n                }\n            },\n            createContainer: function () {\n                this.container = new dataviz.FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER,\n                    spacing: this.options.spacing\n                });\n                this.append(this.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labelOptions = deepExtend({}, options.labels);\n                this.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                BoxElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args)) {\n                    e.preventDefault();\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    e.preventDefault();\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: eventElement(e),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    this.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        sender: this.getSender(),\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: this.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            this$1.renderComplete();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var HORIZONTAL = 'horizontal';\n        var POINTER = 'pointer';\n        var CUSTOM = 'custom';\n        var Legend = ChartElement.extend({\n            init: function (options, chartService) {\n                if (chartService === void 0) {\n                    chartService = {};\n                }\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!inArray(this.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    this.options.position = RIGHT;\n                }\n                this.createContainer();\n                this.createItems();\n            },\n            createContainer: function () {\n                var options = this.options;\n                var position = options.position;\n                var userAlign = options.align;\n                var align = position;\n                var vAlign = CENTER;\n                if (position === CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign === 'start') {\n                        align = LEFT;\n                    } else if (userAlign === 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign === 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign === 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                this.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                this.append(this.container);\n            },\n            createItems: function () {\n                var chartService = this.getService();\n                var options = this.options;\n                var vertical = this.isVertical();\n                var innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing,\n                    rtl: chartService.rtl\n                }, chartService);\n                var items = options.items;\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                var count = items.length;\n                for (var i = 0; i < count; i++) {\n                    var item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels,\n                        rtl: chartService.rtl\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                this.container.append(innerElement);\n            },\n            isVertical: function () {\n                var ref = this.options;\n                var orientation = ref.orientation;\n                var position = ref.position;\n                var vertical = position === CUSTOM && orientation !== HORIZONTAL || (defined(orientation) ? orientation !== HORIZONTAL : inArray(position, [\n                    LEFT,\n                    RIGHT\n                ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var legendBox = targetBox.clone();\n                if (!this.hasItems()) {\n                    this.box = legendBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    this.containerCustomReflow(legendBox);\n                    this.box = legendBox;\n                } else {\n                    this.containerReflow(legendBox);\n                }\n            },\n            containerReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var position = options.position;\n                var width = options.width;\n                var height = options.height;\n                var pos = position === TOP || position === BOTTOM ? X : Y;\n                var vertical = this.isVertical();\n                var alignTarget = targetBox.clone();\n                var containerBox = targetBox.clone();\n                if (position === LEFT || position === RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                var box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    this.container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                this.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var offsetX = options.offsetX;\n                var offsetY = options.offsetY;\n                var width = options.width;\n                var height = options.height;\n                var vertical = this.isVertical();\n                var containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(new Box(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        setDefaultOptions(Legend, {\n            position: RIGHT,\n            items: [],\n            offsetX: 0,\n            offsetY: 0,\n            margin: getSpacing(5),\n            padding: getSpacing(5),\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            item: {\n                cursor: POINTER,\n                spacing: 6\n            },\n            spacing: 6,\n            background: '',\n            zIndex: 1,\n            markers: {\n                border: { width: 0 },\n                width: 15,\n                height: 3,\n                type: 'rect',\n                align: LEFT,\n                vAlign: CENTER\n            }\n        });\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options, chartService) {\n                var registry = this._registry;\n                var match = registry[0];\n                var series;\n                for (var idx = 0; idx < registry.length; idx++) {\n                    var entry = registry[idx];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options, chartService);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var ZOOM_ACCELERATION = 3;\n        var SELECTOR_HEIGHT_ADJUST = 0.1;\n        function createDiv(className) {\n            var element = document.createElement('div');\n            if (className) {\n                element.className = className;\n            }\n            return element;\n        }\n        function closestHandle(element) {\n            var current = element;\n            while (current && !hasClasses(current, 'k-handle')) {\n                current = current.parentNode;\n            }\n            return current;\n        }\n        var Selection = Class.extend({\n            init: function (chart, categoryAxis, options, observer) {\n                var chartElement = chart.element;\n                this.options = deepExtend({}, this.options, options);\n                this.chart = chart;\n                this.observer = observer;\n                this.chartElement = chartElement;\n                this.categoryAxis = categoryAxis;\n                this._dateAxis = this.categoryAxis instanceof DateCategoryAxis;\n                this.initOptions();\n                if (this.options.visible) {\n                    this.createElements();\n                    this.set(this._index(this.options.from), this._index(this.options.to));\n                    this.bindEvents();\n                }\n            },\n            createElements: function () {\n                var options = this.options;\n                var wrapper = this.wrapper = createDiv('k-selector');\n                elementStyles(wrapper, {\n                    top: options.offset.top,\n                    left: options.offset.left,\n                    width: options.width,\n                    height: options.height,\n                    direction: 'ltr'\n                });\n                var selection = this.selection = createDiv('k-selection');\n                this.leftMask = createDiv('k-mask');\n                this.rightMask = createDiv('k-mask');\n                wrapper.appendChild(this.leftMask);\n                wrapper.appendChild(this.rightMask);\n                wrapper.appendChild(selection);\n                selection.appendChild(createDiv('k-selection-bg'));\n                var leftHandle = this.leftHandle = createDiv('k-handle k-left-handle');\n                var rightHandle = this.rightHandle = createDiv('k-handle k-right-handle');\n                leftHandle.appendChild(createDiv());\n                rightHandle.appendChild(createDiv());\n                selection.appendChild(leftHandle);\n                selection.appendChild(rightHandle);\n                this.chartElement.appendChild(wrapper);\n                var selectionStyles = elementStyles(selection, [\n                    'borderLeftWidth',\n                    'borderRightWidth',\n                    'height'\n                ]);\n                var leftHandleHeight = elementStyles(leftHandle, 'height').height;\n                var rightHandleHeight = elementStyles(rightHandle, 'height').height;\n                options.selection = {\n                    border: {\n                        left: selectionStyles.borderLeftWidth,\n                        right: selectionStyles.borderRightWidth\n                    }\n                };\n                elementStyles(leftHandle, { top: (selectionStyles.height - leftHandleHeight) / 2 });\n                elementStyles(rightHandle, { top: (selectionStyles.height - rightHandleHeight) / 2 });\n                wrapper.style.cssText = wrapper.style.cssText;\n            },\n            bindEvents: function () {\n                this._mousewheelHandler = this.options.mousewheel !== false ? this._mousewheel.bind(this) : stopPropagation;\n                var obj;\n                bindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                this._domEvents = services.DomEventsBuilder.create(this.wrapper, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    press: this._press.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            initOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var box = categoryAxis.pane.chartsBox();\n                var intlService = this.chart.chartService.intl;\n                if (this._dateAxis) {\n                    deepExtend(options, {\n                        min: parseDate(intlService, options.min),\n                        max: parseDate(intlService, options.max),\n                        from: parseDate(intlService, options.from),\n                        to: parseDate(intlService, options.to)\n                    });\n                }\n                var ref$1 = elementStyles(this.chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref$1.paddingLeft;\n                var paddingTop = ref$1.paddingTop;\n                this.options = deepExtend({}, {\n                    width: box.width(),\n                    height: box.height() + SELECTOR_HEIGHT_ADJUST,\n                    padding: {\n                        left: paddingLeft,\n                        top: paddingTop\n                    },\n                    offset: {\n                        left: box.x1 + paddingLeft,\n                        top: box.y1 + paddingTop\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n            },\n            destroy: function () {\n                if (this._domEvents) {\n                    this._domEvents.destroy();\n                    delete this._domEvents;\n                }\n                clearTimeout(this._mwTimeout);\n                this._state = null;\n                if (this.wrapper) {\n                    var obj;\n                    unbindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                    this.chartElement.removeChild(this.wrapper);\n                }\n            },\n            _rangeEventArgs: function (range) {\n                return {\n                    axis: this.categoryAxis.options,\n                    from: this._value(range.from),\n                    to: this._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var options = this.options;\n                var target = eventElement(e);\n                if (this._state || !target) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                this._state = {\n                    moveTarget: closestHandle(target) || target,\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs({\n                    from: this._index(options.from),\n                    to: this._index(options.to)\n                });\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                }\n            },\n            _press: function (e) {\n                var handle;\n                if (this._state) {\n                    handle = this._state.moveTarget;\n                } else {\n                    handle = closestHandle(eventElement(e));\n                }\n                if (handle) {\n                    dataviz.addClass(handle, 'k-handle-active');\n                }\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var ref = this;\n                var state = ref._state;\n                var options = ref.options;\n                var axisOptions = ref.categoryAxis.options;\n                var range = state.range;\n                var target = state.moveTarget;\n                var reverse = axisOptions.reverse;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var delta = state.startLocation - e.x.location;\n                var oldRange = {\n                    from: range.from,\n                    to: range.to\n                };\n                var span = range.to - range.from;\n                var scale = elementStyles(this.wrapper, 'width').width / (axisOptions.categories.length - 1);\n                var offset = Math.round(delta / scale) * (reverse ? -1 : 1);\n                if (!target) {\n                    return;\n                }\n                var leftHandle = hasClasses(target, 'k-left-handle');\n                var rightHandle = hasClasses(target, 'k-right-handle');\n                if (hasClasses(target, 'k-selection k-selection-bg')) {\n                    range.from = Math.min(Math.max(min, from - offset), max - span);\n                    range.to = Math.min(range.from + span, max);\n                } else if (leftHandle && !reverse || rightHandle && reverse) {\n                    range.from = Math.min(Math.max(min, from - offset), max - 1);\n                    range.to = Math.max(range.from + 1, range.to);\n                } else if (leftHandle && reverse || rightHandle && !reverse) {\n                    range.to = Math.min(Math.max(min + 1, to - offset), max);\n                    range.from = Math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.move(range.from, range.to);\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                if (this._state) {\n                    var moveTarget = this._state.moveTarget;\n                    if (moveTarget) {\n                        dataviz.removeClass(moveTarget, 'k-handle-active');\n                    }\n                    var range = this._state.range;\n                    this.set(range.from, range.to);\n                    this.trigger(SELECT_END, this._rangeEventArgs(range));\n                    delete this._state;\n                }\n            },\n            _tap: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var coords = this.chart._eventCoordinates(e);\n                var categoryIx = categoryAxis.pointCategoryIndex(new Point(coords.x, categoryAxis.box.y1));\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var span = to - from;\n                var mid = from + span / 2;\n                var range = {};\n                var rightClick = e.event.which === 3;\n                var offset = Math.round(mid - categoryIx);\n                if (this._state || rightClick) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = Math.min(Math.max(min, from - offset), max - span);\n                range.to = Math.min(range.from + span, max);\n                this._start(e);\n                if (this._state) {\n                    this._state.range = range;\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                    this._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                this._start({ target: this.selection });\n                if (this._state) {\n                    var range = this._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (Math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (this.options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (this.expand(delta)) {\n                        this.trigger(SELECT, {\n                            axis: this.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: this._value(range.from),\n                            to: this._value(range.to)\n                        });\n                    }\n                    if (this._mwTimeout) {\n                        clearTimeout(this._mwTimeout);\n                    }\n                    this._mwTimeout = setTimeout(function () {\n                        this$1._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _gesturestart: function (e) {\n                var options = this.options;\n                this._state = {\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs(this._state.range);\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                } else {\n                    e.preventDefault();\n                }\n            },\n            _gestureend: function () {\n                if (this._state) {\n                    this.trigger(SELECT_END, this._rangeEventArgs(this._state.range));\n                    delete this._state;\n                }\n            },\n            _gesturechange: function (e) {\n                var ref = this;\n                var chart = ref.chart;\n                var state = ref._state;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var range = state.range;\n                var p0 = chart._toModelCoordinates(e.touches[0].x.location).x;\n                var p1 = chart._toModelCoordinates(e.touches[1].x.location).x;\n                var left = Math.min(p0, p1);\n                var right = Math.max(p0, p1);\n                e.preventDefault();\n                range.from = categoryAxis.pointCategoryIndex(new Point(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new Point(right)) || options.max;\n                this.move(range.from, range.to);\n                this.trigger(SELECT, this._rangeEventArgs(range));\n            },\n            _index: function (value) {\n                var index = value;\n                if (value instanceof Date) {\n                    index = this.categoryAxis.categoryIndex(value);\n                }\n                return index;\n            },\n            _value: function (index) {\n                var categories = this.categoryAxis.options.categories;\n                var value = index;\n                if (this._dateAxis) {\n                    if (index > categories.length - 1) {\n                        value = this.options.max;\n                    } else {\n                        value = categories[Math.ceil(index)];\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var categoryAxis = this.categoryAxis;\n                var index = this._index(value);\n                return categoryAxis.getSlot(index, index, true);\n            },\n            move: function (from, to) {\n                var options = this.options;\n                var reverse = this.categoryAxis.options.reverse;\n                var offset = options.offset;\n                var padding = options.padding;\n                var border = options.selection.border;\n                var left = reverse ? to : from;\n                var right = reverse ? from : to;\n                var edge = 'x' + (reverse ? 2 : 1);\n                var box = this._slot(left);\n                var leftMaskWidth = round(box[edge] - offset.left + padding.left);\n                elementStyles(this.leftMask, { width: leftMaskWidth });\n                elementStyles(this.selection, { left: leftMaskWidth });\n                box = this._slot(right);\n                var rightMaskWidth = round(options.width - (box[edge] - offset.left + padding.left));\n                elementStyles(this.rightMask, { width: rightMaskWidth });\n                var distance = options.width - rightMaskWidth;\n                if (distance !== options.width) {\n                    distance += border.right;\n                }\n                elementStyles(this.rightMask, { left: distance });\n                elementStyles(this.selection, { width: Math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0) });\n            },\n            set: function (from, to) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var fromValue = limitValue(this._index(from), min, max);\n                var toValue = limitValue(this._index(to), fromValue + 1, max);\n                if (options.visible) {\n                    this.move(fromValue, toValue);\n                }\n                options.from = this._value(fromValue);\n                options.to = this._value(toValue);\n            },\n            expand: function (delta) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var zDir = options.mousewheel.zoom;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var range = {\n                    from: from,\n                    to: to\n                };\n                var oldRange = deepExtend({}, range);\n                if (this._state) {\n                    range = this._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.set(range.from, range.to);\n                    return true;\n                }\n            },\n            trigger: function (name, args) {\n                return (this.observer || this.chart).trigger(name, args);\n            }\n        });\n        function stopPropagation(e) {\n            e.stopPropagation();\n        }\n        setDefaultOptions(Selection, {\n            visible: true,\n            mousewheel: { zoom: 'both' },\n            min: MIN_VALUE,\n            max: MAX_VALUE\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                if (!point || !point.tooltipAnchor || this._current && this._current === point) {\n                    return;\n                }\n                var options = deepExtend({}, this.options, point.options.tooltip);\n                var anchor = point.tooltipAnchor();\n                if (anchor) {\n                    this._current = point;\n                    BaseTooltip.fn.show.call(this, {\n                        point: point,\n                        anchor: anchor\n                    }, options, point);\n                } else {\n                    this.hide();\n                }\n            },\n            hide: function () {\n                delete this._current;\n                BaseTooltip.fn.hide.call(this);\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (plotArea, options) {\n                BaseTooltip.fn.init.call(this, plotArea.chartService, options);\n                this.plotArea = plotArea;\n                this.formatService = plotArea.chartService.format;\n            },\n            showAt: function (points, coords) {\n                var tooltipPoints = grep(points, function (point) {\n                    var tooltip = point.series.tooltip;\n                    var excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (tooltipPoints.length > 0) {\n                    var point = tooltipPoints[0];\n                    var slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n                    var anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n                    this.show({\n                        anchor: anchor,\n                        shared: true,\n                        points: points,\n                        category: point.category,\n                        categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n                        series: this.plotArea.series\n                    }, this.options);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var axis = this.plotArea.categoryAxis;\n                var align = {\n                    horizontal: 'left',\n                    vertical: 'center'\n                };\n                if (!axis.options.vertical) {\n                    point.x = slot.center().x;\n                }\n                return {\n                    point: point,\n                    align: align\n                };\n            },\n            _defaultAnchor: function (point, slot) {\n                var box = point.owner.pane.chartsBox();\n                var vertical = this.plotArea.categoryAxis.options.vertical;\n                var center = box.center();\n                var slotCenter = slot.center();\n                var align = {\n                    horizontal: 'center',\n                    vertical: 'center'\n                };\n                var centerPoint;\n                if (vertical) {\n                    centerPoint = new Point(center.x, slotCenter.y);\n                } else {\n                    centerPoint = new Point(slotCenter.x, center.y);\n                }\n                return {\n                    point: centerPoint,\n                    align: align\n                };\n            }\n        });\n        setDefaultOptions(SharedTooltip, { categoryFormat: '{0:d}' });\n        var BarChartAnimation = Animation.extend({\n            setup: function () {\n                var ref = this;\n                var element = ref.element;\n                var options = ref.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new GeometryPoint(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = dataviz.interpolateValue(this.fromScale.x, 1, pos);\n                var scaleY = dataviz.interpolateValue(this.fromScale.y, 1, pos);\n                this.element.transform(transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        setDefaultOptions(BarChartAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register(BAR, BarChartAnimation);\n        var BubbleAnimation = Animation.extend({\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.center));\n            }\n        });\n        setDefaultOptions(BubbleAnimation, { easing: 'easeOutElastic' });\n        AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var FadeInAnimation = Animation.extend({\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        setDefaultOptions(FadeInAnimation, {\n            duration: 200,\n            easing: 'linear'\n        });\n        AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var PieAnimation = Animation.extend({\n            setup: function () {\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.options.center));\n            }\n        });\n        setDefaultOptions(PieAnimation, {\n            easing: 'easeOutElastic',\n            duration: INITIAL_ANIMATION_DURATION\n        });\n        AnimationFactory.current.register(PIE, PieAnimation);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                ScatterChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.prototype, LineChartMixin);\n        var XYPlotArea = PlotAreaBase.extend({\n            initFields: function () {\n                this.namedXAxes = {};\n                this.namedYAxes = {};\n                this.xAxisRangeTracker = new AxisGroupRangeTracker();\n                this.yAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var filteredSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    this$1.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    this$1.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    this$1.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                this.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                this.xAxisRangeTracker.update(chart.xAxisRanges);\n                this.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis.options.vertical) {\n                    this.yAxisRangeTracker.reset(axisName);\n                    delete this.namedYAxes[axisName];\n                } else {\n                    this.xAxisRangeTracker.reset(axisName);\n                    delete this.namedXAxes[axisName];\n                }\n                if (axis === this.axisX) {\n                    delete this.axisX;\n                }\n                if (axis === this.axisY) {\n                    delete this.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var xAxisName = series.xAxis;\n                var xAxisOptions = [].concat(options.xAxis);\n                var xAxis = grep(xAxisOptions, function (a) {\n                    return a.name === xAxisName;\n                })[0];\n                var yAxisName = series.yAxis;\n                var yAxisOptions = [].concat(options.yAxis);\n                var yAxis = grep(yAxisOptions, function (a) {\n                    return a.name === yAxisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = panes[0].name || 'default';\n                var paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterLineChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new BubbleChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var axisName = options.name;\n                var namedAxes = vertical ? this.namedYAxes : this.namedXAxes;\n                var tracker = vertical ? this.yAxisRangeTracker : this.xAxisRangeTracker;\n                var axisOptions = deepExtend({ reverse: !vertical && this.chartService.rtl }, options, { vertical: vertical });\n                var isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC);\n                var defaultRange = tracker.query();\n                var defaultAxisRange = isLog ? {\n                    min: 0.1,\n                    max: 1\n                } : {\n                    min: 0,\n                    max: 1\n                };\n                var range = tracker.query(axisName) || defaultRange || defaultAxisRange;\n                var typeSamples = [\n                    axisOptions.min,\n                    axisOptions.max\n                ];\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName === axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        var firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var inferredDate;\n                for (var i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                var axisType;\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = dataviz.DateValueAxis;\n                } else if (isLog) {\n                    axisType = dataviz.LogarithmicAxis;\n                } else {\n                    axisType = dataviz.NumericAxis;\n                }\n                var axis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                axis.axisIndex = axisIndex;\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                this.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var this$1 = this;\n                var options = this.options;\n                var xAxesOptions = [].concat(options.xAxis);\n                var xAxes = [];\n                var yAxesOptions = [].concat(options.yAxis);\n                var yAxes = [];\n                for (var idx = 0; idx < xAxesOptions.length; idx++) {\n                    var axisPane = this$1.findPane(xAxesOptions[idx].pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(this$1.createXYAxis(xAxesOptions[idx], false, idx));\n                    }\n                }\n                for (var idx$1 = 0; idx$1 < yAxesOptions.length; idx$1++) {\n                    var axisPane$1 = this$1.findPane(yAxesOptions[idx$1].pane);\n                    if (inArray(axisPane$1, panes)) {\n                        yAxes.push(this$1.createXYAxis(yAxesOptions[idx$1], true, idx$1));\n                    }\n                }\n                this.axisX = this.axisX || xAxes[0];\n                this.axisY = this.axisY || yAxes[0];\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var allAxes = this.axes;\n                var length = allAxes.length;\n                var xValues = [];\n                var yValues = [];\n                for (var i = 0; i < length; i++) {\n                    var axis = allAxes[i];\n                    var values = axis.options.vertical ? yValues : xValues;\n                    var currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = (vertical ? axes.y : axes.x).indexOf(axis);\n                updateAxisOptions$1(this.options, index, vertical, options);\n                updateAxisOptions$1(this.originalOptions, index, vertical, options);\n            }\n        });\n        function updateAxisOptions$1(targetOptions, axisIndex, vertical, options) {\n            var axisOptions = [].concat(vertical ? targetOptions.yAxis : targetOptions.xAxis)[axisIndex];\n            deepExtend(axisOptions, options);\n        }\n        setDefaultOptions(XYPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(XYPlotArea.prototype, PlotAreaEventsMixin);\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.sector = sector;\n            },\n            render: function () {\n                var labels = this.options.labels;\n                var chartService = this.owner.chartService;\n                var labelText = this.value;\n                if (this._rendered || this.visible === false) {\n                    return;\n                }\n                this._rendered = true;\n                var labelTemplate = getTemplate(labels);\n                if (labelTemplate) {\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage\n                    });\n                } else if (labels.format) {\n                    labelText = chartService.format.auto(labels.format, labelText);\n                }\n                if (labels.visible && (labelText || labelText === 0)) {\n                    if (labels.position === CENTER || labels.position === INSIDE_END) {\n                        if (!labels.color) {\n                            var brightnessValue = new Color(this.options.color).percBrightness();\n                            if (brightnessValue > 180) {\n                                labels.color = BLACK;\n                            } else {\n                                labels.color = WHITE;\n                            }\n                        }\n                        if (!labels.background) {\n                            labels.background = this.options.color;\n                        }\n                    } else {\n                        var themeLabels = chartService.theme.seriesDefaults.labels;\n                        labels.color = labels.color || themeLabels.color;\n                        labels.background = labels.background || themeLabels.background;\n                    }\n                    this.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: this.animationDelay\n                        }\n                    }));\n                    this.append(this.label);\n                }\n            },\n            reflow: function (targetBox) {\n                this.render();\n                this.box = targetBox;\n                this.reflowLabel();\n            },\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var labelsDistance = labelsOptions.distance;\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    var labelWidth = label.box.width();\n                    var lp;\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius = Math.abs((sector.radius - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position === INSIDE_END) {\n                        sector.radius = sector.radius - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        var x1;\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.center.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(new Box(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                ChartElement.fn.createVisual.call(this);\n                if (this.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            series: this.series,\n                            percentage: this.percentage,\n                            center: new GeometryPoint(sector.center.x, sector.center.y),\n                            radius: sector.radius,\n                            innerRadius: sector.innerRadius,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            sender: this.getSender(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else {\n                        this.createSegmentVisual(this.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                var borderOptions = options.border || {};\n                var border = borderOptions.width > 0 ? {\n                    stroke: {\n                        color: borderOptions.color,\n                        width: borderOptions.width,\n                        opacity: borderOptions.opacity,\n                        dashType: borderOptions.dashType\n                    }\n                } : {};\n                var color = options.color;\n                var fill = {\n                    color: color,\n                    opacity: options.opacity\n                };\n                var visual = this.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.center.x,\n                            sector.center.y\n                        ],\n                        innerRadius: sector.innerRadius,\n                        radius: sector.radius,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new drawing.Circle(new geometry.Circle(new GeometryPoint(sector.center.x, sector.center.y), sector.radius), options);\n                }\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            },\n            createAnimation: function () {\n                var ref = this;\n                var options = ref.options;\n                var center = ref.sector.center;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var highlight = this.options.highlight || {};\n                var border = highlight.border || {};\n                return this.createSegment(this.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.radius,\n                    innerRadius: sector.innerRadius,\n                    center: new GeometryPoint(sector.center.x, sector.center.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function () {\n                var sector = this.sector.clone().expand(TOOLTIP_OFFSET);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                return {\n                    point: midPoint,\n                    align: tooltipAlignment(midAndle + 180)\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        var RAD_30 = round(dataviz.rad(30), DEFAULT_PRECISION);\n        var RAD_60 = round(dataviz.rad(60), DEFAULT_PRECISION);\n        function tooltipAlignment(angle) {\n            var radians = dataviz.rad(angle);\n            var sine = round(Math.sin(radians), DEFAULT_PRECISION);\n            var cosine = round(Math.cos(radians), DEFAULT_PRECISION);\n            var horizontal;\n            if (Math.abs(sine) > RAD_60) {\n                horizontal = CENTER;\n            } else if (cosine < 0) {\n                horizontal = RIGHT;\n            } else {\n                horizontal = LEFT;\n            }\n            var vertical;\n            if (Math.abs(sine) < RAD_30) {\n                vertical = CENTER;\n            } else if (sine < 0) {\n                vertical = BOTTOM;\n            } else {\n                vertical = TOP;\n            }\n            return {\n                horizontal: horizontal,\n                vertical: vertical\n            };\n        }\n        setDefaultOptions(PieSegment, {\n            color: WHITE,\n            overlay: { gradient: 'roundedBevel' },\n            border: { width: 0.5 },\n            labels: {\n                visible: false,\n                distance: 35,\n                font: datavizConstants.DEFAULT_FONT,\n                margin: getSpacing(0.5),\n                align: CIRCLE,\n                zIndex: 1,\n                position: OUTSIDE_END\n            },\n            animation: { type: PIE },\n            highlight: {\n                visible: true,\n                border: { width: 1 }\n            },\n            visible: true\n        });\n        deepExtend(PieSegment.prototype, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var legendOptions = this.options.legend || {};\n                var labelsOptions = legendOptions.labels || {};\n                var inactiveItems = legendOptions.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                if (options && options.visibleInLegend !== false) {\n                    var pointVisible = options.visible !== false;\n                    var labelTemplate = pointVisible ? getTemplate(labelsOptions) : getTemplate(inactiveItemsLabels) || getTemplate(labelsOptions);\n                    var text = options.category;\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    var itemLabelOptions, markerColor;\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (hasValue(text) && text !== '') {\n                        this.legendItems.push({\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        var PIE_SECTOR_ANIM_DELAY = 70;\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.points = [];\n                this.legendItems = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var colorsCount = seriesColors.length;\n                var series = options.series;\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var data = currentSeries.data;\n                    var ref$1 = bindSegments(currentSeries);\n                    var total = ref$1.total;\n                    var points = ref$1.points;\n                    var count = ref$1.count;\n                    var anglePerValue = 360 / total;\n                    var constantAngle = void 0;\n                    if (!isFinite(anglePerValue)) {\n                        constantAngle = 360 / count;\n                    }\n                    var currentAngle = void 0;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx !== seriesCount - 1) {\n                        if (currentSeries.labels.position === OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (var i = 0; i < points.length; i++) {\n                        var pointData = points[i];\n                        if (!pointData) {\n                            continue;\n                        }\n                        var fields = pointData.fields;\n                        var value = pointData.value;\n                        var visible = pointData.visible;\n                        var angle = value !== 0 ? constantAngle || value * anglePerValue : 0;\n                        var explode = data.length !== 1 && Boolean(fields.explode);\n                        if (!isFunction(currentSeries.color)) {\n                            currentSeries.color = fields.color || seriesColors[i % colorsCount];\n                        }\n                        callback(pointData.valueFields.value, new dataviz.Ring(null, 0, 0, currentAngle, angle), {\n                            owner: this$1,\n                            category: defined(fields.category) ? fields.category : '',\n                            index: i,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? value / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: this$1.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (visible !== false) {\n                            currentAngle += angle;\n                        }\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                var segment = new PieSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var points = ref.points;\n                var seriesConfigs = ref.seriesConfigs;\n                if (seriesConfigs === void 0) {\n                    seriesConfigs = [];\n                }\n                var count = points.length;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var newBox = new Box(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth);\n                var newBoxCenter = newBox.center();\n                var boxCenter = box.center();\n                var seriesCount = options.series.length;\n                var leftSideLabels = [];\n                var rightSideLabels = [];\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                var radius = halfMinWidth - padding;\n                var center = new Point(radius + newBox.x1 + padding, radius + newBox.y1 + padding);\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var seriesIndex = segment.seriesIx;\n                    sector.radius = radius;\n                    sector.center = center;\n                    if (seriesConfigs.length) {\n                        var seriesConfig = seriesConfigs[seriesIndex];\n                        sector.innerRadius = seriesConfig.innerRadius;\n                        sector.radius = seriesConfig.radius;\n                    }\n                    if (seriesIndex === seriesCount - 1 && segment.explode) {\n                        sector.center = sector.clone().setRadius(sector.radius * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    var label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex === seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(this.labelComparator(true));\n                    this.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(this.labelComparator(false));\n                    this.rightLabelsReflow(rightSideLabels);\n                }\n                this.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var count = labels.length - 1;\n                var lr = sector.radius + segment.options.labels.distance;\n                var distances = [];\n                var firstBox = labels[0].box;\n                var distance = round(firstBox.y1 - (sector.center.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (var i = 0; i < count; i++) {\n                    var secondBox = labels[i + 1].box;\n                    firstBox = labels[i].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.center.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var this$1 = this;\n                var count = distances.length;\n                var left, right, remaining;\n                for (var i = 0; i < count; i++) {\n                    remaining = -distances[i];\n                    left = right = i;\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = this$1._takeDistance(distances, i, --left, remaining);\n                        remaining = this$1._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                this.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                var result = amount;\n                if (distances[position] > 0) {\n                    var available = Math.min(distances[position], result);\n                    result -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return result;\n            },\n            reflowLabels: function (distances, labels) {\n                var this$1 = this;\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var labelOptions = segment.options.labels;\n                var labelsCount = labels.length;\n                var labelDistance = labelOptions.distance;\n                var boxY = sector.center.y - (sector.radius + labelDistance) - labels[0].box.height();\n                var boxX;\n                distances[0] += 2;\n                for (var i = 0; i < labelsCount; i++) {\n                    var label = labels[i];\n                    var box = label.box;\n                    boxY += distances[i];\n                    boxX = this$1.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation === RIGHT);\n                    if (label.orientation === RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.radius + sector.center.x + labelDistance;\n                        }\n                        label.reflow(new Box(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.center.x - sector.radius - labelDistance;\n                        }\n                        label.reflow(new Box(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var connectors = ref.options.connectors;\n                var points = ref.points;\n                var count = points.length;\n                var space = 4;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var label = segment.label;\n                    var angle = sector.middle();\n                    var connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n                    if (label) {\n                        var connectorLine = new Path({\n                            stroke: {\n                                color: connectorsColor,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END) {\n                            var box = label.box;\n                            var centerPoint = sector.center;\n                            var start = sector.point(angle);\n                            var middle = new Point(box.x1, box.center().y);\n                            var sr = void 0, end = void 0, crossing = void 0;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation === RIGHT) {\n                                end = new Point(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.min(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x < sector.center.x) {\n                                    sr = sector.center.x + sector.radius + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = new Point(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.max(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x > sector.center.x) {\n                                    sr = sector.center.x - sector.radius - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this$1._connectorLines.push(connectorLine);\n                            this$1.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                var reverseValue = reverse ? -1 : 1;\n                return function (a, b) {\n                    var first = (a.parent.sector.middle() + 270) % 360;\n                    var second = (b.parent.sector.middle() + 270) % 360;\n                    return (first - second) * reverseValue;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var radius = sector.radius;\n                var sector_center = sector.center;\n                var cx = sector_center.x;\n                var cy = sector_center.y;\n                var t = Math.min(Math.abs(cy - y1), Math.abs(cy - y2));\n                if (t > radius) {\n                    return originalX;\n                }\n                return cx + Math.sqrt(radius * radius - t * t) * (direction ? 1 : -1);\n            },\n            pointInCircle: function (point, center, radius) {\n                return Math.pow(center.x - point.x, 2) + Math.pow(center.y - point.y, 2) < Math.pow(radius, 2);\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var uat = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\n            var ub = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n            var result;\n            if (ub !== 0) {\n                var ua = uat / ub;\n                result = new Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        setDefaultOptions(PieChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            },\n            inactiveItems: {\n                markers: {},\n                labels: {}\n            }\n        });\n        deepExtend(PieChart.prototype, PieChartMixin);\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createPieChart(this.series);\n            },\n            createPieChart: function (series) {\n                var firstSeries = series[0];\n                var pieChart = new PieChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    startAngle: firstSeries.startAngle,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutSegment = PieSegment.extend({\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius -= (sector.radius - sector.innerRadius) / 2;\n                        var lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(this);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        setDefaultOptions(DonutSegment, {\n            overlay: { gradient: 'roundedGlass' },\n            labels: { position: CENTER },\n            animation: { type: PIE }\n        });\n        deepExtend(DonutSegment.prototype, PointEventsMixin);\n        var DONUT_SECTOR_ANIM_DELAY = 50;\n        var DonutChart = PieChart.extend({\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                var segment = new DonutSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var series = options.series;\n                var seriesCount = series.length;\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                var totalSize = halfMinWidth - padding;\n                var seriesWithoutSize = 0;\n                var holeSize;\n                for (var i = 0; i < seriesCount; i++) {\n                    var currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i !== seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    var currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                var innerRadius = holeSize;\n                var margin = 0;\n                var size, radius;\n                this.seriesConfigs = [];\n                for (var i$1 = 0; i$1 < seriesCount; i$1++) {\n                    var currentSeries$1 = series[i$1];\n                    size = valueOrDefault(currentSeries$1.size, totalSize / seriesWithoutSize);\n                    innerRadius += margin;\n                    radius = innerRadius + size;\n                    this$1.seriesConfigs.push({\n                        innerRadius: innerRadius,\n                        radius: radius\n                    });\n                    margin = currentSeries$1.margin || 0;\n                    innerRadius = radius;\n                }\n                PieChart.fn.reflow.call(this, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        setDefaultOptions(DonutChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                this.createDonutChart(this.series);\n            },\n            createDonutChart: function (series) {\n                var firstSeries = series[0];\n                var donutChart = new DonutChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(donutChart);\n            }\n        });\n        var DEFAULT_PADDING = 0.15;\n        var PolarPlotAreaBase = PlotAreaBase.extend({\n            initFields: function () {\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function () {\n                this.addToLegend(this.series);\n                this.createPolarAxis();\n                this.createCharts();\n                this.createValueAxis();\n            },\n            alignAxes: function () {\n                var axis = this.valueAxis;\n                var range = axis.range();\n                var crossingValue = axis.options.reverse ? range.max : range.min;\n                var slot = axis.getSlot(crossingValue);\n                var center = this.polarAxis.getSlot(0).center;\n                var axisBox = axis.box.translate(center.x - slot.x1, center.y - slot.y1);\n                axis.reflow(axisBox);\n            },\n            createValueAxis: function () {\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var axisOptions = this.valueAxisOptions({\n                    roundToMajorUnit: false,\n                    zIndex: -1\n                });\n                var axisType, axisDefaultRange;\n                if (axisOptions.type === LOGARITHMIC) {\n                    axisType = dataviz.RadarLogarithmicAxis;\n                    axisDefaultRange = {\n                        min: 0.1,\n                        max: 1\n                    };\n                } else {\n                    axisType = dataviz.RadarNumericAxis;\n                    axisDefaultRange = {\n                        min: 0,\n                        max: 1\n                    };\n                }\n                var range = tracker.query(name) || defaultRange || axisDefaultRange;\n                if (range && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var valueAxis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                this.valueAxis = valueAxis;\n                this.appendAxis(valueAxis);\n            },\n            reflowAxes: function () {\n                var ref = this;\n                var options = ref.options.plotArea;\n                var valueAxis = ref.valueAxis;\n                var polarAxis = ref.polarAxis;\n                var box = ref.box;\n                var defaultPadding = Math.min(box.width(), box.height()) * DEFAULT_PADDING;\n                var padding = getSpacing(options.padding || {}, defaultPadding);\n                var paddingBox = box.clone().unpad(padding);\n                var axisBox = paddingBox.clone();\n                axisBox.y2 = axisBox.y1 + Math.min(axisBox.width(), axisBox.height());\n                axisBox.align(paddingBox, Y, CENTER);\n                var valueAxisBox = axisBox.clone().shrink(0, axisBox.height() / 2);\n                polarAxis.reflow(axisBox);\n                valueAxis.reflow(valueAxisBox);\n                var heightDiff = valueAxis.lineBox().height() - valueAxis.box.height();\n                valueAxis.reflow(valueAxis.box.unpad({ top: heightDiff }));\n                this.axisBox = axisBox;\n                this.alignAxes(axisBox);\n            },\n            backgroundBox: function () {\n                return this.box;\n            }\n        });\n        var PolarScatterChart = ScatterChart.extend({\n            pointSlot: function (slotX, slotY) {\n                var valueRadius = slotX.center.y - slotY.y1;\n                var slot = Point.onCircle(slotX.center, slotX.startAngle, valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            }\n        });\n        setDefaultOptions(PolarScatterChart, { clip: false });\n        var PolarLineChart = ScatterLineChart.extend({});\n        PolarLineChart.prototype.pointSlot = PolarScatterChart.prototype.pointSlot;\n        setDefaultOptions(PolarLineChart, { clip: false });\n        var SplinePolarAreaSegment = SplineAreaSegment.extend({\n            fillToAxes: function (fillPath) {\n                var center = this._polarAxisCenter();\n                fillPath.lineTo(center.x, center.y);\n            },\n            _polarAxisCenter: function () {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                return center;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var center = this._polarAxisCenter();\n                    var curveProcessor = new CurveProcessor(false);\n                    var linePoints = this.points();\n                    linePoints.push(center);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                    segments.pop();\n                }\n                return segments;\n            }\n        });\n        var PolarAreaSegment = AreaSegment.extend({\n            fillToAxes: function (fillPath) {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                var centerSegment = new geometry.Segment([\n                    center.x,\n                    center.y\n                ]);\n                fillPath.segments.unshift(centerSegment);\n                fillPath.segments.push(centerSegment);\n            }\n        });\n        var PolarAreaChart = PolarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplinePolarAreaSegment(linePoints, currentSeries, seriesIx);\n                } else {\n                    segment = new PolarAreaSegment(linePoints, currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            createMissingValue: function (value, missingValues) {\n                var missingValue;\n                if (hasValue(value.x) && missingValues !== INTERPOLATE) {\n                    missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (missingValues === ZERO) {\n                        missingValue.y = 0;\n                    }\n                }\n                return missingValue;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            },\n            _hasMissingValuesGap: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (this$1.seriesMissingValues(series[idx]) === GAP) {\n                        return true;\n                    }\n                }\n            },\n            sortPoints: function (points) {\n                var this$1 = this;\n                points.sort(xComparer);\n                if (this._hasMissingValuesGap()) {\n                    for (var idx = 0; idx < points.length; idx++) {\n                        var point = points[idx];\n                        if (point) {\n                            var value = point.value;\n                            if (!hasValue(value.y) && this$1.seriesMissingValues(point.series) === GAP) {\n                                delete points[idx];\n                            }\n                        }\n                    }\n                }\n                return points;\n            }\n        });\n        function xComparer(a, b) {\n            return a.value.x - b.value.x;\n        }\n        var PolarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var polarAxis = new dataviz.PolarAxis(this.options.xAxis, this.chartService);\n                this.polarAxis = polarAxis;\n                this.axisX = polarAxis;\n                this.appendAxis(polarAxis);\n            },\n            valueAxisOptions: function (defaults) {\n                return deepExtend(defaults, {\n                    majorGridLines: { type: ARC },\n                    minorGridLines: { type: ARC }\n                }, this.options.yAxis);\n            },\n            createValueAxis: function () {\n                PolarPlotAreaBase.fn.createValueAxis.call(this);\n                this.axisY = this.valueAxis;\n            },\n            appendChart: function (chart, pane) {\n                this.valueAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createLineChart(filterSeriesByType(series, [POLAR_LINE]), pane);\n                this.createScatterChart(filterSeriesByType(series, [POLAR_SCATTER]), pane);\n                this.createAreaChart(filterSeriesByType(series, [POLAR_AREA]), pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new PolarLineChart(this, { series: series });\n                this.appendChart(lineChart, pane);\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var scatterChart = new PolarScatterChart(this, { series: series });\n                this.appendChart(scatterChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new PolarAreaChart(this, { series: series });\n                this.appendChart(areaChart, pane);\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var xValue = this.axisX.getValue(point);\n                var yValue = this.axisY.getValue(point);\n                if (xValue !== null && yValue !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        x: xValue,\n                        y: yValue\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        setDefaultOptions(PolarPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(PolarPlotArea.prototype, PlotAreaEventsMixin);\n        var RadarLineChart = LineChart.extend({\n            pointSlot: function (categorySlot, valueSlot) {\n                var valueRadius = categorySlot.center.y - valueSlot.y1;\n                var slot = Point.onCircle(categorySlot.center, categorySlot.middle(), valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                var segment = new pointType(linePoints, currentSeries, seriesIx);\n                if (linePoints.length === currentSeries.data.length) {\n                    segment.options.closed = true;\n                }\n                return segment;\n            }\n        });\n        setDefaultOptions(RadarLineChart, {\n            clip: false,\n            limitPoints: false\n        });\n        var SplineRadarAreaSegment = SplineAreaSegment.extend({\n            fillToAxes: function () {\n            }\n        });\n        var RadarAreaSegment = AreaSegment.extend({\n            fillToAxes: function () {\n            }\n        });\n        var RadarAreaChart = RadarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var previousSegment;\n                var stackPoints;\n                var segment;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    stackPoints = prevSegment.linePoints.slice(0);\n                    previousSegment = prevSegment;\n                }\n                if (style === SMOOTH) {\n                    segment = new SplineRadarAreaSegment(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n                    segment.options.closed = true;\n                } else {\n                    linePoints.push(linePoints[0]);\n                    segment = new RadarAreaSegment(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n                }\n                return segment;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var RadarSegment = DonutSegment.extend({\n            init: function (value, options) {\n                DonutSegment.fn.init.call(this, value, null, options);\n            }\n        });\n        setDefaultOptions(RadarSegment, {\n            overlay: { gradient: 'none' },\n            labels: { distance: 10 }\n        });\n        var RadarClusterLayout = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.forEach = options.rtl ? forEachReverse : forEach;\n            },\n            reflow: function (sector) {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var gap = options.gap;\n                var spacing = options.spacing;\n                var count = children.length;\n                var slots = count + gap + spacing * (count - 1);\n                var slotAngle = sector.angle / slots;\n                var angle = sector.startAngle + slotAngle * (gap / 2);\n                this.forEach(children, function (child) {\n                    var slotSector = sector.clone();\n                    slotSector.startAngle = angle;\n                    slotSector.angle = slotAngle;\n                    if (child.sector) {\n                        slotSector.radius = child.sector.radius;\n                    }\n                    child.reflow(slotSector);\n                    child.sector = slotSector;\n                    angle += slotAngle + slotAngle * spacing;\n                });\n            }\n        });\n        setDefaultOptions(RadarClusterLayout, {\n            gap: 1,\n            spacing: 0\n        });\n        var RadarStackLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var reverse = ref.options.reverse;\n                var children = ref.children;\n                var childrenCount = children.length;\n                var first = reverse ? childrenCount - 1 : 0;\n                var step = reverse ? -1 : 1;\n                this.box = new Box();\n                for (var i = first; i >= 0 && i < childrenCount; i += step) {\n                    var childSector = children[i].sector;\n                    childSector.startAngle = sector.startAngle;\n                    childSector.angle = sector.angle;\n                }\n            }\n        });\n        var RadarBarChart = BarChart.extend({\n            pointType: function () {\n                return RadarSegment;\n            },\n            clusterType: function () {\n                return RadarClusterLayout;\n            },\n            stackType: function () {\n                return RadarStackLayout;\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var slot = categorySlot.clone();\n                var y = categorySlot.center.y;\n                slot.radius = y - valueSlot.y1;\n                slot.innerRadius = y - valueSlot.y2;\n                return slot;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.sector = pointSlot;\n                point.reflow();\n            },\n            createAnimation: function () {\n                this.options.animation.center = this.box.toRect().center();\n                BarChart.fn.createAnimation.call(this);\n            }\n        });\n        RadarBarChart.prototype.reflow = CategoricalChart.prototype.reflow;\n        setDefaultOptions(RadarBarChart, {\n            clip: false,\n            limitPoints: false,\n            animation: { type: 'pie' }\n        });\n        var RadarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var categoryAxis = new dataviz.RadarCategoryAxis(this.options.categoryAxis, this.chartService);\n                this.polarAxis = categoryAxis;\n                this.categoryAxis = categoryAxis;\n                this.appendAxis(categoryAxis);\n                this.aggregateCategories();\n                this.createCategoryAxesLabels();\n            },\n            valueAxisOptions: function (defaults) {\n                if (this._hasBarCharts) {\n                    deepExtend(defaults, {\n                        majorGridLines: { type: ARC },\n                        minorGridLines: { type: ARC }\n                    });\n                }\n                if (this._isStacked100) {\n                    deepExtend(defaults, {\n                        roundToMajorUnit: false,\n                        labels: { format: 'P0' }\n                    });\n                }\n                return deepExtend(defaults, this.options.valueAxis);\n            },\n            aggregateCategories: function () {\n                CategoricalPlotArea.prototype.aggregateCategories.call(this, this.panes);\n            },\n            createCategoryAxesLabels: function () {\n                CategoricalPlotArea.prototype.createCategoryAxesLabels.call(this, this.panes);\n            },\n            filterSeries: function (currentSeries) {\n                return currentSeries;\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createAreaChart(filterSeriesByType(series, [RADAR_AREA]), pane);\n                this.createLineChart(filterSeriesByType(series, [RADAR_LINE]), pane);\n                this.createBarChart(filterSeriesByType(series, [RADAR_COLUMN]), pane);\n            },\n            chartOptions: function (series) {\n                var options = { series: series };\n                var firstSeries = series[0];\n                if (firstSeries) {\n                    var filteredSeries = this.filterVisibleSeries(series);\n                    var stack = firstSeries.stack;\n                    options.isStacked = stack && filteredSeries.length > 1;\n                    options.isStacked100 = stack && stack.type === '100%' && filteredSeries.length > 1;\n                    if (options.isStacked100) {\n                        this._isStacked100 = true;\n                    }\n                }\n                return options;\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new RadarAreaChart(this, this.chartOptions(series));\n                this.appendChart(areaChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new RadarLineChart(this, this.chartOptions(series));\n                this.appendChart(lineChart, pane);\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var options = this.chartOptions(series);\n                options.gap = firstSeries.gap;\n                options.spacing = firstSeries.spacing;\n                var barChart = new RadarBarChart(this, options);\n                this.appendChart(barChart, pane);\n                this._hasBarCharts = true;\n            },\n            seriesCategoryAxis: function () {\n                return this.categoryAxis;\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var category = this.categoryAxis.getCategory(point);\n                var value = this.valueAxis.getValue(point);\n                if (category !== null && value !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        category: category,\n                        value: value\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        deepExtend(RadarPlotArea.prototype, PlotAreaEventsMixin, {\n            appendChart: CategoricalPlotArea.prototype.appendChart,\n            aggregateSeries: CategoricalPlotArea.prototype.aggregateSeries\n        });\n        setDefaultOptions(RadarPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        var FunnelSegment = ChartElement.extend({\n            init: function (value, options, segmentOptions) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.options.index = segmentOptions.index;\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var label = this.children[0];\n                this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n                if (label) {\n                    label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual;\n                ChartElement.fn.createVisual.call(this);\n                if (options.visual) {\n                    visual = options.visual({\n                        category: this.category,\n                        dataItem: this.dataItem,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage,\n                        points: this.points,\n                        options: options,\n                        sender: this.getSender(),\n                        createVisual: function () {\n                            return this$1.createPath();\n                        }\n                    });\n                } else {\n                    visual = this.createPath();\n                }\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            },\n            createPath: function () {\n                var options = this.options;\n                var border = options.border;\n                var path = Path.fromPoints(this.points, {\n                    fill: {\n                        color: options.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: border.color,\n                        opacity: border.opacity,\n                        width: border.width\n                    }\n                }).close();\n                return path;\n            },\n            createHighlight: function (style) {\n                return Path.fromPoints(this.points, style);\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var path = Path.fromPoints(this.points).close();\n                return {\n                    options: this.options,\n                    path: path\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                return {\n                    point: new Point(box.center().x, box.y1),\n                    align: {\n                        horizontal: 'center',\n                        vertical: 'top'\n                    }\n                };\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        setDefaultOptions(FunnelSegment, {\n            color: WHITE,\n            border: { width: 1 }\n        });\n        deepExtend(FunnelSegment.prototype, PointEventsMixin);\n        var FunnelChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.points = [];\n                this.labels = [];\n                this.legendItems = [];\n                this.render();\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            render: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var series = options.series[0];\n                var data = series.data;\n                if (!data) {\n                    return;\n                }\n                var ref$1 = bindSegments(series);\n                var total = ref$1.total;\n                var points = ref$1.points;\n                for (var i = 0; i < points.length; i++) {\n                    var pointData = points[i];\n                    if (!pointData) {\n                        continue;\n                    }\n                    var fields = pointData.fields;\n                    if (!isFunction(series.color)) {\n                        series.color = fields.color || seriesColors[i % seriesColors.length];\n                    }\n                    fields = deepExtend({\n                        index: i,\n                        owner: this$1,\n                        series: series,\n                        dataItem: data[i],\n                        percentage: pointData.value / total\n                    }, fields, { visible: pointData.visible });\n                    var value = pointData.valueFields.value;\n                    var segment = this$1.createSegment(value, fields);\n                    var label = this$1.createLabel(value, fields);\n                    if (segment && label) {\n                        segment.append(label);\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    index: fields.index\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'toggle',\n                        'visual'\n                    ]\n                });\n            },\n            createSegment: function (value, fields) {\n                var seriesOptions = deepExtend({}, fields.series);\n                this.evalSegmentOptions(seriesOptions, value, fields);\n                this.createLegendItem(value, seriesOptions, fields);\n                if (fields.visible !== false) {\n                    var segment = new FunnelSegment(value, seriesOptions, fields);\n                    $.extend(segment, fields);\n                    this.append(segment);\n                    this.points.push(segment);\n                    return segment;\n                }\n            },\n            createLabel: function (value, fields) {\n                var series = fields.series;\n                var dataItem = fields.dataItem;\n                var labels = deepExtend({}, this.options.labels, series.labels);\n                var text = value;\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            dataItem: dataItem,\n                            value: value,\n                            percentage: fields.percentage,\n                            category: fields.category,\n                            series: series\n                        });\n                    } else if (labels.format) {\n                        text = this.plotArea.chartService.format.auto(labels.format, text);\n                    }\n                    if (!labels.color) {\n                        var brightnessValue = new Color(series.color).percBrightness();\n                        if (brightnessValue > 180) {\n                            labels.color = BLACK;\n                        } else {\n                            labels.color = WHITE;\n                        }\n                        if (!labels.background) {\n                            labels.background = series.color;\n                        }\n                    }\n                    this.evalSegmentOptions(labels, value, fields);\n                    var textBox = new TextBox(text, deepExtend({ vAlign: labels.position }, labels));\n                    this.labels.push(textBox);\n                    return textBox;\n                }\n            },\n            labelPadding: function () {\n                var labels = this.labels;\n                var padding = {\n                    left: 0,\n                    right: 0\n                };\n                for (var i = 0; i < labels.length; i++) {\n                    var label = labels[i];\n                    var align = label.options.align;\n                    if (align !== CENTER) {\n                        var width = labels[i].box.width();\n                        if (align === LEFT) {\n                            padding.left = Math.max(padding.left, width);\n                        } else {\n                            padding.right = Math.max(padding.right, width);\n                        }\n                    }\n                }\n                return padding;\n            },\n            dynamicSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var firstSegment = segments[0];\n                var maxSegment = firstSegment;\n                for (var idx = 0; idx < segments.length; idx++) {\n                    if (segments[idx].percentage > maxSegment.percentage) {\n                        maxSegment = segments[idx];\n                    }\n                }\n                var lastUpperSide = firstSegment.percentage / maxSegment.percentage * width;\n                var previousOffset = (width - lastUpperSide) / 2;\n                var previousHeight = 0;\n                for (var idx$1 = 0; idx$1 < count; idx$1++) {\n                    var percentage = segments[idx$1].percentage;\n                    var nextSegment = segments[idx$1 + 1];\n                    var nextPercentage = nextSegment ? nextSegment.percentage : percentage;\n                    var points = segments[idx$1].points = [];\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    var offset = void 0;\n                    if (!percentage) {\n                        offset = nextPercentage ? 0 : width / 2;\n                    } else {\n                        offset = (width - lastUpperSide * (nextPercentage / percentage)) / 2;\n                    }\n                    offset = limitValue(offset, 0, width);\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + offset, box.y1 + height + previousHeight));\n                    previousOffset = offset;\n                    previousHeight += height + options.segmentSpacing;\n                    lastUpperSide = limitValue(width - 2 * offset, 0, width);\n                }\n            },\n            constantSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var decreasingWidth = options.neckRatio <= 1;\n                var neckRatio = decreasingWidth ? options.neckRatio * width : width;\n                var previousOffset = decreasingWidth ? 0 : (width - width / options.neckRatio) / 2;\n                var topMostWidth = decreasingWidth ? width : width - previousOffset * 2;\n                var finalNarrow = (topMostWidth - neckRatio) / 2;\n                var previousHeight = 0;\n                for (var idx = 0; idx < count; idx++) {\n                    var points = segments[idx].points = [];\n                    var percentage = segments[idx].percentage;\n                    var offset = options.dynamicHeight ? finalNarrow * percentage : finalNarrow / count;\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + previousOffset + offset, box.y1 + height + previousHeight));\n                    previousOffset += offset;\n                    previousHeight += height + options.segmentSpacing;\n                }\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var count = points.length;\n                if (!count) {\n                    return;\n                }\n                var options = this.options;\n                var box = chartBox.clone().unpad(this.labelPadding());\n                var totalHeight = box.height() - options.segmentSpacing * (count - 1);\n                var width = box.width();\n                if (options.dynamicSlope) {\n                    this.dynamicSlopeReflow(box, width, totalHeight);\n                } else {\n                    this.constantSlopeReflow(box, width, totalHeight);\n                }\n                for (var idx = 0; idx < count; idx++) {\n                    points[idx].reflow(chartBox);\n                }\n            }\n        });\n        setDefaultOptions(FunnelChart, {\n            neckRatio: 0.3,\n            width: 300,\n            dynamicSlope: false,\n            dynamicHeight: true,\n            segmentSpacing: 0,\n            labels: {\n                visible: false,\n                align: CENTER,\n                position: CENTER,\n                zIndex: 1\n            }\n        });\n        deepExtend(FunnelChart.prototype, PieChartMixin);\n        var FunnelPlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createFunnelChart(this.series);\n            },\n            createFunnelChart: function (series) {\n                var firstSeries = series[0];\n                var funnelChart = new FunnelChart(this, {\n                    series: series,\n                    legend: this.options.legend,\n                    neckRatio: firstSeries.neckRatio,\n                    dynamicHeight: firstSeries.dynamicHeight,\n                    dynamicSlope: firstSeries.dynamicSlope,\n                    segmentSpacing: firstSeries.segmentSpacing,\n                    highlight: firstSeries.highlight\n                });\n                this.appendChart(funnelChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var COLOR = 'color';\n        var FIRST = 'first';\n        var FROM = 'from';\n        var MAX = 'max';\n        var MIN = 'min';\n        var NOTE_TEXT = 'noteText';\n        var SUMMARY_FIELD = 'summary';\n        var TO = 'to';\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        PlotAreaFactory.current.register(FunnelPlotArea, [FUNNEL]);\n        PlotAreaFactory.current.register(PolarPlotArea, [\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ]);\n        PlotAreaFactory.current.register(RadarPlotArea, [\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        SeriesBinder.current.register([\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ], [\n            X,\n            Y\n        ], [COLOR]);\n        SeriesBinder.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], [VALUE], [COLOR]);\n        SeriesBinder.current.register([FUNNEL], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            'visible'\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        DefaultAggregates.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], {\n            value: MAX,\n            color: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        var AXIS_NAMES = [\n            CATEGORY,\n            VALUE,\n            X,\n            Y\n        ];\n        var MOUSEMOVE = 'mousemove';\n        var CONTEXTMENU = 'contextmenu';\n        var MOUSEMOVE_DELAY = 20;\n        var Chart = Class.extend({\n            init: function (element, userOptions, themeOptions, context) {\n                var this$1 = this;\n                if (context === void 0) {\n                    context = {};\n                }\n                this.observers = [];\n                this.addObserver(context.observer);\n                this.chartService = new services.ChartService(this, context);\n                this.chartService.theme = themeOptions;\n                this._initElement(element);\n                var options = deepExtend({}, this.options, userOptions);\n                this._originalOptions = deepExtend({}, options);\n                this._theme = themeOptions;\n                this._initTheme(options, themeOptions);\n                this._initSurface();\n                this._initHandlers();\n                this.bindCategories();\n                dataviz.FontLoader.preloadFonts(userOptions, function () {\n                    if (!this$1._destroyed) {\n                        this$1.trigger('init');\n                        this$1._redraw();\n                        this$1._attachEvents();\n                    }\n                });\n            },\n            _initElement: function (element) {\n                this._setElementClass(element);\n                element.style.position = 'relative';\n                while (element.firstChild) {\n                    element.removeChild(element.firstChild);\n                }\n                this.element = element;\n            },\n            _setElementClass: function (element) {\n                dataviz.addClass(element, 'k-chart');\n            },\n            _initTheme: function (options, themeOptions) {\n                var seriesCopies = [];\n                var series = options.series || [];\n                for (var i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                this.applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    delete options.seriesColors;\n                }\n                this.options = deepExtend({}, themeOptions, options);\n                this.applySeriesColors();\n            },\n            getSize: function () {\n                return {\n                    width: this.element.offsetWidth,\n                    height: this.element.offsetHeight\n                };\n            },\n            resize: function (force) {\n                var size = this.getSize();\n                var currentSize = this._size;\n                if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n                    this._size = size;\n                    this._resize(size, force);\n                    this.trigger('resize', size);\n                }\n            },\n            _resize: function () {\n                this._noTransitionsRedraw();\n            },\n            redraw: function (paneName) {\n                this.applyDefaults(this.options);\n                this.applySeriesColors();\n                if (paneName) {\n                    var plotArea = this._model._plotArea;\n                    var pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    this._redraw();\n                }\n            },\n            getAxis: function (name) {\n                var axes = this._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    if (axes[idx].options.name === name) {\n                        return new ChartAxis(axes[idx]);\n                    }\n                }\n            },\n            findAxisByName: function (name) {\n                return this.getAxis(name);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(panes[idx]);\n                }\n            },\n            plotArea: function () {\n                return new ChartPlotArea(this._plotArea);\n            },\n            toggleHighlight: function (show, filter) {\n                var plotArea = this._plotArea;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var points;\n                if (isFunction(filter)) {\n                    points = plotArea.filterPoints(filter);\n                } else {\n                    var seriesName, categoryName;\n                    if (isObject(filter)) {\n                        seriesName = filter.series;\n                        categoryName = filter.category;\n                    } else {\n                        seriesName = categoryName = filter;\n                    }\n                    if (firstSeries.type === DONUT) {\n                        points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                    } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                        points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                    } else {\n                        points = plotArea.pointsBySeriesName(seriesName);\n                    }\n                }\n                if (points) {\n                    this.togglePointsHighlight(show, points);\n                }\n            },\n            togglePointsHighlight: function (show, points) {\n                var highlight = this._highlight;\n                for (var idx = 0; idx < points.length; idx++) {\n                    highlight.togglePointHighlight(points[idx], show);\n                }\n            },\n            showTooltip: function (filter) {\n                var shared = this._sharedTooltip();\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var plotArea = ref._plotArea;\n                var point, categoryIndex;\n                if (isFunction(filter)) {\n                    point = plotArea.findPoint(filter);\n                    if (point && shared) {\n                        categoryIndex = point.categoryIx;\n                    }\n                } else if (shared && defined(filter)) {\n                    categoryIndex = plotArea.categoryAxis.categoryIndex(filter);\n                }\n                if (shared) {\n                    if (categoryIndex >= 0) {\n                        var points = this._plotArea.pointsByCategoryIndex(categoryIndex);\n                        tooltip.showAt(points);\n                    }\n                } else if (point) {\n                    tooltip.show(point);\n                }\n            },\n            hideTooltip: function () {\n                this._tooltip.hide();\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea;\n                if (chartArea.width) {\n                    dataviz.elementSize(wrap, { width: chartArea.width });\n                }\n                if (chartArea.height) {\n                    dataviz.elementSize(wrap, { height: chartArea.height });\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    if (surface) {\n                        surface.destroy();\n                    }\n                    this.surface = drawing.Surface.create(wrap, { type: this.options.renderAs });\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var model = this._getModel();\n                this._destroyView();\n                this._model = model;\n                this._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                this._initSurface();\n                this.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                this._tooltip = this._createTooltip();\n                this._highlight = new Highlight();\n                this._setupSelection();\n                this._createPannable();\n                this._createZoomSelection();\n                this._createMousewheelZoom();\n                this.trigger(RENDER);\n                if (!this._navState) {\n                    this._cancelDomEvents();\n                }\n            },\n            exportVisual: function (exportOptions) {\n                var visual;\n                if (exportOptions && (exportOptions.width || exportOptions.height || exportOptions.options)) {\n                    var currentOptions = this.options;\n                    var options = deepExtend({}, exportOptions.options, {\n                        chartArea: {\n                            width: exportOptions.width,\n                            height: exportOptions.height\n                        }\n                    });\n                    clearMissingValues(this._originalOptions, options);\n                    this.options = deepExtend({}, this._originalOptions, options);\n                    this._initTheme(this.options, this._theme);\n                    this.bindCategories();\n                    var model = this._getModel();\n                    model.renderVisual();\n                    visual = model.visual;\n                    this.options = currentOptions;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                return this._plotArea instanceof CategoricalPlotArea && this.options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _toggleDomDrag: function () {\n                if (!this.domEvents || !this.domEvents.toggleDrag) {\n                    return;\n                }\n                var pannable = this.options.pannable;\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (!pannable && (zoomable === false || selection === false) && !this.requiresHandlers([\n                        DRAG_START,\n                        DRAG,\n                        DRAG_END\n                    ])) {\n                    this.domEvents.toggleDrag(false);\n                } else {\n                    this.domEvents.toggleDrag(true);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _toggleDomZoom: function () {\n                if (!this.domEvents || !this.domEvents.toggleZoom) {\n                    return;\n                }\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if ((zoomable === false || mousewheel === false) && !this.requiresHandlers([\n                        ZOOM_START,\n                        ZOOM,\n                        ZOOM_END\n                    ])) {\n                    this.domEvents.toggleZoom(false);\n                } else {\n                    this.domEvents.toggleZoom(true);\n                }\n            },\n            _createTooltip: function () {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var tooltip;\n                if (this._sharedTooltip()) {\n                    tooltip = this._createSharedTooltip(tooltipOptions);\n                } else {\n                    tooltip = new Tooltip(this.chartService, tooltipOptions);\n                }\n                return tooltip;\n            },\n            _createSharedTooltip: function (options) {\n                return new SharedTooltip(this._plotArea, options);\n            },\n            applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            applySeriesColors: function () {\n                var options = this.options;\n                var series = options.series;\n                var colors = options.seriesColors || [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var seriesColor = colors[i % colors.length];\n                    var defaults = currentSeries._defaults;\n                    currentSeries.color = currentSeries.color || seriesColor;\n                    if (defaults) {\n                        defaults.color = defaults.color || seriesColor;\n                    }\n                }\n            },\n            _getModel: function () {\n                var options = this.options;\n                var plotArea = this._createPlotArea();\n                var model = new dataviz.RootElement(this._modelOptions());\n                model.chart = this;\n                model._plotArea = plotArea;\n                dataviz.Title.buildTitle(options.title, model);\n                if (options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend, this.chartService));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var element = ref.element;\n                var size = dataviz.elementSize(element);\n                this._size = null;\n                return deepExtend({\n                    width: Math.floor(size.width) || datavizConstants.DEFAULT_WIDTH,\n                    height: Math.floor(size.height) || datavizConstants.DEFAULT_HEIGHT,\n                    transitions: options.transitions\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var options = this.options;\n                var plotArea = PlotAreaFactory.current.create(skipSeries ? [] : options.series, options, this.chartService);\n                return plotArea;\n            },\n            _hasSelection: function () {\n                return this._selections && this._selections.length;\n            },\n            _setupSelection: function () {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref._plotArea.axes;\n                var selections = this._selections = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        var min = 0;\n                        var max = options.categories.length - 1;\n                        if (axis instanceof DateCategoryAxis) {\n                            min = options.categories[min];\n                            max = options.categories[max];\n                        }\n                        if (!options.justified) {\n                            if (axis instanceof DateCategoryAxis) {\n                                max = dataviz.addDuration(max, 1, options.baseUnit, options.weekStartDay);\n                            } else {\n                                max++;\n                            }\n                        }\n                        var selection = new Selection(this$1, axis, deepExtend({\n                            min: min,\n                            max: max\n                        }, options.select));\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _initHandlers: function () {\n                this._clickHandler = this._click.bind(this);\n                this._mousewheelHandler = this._mousewheel.bind(this);\n                this._surfaceMouseenterHandler = this._mouseover.bind(this);\n                this._surfaceMouseleaveHandler = this._mouseout.bind(this);\n                this._mousemove = kendo.throttle(this._mousemove.bind(this), MOUSEMOVE_DELAY);\n            },\n            addObserver: function (observer) {\n                if (observer) {\n                    this.observers.push(observer);\n                }\n            },\n            removeObserver: function (observer) {\n                var index = this.observers.indexOf(observer);\n                if (index >= 0) {\n                    this.observers.splice(index, 1);\n                }\n            },\n            requiresHandlers: function (eventNames) {\n                var observers = this.observers;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].requiresHandlers(eventNames)) {\n                        return true;\n                    }\n                }\n            },\n            trigger: function (name, args) {\n                if (args === void 0) {\n                    args = {};\n                }\n                if (name === SHOW_TOOLTIP) {\n                    args.anchor.point = this._toDocumentCoordinates(args.anchor.point);\n                }\n                args.sender = this;\n                var observers = this.observers;\n                var isDefaultPrevented = false;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].trigger(name, args)) {\n                        isDefaultPrevented = true;\n                    }\n                }\n                return isDefaultPrevented;\n            },\n            _attachEvents: function () {\n                var ref = this;\n                var element = ref.element;\n                var surface = ref.surface;\n                surface.bind('mouseenter', this._surfaceMouseenterHandler);\n                surface.bind('mouseleave', this._surfaceMouseleaveHandler);\n                var obj;\n                bindEvents(element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n                this.domEvents = services.DomEventsBuilder.create(this.element, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n                this._toggleDomDrag();\n                this._toggleDomZoom();\n            },\n            _cancelDomEvents: function () {\n                if (this.domEvents && this.domEvents.cancel) {\n                    this.domEvents.cancel();\n                }\n            },\n            _gesturestart: function (e) {\n                if (this._mousewheelZoom && !this._stopDragEvent(e)) {\n                    this._gestureDistance = e.distance;\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                }\n            },\n            _gestureend: function (e) {\n                if (this._zooming && !this._stopDragEvent(e)) {\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                    this._zooming = false;\n                    this.trigger(ZOOM_END, {});\n                }\n            },\n            _gesturechange: function (e) {\n                var mousewheelZoom = this._mousewheelZoom;\n                if (mousewheelZoom && !this._stopDragEvent(e)) {\n                    e.preventDefault();\n                    var previousGestureDistance = this._gestureDistance;\n                    var scaleDelta = -e.distance / previousGestureDistance + 1;\n                    if (Math.abs(scaleDelta) >= 0.1) {\n                        scaleDelta = Math.round(scaleDelta * 10);\n                        this._gestureDistance = e.distance;\n                        var args = {\n                            delta: scaleDelta,\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        };\n                        if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                            if (!this._zooming) {\n                                this._zooming = true;\n                            }\n                            var ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                            if (ranges && !this.trigger(ZOOM, args)) {\n                                mousewheelZoom.zoom();\n                            }\n                        }\n                    }\n                }\n            },\n            _mouseout: function (e) {\n                if (e.element) {\n                    var element = this._drawingChartElement(e.element, e);\n                    if (element && element.leave) {\n                        element.leave(this, e.originalEvent);\n                    }\n                }\n            },\n            _start: function (e) {\n                var coords = this._eventCoordinates(e);\n                if (this._stopDragEvent(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (this.requiresHandlers([\n                        DRAG_START,\n                        DRAG,\n                        DRAG_END\n                    ])) {\n                    this._startNavigation(e, coords, DRAG_START);\n                }\n                if (this._pannable && this._pannable.start(e)) {\n                    this.surface.suspendTracking();\n                    this._unsetActivePoint();\n                    this._suppressHover = true;\n                }\n                if (this._zoomSelection) {\n                    if (this._zoomSelection.start(e)) {\n                        this.trigger(ZOOM_START, {\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _move: function (e) {\n                var ref = this;\n                var state = ref._navState;\n                var pannable = ref._pannable;\n                if (this._stopDragEvent(e)) {\n                    return;\n                }\n                if (pannable) {\n                    var ranges = pannable.move(e);\n                    if (ranges && !this.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    var ranges$1 = {};\n                    var axes = state.axes;\n                    for (var i = 0; i < axes.length; i++) {\n                        var currentAxis = axes[i];\n                        var axisName = currentAxis.options.name;\n                        if (axisName) {\n                            var axis = currentAxis.options.vertical ? e.y : e.x;\n                            var delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges$1[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges$1;\n                    this.trigger(DRAG, {\n                        axisRanges: ranges$1,\n                        originalEvent: e\n                    });\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                if (this._stopDragEvent(e)) {\n                    return;\n                }\n                var pannable = this._pannable;\n                if (pannable && pannable.end(e)) {\n                    this.surface.resumeTracking();\n                    this.trigger(DRAG_END, {\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                } else {\n                    this._endNavigation(e, DRAG_END);\n                }\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                        this.trigger(ZOOM_END, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _stopDragEvent: function () {\n                return this._hasSelection();\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                var mousewheelZoom = this._mousewheelZoom;\n                var coords = this._eventCoordinates(e);\n                if (!this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (mousewheelZoom) {\n                    var args = {\n                        delta: delta,\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    };\n                    if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                        e.preventDefault();\n                        if (!this._zooming) {\n                            this._unsetActivePoint();\n                            this.surface.suspendTracking();\n                            this._zooming = true;\n                        }\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        args.axisRanges = mousewheelZoom.updateRanges(delta);\n                        if (args.axisRanges && !this.trigger(ZOOM, args)) {\n                            mousewheelZoom.zoom();\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1.trigger(ZOOM_END, args);\n                            this$1._zooming = false;\n                            if (this$1.surface) {\n                                this$1.surface.resumeTracking();\n                            }\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                } else {\n                    var state = this._navState;\n                    if (!state) {\n                        var prevented = this._startNavigation(e, coords, ZOOM_START);\n                        if (!prevented) {\n                            state = this._navState;\n                        }\n                    }\n                    if (state) {\n                        var totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        var axes = this._navState.axes;\n                        var ranges = {};\n                        for (var i = 0; i < axes.length; i++) {\n                            var currentAxis = axes[i];\n                            var axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        this.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, coords, chartEvent) {\n                var plotArea = this._model._plotArea;\n                var pane = plotArea.findPointPane(coords);\n                var axes = plotArea.axes.slice(0);\n                if (!pane) {\n                    return;\n                }\n                var ranges = axisRanges(axes);\n                var prevented = this.trigger(chartEvent, {\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n                if (prevented) {\n                    this._cancelDomEvents();\n                } else {\n                    this._suppressHover = true;\n                    this._unsetActivePoint();\n                    this._navState = {\n                        axisRanges: ranges,\n                        pane: pane,\n                        axes: axes\n                    };\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                if (this._navState) {\n                    this.trigger(chartEvent, {\n                        axisRanges: this._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                    this._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (element) {\n                    return this._drawingChartElement(element, e, match);\n                }\n            },\n            _drawingChartElement: function (element, e, match) {\n                var current = element;\n                var chartElement;\n                while (current && !chartElement) {\n                    chartElement = current.chartElement;\n                    current = current.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                        if (chartElement && chartElement.aliasFor) {\n                            chartElement = chartElement.aliasFor();\n                        }\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var coordinates = dataviz.eventCoordinates(e);\n                return this._toModelCoordinates(coordinates.x, coordinates.y);\n            },\n            _elementPadding: function () {\n                if (!this._padding) {\n                    var ref = elementStyles(this.element, [\n                        'paddingLeft',\n                        'paddingTop'\n                    ]);\n                    var paddingLeft = ref.paddingLeft;\n                    var paddingTop = ref.paddingTop;\n                    this._padding = {\n                        top: paddingTop,\n                        left: paddingLeft\n                    };\n                }\n                return this._padding;\n            },\n            _toDocumentCoordinates: function (point) {\n                var padding = this._elementPadding();\n                var offset = dataviz.elementOffset(this.element);\n                return {\n                    left: round(point.x + padding.left + offset.left),\n                    top: round(point.y + padding.top + offset.top)\n                };\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element;\n                var offset = dataviz.elementOffset(element);\n                var padding = this._elementPadding();\n                return new Point(clientX - offset.left - padding.left, clientY - offset.top - padding.top);\n            },\n            _tap: function (e) {\n                var this$1 = this;\n                var drawingElement = this.surface.eventTarget(e);\n                var element = this._drawingChartElement(drawingElement, e);\n                if (this._activePoint === element) {\n                    this._propagateClick(element, e);\n                } else {\n                    if (!this._startHover(drawingElement, e)) {\n                        this._unsetActivePoint();\n                    }\n                    this._propagateClick(element, e);\n                }\n                this.handlingTap = true;\n                setTimeout(function () {\n                    this$1.handlingTap = false;\n                }, 0);\n            },\n            _click: function (e) {\n                var element = this._getChartElement(e);\n                this._propagateClick(element, e);\n            },\n            _propagateClick: function (element, e) {\n                var this$1 = this;\n                var current = element;\n                while (current) {\n                    if (current.click) {\n                        current.click(this$1, e);\n                    }\n                    current = current.parent;\n                }\n            },\n            _startHover: function (element, e) {\n                var chartElement = this._drawingChartElement(element, e);\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (this._suppressHover || !highlight || highlight.isHighlighted(chartElement) || this._sharedTooltip()) {\n                    return false;\n                }\n                var point = this._drawingChartElement(element, e, function (element) {\n                    return element.hover && !(element instanceof PlotAreaBase);\n                });\n                if (point && !point.hover(this, e)) {\n                    this._activePoint = point;\n                    var tooltipOptions = deepExtend({}, tooltipOptions, point.options.tooltip);\n                    if (tooltipOptions.visible) {\n                        tooltip.show(point);\n                    }\n                    highlight.show(point);\n                    return point;\n                }\n            },\n            _mouseover: function (e) {\n                var point = this._startHover(e.element, e.originalEvent);\n                if (point && point.tooltipTracking) {\n                    this._mouseMoveTrackHandler = this._mouseMoveTrackHandler || this._mouseMoveTracking.bind(this);\n                    var obj;\n                    bindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                var point = ref._activePoint;\n                var coords = this._eventCoordinates(e);\n                if (this._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        var seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint !== point) {\n                            seriesPoint.hover(this, e);\n                            this._activePoint = seriesPoint;\n                            var tooltipOptions = deepExtend({}, options.tooltip, point.options.tooltip);\n                            if (tooltipOptions.visible) {\n                                tooltip.show(seriesPoint);\n                            }\n                            highlight.show(seriesPoint);\n                        }\n                    }\n                } else {\n                    var obj;\n                    unbindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                    this._unsetActivePoint();\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                this._trackCrosshairs(coords);\n                if (this._plotArea.hover) {\n                    this._plotArea.hover(this, e);\n                }\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs;\n                for (var i = 0; i < crosshairs.length; i++) {\n                    var current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e) {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var plotArea = ref._plotArea;\n                var categoryAxis = ref._plotArea.categoryAxis;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (plotArea.box.containsPoint(coords)) {\n                    var index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== this._tooltipCategoryIx) {\n                        var points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = points.map(function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                        } else {\n                            tooltip.hide();\n                        }\n                        this._tooltipCategoryIx = index;\n                    }\n                }\n            },\n            hideElements: function () {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._mousemove.cancel();\n                plotArea.hideCrosshairs();\n                highlight.hide();\n                tooltip.hide();\n                delete this._tooltipCategoryIx;\n            },\n            _unsetActivePoint: function () {\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._activePoint = null;\n                if (tooltip) {\n                    tooltip.hide();\n                }\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _deferRedraw: function () {\n                this._redraw();\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            bindCategories: function () {\n                var this$1 = this;\n                var options = this.options;\n                var definitions = [].concat(options.categoryAxis);\n                for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    var axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        this$1.bindCategoryAxisFromSeries(axis, axisIx);\n                    }\n                }\n            },\n            bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesLength = series.length;\n                var uniqueCategories = {};\n                var items = [];\n                var dateAxis;\n                for (var seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    var s = series[seriesIx];\n                    var onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    var data = s.data;\n                    var dataLength = data.length;\n                    if (s.categoryField && onAxis && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        var getFn = dateAxis ? getDateField : getField;\n                        for (var dataIx = 0; dataIx < dataLength; dataIx++) {\n                            var dataRow = data[dataIx];\n                            var category = getFn(s.categoryField, dataRow, this$1.chartService.intl);\n                            if (dateAxis || !uniqueCategories[category]) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories[category] = true;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dataviz.dateComparer(a[0], b[0]);\n                        });\n                    }\n                    var result = transpose(items);\n                    axis.categories = result[0];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series);\n                var result = true;\n                for (var i = 0; i < valueFields.length; i++) {\n                    var field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _noTransitionsRedraw: function () {\n                var options = this.options;\n                var transitionsState;\n                if (options.transitions) {\n                    options.transitions = false;\n                    transitionsState = true;\n                }\n                this._redraw();\n                if (transitionsState) {\n                    options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var highlight = ref._highlight;\n                var currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                var items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    items = plotArea.findPoint(function (point) {\n                        return point.series.index === seriesIndex && point.index === pointIndex;\n                    });\n                } else {\n                    items = plotArea.pointsBySeriesIndex(seriesIndex);\n                }\n                highlight.show(items);\n            },\n            _shouldAttachMouseMove: function () {\n                return this._plotArea.crosshairs.length || this._tooltip && this._sharedTooltip() || this.requiresHandlers([PLOT_AREA_HOVER]);\n            },\n            updateMouseMoveHandler: function () {\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(this.element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n            },\n            applyOptions: function (options, theme) {\n                clearMissingValues(this._originalOptions, options);\n                this._originalOptions = deepExtend(this._originalOptions, options);\n                this.options = deepExtend({}, this._originalOptions);\n                if (theme) {\n                    this._theme = theme;\n                    this.chartService.theme = theme;\n                }\n                this._initTheme(this.options, this._theme);\n            },\n            setOptions: function (options, theme) {\n                this.applyOptions(options, theme);\n                this.bindCategories();\n                this.redraw();\n                this.updateMouseMoveHandler();\n                this._toggleDomDrag();\n                this._toggleDomZoom();\n            },\n            destroy: function () {\n                this._destroyed = true;\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this.domEvents) {\n                    this.domEvents.destroy();\n                    delete this.domEvents;\n                }\n                var obj$1;\n                unbindEvents(document, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mouseMoveTrackHandler, obj$1));\n                this._destroyView();\n                if (this.surface) {\n                    this.surface.destroy();\n                    this.surface = null;\n                }\n                this._clearRedrawTimeout();\n            },\n            _destroyView: function () {\n                var ref = this;\n                var model = ref._model;\n                var selections = ref._selections;\n                if (model) {\n                    model.destroy();\n                    this._model = null;\n                }\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n                this._unsetActivePoint();\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                }\n                if (this._highlight) {\n                    this._highlight.destroy();\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.destroy();\n                    delete this._zoomSelection;\n                }\n                if (this._pannable) {\n                    this._pannable.destroy();\n                    delete this._pannable;\n                }\n                if (this._mousewheelZoom) {\n                    this._mousewheelZoom.destroy();\n                    delete this._mousewheelZoom;\n                }\n            }\n        });\n        function resolveAxisAliases(options) {\n            var aliases = AXIS_NAMES;\n            for (var idx = 0; idx < aliases.length; idx++) {\n                var alias = aliases[idx] + 'Axes';\n                if (options[alias]) {\n                    options[aliases[idx] + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            }\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            var axisName, axisDefaults, axes;\n            function mapAxisOptions(axisOptions) {\n                var axisColor = (axisOptions || {}).color || axisDefaults.color;\n                var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                    line: { color: axisColor },\n                    labels: { color: axisColor },\n                    title: { color: axisColor }\n                }, axisOptions);\n                delete result[axisName];\n                return result;\n            }\n            for (var idx = 0; idx < AXIS_NAMES.length; idx++) {\n                axisName = AXIS_NAMES[idx] + 'Axis';\n                axisDefaults = options.axisDefaults || {};\n                axes = [].concat(options[axisName]);\n                axes = axes.map(mapAxisOptions);\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            }\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series;\n            var seriesLength = series.length;\n            var seriesDefaults = options.seriesDefaults;\n            var commonDefaults = deepExtend({}, options.seriesDefaults);\n            var themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {};\n            var commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (var i = 0; i < seriesLength; i++) {\n                var seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function axisRanges(axes) {\n            var ranges = {};\n            for (var i = 0; i < axes.length; i++) {\n                var axis = axes[i];\n                var axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function sortDates(dates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            var dates = sortDates(srcDates, comparer);\n            var length = dates.length;\n            var result = length > 0 ? [dates[0]] : [];\n            for (var i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function transpose(rows) {\n            var rowCount = rows.length;\n            var result = [];\n            for (var rowIx = 0; rowIx < rowCount; rowIx++) {\n                var row = rows[rowIx];\n                var colCount = row.length;\n                for (var colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        function clearMissingValues(originalOptions, options) {\n            for (var field in options) {\n                var fieldValue = options[field];\n                var originalValue = originalOptions[field];\n                if (defined(originalValue)) {\n                    var nullValue = fieldValue === null;\n                    if (nullValue || !defined(fieldValue)) {\n                        delete originalOptions[field];\n                        if (nullValue) {\n                            delete options[field];\n                        }\n                    } else if (originalValue && isObject(fieldValue)) {\n                        if (isObject(originalValue)) {\n                            clearMissingValues(originalValue, fieldValue);\n                        }\n                    }\n                }\n            }\n        }\n        setDefaultOptions(Chart, {\n            renderAs: '',\n            chartArea: {},\n            legend: {\n                visible: true,\n                labels: {}\n            },\n            categoryAxis: {},\n            seriesDefaults: {\n                type: COLUMN,\n                data: [],\n                highlight: { visible: true },\n                labels: {},\n                negativeValues: { visible: false }\n            },\n            series: [],\n            seriesColors: null,\n            tooltip: { visible: false },\n            transitions: true,\n            valueAxis: {},\n            plotArea: {},\n            title: {},\n            xAxis: {},\n            yAxis: {},\n            panes: [{}],\n            pannable: false,\n            zoomable: false\n        });\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BoxPlotChart: BoxPlotChart,\n            BoxPlot: BoxPlot,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            Chart: Chart,\n            ChartContainer: ChartContainer,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaEventsMixin: PlotAreaEventsMixin,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            RangeAreaPoint: RangeAreaPoint,\n            RangeAreaChart: RangeAreaChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            MousewheelZoom: MousewheelZoom,\n            ZoomSelection: ZoomSelection,\n            Pannable: Pannable,\n            ChartAxis: ChartAxis,\n            ChartPane: ChartPane,\n            ChartPlotArea: ChartPlotArea,\n            anyHasZIndex: anyHasZIndex,\n            appendIfNotNull: areNumbers,\n            areNumbers: areNumbers,\n            bindSegments: bindSegments,\n            categoriesCount: categoriesCount,\n            countNumbers: countNumbers,\n            equalsIgnoreCase: equalsIgnoreCase,\n            evalOptions: evalOptions,\n            filterSeriesByType: filterSeriesByType,\n            getDateField: getDateField,\n            getField: getField,\n            hasGradientOverlay: hasGradientOverlay,\n            hasValue: hasValue,\n            isDateAxis: isDateAxis,\n            segmentVisible: segmentVisible,\n            singleItemOrArray: singleItemOrArray\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/chart', [\n        'dataviz/chart/kendo-chart',\n        'kendo.data',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'kendo.drawing',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var NS = '.kendoChart';\n        var kendo = window.kendo;\n        var Class = kendo.Class;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n        var dataviz = kendo.dataviz;\n        var constants = dataviz.constants;\n        var KendoChart = dataviz.Chart;\n        var SeriesBinder = dataviz.SeriesBinder;\n        var Widget = kendo.ui.Widget;\n        var DataSource = kendo.data.DataSource;\n        var deepExtend = kendo.deepExtend;\n        var defined = dataviz.defined;\n        var getField = dataviz.getField;\n        var InstanceObserver = dataviz.InstanceObserver;\n        var inArray = dataviz.inArray;\n        var services = dataviz.services;\n        var proxy = $.proxy;\n        var isArray = $.isArray;\n        var extend = $.extend;\n        var template = kendo.template;\n        var MOUSELEAVE_NS = 'mouseleave' + NS;\n        var AXIS_LABEL_CLICK = constants.AXIS_LABEL_CLICK;\n        var LEGEND_ITEM_CLICK = constants.LEGEND_ITEM_CLICK;\n        var LEGEND_ITEM_HOVER = constants.LEGEND_ITEM_HOVER;\n        var SERIES_CLICK = constants.SERIES_CLICK;\n        var SERIES_HOVER = constants.SERIES_HOVER;\n        var PLOT_AREA_CLICK = constants.PLOT_AREA_CLICK;\n        var PLOT_AREA_HOVER = constants.PLOT_AREA_HOVER;\n        var DRAG = constants.DRAG;\n        var DRAG_END = constants.DRAG_END;\n        var DRAG_START = constants.DRAG_START;\n        var ZOOM_START = constants.ZOOM_START;\n        var ZOOM = constants.ZOOM;\n        var ZOOM_END = constants.ZOOM_END;\n        var SELECT_START = constants.SELECT_START;\n        var SELECT = constants.SELECT;\n        var SELECT_END = constants.SELECT_END;\n        var RENDER = constants.RENDER;\n        var NOTE_CLICK = constants.NOTE_CLICK;\n        var NOTE_HOVER = constants.NOTE_HOVER;\n        var CHANGE = 'change';\n        var DATABOUND = 'dataBound';\n        var LEAVE = 'leave';\n        var VALUE = constants.VALUE;\n        var PIE = constants.PIE;\n        var DONUT = constants.DONUT;\n        var FUNNEL = constants.FUNNEL;\n        var Observable = kendo.Observable;\n        var TOOLTIP_ANIMATION_DURATION = 150;\n        var TOOLTIP_SHOW_DELAY = 100;\n        var TOOLTIP_INVERSE = 'k-chart-tooltip-inverse';\n        var SHARED_TOOLTIP_CLASS = 'k-chart-shared-tooltip';\n        var RTL = 'rtl';\n        services.DomEventsBuilder.register({\n            create: function (element, events) {\n                return new kendo.UserEvents(element, deepExtend({\n                    global: true,\n                    multiTouch: true,\n                    fastTap: true\n                }, events));\n            }\n        });\n        var ChartInstanceObserver = InstanceObserver.extend({\n            handlerMap: {\n                showTooltip: '_showTooltip',\n                hideTooltip: '_hideTooltip',\n                legendItemClick: '_onLegendItemClick',\n                render: '_onRender',\n                init: '_onInit'\n            }\n        });\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(this, element);\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    delete userOptions.dataSource;\n                }\n                this.options = deepExtend({}, this.options, userOptions);\n                this.wrapper = this.element;\n                this._attachEvents();\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                this._seriesVisibility = new SeriesVisibilityState();\n                this.bind(this.events, this.options);\n                this._initDataSource(userOptions);\n                kendo.notify(this, dataviz.ui);\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                PLOT_AREA_CLICK,\n                PLOT_AREA_HOVER,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                RENDER\n            ],\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                axisDefaults: {},\n                chartArea: {},\n                legend: {},\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {},\n                series: [],\n                seriesColors: null,\n                tooltip: {},\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            items: function () {\n                return $();\n            },\n            refresh: function () {\n                var chart = this;\n                var instance = chart._instance;\n                instance.applyDefaults(chart.options);\n                instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            redraw: function (paneName) {\n                this._size = null;\n                this._instance.redraw(paneName);\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                delete options.dataSource;\n                Widget.fn._setEvents.call(chart, options);\n                this._instance.applyOptions(options, this._getThemeOptions(options));\n                this.options = this._instance.options;\n                this._tooltip.setOptions(this.options.tooltip);\n                this._sourceSeries = null;\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                chart._instance.updateMouseMoveHandler();\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                }\n                if (chart._instance) {\n                    chart._instance.destroy();\n                    delete this._instance;\n                }\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                    delete this._tooltip;\n                }\n                this._destroyCrosshairTooltips();\n                Widget.fn.destroy.call(chart);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(this, panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(this, panes[idx]);\n                }\n            },\n            findSeries: function (callback) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (callback(series[idx])) {\n                        return new ChartSeries(this, series[idx]);\n                    }\n                }\n            },\n            findSeriesByName: function (name) {\n                return this._createSeries({ name: name });\n            },\n            findSeriesByIndex: function (index) {\n                return this._createSeries({ index: index });\n            },\n            _createSeries: function (options) {\n                var seriesOptions = this._seriesOptions(options);\n                if (seriesOptions) {\n                    return new ChartSeries(this, seriesOptions);\n                }\n            },\n            _seriesOptions: function (options) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                var seriesOptions;\n                if (defined(options.index)) {\n                    seriesOptions = series[options.index];\n                } else if (defined(options.name)) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (series[idx].name === options.name) {\n                            seriesOptions = series[idx];\n                            break;\n                        }\n                    }\n                }\n                return seriesOptions;\n            },\n            _attachEvents: function () {\n                this.element.on(MOUSELEAVE_NS, proxy(this._mouseleave, this));\n            },\n            _mouseleave: function (e) {\n                var instance = this._instance;\n                var tooltip = this._tooltip;\n                var target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length) && instance && !instance.handlingTap) {\n                    instance.hideElements();\n                }\n            },\n            _getThemeOptions: function (userOptions) {\n                var themeName = (userOptions || {}).theme;\n                if (themeName === 'sass' || themeName === 'default-v2' || themeName === 'bootstrap-v4') {\n                    return dataviz.autoTheme().chart;\n                }\n                if (defined(themeName)) {\n                    var themes = dataviz.ui.themes || {};\n                    var theme = themes[themeName] || themes[themeName.toLowerCase()] || {};\n                    return theme.chart || {};\n                }\n            },\n            _initChart: function () {\n                this._createChart(this.options, this._getThemeOptions(this.options));\n                this.options = this._instance.options;\n            },\n            _createChart: function (options, themeOptions) {\n                this._instance = new KendoChart(this.element[0], options, themeOptions, {\n                    observer: new ChartInstanceObserver(this),\n                    sender: this,\n                    rtl: this._isRtl()\n                });\n            },\n            _onInit: function (e) {\n                this._instance = e.sender;\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind('change', chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                this._initChart();\n                this._initTooltip();\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            _destroyCrosshairTooltips: function () {\n                var tooltips = this._crosshairTooltips;\n                if (tooltips) {\n                    for (var key in tooltips) {\n                        tooltips[key].destroy();\n                    }\n                }\n                this._crosshairTooltips = {};\n            },\n            _getCrosshairTooltip: function (name, index) {\n                var tooltips = this._crosshairTooltips = this._crosshairTooltips || {};\n                var key = name + index;\n                var tooltip = tooltips[key];\n                if (!tooltip) {\n                    tooltip = tooltips[key] = new CrosshairTooltip(this.element);\n                }\n                return tooltip;\n            },\n            _showTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.show(e);\n                } else if (this._tooltip) {\n                    this._tooltip.show(e);\n                }\n            },\n            _hideTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.hide();\n                } else if (this._tooltip) {\n                    this._tooltip.hide(e);\n                }\n            },\n            _onRender: function (e) {\n                this._destroyCrosshairTooltips();\n                this._copyMembers(e.sender);\n                if (!this._hasDataSource || this._hasData || !this.options.autoBind) {\n                    this.trigger(RENDER);\n                }\n            },\n            _copyMembers: function (instance) {\n                this.options = instance.options;\n                this._originalOptions = instance._originalOptions;\n                this.surface = instance.surface;\n                this._plotArea = instance._plotArea;\n                this._model = instance._model;\n                this._highlight = instance._highlight;\n                this._selections = instance._selections;\n                this._pannable = instance._pannable;\n                this._zoomSelection = instance._zoomSelection;\n                this._mousewheelZoom = instance._mousewheelZoom;\n            },\n            requiresHandlers: function (names) {\n                var events = this._events;\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (defined(events[names[idx]])) {\n                        return true;\n                    }\n                }\n            },\n            _initTooltip: function () {\n                this._tooltip = this._createTooltip();\n                this._tooltip.bind(LEAVE, proxy(this._tooltipleave, this));\n            },\n            _onLegendItemClick: function (e) {\n                if (!this.trigger(LEGEND_ITEM_CLICK, e)) {\n                    this._legendItemClick(e.seriesIndex, e.pointIndex);\n                }\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this._instance, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                if ($.inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ]) >= 0) {\n                    var point = currentSeries.data[pointIndex];\n                    if (point && defined(point.visible)) {\n                        point.visible = !point.visible;\n                    } else {\n                        var pointVisibility = currentSeries.pointVisibility = currentSeries.pointVisibility || {};\n                        var visible = pointVisibility[pointIndex];\n                        pointVisibility[pointIndex] = defined(visible) ? !visible : false;\n                    }\n                } else {\n                    currentSeries.visible = !currentSeries.visible;\n                    this._seriesVisibility.save(currentSeries);\n                }\n                chart._noTransitionsRedraw();\n            },\n            _createTooltip: function () {\n                return new Tooltip(this.element, extend({}, this.options.tooltip, { rtl: this._isRtl() }));\n            },\n            _tooltipleave: function () {\n                var chart = this._instance, plotArea = chart._plotArea, highlight = chart._highlight;\n                plotArea.hideCrosshairs();\n                highlight.hide();\n            },\n            _bindData: function (e) {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], seriesVisibility = this._seriesVisibility, currentSeries, groupedSeries;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        groupedSeries = groupSeries(currentSeries, data);\n                        processedSeries = processedSeries.concat(groupedSeries);\n                        seriesVisibility.applyByGroup(groupedSeries, e);\n                    } else {\n                        currentSeries = extend({}, currentSeries);\n                        processedSeries.push(currentSeries);\n                        seriesVisibility.applyByIndex(currentSeries, e);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                this._instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                this._hasData = true;\n            },\n            _onDataChanged: function (e) {\n                this._bindData(e);\n                this.trigger(DATABOUND);\n                this._redraw();\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else if (this._instance) {\n                    this._instance.bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _isRtl: function () {\n                return kendo.support.isRtl(this.element) && this.element.css('direction') === RTL;\n            }\n        });\n        var proxyMembers = [\n            'getAxis',\n            'findAxisByName',\n            'plotArea',\n            'toggleHighlight',\n            'showTooltip',\n            'hideTooltip',\n            'exportVisual',\n            '_resize',\n            '_redraw',\n            '_noTransitionsRedraw',\n            '_legendItemHover',\n            '_eventCoordinates'\n        ];\n        function createProxyMember(name) {\n            Chart.fn[name] = function () {\n                var instance = this._instance;\n                if (instance) {\n                    return instance[name].apply(instance, arguments);\n                }\n            };\n        }\n        for (var idx = 0; idx < proxyMembers.length; idx++) {\n            createProxyMember(proxyMembers[idx]);\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!kendo.isFunction(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                seriesClone._groupValue = data[groupIx].value;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        dataviz.ui.plugin(Chart);\n        var SeriesVisibilityState = Class.extend({\n            init: function () {\n                this.groups = {};\n                this.index = {};\n            },\n            applyByGroup: function (series, e) {\n                if (e && e.action) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (this.groups[series[idx]._groupValue] === false) {\n                            series[idx].visible = false;\n                        }\n                    }\n                } else {\n                    this.groups = {};\n                }\n            },\n            applyByIndex: function (series, e) {\n                if (e && e.action) {\n                    if (this.index[series.index] === false) {\n                        series.visible = false;\n                    }\n                } else {\n                    this.index = {};\n                }\n            },\n            save: function (series) {\n                if (!series) {\n                    return;\n                }\n                if (defined(series._groupValue)) {\n                    this.groups[series._groupValue] = series.visible;\n                } else {\n                    this.index[series.index] = series.visible;\n                }\n            }\n        });\n        var geom = kendo.geometry;\n        function normalizeStyle(style) {\n            for (var field in style) {\n                if (style[field] === undefined) {\n                    style[field] = '';\n                }\n            }\n            return style;\n        }\n        var Tooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                this.setOptions(options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = Tooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = Tooltip.template = kendo.template('<div class=\\'k-tooltip k-chart-tooltip#= d.rtl ? \" k-rtl\" : \"\"#\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + '#if (d.border) {# border: #= d.border.width #px solid; #}#' + 'opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);\\'>' + '</div>', {\n                        useWithBlock: false,\n                        paramName: 'd'\n                    });\n                }\n                tooltip.element = $(tooltip.template(tooltip.options));\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n            },\n            destroy: function () {\n                this._clearShowTimeout();\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            setOptions: function (options) {\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION },\n                sharedTemplate: '<table>' + '<th colspan=\\'#= colspan #\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '# if(colorMarker) { # ' + '<td><span class=\\'k-chart-shared-tooltip-marker\\' style=\\'background-color:#:point.series.color#\\'></span></td>' + '# } #' + '# if(nameColumn) { # ' + '<td> #if (point.series.name) {# #: point.series.name #: #} else {# &nbsp; #}#</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}'\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            getAnchor: function (size) {\n                var anchor = this.anchor;\n                var point = anchor.point;\n                var align = anchor.align;\n                var x = point.left;\n                var y = point.top;\n                if (align.horizontal === 'center') {\n                    x -= size.width / 2;\n                } else if (align.horizontal === 'right') {\n                    x -= size.width;\n                }\n                if (align.vertical === 'center') {\n                    y -= size.height / 2;\n                } else if (align.vertical === 'bottom') {\n                    y -= size.height;\n                }\n                return {\n                    x: x,\n                    y: y\n                };\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.getAnchor(size), top = anchor.y, left = anchor.x, zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, outerHeight(viewport) / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, outerWidth(viewport) / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            show: function (e) {\n                this.anchor = e.anchor;\n                this.element.css(normalizeStyle(e.style));\n                this.element.toggleClass(TOOLTIP_INVERSE, !!e.className);\n                this.element.toggleClass(SHARED_TOOLTIP_CLASS, !!e.shared);\n                var content = e.shared ? this._sharedContent(e) : this._pointContent(e.point);\n                this.element.html(content);\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function () {\n                var tooltip = this;\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                }\n            },\n            _sharedContent: function (e) {\n                var points = e.points;\n                var nameColumn = dataviz.grep(points, function (point) {\n                    return defined(point.series.name);\n                }).length;\n                var colorMarker = e.series.length > 1;\n                var colspan = 1;\n                if (nameColumn) {\n                    colspan++;\n                }\n                if (colorMarker) {\n                    colspan++;\n                }\n                var template = kendo.template(this.options.sharedTemplate);\n                var content = template({\n                    points: points,\n                    category: e.category,\n                    categoryText: e.categoryText,\n                    content: this._pointContent,\n                    colorMarker: colorMarker,\n                    nameColumn: nameColumn,\n                    colspan: colspan\n                });\n                return content;\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: outerWidth(this.element),\n                    height: outerHeight(this.element)\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                    this.hide();\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var CrosshairTooltip = Tooltip.extend({\n            init: function (chartElement, options) {\n                Tooltip.fn.init.call(this, chartElement, options);\n                this.element.addClass('k-chart-crosshair-tooltip');\n            },\n            show: function (e) {\n                var element = this.element;\n                if (element) {\n                    this.anchor = e.anchor;\n                    this.element.css(e.style);\n                    this.element.html(this.content(e));\n                    this.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (e) {\n                var content = e.value, options = e.crosshair.options.tooltip;\n                if (options.template) {\n                    content = template(options.template)({ value: content });\n                }\n                return content;\n            },\n            hide: function () {\n                this.element.hide();\n            }\n        });\n        var ChartPane = Class.extend({\n            init: function (chart, pane) {\n                this._chart = chart;\n                this._pane = pane;\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this.name = pane.options.name;\n            },\n            series: function () {\n                var chart = this._chart;\n                var seriesByPane = chart._plotArea.groupSeriesByPane();\n                var series = seriesByPane[this.name || 'default'];\n                var result = [];\n                if (series) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        result.push(new ChartSeries(chart, series[idx]));\n                    }\n                }\n                return result;\n            }\n        });\n        var ChartSeries = Class.extend({\n            init: function (chart, options) {\n                this._chart = chart;\n                this._options = options;\n            },\n            points: function (filter) {\n                var points = this._points;\n                if (!points) {\n                    var series = this._seriesOptions();\n                    var plotArea = this._chart._plotArea;\n                    this._points = points = plotArea.pointsBySeriesIndex(series.index);\n                }\n                if (kendo.isFunction(filter)) {\n                    points = this._filterPoints(points, filter);\n                }\n                return points;\n            },\n            data: function (data) {\n                var series = this._seriesOptions();\n                if (data) {\n                    var chart = this._chart;\n                    var plotArea = chart._plotArea;\n                    series.data = data;\n                    if (series.categoryField) {\n                        var axis = plotArea.seriesCategoryAxis(series);\n                        var options = [].concat(chart.options.categoryAxis);\n                        chart._instance.bindCategoryAxisFromSeries(options[axis.axisIndex], axis.axisIndex);\n                    }\n                    chart._noTransitionsRedraw();\n                    this._clearFields();\n                }\n                return series.data;\n            },\n            findPoint: function (filter) {\n                var points = this.points();\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (filter(points[idx])) {\n                        return points[idx];\n                    }\n                }\n            },\n            toggleHighlight: function (show, elements) {\n                if (!elements) {\n                    elements = this.points();\n                } else if (kendo.isFunction(elements)) {\n                    elements = this.points(elements);\n                } else {\n                    elements = isArray(elements) ? elements : [elements];\n                }\n                this._chart._instance.togglePointsHighlight(show, elements);\n            },\n            toggleVisibility: function (visible, filter) {\n                var chart = this._chart;\n                var seriesOptions = this._seriesOptions();\n                var hasFilter = kendo.isFunction(filter);\n                if (!hasFilter) {\n                    seriesOptions.visible = visible;\n                    chart._seriesVisibility.save(seriesOptions);\n                } else {\n                    if (inArray(seriesOptions.type, [\n                            PIE,\n                            DONUT,\n                            FUNNEL\n                        ])) {\n                        var data = this._filterData(filter);\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data[idx].visible = visible;\n                        }\n                    } else {\n                        seriesOptions.visible = function (data) {\n                            return filter(data.dataItem) ? visible : true;\n                        };\n                    }\n                }\n                chart._noTransitionsRedraw();\n                this._clearFields();\n            },\n            _filterData: function (filter) {\n                var data = this._seriesOptions().data;\n                var length = data.length;\n                var result = [];\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(data[idx])) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            _filterPoints: function (points, filter) {\n                var result = [];\n                var length = points.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(points[idx])) {\n                        result.push(points[idx]);\n                    }\n                }\n                return result;\n            },\n            _seriesOptions: function () {\n                var series = this._series;\n                if (!series) {\n                    series = this._series = this._chart._seriesOptions(this._options);\n                }\n                return series;\n            },\n            _clearFields: function () {\n                delete this._points;\n                delete this._series;\n            }\n        });\n        dataviz.Tooltip = Tooltip;\n        dataviz.CrosshairTooltip = CrosshairTooltip;\n        dataviz.ChartInstanceObserver = ChartInstanceObserver;\n        dataviz.ChartPane = ChartPane;\n        dataviz.ChartSeries = ChartSeries;\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'dataviz/chart/kendo-chart',\n        'dataviz/chart/chart'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [{\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }]\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}