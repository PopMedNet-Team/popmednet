@using Lpp.QueryComposer

<script type="text/html" id="e_@ModelTermsFactory.DC_DispensingRXAmount">
    <p class="bold center operator" data-bind="text:Global.Helpers.GetEnumString(Dns.Enums.QueryComposerOperatorsTranslation, Operator()), visible:$index() > 0"></p>
    <div class="row">
        <div class="col-sm-4 bold"><h4 id="DispensingRXAmount" class="TermHeader bold">Dispensing RX Amount<em data-bind="visible:Design.Locked" style="color:red">*</em></h4></div>
        <div class="col-sm-4 form-group">
            <div class="checkbox">
                <input type="checkbox" onchange="SelectAll(this, 'AllDispensingRXAmounts')" />
                <label class="hover-ibeam" for="SelectAll">Select All</label>
            </div>
            <div style="border-bottom: solid; border-width: 1px; width: 280px; padding-left:0; margin-left:-50px; border-bottom-color: lightgray;"></div>
            <div id="AllDispensingRXAmounts">
                <div class="checkbox">
                    <input type="checkbox" data-bind="checked: Values().RXAmounts" value="0" id="rxAmtLessThanZero" />
                    <label class="hover-ibeam" for="rxAmtLessThanZero">&lt;0</label>
                </div>
                <div class="checkbox">
                    <input type="checkbox" data-bind="checked: Values().RXAmounts" value="1" id="rxAmtZero" />
                    <label class="hover-ibeam" for="rxAmtZero">0-1</label>
                </div>
                <div class="checkbox">
                    <input type="checkbox" data-bind="checked: Values().RXAmounts" value="2" id="rxAmtTwoThrough30" />
                    <label class="hover-ibeam" for="rxAmtTwoThrough30">2-30</label>
                </div>
                <div class="checkbox">
                    <input type="checkbox" data-bind="checked: Values().RXAmounts" value="3" id="rxAmtThirty" />
                    <label class="hover-ibeam" for="rxAmtThirty">31-60</label>
                </div>
                <div class="checkbox">
                    <input type="checkbox" data-bind="checked: Values().RXAmounts" value="4" id="rxAmtSixty" />
                    <label class="hover-ibeam" for="rxAmtSixty">61-90</label>
                </div>
                <div class="checkbox">
                    <input type="checkbox" data-bind="checked: Values().RXAmounts" value="5" id="rxAmtNinety" />
                    <label class="hover-ibeam" for="rxAmtNinety">91-120</label>
                </div>
                <div class="checkbox">
                    <input type="checkbox" data-bind="checked: Values().RXAmounts" value="6" id="rxAmtOneTwenty" />
                    <label class="hover-ibeam" for="rxAmtOneTwenty">121-180</label>
                </div>
                <div class="checkbox">
                    <input type="checkbox" data-bind="checked: Values().RXAmounts" value="7" id="rxAmtOne180" />
                    <label class="hover-ibeam" for="rxAmtOne180">&gt;180</label>
                </div>
                <div class="checkbox">
                    <input type="checkbox" data-bind="checked: Values().RXAmounts" value="9" id="rxAmtMissing" />
                    <label class="hover-ibeam" for="rxAmtMissing">Missing</label>
                </div>
            </div>
        </div>
        <div class="col-sm-2" data-bind="visible: $root.IsTemplateEdit">
            <input type="checkbox" data-bind="checked: Design.Locked" />
            <span>Locked</span>
        </div>
        <div class="col-sm-2 form-group">
            <button id="btnDeleteDispensingRXAmountTerm" class="btn btn-danger pull-right" data-bind="click: function(data, event) { $root.DeleteTerm(data, $parent, event);}, visible: $root.IsTemplateEdit || !Design.Locked()"><span class="glyphicon glyphicon-minus"></span> Remove</button>
        </div>
    </div>
</script>

<script type="text/javascript">
    function SelectAll(checker, container) {
        $("#" + container + " div input[type=checkbox]").each(function () {
            if (this.checked != checker.checked)
                $(this).click();
        });
    }
</script>